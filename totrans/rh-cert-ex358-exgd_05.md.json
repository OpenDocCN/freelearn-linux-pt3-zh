["```\n[emcleroy@rhel2 ~]$ ip a | grep enp0s3\n```", "```\n[emcleroy@rhel2 ~]$ sudo ifdown enp0s3 && sudo ifup enp0s3\n```", "```\n[emcleroy@rhel2 ~]$ sudo systemctl restart NetworkManager.service\n```", "```\n[emcleroy@rhel2 ~]$ ip a | grep enp0s3\n```", "```\n[emcleroy@rhel2 ~]$ ip a | grep enp0s3\n```", "```\n[emcleroy@rhel1 ~]$ sudo dnf install dhcp-server\n```", "```\n[emcleroy@rhel1 ~]$ sudo vi /etc/dhcp/dhcpd.conf\n```", "```\n[emcleroy@rhel1 ~]$ cat /usr/share/doc/dhcp-server/dhcpd.conf.example\n```", "```\n[emcleroy@rhel1 ~]$ sudo systemctl enable dhcpd\n[emcleroy@rhel1 ~]$ sudo systemctl start dhcpd\n```", "```\n[emcleroy@rhel1 ~]$ sudo systemctl status dhcpd\n```", "```\n[emcleroy@rhel1 ~]$ sudo firewall-cmd --permanent --add-service-dhcp\n[emcleroy@rhel1 ~]$ sudo firewall-cmd --reload\n```", "```\n[emcleroy@rhel1 ~]$ sudo firewall-cmd --list-services\n```", "```\n[emcleroy@rhel3 Documents]$ mkdir dhcp_server_playbook\n[emcleroy@rhel3 Documents]$ cd dhcp_server_playbook/\n[emcleroy@rhel3 dhcp_server_playbook]$ ls\n[emcleroy@rhel3 dhcp_server_playbook]$ vi inventory\n```", "```\n---\n- name: Install and Configure DHCP Server\n  hosts: dhcp_servers\n  become: true\n  become_method: sudo\n```", "```\n  tasks:\n    - name: Install dhcp-server package\n      package:\n        name: dhcp-server\n        state: latest\n```", "```\n    - name: Set subnet configuration of DHCP-Server\n      template:\n        src: \"{{ playbook_dir }}/templates/dhcpd.conf.j2\"\n        dest: /etc/dhcp/dhcpd.conf\n```", "```\n    - name: Enable and start dhcp-server service\n      service:\n        name: dhcpd\n        enabled: true\n        state: restarted\n    - name: Open firewall rules\n      firewalld:\n        permanent: true\n        immediate: true\n        service: dhcp\n        state: enabled\n```", "```\n[emcleroy@rhel3 dhcp_server_playbook]$ ansible-playbook -i inventory dhcp_server_playbook.yml -u emcleroy -k --ask-become\n```", "```\n[emcleroy@rhel1 ~]$ sudo systemctl status named\n```", "```\n[emcleroy@rhel1 ~]$ sudo systemctl start named\n[emcleroy@rhel1 ~]$ sudo systemctl enable named\n[emcleroy@rhel1 ~]$ sudo firewall-cmd --permanent --add-service-dns\n[emcleroy@rhel1 ~]$ sudo firewall-cmd --reload\n```", "```\n[emcleroy@rhel1 ~]$ dig rhel2.example.com @192.168.1.198\n```", "```\n[emcleroy@rhel1 ~]$ ls\n[emcleroy@rhel1 ~]$ cd Documents/\n[emcleroy@rhel1 ~]$ mkdir dns_server\n```", "```\n---\n- name: DNS server playbook\n  hosts: rhel1.example.com\n  become: true\n  become_method: sudo\n```", "```\n  tasks:\n    - name: Install dns service\n      package:\n        name: bind\n        state: latest\n    - name: Copy dns main config\n      template:\n        src: \"{{ playbook_dir }}/named.conf.j2\"\n        dest: /etc/named.conf\n    - name: Copy dns forward zone configs\n      template:\n        src: \"{{ playbook_dir }}/example.com.zone.j2\"\n        dest: /var/named/example.com.zone\n    - name: Copy dns reverse zone configs\n      template:\n        src: \"{{ playbook_dir }}/1.168.192.zone.j2\"\n        dest: /var/named/1.168.192.zone\n    - name: Start and enable DNS\n      service:\n        name: named\n        state: restarted\n        enabled: true\n    - name: Enable DNS firewall rule\n      command:\n        cmd: firewall-cmd --permanent --add-service=dns\n    - name: Reload firewall\n      command:\n        cmd: firewall-cmd --reload\n    - name: Install DIG to check configuration\n      package:\n        name: bind-utils\n        state: latest\n    - name: Run dig to test configuration\n      command:\n        cmd: \"dig rhel2.example.com @192.168.1.198\"\n```", "```\n$ ansible-playbook -i inventory dns_server_playbook.yml --ask-become -u emcleroy -k -v\n```"]