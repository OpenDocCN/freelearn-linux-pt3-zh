- en: 4\. Dual Booting CentOS 8 with Windows
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 4. 双重启动 CentOS 8 和 Windows
- en: CentOS 8, just like most Linux distributions, will happily co-exist on a hard
    disk drive with just about any version of Windows up to and including Windows
    10\. This is a concept known as dual-booting. Essentially, when you power up the
    system, you will be presented with a menu providing the option to boot either
    your CentOS 8 installation or Windows. Obviously you can only run one operating
    system at a time, but it is worth noting that the files on the Windows partition
    of your disk drive will be available to you from CentOS 8 regardless of whether
    your Windows partition was formatted using NTFS, FAT16 or FAT32.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS 8，像大多数 Linux 发行版一样，可以与任何版本的 Windows（包括 Windows 10）共存于同一硬盘驱动器中。这种概念称为双重启动。简单来说，当你启动系统时，会出现一个菜单，供你选择启动
    CentOS 8 安装或 Windows。显然，你一次只能运行一个操作系统，但需要注意的是，无论你的 Windows 分区是使用 NTFS、FAT16 还是
    FAT32 格式化的，Windows 分区上的文件都可以在 CentOS 8 中访问。
- en: This installation method involves shrinking the size of the existing Windows
    partitions and then installing CentOS 8 into the reclaimed space. This chapter
    will assume that CentOS 8 is being installed on a system currently running Windows
    10.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这种安装方法涉及缩小现有 Windows 分区的大小，然后将 CentOS 8 安装到回收的空间中。本章假设 CentOS 8 正在安装到一台当前运行
    Windows 10 的系统上。
- en: 4.1 Partition Resizing
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 4.1 分区调整大小
- en: In order to accommodate CentOS on a disk drive that already contains a Windows
    installation, the first step involves shrinking the Windows partition to make
    some room. The recommended course of action is to use the Windows Disk Management
    interface to reduce the size of the partition before attempting to install CentOS
    8\.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在已经包含 Windows 安装的磁盘驱动器上安装 CentOS，第一步是缩小 Windows 分区以腾出一些空间。推荐的操作方式是使用 Windows
    磁盘管理界面来减少分区的大小，然后再尝试安装 CentOS 8\。
- en: 'To access Disk Management on Windows 10, right-click on the Start menu and
    select Disk Management from the resulting menu as highlighted in [Figure 4-1](../Text/Installation_Dual_Boot.xhtml#_idTextAnchor048):'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问 Windows 10 上的磁盘管理，右键点击“开始”菜单并从结果菜单中选择“磁盘管理”，如[图 4-1](../Text/Installation_Dual_Boot.xhtml#_idTextAnchor048)所示：
- en: '![](img/rhel_8_win_10_disk_management_start.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](img/rhel_8_win_10_disk_management_start.png)'
- en: Figure 4-1
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-1
- en: 'Once loaded, the Disk Management tool will display a graphical representation
    of the disk drives detected on the system:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 加载后，磁盘管理工具将显示系统检测到的磁盘驱动器的图形表示：
- en: '![](img/rhel_8_win_10_disk_management_main.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](img/rhel_8_win_10_disk_management_main.png)'
- en: Figure 4-2
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-2
- en: 'Right-click on the partition you wish to reduce in size and select Shrink Volume...
    from the popup menu. The tool will calculate the maximum amount by which the volume
    size can be reduced without data loss (a process that can take several minutes
    depending on the overall size of the partition). Once this analysis is complete,
    a dialog similar to the one in [Figure 4-3](../Text/Installation_Dual_Boot.xhtml#_idTextAnchor049)
    below will appear:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 右键点击你想要缩小的分区，并从弹出菜单中选择“压缩卷...”。该工具将计算可以在不丢失数据的情况下缩小卷大小的最大值（这个过程可能需要几分钟，具体时间取决于分区的总体大小）。一旦分析完成，将会出现一个类似于下面[图
    4-3](../Text/Installation_Dual_Boot.xhtml#_idTextAnchor049)的对话框：
- en: '![](img/rhel_8_win_10_disk_management_shrink.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/rhel_8_win_10_disk_management_shrink.png)'
- en: Figure 4-3
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-3
- en: Specify a value in the Enter amount of space to shrink in MB field and click
    on the Shrink button to proceed. Once the resizing operation is complete, reboot
    using the CentOS 8 installation media (as outlined in [“Installing CentOS 8 on
    a Clean Disk Drive”](../Text/Installation_Clean_Disk.xhtml#_idTextAnchor017))
    and proceed with the installation making use of the new free space.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在“输入要缩小的空间大小（以 MB 为单位）”字段中指定一个值，然后点击“压缩”按钮以继续操作。一旦调整大小操作完成，使用 CentOS 8 安装媒体重新启动系统（如[“在全新硬盘驱动器上安装
    CentOS 8”](../Text/Installation_Clean_Disk.xhtml#_idTextAnchor017)中所述），然后继续使用新腾出的空闲空间进行安装。
- en: 4.2 Editing the CentOS 8 Boot Menu
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 4.2 编辑 CentOS 8 启动菜单
- en: 'Once installation of CentOS onto the disk is complete and the system has restarted,
    the standard CentOS boot menu will appear:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 CentOS 安装到磁盘并且系统重新启动，标准的 CentOS 启动菜单将会出现：
- en: '![](img/centos_8_boot_screen.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_boot_screen.png)'
- en: Figure 4-4
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4-4
- en: At this point, the boot menu only provides the option to boot the CentOS 8 system.
    Clearly an option also needs to be added so that the Windows system is still accessible.
    These steps will need to be taken from within the CentOS 8 system, so start the
    system and log in as root.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，引导菜单仅提供引导CentOS 8系统的选项。显然，还需要添加一个选项，以便仍然可以访问Windows系统。这些步骤需要在CentOS 8系统内执行，因此启动系统并以root身份登录。
- en: 'The first step is to identify the Windows boot partition on the disk drive
    using the fdisk command as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是使用fdisk命令在磁盘驱动器上识别Windows引导分区，具体如下：
- en: fdisk -l
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fdisk -l
- en: .
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 。
- en: .
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 。
- en: Device Boot Start End Sectors Size Id Type
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 设备引导 起始 结束 扇区 大小 Id 类型
- en: /dev/sda1 * 2048 1126399 1124352 549M 7 HPFS/NTFS/exFAT
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda1 * 2048 1126399 1124352 549M 7 HPFS/NTFS/exFAT
- en: /dev/sda2 1126400 53655551 52529152 25G 7 HPFS/NTFS/exFAT
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda2 1126400 53655551 52529152 25G 7 HPFS/NTFS/exFAT
- en: /dev/sda3 53655552 55752703 2097152 1G 83 Linux
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda3 53655552 55752703 2097152 1G 83 Linux
- en: /dev/sda4 55752704 104857599 49104896 23.4G 5 Extended
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda4 55752704 104857599 49104896 23.4G 5 扩展
- en: /dev/sda5 55754752 104857599 49102848 23.4G 8e Linux LVM
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda5 55754752 104857599 49102848 23.4G 8e Linux LVM
- en: In the above output /dev/sda3 through to /dev/sda5 are clearly the CentOS 8
    partitions. The smaller /dev/sda1 partition is the Windows system partition, leaving
    /dev/sda2 as the Windows boot partition.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述输出中，/dev/sda3到/dev/sda5显然是CentOS 8的分区。较小的/dev/sda1分区是Windows系统分区，留下/dev/sda2作为Windows引导分区。
- en: The CentOS 8 boot system works using partition indexes where the first partition
    is partition 0, the second is partition 1 and so on. As such, the Windows boot
    partition from the point of view of the boot menu is located on hard disk 0 at
    partition index location 1 and is defined in the boot configuration as “hd0,1”.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS 8引导系统使用分区索引，其中第一个分区是分区0，第二个是分区1，依此类推。因此，从引导菜单的角度来看，Windows引导分区位于硬盘0的分区索引位置1，并在引导配置中定义为“hd0,1”。
- en: 'The boot menu configuration settings are stored in the /boot/grub2/grub.cfg
    file which is generated using the grub2-mkconfig tool based on the content of
    the configuration files located in the /etc/grub.d directory. To add the Windows
    boot option to the configuration, edit the /etc/grub.d/40_custom file which should
    read as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 引导菜单配置设置存储在生成的/boot/grub2/grub.cfg文件中，使用grub2-mkconfig工具基于位于/etc/grub.d目录中的配置文件的内容。要添加Windows引导选项到配置中，请编辑应读取如下内容的/etc/grub.d/40_custom文件：
- en: '#!/bin/sh'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '#!/bin/sh'
- en: exec tail -n +3 $0
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: exec tail -n +3 $0
- en: This file provides an easy way to add custom menu entries. Simply type the
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这个文件提供了一个简单的方法来添加自定义菜单项。只需输入
- en: menu entries you want to add after this comment. Be careful not to change
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在此注释后添加您想要添加的菜单项。请注意不要更改
- en: the ‘exec tail’ line above.
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上述“exec tail”行。
- en: 'Edit the file to add the following entry to the end of the 40_custom file:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑文件，在40_custom文件的末尾添加以下条目：
- en: menuentry "Windows 10" {
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: menuentry "Windows 10" {
- en: set root=(hd0,1)
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 root=(hd0,1)
- en: chainloader +1
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: chainloader +1
- en: '}'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '}'
- en: 'Save the file and generate the boot menu as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并生成引导菜单如下：
- en: grub2-mkconfig --output=/boot/grub2/grub.cfg
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: grub2-mkconfig --output=/boot/grub2/grub.cfg
- en: Generating grub configuration file ...
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 生成grub配置文件…
- en: done
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 完成
- en: 'On the next reboot, Windows will now be included as a boot option as shown
    in [Figure 4-5](../Text/Installation_Dual_Boot.xhtml#_idTextAnchor051):'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一次重新启动时，Windows现在将作为引导选项包括在[图4-5](../Text/Installation_Dual_Boot.xhtml#_idTextAnchor051)中显示：
- en: '![](img/centos_8_boot_screen_with_win10.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_boot_screen_with_win10.png)'
- en: Figure 4-5
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图4-5
- en: 4.3 Changing the Default Boot Option
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 4.3 更改默认引导选项
- en: When the system starts, the boot options screen will appear and wait 5 seconds
    for the user to make an operating system choice. If no selection has been made
    before the timeout elapses, the default operating system will be started. On a
    newly configured system, the default operating system will be the standard (non-rescue)
    CentOS 8 image. This default can, however, be changed from within CentOS.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统启动时，将显示引导选项屏幕，并等待5秒钟供用户选择操作系统。如果在超时之前没有进行选择，则将启动默认操作系统。在新配置的系统上，默认操作系统将是标准（非救援）CentOS
    8映像。但是，可以从CentOS内部更改此默认设置。
- en: 'A range of boot configuration options (including the 5 second timeout and the
    boot RHGB settings outlined in [“Installing CentOS 8 on a Clean Disk Drive”](../Text/Installation_Clean_Disk.xhtml#_idTextAnchor017))
    are declared in the /etc/default/grub file which reads as follows on a new installation:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在新安装中，声明了一系列引导配置选项（包括5秒超时和在[“在干净磁盘驱动器上安装CentOS 8”](../Text/Installation_Clean_Disk.xhtml#_idTextAnchor017)中概述的boot
    RHGB设置），这些选项在/etc/default/grub文件中定义如下：
- en: GRUB_TIMEOUT=5
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_TIMEOUT=5
- en: GRUB_DISTRIBUTOR=”$(sed ‘s, release .*$,,g’ /etc/system-release)”
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
- en: GRUB_DEFAULT=saved
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_DEFAULT=saved
- en: GRUB_DISABLE_SUBMENU=true
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_DISABLE_SUBMENU=true
- en: GRUB_TERMINAL_OUTPUT=”console”
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_TERMINAL_OUTPUT="console"
- en: GRUB_CMDLINE_LINUX=”crashkernel=auto resume=/dev/mapper/cl-swap rd.lvm.lv=cl/root
    rd.lvm.lv=cl/swap rhgb quiet”
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_CMDLINE_LINUX="crashkernel=auto resume=/dev/mapper/cl-swap rd.lvm.lv=cl/root
    rd.lvm.lv=cl/swap rhgb quiet"
- en: GRUB_DISABLE_RECOVERY=”true”
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_DISABLE_RECOVERY="true"
- en: GRUB_ENABLE_BLSCFG=true
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_ENABLE_BLSCFG=true
- en: 'The first step in changing the default boot system is to declare the GRUB_SAVEDEFAULT
    setting within this file:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 更改默认启动系统的第一步是在此文件中声明 GRUB_SAVEDEFAULT 设置：
- en: GRUB_TIMEOUT=5
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_TIMEOUT=5
- en: GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
- en: GRUB_DEFAULT=saved
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_DEFAULT=saved
- en: GRUB_SAVEDEFAULT=true
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB_SAVEDEFAULT=true
- en: .
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: .
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: 'This setting allows a new default value to be saved within the boot configuration.
    Next, run the grub2-set-default command to change the default setting using a
    numbering system that counts the first option as 0\. For the boot options shown
    in [Figure 4-5](../Text/Installation_Dual_Boot.xhtml#_idTextAnchor051) above,
    for example, the first CentOS entry is position 0 while the Windows 10 option
    is position 2\. The command to make Windows 10 the default boot option, therefore,
    would read as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 此设置允许将新的默认值保存在启动配置中。接下来，运行 grub2-set-default 命令，通过使用编号系统（第一个选项为 0）来更改默认设置。例如，对于上面[图
    4-5](../Text/Installation_Dual_Boot.xhtml#_idTextAnchor051)中显示的启动选项，第一个 CentOS
    项为位置 0，而 Windows 10 选项为位置 2。因此，将 Windows 10 设置为默认启动选项的命令如下所示：
- en: grub2-set-default 2
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: grub2-set-default 2
- en: 'Check that the new setting has taken effect by running the following command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行以下命令检查新设置是否生效：
- en: grub2-editenv list
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: grub2-editenv list
- en: saved_entry=2
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: saved_entry=2
- en: kernelopts=root=/dev/mapper/cl-root ro crashkernel=auto resume=/dev/mapper/cl-swap
    rd.lvm.lv=cl/root rd.lvm.lv=cl/swap rhgb quiet
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: kernelopts=root=/dev/mapper/cl-root ro crashkernel=auto resume=/dev/mapper/cl-swap
    rd.lvm.lv=cl/root rd.lvm.lv=cl/swap rhgb quiet
- en: boot_success=0
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: boot_success=0
- en: boot_indeterminate=0
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: boot_indeterminate=0
- en: 'Note that the saved_entry value is now set to 2\. After changing the default,
    regenerate the boot configuration file as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，saved_entry 的值现在设置为 2。更改默认设置后，按如下方式重新生成启动配置文件：
- en: grub2-mkconfig --output=/boot/grub2/grub.cfg
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: grub2-mkconfig --output=/boot/grub2/grub.cfg
- en: Reboot the system and verify that the boot menu defaults to the Windows 10 option
    and that Windows loads after the timeout expires.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 重启系统并验证启动菜单是否默认选择 Windows 10 选项，并且在超时后 Windows 会启动。
- en: 4.4 Accessing the Windows Partition from CentOS 8
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 4.4 从 CentOS 8 访问 Windows 分区
- en: 'When running CentOS in a dual boot configuration it is still possible to access
    files located on the Windows partition. This can be achieved by manually mounting
    the partition from the command-line. Before doing so, however, some additional
    packages need to be installed on the system. First the fuse kernel module needs
    to be downloaded and installed:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在双系统配置下运行 CentOS 时，仍然可以访问位于 Windows 分区上的文件。可以通过从命令行手动挂载分区来实现此目标。然而，在这样做之前，需要在系统上安装一些额外的软件包。首先，需要下载并安装
    fuse 内核模块：
- en: dnf install fuse
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: dnf install fuse
- en: modprobe fuse
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: modprobe fuse
- en: 'Next, the Fuse NTFS driver needs to be installed. Unfortunately, this package
    is not included in the standard CentOS 8 repositories so the Extra Packages for
    Enterprise Linux (EPEL) repository needs to be added to the system as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，需要安装 Fuse NTFS 驱动程序。不幸的是，这个包不包含在标准的 CentOS 8 仓库中，因此需要将企业 Linux 附加包（EPEL）仓库添加到系统中，方法如下：
- en: dnf install wget
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: dnf install wget
- en: wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
- en: rpm -ivh epel-release-latest-8.noarch.rpm
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: rpm -ivh epel-release-latest-8.noarch.rpm
- en: 'With the EPEL repository added, the driver can now be installed:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 添加了 EPEL 仓库后，可以安装驱动程序：
- en: dnf install fuse-ntfs-3g
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: dnf install fuse-ntfs-3g
- en: 'Once the requisite packages are installed, the next step is to create a directory
    to use as the mount point for our Windows partition. In this example we will create
    a directory named /mnt/windows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦所需的软件包安装完成，下一步是创建一个目录作为我们 Windows 分区的挂载点。在此示例中，我们将创建一个名为 /mnt/windows 的目录：
- en: mkdir /mnt/windows
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mkdir /mnt/windows
- en: 'In order to identify the device name that has been assigned to the Windows
    partition, use the fdisk command as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 为了识别分配给 Windows 分区的设备名称，可以使用 fdisk 命令，如下所示：
- en: fdisk -l
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fdisk -l
- en: .
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: .
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: Device Boot Start End Blocks Id System
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Device Boot Start End Blocks Id System
- en: /dev/sda1 * 1 13 102400 7 HPFS/NTFS
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda1 * 1 13 102400 7 HPFS/NTFS
- en: /dev/sda2 13 1400 11141120 7 HPFS/NTFS
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda2 13 1400 11141120 7 HPFS/NTFS
- en: /dev/sda3 1400 1464 512000 83 Linux
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda3 1400 1464 512000 83 Linux
- en: /dev/sda4 1464 2611 9214976 5 Extended
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda4 1464 2611 9214976 5 Extended
- en: /dev/sda5 1464 2611 9213952 8e Linux LVM
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda5 1464 2611 9213952 8e Linux LVM
- en: 'In the above output, the main Windows partition containing the files we need
    access to is represented by /dev/sda2\. Next, we need to run the mount command
    (assuming the Windows partition is /dev/sda2 and NTFS format) as follows:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的输出中，包含我们需要访问的文件的主要 Windows 分区表示为 /dev/sda2\。接下来，我们需要运行 mount 命令（假设 Windows
    分区是 /dev/sda2 并且是 NTFS 格式），如下所示：
- en: mount /dev/sda2 /mnt/windows
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mount /dev/sda2 /mnt/windows
- en: 'Check that the mount was successful by listing the contents of the top level
    directory of the mount point:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 通过列出挂载点的顶级目录内容来检查挂载是否成功：
- en: ls /mnt/windows
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ls /mnt/windows
- en: ‘$Recycle.Bin’ ProgramData swapfile.sys
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: ‘$Recycle.Bin’ ProgramData swapfile.sys
- en: ‘Documents and Settings’ ‘Program Files’ ‘System Volume Information’
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: ‘Documents and Settings’ ‘Program Files’ ‘System Volume Information’
- en: pagefile.sys ‘Program Files (x86)’ Users
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: pagefile.sys ‘Program Files (x86)’ Users
- en: PerfLogs Recovery Windows
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: PerfLogs Recovery Windows
- en: 'To automate the mount each time the system is booted, simply add the appropriate
    mount line to the /etc/fstab file:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 要使每次系统启动时自动挂载，只需将适当的挂载行添加到 /etc/fstab 文件中：
- en: /dev/sda2 /mnt/windows ntfs defaults 0 0
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda2 /mnt/windows ntfs defaults 0 0
- en: 'To unmount the Windows file system at any time:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 要随时卸载 Windows 文件系统：
- en: umount /mnt/windows
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: umount /mnt/windows
- en: 4.5 Summary
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 4.5 总结
- en: CentOS 8 can safely co-exist on the same disk drive as a Windows operating system
    by creating a dual boot environment. This involves shrinking the amount of space
    occupied by the Windows system to make room for CentOS 8 before performing the
    installation. Once CentOS has been installed, the boot menu configuration must
    be modified to include the option to boot from Windows. To access the Windows
    filesystem from within CentOS, the Fuse NTFS driver needs to be installed and
    used to mount the Windows partitions.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS 8 可以通过创建双重启动环境与 Windows 操作系统在同一个硬盘驱动器上安全共存。这涉及到先缩小 Windows 系统所占的空间，为
    CentOS 8 腾出空间，然后再执行安装。一旦 CentOS 安装完成，必须修改启动菜单配置，以包括从 Windows 启动的选项。要在 CentOS 中访问
    Windows 文件系统，需要安装 Fuse NTFS 驱动程序，并用它来挂载 Windows 分区。
