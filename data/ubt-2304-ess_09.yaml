- en: 10\. Managing Ubuntu 23.04 systemd Units
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 10. 管理 Ubuntu 23.04 systemd 单元
- en: To gain proficiency in Ubuntu system administration, it is essential to understand
    the concepts of systemd units with a particular emphasis on two specific types
    known as targets and services. This chapter provides a basic overview of the different
    systemd units supported by Ubuntu and how to configure the many services that
    run in the background of a running Linux system.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 要精通 Ubuntu 系统管理，理解 systemd 单元的概念至关重要，特别是对两种特定类型的了解：目标和服务。本章提供了对 Ubuntu 支持的不同
    systemd 单元的基本概述，并介绍了如何配置在运行中的 Linux 系统后台运行的众多服务。
- en: 10.1 Understanding Ubuntu systemd Targets
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 10.1 理解 Ubuntu systemd 目标
- en: Ubuntu can be configured to boot into one of several states (referred to as
    targets), each designed to provide a specific level of operating system functionality.
    The system administrator configures the target to which a system will boot by
    default based on the purpose for which the system is being used. A desktop system,
    for example, will likely be configured to boot using the graphical user interface
    target. In contrast, a cloud-based server system would be more likely to boot
    to the multi-user target level.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu 可以配置为启动到多个状态之一（称为目标），每个状态旨在提供特定级别的操作系统功能。系统管理员根据系统的使用目的，配置系统默认启动的目标。例如，桌面系统可能会配置为使用图形用户界面目标启动。相比之下，基于云的服务器系统更有可能启动到多用户目标级别。
- en: During the boot sequence, a process named systemd looks in the /etc/systemd/system
    folder to find the default target setting. Having identified the default target,
    it proceeds to start the systemd units associated with that target so that the
    system boots with all the necessary processes running.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，一个名为 systemd 的进程会在 /etc/systemd/system 文件夹中查找默认的目标设置。确定默认目标后，systemd
    会启动与该目标相关联的 systemd 单元，从而使系统启动时所有必要的进程都在运行。
- en: For those familiar with older Ubuntu versions, systemd targets replace the older
    runlevel system.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于熟悉旧版 Ubuntu 的用户，systemd 目标替代了旧的运行级别系统。
- en: 10.2 Understanding Ubuntu systemd Services
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 10.2 理解 Ubuntu systemd 服务
- en: A service is a process, typically running in the background, that provides specific
    functionality. The sshd service, for example, is the background process (also
    referred to as a daemon) that provides secure shell access to the system. Different
    systemd targets are configured to automatically launch different collections of
    services, depending on the functionality to be provided by that target.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 服务是一个进程，通常在后台运行，提供特定的功能。例如，sshd 服务是一个后台进程（也称为守护进程），它提供对系统的安全 shell 访问。不同的 systemd
    目标被配置为根据目标要提供的功能自动启动不同的服务集合。
- en: Targets and services are types of systemd unit, a topic that will be covered
    later in this chapter.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 目标和服务是 systemd 单元的类型，本章稍后将对此进行详细讨论。
- en: 10.3 Ubuntu systemd Target Descriptions
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 10.3 Ubuntu systemd 目标描述
- en: 'As previously outlined, Ubuntu can be booted into one of several target levels.
    The default target to which the system is configured to boot will, in turn, dictate
    which systemd units are started. The targets that relate specifically to system
    startup and shutdown can be summarized as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Ubuntu 可以启动到多个目标级别。系统配置为启动到的默认目标将决定启动哪些 systemd 单元。与系统启动和关闭相关的目标可以总结如下：
- en: • poweroff.target - This target shuts down the system. It is unlikely you would
    want this as your default target.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: • poweroff.target - 该目标会关闭系统。你不太可能希望将其作为默认目标。
- en: • rescue.target – Causes the system to start in a single-user mode under which
    only the root user can log in. The system does not start any networking, graphical
    user interface, or multi-user services in this mode. This run level is ideal for
    system administrators to perform system maintenance or repair activities.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: • rescue.target – 使系统启动为单用户模式，在该模式下只有 root 用户可以登录。系统不会在此模式下启动任何网络、图形用户界面或多用户服务。此运行级别非常适合系统管理员执行系统维护或修复活动。
- en: • multi-user.target - Boots the system into a multi-user mode with text-based
    console login capability.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: • multi-user.target - 将系统启动到多用户模式，并提供基于文本的控制台登录功能。
- en: • graphical.target - Boots the system into a networked, multi-user state with
    X Window System capability. By default, the graphical desktop environment will
    start at the end of the boot process. This is the most common run level for desktop
    or workstation use.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: • graphical.target - 将系统启动到具有 X 窗口系统功能的网络化、多用户状态。默认情况下，图形桌面环境将在启动过程结束时启动。这是桌面或工作站使用中最常见的运行级别。
- en: • reboot.target - Reboots the system. Another target that, for obvious reasons,
    you are unlikely to want as your default.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: • reboot.target - 重启系统。由于显而易见的原因，这通常不是你希望设置为默认目标的目标。
- en: In addition to the above targets, the system includes about 70 other targets,
    many of which are sub-targets used by the above main targets. Behind the scenes,
    for example, multi-user.target will also start a target named basic.target which
    will, in turn, start the sockets.target unit, which is required for communication
    between different processes. This ensures that all the services on which the multi-user
    target depends are also started during the boot process.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 除上述目标外，系统还包含大约 70 个其他目标，其中许多是上述主目标使用的子目标。例如，在后台，multi-user.target 还会启动一个名为 basic.target
    的目标，而 basic.target 会启动 sockets.target 单元，该单元对于不同进程间的通信至关重要。这确保了在启动过程中，所有 multi-user.target
    所依赖的服务也会被启动。
- en: 'A list of the targets and services on which a specified target is dependent
    can be viewed by running the following command in a terminal window:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在终端窗口中运行以下命令，查看指定目标所依赖的目标和服务列表：
- en: systemctl list-dependencies <target>
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl list-dependencies <target>
- en: 'Figure 11-1, for example, shows a partial listing of the systemd unit dependencies
    for the graphical target (the complete listing contains over 140 targets and services
    required for a fully functional multi-user system):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，图 11-1 显示了图形目标（完整列表包含超过 140 个目标和服务，要求一个功能完备的多用户系统）的一部分 systemd 单元依赖关系：
- en: '![](img/ubuntu_systemd_dependencies.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ubuntu_systemd_dependencies.jpg)'
- en: Figure 10-1
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10-1
- en: 'The listing is presented as a hierarchical tree illustrating how some dependencies
    have sub-dependencies of their own. Scrolling to the bottom of the list, for example,
    would reveal that the graphical target depends on a cloud-related service called
    cloud-init.target, which, in turn, has its own service dependencies:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 列表呈现为层次结构树，展示了某些依赖项如何具有自己的子依赖项。例如，滚动到列表底部，可以发现图形目标依赖于一个名为 cloud-init.target
    的云相关服务，而该服务又有自己的服务依赖项：
- en: '![](img/ubuntu_systemd_subdependencies.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ubuntu_systemd_subdependencies.jpg)'
- en: Figure 10-2
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10-2
- en: 'The colored dots to the left of each entry in the list indicate the current
    status of that service or target as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中每个条目左侧的彩色点表示该服务或目标的当前状态，如下所示：
- en: •Green - The service or target is active and running.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: •绿色 - 服务或目标正在活动并运行。
- en: •White - The service or target is inactive (dead). Typically because the service
    or target has yet to be enabled, has been stopped for some reason, or a condition
    on which the service or target depends has not been met.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: •白色 - 服务或目标处于非活动状态（已死）。通常是因为服务或目标尚未启用，或由于某种原因已停止，或服务或目标所依赖的条件尚未满足。
- en: •Red - The service or target failed to start due to a fatal error.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: •红色 - 服务或目标因致命错误而未能启动。
- en: 'To find out more details about the status of a systemd unit, use the systemctl
    status command followed by the unit name as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 若要了解 systemd 单元的更多详细状态信息，请使用 systemctl status 命令并跟随单元名称，如下所示：
- en: systemctl status systemd-machine-id-commit.service
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl status systemd-machine-id-commit.service
- en: ○ systemd-machine-id-commit.service - Commit a transient machine-id on disk
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: ○ systemd-machine-id-commit.service - 提交瞬态的机器 ID 到磁盘
- en: 'Loaded: loaded (/usr/lib/systemd/system/systemd-machine-id-commit.service;
    static)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 已加载：已加载 (/usr/lib/systemd/system/systemd-machine-id-commit.service; static)
- en: 'Active: inactive (dead)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 活跃：非活动（已死）
- en: 'Condition: start condition failed at Thu 2023-03-30 08:41:05 EDT; 16min ago'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 'Condition: 启动条件失败，时间：2023-03-30 08:41:05 EDT，16 分钟前'
- en: └─ ConditionPathIsMountPoint=/etc/machine-id was not met
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: └─ ConditionPathIsMountPoint=/etc/machine-id 未满足
- en: 'Docs: man:systemd-machine-id-commit.service(8)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 文档：man:systemd-machine-id-commit.service(8)
- en: 10.4 Identifying and Configuring the Default Target
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 10.4 确定和配置默认目标
- en: 'The current default target for an Ubuntu system can be identified using the
    systemctl command as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当前 Ubuntu 系统的默认目标可以通过 systemctl 命令识别，如下所示：
- en: systemctl get-default
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl get-default
- en: multi-user.target
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: multi-user.target
- en: 'In the above case, the system is configured to boot using the multi-user target
    by default. The default setting can be changed anytime using the systemctl command
    with the set-default option. The following example changes the default target
    to start the graphical user interface the next time the system boots:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述情况下，系统配置为默认使用多用户目标启动。默认设置可以随时使用带有 set-default 选项的 systemctl 命令进行更改。以下示例将默认目标更改为下次启动系统时启动图形用户界面：
- en: systemctl set-default graphical.target
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl set-default graphical.target
- en: Removed /etc/systemd/system/default.target.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 移除了 /etc/systemd/system/default.target。
- en: Created symlink /etc/systemd/system/default.target → /lib/systemd/system/graphical.target.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 创建符号链接 /etc/systemd/system/default.target → /lib/systemd/system/graphical.target。
- en: The output from the default change operation reveals the steps performed in
    the background by the systemctl command to implement the change. The current default
    is configured by establishing a symbolic link from the default.target file located
    in /etc/systemd/system to point to the corresponding target file located in the
    /usr/lib/systemd/system folder (in this case the graphical.target file).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 默认更改操作的输出显示了 systemctl 命令在后台执行的步骤，以实现更改。当前默认通过在 /etc/systemd/system 中的 default.target
    文件建立符号链接，指向 /usr/lib/systemd/system 文件夹中的相应目标文件（在此例中为 graphical.target 文件）来配置。
- en: 10.5 Understanding systemd Units and Unit Types
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 10.5 理解 systemd 单元和单元类型
- en: As previously mentioned, targets and services are both types of systemd unit.
    All the files within the /usr/lib/systemd/system folder are called systemd unit
    configuration files, each representing a systemd unit. Each unit is, in turn,
    categorized as being of a particular unit type. Ubuntu supports 12 different unit
    types, including the target and service unit types already covered in this chapter.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，目标和服务都是 systemd 单元的类型。/usr/lib/systemd/system 文件夹中的所有文件都被称为 systemd 单元配置文件，每个文件代表一个
    systemd 单元。每个单元又按特定单元类型进行分类。Ubuntu 支持 12 种不同的单元类型，包括本章已介绍的目标和服务单元类型。
- en: 'The type of a unit file is represented by the filename extension as outlined
    in [Table 10-1](Systemd_Targets_and_States.xhtml#_idTextAnchor194) below:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 单元文件的类型由文件名扩展名表示，具体见下表 [表 10-1](Systemd_Targets_and_States.xhtml#_idTextAnchor194)：
- en: '| Unit Type | Filename Extension | Type Description |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 单元类型 | 文件扩展名 | 类型描述 |'
- en: '| Service | .service | System service. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 服务 | .service | 系统服务。 |'
- en: '| Target | .target | Group of systemd units. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 目标 | .target | systemd 单元组。 |'
- en: '| Automount | .automount | File system auto-mount point. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 自动挂载 | .automount | 文件系统自动挂载点。 |'
- en: '| Device | .device | Device file recognized by the kernel. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 设备 | .device | 内核识别的设备文件。 |'
- en: '| Mount | .mount | File system mount point. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 挂载 | .mount | 文件系统挂载点。 |'
- en: '| Path | .path | File or directory in a file system. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| 路径 | .path | 文件系统中的文件或目录。 |'
- en: '| Scope | .scope | Externally created process. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| 范围 | .scope | 外部创建的进程。 |'
- en: '| Slice | .slice | Group of hierarchically organized units that manage system
    processes. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 切片 | .slice | 管理系统进程的层级组织单元组。 |'
- en: '| Snapshot | .snapshot | Saved state of the systemd manager. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 快照 | .snapshot | systemd 管理器的保存状态。 |'
- en: '| Socket | .socket | Inter-process communication socket. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 套接字 | .socket | 进程间通信套接字。 |'
- en: '| Swap | .swap | Swap device or a swap file. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 交换 | .swap | 交换设备或交换文件。 |'
- en: '| Timer | .timer | Systemd timer. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| 定时器 | .timer | systemd 定时器。 |'
- en: Table 10-1
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 表 10-1
- en: Note that the target unit type differs from other types in that it comprises
    a group of systemd units such as services or other targets.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，目标单元类型与其他类型不同，它包含一组系统的 systemd 单元，如服务或其他目标。
- en: 10.6 Dynamically Changing the Current Target
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 10.6 动态更改当前目标
- en: 'The systemctl set-default command outlined previously specifies the target
    that will be used the next time the system starts but does not change the current
    system’s state. To change to a different target dynamically, use the systemctl
    command again, using the isolate option followed by the destination target. To
    switch the current system to the graphical target without rebooting, for example,
    the following command would be used:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述的 systemctl set-default 命令指定了系统下次启动时将使用的目标，但不会更改当前系统的状态。要动态切换到其他目标，请再次使用
    systemctl 命令，使用 isolate 选项后跟目标名称。例如，要在不重启的情况下将当前系统切换到图形目标，可以使用以下命令：
- en: systemctl isolate graphical.target
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl isolate graphical.target
- en: Once executed, the system will start the graphical desktop environment.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后，系统将启动图形桌面环境。
- en: 10.7 Enabling, Disabling, and Masking systemd Units
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 10.7 启用、禁用和屏蔽 systemd 单元
- en: A newly installed Ubuntu system will include the base systemd service units
    but is unlikely to include all the services the system will eventually need once
    it goes into a production environment. A basic Ubuntu installation, for example,
    will typically not include the packages necessary to run an Apache web server,
    a key element of which is the apache2.service unit.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 新安装的 Ubuntu 系统将包含基本的 systemd 服务单元，但不太可能包含系统在进入生产环境后最终需要的所有服务。例如，基本的 Ubuntu 安装通常不包括运行
    Apache Web 服务器所需的包，其中一个关键元素是 apache2.service 单元。
- en: 'The system administrator will resolve this problem by installing the necessary
    apache2 packages using the following command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 系统管理员将通过使用以下命令安装必要的 apache2 包来解决此问题：
- en: apt install apache2
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: apt install apache2
- en: 'Having configured the web server, the next task will be to check the status
    of the apache2 service unit to identify whether it was activated as part of the
    installation process:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 配置好 Web 服务器后，下一步将是检查 apache2 服务单元的状态，以确认它是否在安装过程中被激活：
- en: systemctl status apache2.service
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl status apache2.service
- en: ● apache2.service - The Apache HTTP Server
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: ● apache2.service - Apache HTTP 服务器
- en: 'Loaded: loaded (/lib/systemd/system/apache2.service; disabled; vendor prese>'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 加载：已加载（/lib/systemd/system/apache2.service；已禁用；供应商预设）
- en: 'Active: active (running) since Mon 2023-07-17 14:01:13 UTC; 40s ago'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 活跃：已激活（运行中），自 2023-07-17 14:01:13 UTC 起；40 秒前
- en: 'Docs: https://httpd.apache.org/docs/2.4/'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 文档：https://httpd.apache.org/docs/2.4/
- en: 'Main PID: 22328 (apache2)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 主 PID：22328（apache2）
- en: 'Tasks: 55 (limit: 4517)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 任务：55（限制：4517）
- en: 'Memory: 4.7M'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 内存：4.7M
- en: 'CPU: 24ms'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: CPU：24ms
- en: 'CGroup: /system.slice/apache2.service'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 'CGroup: /system.slice/apache2.service'
- en: ├─22328 /usr/sbin/apache2 -k start
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: ├─22328 /usr/sbin/apache2 -k start
- en: ├─22329 /usr/sbin/apache2 -k start
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: ├─22329 /usr/sbin/apache2 -k start
- en: └─22330 /usr/sbin/apache2 -k start
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: └─22330 /usr/sbin/apache2 -k start
- en: 'Note that the service status may be listed as loaded but inactive, which happens
    when it is preset by the vendor to be disabled when first installed. To start
    an inactive service, the following command can be used:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，服务状态可能会显示为已加载但未激活，这是因为它在首次安装时由供应商预设为禁用。要启动一个未激活的服务，可以使用以下命令：
- en: systemctl start apache2.service
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl start apache2.service
- en: In the above example output, the status indicates that the service is disabled.
    This means that the next time the system reboots, the apache2 service will not
    start automatically and will need to be started manually by the system administrator.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述示例输出中，状态指示该服务已禁用。这意味着，下次系统重启时，apache2 服务将不会自动启动，必须由系统管理员手动启动。
- en: 'To configure a service to start automatically each time the system starts,
    it must be enabled as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置一个服务，每次系统启动时自动启动，必须按如下方式启用它：
- en: systemctl enable apache2.service
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl enable apache2.service
- en: 'A currently running service may be stopped at any time as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当前正在运行的服务可以随时按如下方式停止：
- en: systemctl stop apache2.service
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl stop apache2.service
- en: Now that it has been enabled, the next time the system reboots to the current
    target, the apache2 service will start automatically. Assuming, for example, that
    the service was enabled while the system was running the multi-user target, the
    apache2 service will have been added as another dependency to the multi-user.target
    systemd unit.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，它已被启用，下次系统重启到当前目标时，apache2 服务将自动启动。例如，假设在系统运行 multi-user 目标时启用了该服务，那么 apache2
    服务将作为另一个依赖项添加到 multi-user.target systemd 单元中。
- en: Behind the scenes, systemctl adds dependencies to targets by creating symbolic
    links in the .wants folder for the target within the /etc/systemd/system folder.
    For example, the multi-user.target unit has a folder named multi-user.target.wants
    in /etc/systemd/system containing symbolic links to all of the systemd units located
    in /usr/lib/systemd/system on which it is dependent. A review of this folder will
    show a correlation with the dependencies listed by the systemctl list-dependencies
    command outlined earlier in the chapter.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在后台，systemctl 通过在 /etc/systemd/system 文件夹中的目标下创建符号链接，将依赖项添加到目标。例如，multi-user.target
    单元在 /etc/systemd/system 中有一个名为 multi-user.target.wants 的文件夹，里面包含指向位于 /usr/lib/systemd/system
    中所有依赖的 systemd 单元的符号链接。审查此文件夹将显示与前面章节中 systemctl list-dependencies 命令列出的依赖项之间的关联。
- en: 'To configure a service so that it no longer starts automatically as a target
    dependency, deactivate it as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置一个服务，使其不再作为目标依赖项自动启动，可以按如下方式停用它：
- en: systemctl disable apache2.service
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl disable apache2.service
- en: This command will remove the symbolic link to the apache2.service unit file
    from the .wants directory so that it is no longer a dependency and, as such, will
    not be started the next time the system boots.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将从 .wants 目录中删除到 apache2.service 单元文件的符号链接，这样它就不再是依赖项，因此在系统下次启动时不会被启动。
- en: The .wants folder contains dependencies that, if not available, will not prevent
    the unit from starting and functioning. Mandatory dependencies (in other words,
    dependencies that will cause the unit to fail if not available) should be placed
    in the .requires folder (for example, multi-user.target.requires).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: .wants 文件夹包含一些依赖项，如果这些依赖项不可用，也不会阻止单元的启动和运行。必须的依赖项（换句话说，若不可用将导致单元启动失败的依赖项）应放置在
    .requires 文件夹中（例如，multi-user.target.requires）。
- en: 'In addition to enabling and disabling, it is also possible to mask a systemd
    unit as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 除了启用和禁用外，还可以按如下方式屏蔽 systemd 单元：
- en: systemctl mask apache2.service
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl mask apache2.service
- en: 'A masked systemd unit cannot be enabled, disabled, or started under any circumstances,
    even if it is listed as a dependency for another unit. As far as the system is
    concerned, it is as though a masked systemd unit no longer exists. This can be
    useful for ensuring that a unit is never started, regardless of the system conditions.
    The only way to regain access to the service is to unmask it:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 被屏蔽的 systemd 单元在任何情况下都不能被启用、禁用或启动，即使它被列为其他单元的依赖项。就系统而言，屏蔽的 systemd 单元就好像不再存在一样。这对于确保某个单元永远不会启动，无论系统条件如何，都非常有用。恢复访问该服务的唯一方法是取消屏蔽它：
- en: systemctl unmask apache2.service
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl unmask apache2.service
- en: 10.8 Working with systemd Units in Cockpit
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 10.8 在 Cockpit 中操作 systemd 单元
- en: 'In addition to the command-line techniques outlined in this chapter, it is
    also possible to review and manage systemd units from within the Cockpit web-based
    interface. For example, assuming that Cockpit has been installed and set up as
    outlined in the chapter entitled “An Overview of the Cockpit Web Interface”, access
    to the list of systemd units on the system can be accessed by logging into Cockpit
    and selecting the Services option in the left-hand navigation panel marked A in
    [Figure 10-3](Systemd_Targets_and_States.xhtml#_idTextAnchor198):'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 除了本章中概述的命令行技术外，还可以通过 Cockpit 基于 Web 的界面查看和管理 systemd 单元。例如，假设已按照《Cockpit Web
    界面概述》一章中的说明安装并设置了 Cockpit，可以通过登录 Cockpit 并在左侧导航面板中选择服务选项（如[图 10-3](Systemd_Targets_and_States.xhtml#_idTextAnchor198)中标记的
    A），访问系统中 systemd 单元的列表：
- en: '![](img/ubuntu_cockpit_services.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ubuntu_cockpit_services.jpg)'
- en: Figure 10-3
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10-3
- en: The row of options marked B displays units of specific types in the main area
    marked C, where the current status of each unit is listed in the State column.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 标记为 B 的选项行在标记为 C 的主区域中显示特定类型的单元，在该区域中，每个单元的当前状态会列在状态列中。
- en: 'Selecting a unit from the list will display detailed information. [Figure 10-4](Systemd_Targets_and_States.xhtml#_idTextAnchor199),
    for example, shows the detail screen for an apache2 instance, including service
    logs (A) and a switch and menu (B) for performing tasks such as starting, stopping,
    enabling/disabling, and masking/unmasking the unit:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 从列表中选择一个单元将显示详细信息。例如，[图 10-4](Systemd_Targets_and_States.xhtml#_idTextAnchor199)
    显示了一个 apache2 实例的详细信息屏幕，包括服务日志 (A) 以及用于执行启动、停止、启用/禁用和屏蔽/取消屏蔽等任务的开关和菜单 (B)：
- en: '![](img/ubuntu_cockpit_apache_service.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ubuntu_cockpit_apache_service.jpg)'
- en: Figure 10-4
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10-4
- en: 10.9 Summary
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 10.9 总结
- en: A newly installed Ubuntu system includes a base set of systemd units, many of
    which run in the background to provide much of the system’s functionality. These
    units are categorized by type, the most common being targets and services. A target
    unit is a group of other units to be started collectively. The system has a default
    target unit that defines the other units to be started up each time the system
    boots. The most common targets are those which boot the system to either multi-user
    or graphical mode. In addition, the systemctl command-line tool provides a range
    of options for performing systemd unit configuration tasks, many of which are
    also available through the Cockpit web-based interface.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 新安装的 Ubuntu 系统包含一组基础的 systemd 单元，其中许多在后台运行，提供系统的主要功能。这些单元按类型分类，最常见的是目标和服务。目标单元是一组将要一起启动的其他单元。系统有一个默认的目标单元，定义了每次系统启动时要启动的其他单元。最常见的目标是将系统启动到多用户模式或图形模式。此外，systemctl
    命令行工具提供了一系列选项，用于执行 systemd 单元配置任务，其中许多也可以通过 Cockpit 基于 Web 的界面来完成。
