- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Getting Started with the Shell
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 Shell
- en: Before we can talk about shell scripting, we need to know what a shell is and
    what kinds of shells are available for Linux, Unix, and Unix-like operating systems.
    We’ll also talk about other important topics that will help get you started in
    the wide, wonderful world of shell scripting.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们讨论 Shell 脚本之前，我们需要了解什么是 Shell，以及 Linux、Unix 和类 Unix 操作系统中有哪些不同的 Shell。我们还将讨论一些其他重要的主题，这些都将帮助你进入
    Shell 脚本的广阔世界。
- en: 'Topics in this chapter include:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主题包括：
- en: Understanding shells
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 Shell
- en: Finding help with shell commands
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 寻找 Shell 命令的帮助
- en: Using a text editor
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用文本编辑器
- en: Understanding compiled versus interpreted programming
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解编译型与解释型编程
- en: Understanding `root` and `sudo` privileges
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 `root` 和 `sudo` 权限
- en: If you’re ready, let’s get started on this important journey. And, always remember
    to have some fun along the way.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你准备好了，那就让我们开始这段重要的旅程吧。同时，永远记得在过程中享受乐趣。
- en: Understanding Shells
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Shell
- en: So, you’re scratching your head and saying, “What is a shell, and why should
    I care?” Well, a shell is a program that acts as an intermediary between the user
    and the operating system kernel. A user types commands into the shell, which passes
    them into the kernel for processing. The output is then presented to the user
    via the computer **terminal**, which can also referred to as the **screen**. The
    most common shell on Linux systems is **bash**, but the **Z shell** (**zsh**)
    has been gaining popularity in recent years. (I’ll explain why in *Chapter 22,
    Using the Z Shell*.) You’ll find `bash` as the default shell on most Linux distros
    and certain Unix-like distros such as OpenIndiana, and `zsh` as the default on
    Kali Linux.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，你一定在挠头问：“什么是 Shell，为什么我需要关心它？”那么，Shell 是一个程序，它充当用户和操作系统内核之间的中介。用户将命令输入到 Shell
    中，Shell 会将这些命令传递给内核进行处理。处理结果随后通过计算机的 **终端**（也可以称作 **屏幕**）展示给用户。Linux 系统上最常见的 Shell
    是 **bash**，但 **Z Shell**（**zsh**）近年来也逐渐变得流行。（我将在*第 22 章，使用 Z Shell* 中解释原因。）你会发现
    `bash` 是大多数 Linux 发行版以及一些类 Unix 发行版（如 OpenIndiana）的默认 Shell，而 `zsh` 则是 Kali Linux
    的默认 Shell。
- en: If you are brand new to the wild, wonderful world of Linux and its Unix or Unix-like
    cousins, you might be wondering what a *distro* is. Well, unlike Windows and macOS,
    which are proprietary and controlled by a single company, Linux and its cousins
    are primarily open source software, which means that anyone can take the source
    code and create their own implementations, or *distributions*. Red Hat Enterprise
    Linux, Fedora, and Ubuntu are examples of Linux distributions, and OpenIndiana
    and FreeBSD are examples of Unix-like distributions. But, we hard-core geeks rarely
    utter the word *distribution*, and instead just say *distro*, for short.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是 Linux 及其类 Unix 系统的全新用户，可能会想知道什么是 *distro*。其实，和 Windows 以及 macOS 这类由单一公司控制的专有操作系统不同，Linux
    及其类 Unix 系统是主要的开源软件，这意味着任何人都可以拿到源代码并创建自己的实现或 *发行版*。Red Hat Enterprise Linux、Fedora
    和 Ubuntu 是 Linux 发行版的例子，而 OpenIndiana 和 FreeBSD 则是类 Unix 发行版的例子。但我们这些铁杆极客很少说 *发行版*，我们通常直接说
    *distro*，这是 *distribution* 的简写。
- en: Also, the reason that I differentiate between Unix and Unix-like distros has
    to do with legal reasons that date back to the 1980s. This involves a rather complicated
    mess that I would rather not go into here. Suffice it to say that the creators
    of distros such as FreeBSD are not allowed to refer to their creations as Unix,
    even though they are mostly functionally equivalent. But, they can say that their
    creations are *Unix-like*.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，我区分 Unix 和类 Unix 发行版的原因与上世纪 80 年代的法律原因有关。这涉及到一个相当复杂的问题，我这里不打算深入探讨。简单来说，像
    FreeBSD 这样的发行版的创作者并不能将他们的作品称为 Unix，尽管它们在功能上大致等同。但，他们可以说自己的作品是 *类 Unix 的*。
- en: The newest versions of macOS also have `zsh` set as the default shell. Fortunately,
    much of what you’ll learn about `bash` also works on `zsh`. The main difference
    is that `zsh` has a few cool features that `bash` doesn’t have. (Again, I’ll explain
    all about that in *Chapter 22*.) **PowerShell**, which originally was only available
    for Microsoft Windows operating systems, has also been available for Linux and
    macOS since 2016\. PowerShell is a whole different animal, but you might find
    it quite useful, as you should see when we get to *Chapter 23, Using PowerShell
    on Linux*.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 最新版本的 macOS 也将 `zsh` 设置为默认的 shell。幸运的是，很多关于 `bash` 的知识也适用于 `zsh`。主要的区别是，`zsh`
    有一些 `bash` 所没有的酷功能。（我会在*第 22 章*中详细解释这些内容。）**PowerShell** 最初仅适用于微软的 Windows 操作系统，但自
    2016 年起，PowerShell 也已在 Linux 和 macOS 上可用。PowerShell 是完全不同的工具，但你可能会发现它非常有用，正如我们在*第
    23 章，Linux 上使用 PowerShell* 中将要介绍的那样。
- en: It’s common to hear people refer to `bash` as the *bash shell*. But, `bash`
    is short for *Bourne Again Shell*. So, when you say *bash shell*, you’re really
    saying *Bourne Again Shell Shell*, which is a bit awkward. This is the same as
    when people talk about going to the *ATM machine* to withdraw some money. What
    they’re really saying is that they’re going to the *Automatic Teller Machine Machine*,
    which is also awkward.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 通常会听到人们把 `bash` 称为 *bash shell*。但是，`bash` 是 *Bourne Again Shell* 的缩写。所以，当你说
    *bash shell* 时，实际上是在说 *Bourne Again Shell Shell*，这有点奇怪。这就像人们说要去 *ATM machine*
    提取钱一样。他们实际上是在说 *Automatic Teller Machine Machine*，这也是很尴尬的说法。
- en: And, don’t even get me started on the people who talk about *hot water heaters*.
    I mean, if the water is already hot, why heat it?
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，别让我开始讲那些讨论 *热水器* 的人。我是说，如果水已经热了，为什么还要加热呢？
- en: On the other hand, if you find that you still need to say *bash shell* so that
    people will know what you’re talking about, I’ll understand and won’t condemn
    you for it. In fact, you might even see me do that on occasion.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果你觉得还需要说 *bash shell*，这样别人才能明白你在说什么，我会理解，也不会谴责你。事实上，你可能偶尔会看到我也这么做。
- en: The coolest thing about modern operating system shells is that they’re much
    more than just an interface tool. They’re also full-blown programming environments
    with many of the same programming constructs as more complex programming languages,
    such as Pascal, C, or Java. Systems administrators can make their jobs much easier
    by using shell scripts to automate complex, repetitive tasks.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现代操作系统的 shell 最酷的地方在于，它们不仅仅是一个界面工具。它们也是完整的编程环境，拥有与更复杂编程语言（如 Pascal、C 或 Java）相同的许多编程结构。系统管理员可以通过使用
    shell 脚本来自动化复杂的重复任务，从而使工作变得更加轻松。
- en: 'When you log into a text-mode Linux or Unix server, you’ll be presented with
    a black screen and some text, which looks like this:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 当你登录到一个文本模式的 Linux 或 Unix 服务器时，屏幕上会显示一片黑色和一些文本，类似如下：
- en: '![](img/B21693_01_01.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21693_01_01.png)'
- en: 'Figure 1.1: Plain bash on a text-mode Debian Linux machine'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1：文本模式 Debian Linux 机器上的纯 bash
- en: 'This is the unadorned, plain-jane shell. Machines with desktop environments
    installed will interface with the shell via a **terminal emulator**, which will
    look something like this:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是简洁的、基本的 shell。安装了桌面环境的机器将通过 **终端模拟器** 与 shell 进行交互，终端模拟器看起来像这样：
- en: '![](img/B21693_01_02.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21693_01_02.png)'
- en: 'Figure 1.2: A terminal emulator that interfaces with bash on an OpenIndiana
    machine'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2：在 OpenIndiana 机器上与 bash 交互的终端模拟器
- en: The name of the terminal emulator will differ from one desktop environment to
    the next, but all do the same job. The advantage of using a terminal emulator
    is that you’ll have the luxury of using scroll bars, customizing the display,
    and using copy-and-paste for the command-line.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 终端模拟器的名称因桌面环境的不同而有所不同，但它们的功能是相同的。使用终端模拟器的好处是，你可以享受使用滚动条、定制显示界面和命令行复制粘贴等功能。
- en: 'In any case, you can see which shell you’re using by typing:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，你可以通过输入以下命令查看自己使用的是哪个 shell：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this case, you see that you’re using `bash`.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，你看到的是 `bash`。
- en: Finding Help with Shell Commands
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查找 Shell 命令的帮助
- en: It doesn’t matter how much of an expert you think you are, there will still
    be times when you’ll need to look up some bit of information. With Linux, Unix,
    and Unix-like operating systems, there are several options for that.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你认为自己是多么的专家，仍然会有需要查找一些信息的时候。对于 Linux、Unix 和类 Unix 操作系统来说，有几个选项可以用来查找信息。
- en: Understanding Manual Pages
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解手册页
- en: '**Manual pages**, or **man pages** for short, have been built into Unix-like
    operating systems since almost forever. To use a man page, just enter `man`, followed
    by the name of the command, configuration file, or system component for which
    you seek information. For example, you could find out how to use the `ls` command
    like this:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Most of the time, the `man` command will open a man page in the `less` pager.
    (Some Unix implementations might use the `more` pager instead, but I haven’t found
    any recent ones that do.) Either way, you’ll be able to scroll through the man
    page or perform key word searches within the page to find the information that
    you seek.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'The man pages are divided into sections that each correspond to a different
    category. On most Unix-like and Linux systems, there are eight main categories,
    more commonly referred to as *sections*, which are as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '| **Section number** | **Purpose** |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
- en: '| 1 | This section contains information about commands that can be used by
    any unprivileged user. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
- en: '| 2 | This section contains information about system calls, which are mainly
    of interest to software developers. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
- en: '| 3 | In this section, you’ll find information about library functions, which
    will also mainly be of interest to software developers. |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
- en: '| 4 | If you’ve ever wanted to find information about the device files in the
    `/dev/` directory, this is the place to look. This section also contains information
    about device drivers. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
- en: '| 5 | Here you’ll find information about the various configuration and system
    files on your system. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
- en: '| 6 | This is for information about games and screensavers. There’s normally
    not much here. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
- en: '| 7 | This is for information about miscellaneous things that don’t fit neatly
    into any of the other categories. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
- en: '| 8 | This is for information about administrative commands and system daemons.
    |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
- en: 'Table 1.1: Describing the man page sections'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: You’ll see the subdirectories that contain these man page files in the `/usr/share/man/`
    directory. You also might see some subdirectories with names like `man0p`, `man5p`,
    or `man8x`. These subdirectories contain certain special-purpose man pages, which
    will differ on different Linux distros.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: 'A lot of times, you won’t need to think about these sections, because the `man`
    command will pull up the proper man page for you. Other times, you will need to
    pay attention to these sections, because many key words for which you’ll search
    can be found in multiple sections. For example, here on the Fedora workstation
    that I’m using to write this, there are two man pages for `printf`. There are
    two ways to find them. First, you can use the `man -aw` command, like this:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can also use the `whatis` command, like this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note that `whatis` is a synonym for `man -f`. You’ll get the same results with
    either command, but my own preference is to use `whatis`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: 'So, we have a `printf` man page in Section 1, which means that we have a normal
    user command that’s called `printf`. We also see a `printf` man page in Section
    3, which means that there’s a library function that’s called `printf`. If you
    enter `man printf`, you’ll see the man page from Section 1\. You’ll see that in
    the first line of the man page, which will look like this:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我们在第1节有一个`printf`手册页，这意味着我们有一个名为`printf`的普通用户命令。我们在第3节也看到了一个`printf`手册页，这意味着有一个名为`printf`的库函数。如果你输入`man
    printf`，你将看到来自第1节的手册页。你会在手册页的第一行看到类似如下内容：
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you instead want to see the man page from Section 3, you’ll need to specify
    that in your command, like this:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看第3节的手册页，你需要在命令中指定，如下所示：
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To broaden your search for all man pages that contain `printf` in either the
    title or the description of the man page, even if it’s embedded into another text
    string, use either `apropos` or `man -k`, like this:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要扩大搜索范围，查找所有包含`printf`的手册页，无论是标题还是描述中，甚至是嵌入在其他文本字符串中的，都可以使用`apropos`或`man -k`，如以下所示：
- en: '[PRE6]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Again, either command will give you the same output, but my own preference has
    always been to use `apropos`.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 再次强调，无论使用哪个命令，都会得到相同的输出，但我个人始终偏好使用`apropos`。
- en: 'Most of the time, your Linux system does a good job of keeping the man page
    index updated. Once in a while though, you’ll need to do it manually, like this:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数时候，你的Linux系统会很好地保持手册页索引的更新。然而，有时你需要手动更新，方法如下：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Okay, that about does it for the man page system. Let’s talk about the info
    system.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这就是关于手册页系统的内容。接下来我们来谈谈信息系统。
- en: Understanding Info Pages
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解信息页面
- en: 'The **info page** system is newer, and was invented by Richard M. Stallman
    as part of the **GNU Project**. The unique part about it is that each info page
    contains hyperlinks that can lead you to additional pages of information. For
    example, to obtain information about the info system, enter `info info`. This
    info page contains a menu, which looks something like this:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**信息页面**系统较新，是由理查德·M·斯托曼（Richard M. Stallman）发明的，作为**GNU项目**的一部分。它的独特之处在于每个信息页面都包含可以将你引导到其他信息页面的超链接。例如，要获取关于信息系统的内容，只需输入`info
    info`。这个信息页面包含一个菜单，类似于以下内容：'
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Each underlined item you see is a **hyperlink** to another page. With your
    cursor keys, move the cursor to the hyperlink that you want to see, and hit the
    *Enter* key. To see an info page for a specific command, such as `ls,` just do
    this:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 每个下划线的项目都是一个**超链接**，指向另一页面。使用光标键，将光标移到您想查看的超链接上，然后按*Enter*键。要查看特定命令的帮助页面，比如`ls`，只需这样操作：
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: If you need help with navigating through the info pages, just hit the `H` key
    to bring up a navigation menu.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要帮助来浏览信息页面，只需按`H`键来调出导航菜单。
- en: And, that’s about it for the info pages. Let’s talk about on-line documentation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这就是关于信息页面的内容。接下来我们来谈谈在线文档。
- en: Getting to Know the Linux Documentation Project
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解Linux文档项目
- en: '**The Linux Documentation Project** has been around since almost forever, and
    is an invaluable resource. The best part about it is the **Guides** section, where
    you’ll find free-of-charge, full-length books about Linux and `bash` that you
    can download in a variety of formats. They’re all quite old, with the newest one
    having been last updated in 2014\. For the *Bash Guide for Beginners* book and
    the *Advanced Bash-Scripting* book that you’ll find there, that doesn’t matter.
    The concepts in those two books are eternal, and haven’t really changed over the
    years. To see these books, go to [https://tldp.org/guides.html](https://tldp.org/guides.html).'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**Linux文档项目**几乎存在了永远，是一个宝贵的资源。最棒的是它的**指南**部分，在这里你可以找到免费的完整Linux和`bash`书籍，并可以下载多种格式。这些书籍大多数都很旧，最新的更新是在2014年。不过，关于*Bash初学者指南*和*高级Bash脚本编程*这两本书，时间久远也无妨。这两本书中的概念是永恒的，数年来并未发生变化。要查看这些书籍，请访问[https://tldp.org/guides.html](https://tldp.org/guides.html)。'
- en: Using Your Favorite Search Engine
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用您最喜欢的搜索引擎
- en: If all else fails, just use your favorite search engine to find what you need
    to know about either scripting in general, or scripting on a particular operating
    system. You’ll find plenty of help, such as blog posts, YouTube videos, and official
    documentation. There are plenty of Linux-specific websites that offer help on
    various things, and it’s quite simple to find them.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切都失败了，只需使用您最喜欢的搜索引擎查找有关脚本编程的一般信息，或某个特定操作系统上的脚本编程。你会找到很多帮助信息，比如博客文章、YouTube视频和官方文档。许多专注于Linux的免费网站提供各种帮助，找到它们非常简单。
- en: Next, let’s talk about text editors.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们来谈谈文本编辑器。
- en: Using a Text Editor to Create Shell Scripts
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用文本编辑器创建 Shell 脚本
- en: 'To create your shell scripts, you’ll need a text editor that’s designed for
    Linux and Unix systems. You have plenty of choices, and which one you choose will
    depend upon several criteria:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建你的 shell 脚本，你需要一个专为 Linux 和 Unix 系统设计的文本编辑器。你有很多选择，选择哪一个取决于多个标准：
- en: Are you editing on a text-mode machine or on a desktop machine?
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是在文本模式机器上编辑文件，还是在桌面机器上编辑？
- en: What features do you need?
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要哪些功能？
- en: What is your own personal preference?
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你个人的偏好是什么？
- en: Text-mode Editors
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文本模式编辑器
- en: Text-mode text editors can be used on machines that don’t have a graphical user
    interface installed. The two most common text-mode text editors are `nano` and
    `vim`. The `nano` editor is installed by default on pretty much every Linux distro,
    and is quite easy to use. To use it, just type `nano`, followed by the name of
    the file that you want to either edit or create. At the bottom of the screen,
    you’ll see the list of available commands. To invoke a command, press the *CTRL*
    key, followed by the letter key that corresponds to the desired command.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 文本模式文本编辑器可以在没有图形用户界面的机器上使用。最常见的两种文本模式编辑器是 `nano` 和 `vim`。`nano` 编辑器几乎在所有 Linux
    发行版中都已预装，且使用起来非常简单。使用它，只需键入 `nano`，后跟你要编辑或创建的文件名。在屏幕底部，你会看到可用命令的列表。要调用某个命令，按下
    *CTRL* 键，然后按对应的字母键。
- en: The downside of using `nano` is that it doesn’t have the full range of features
    that you might want in a programmers’ text editor. You can see here that the implementation
    of `nano` on my Fedora workstation has color-coding for the syntax, but it doesn’t
    automatically format the code.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `nano` 的缺点是它没有你可能需要的程序员文本编辑器的全部功能。你可以看到，我在 Fedora 工作站上使用的 `nano` 实现有语法高亮，但它不会自动格式化代码。
- en: '![](img/B21693_01_03.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21693_01_03.png)'
- en: 'Figure 1.3: The nano text editor on my Fedora workstation'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3：我在 Fedora 工作站上使用的 nano 文本编辑器
- en: Note that on other Linux distros, `nano` might not even have color-coding.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在其他 Linux 发行版上，`nano` 可能甚至没有语法高亮。
- en: 'My favorite text-mode editor is `vim`, which has features that would make almost
    any programmer happy. Not only does it have color-coded syntax highlighting, but
    it also automatically formats your code with proper indentations, as you see here:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我最喜欢的文本模式编辑器是 `vim`，它拥有几乎让所有程序员都满意的功能。它不仅支持语法高亮，还能自动格式化你的代码，并应用适当的缩进，如你所见：
- en: '![](img/B21693_01_04.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21693_01_04.png)'
- en: 'Figure 1.4: The vim text editor on my Fedora workstation'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4：我在 Fedora 工作站上使用的 vim 文本编辑器
- en: In reality, indentation isn’t needed for `bash` scripting, because `bash` scripts
    work fine without it. However, the indentation does make code easier for humans
    to read, and having an editor that will apply proper indentation automatically
    is quite handy. Additionally, `vim` comes with a powerful search-and-replace feature,
    allows you to split the screen so that you can work on two files at once, and
    can be customized with a fairly wide selection of plug-ins. Even though it’s a
    text-mode editor, you can use the right-click menu from your mouse to copy and
    paste text if you’re remotely logged in to your server from a desktop machine
    or if you’re editing a local file on your desktop machine.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，`bash` 脚本不需要缩进，因为 `bash` 脚本在没有缩进的情况下也能正常工作。然而，缩进确实让代码更容易为人类阅读，并且有一个能自动应用适当缩进的编辑器是非常方便的。此外，`vim`
    具有强大的搜索和替换功能，允许你分屏操作，从而可以同时处理两个文件，并且可以通过多种插件进行定制。即使它是一个文本模式编辑器，你也可以在通过桌面机器远程登录到服务器时，使用鼠标右键菜单进行复制和粘贴，或者在桌面机器上编辑本地文件时使用该功能。
- en: 'The older `vi` text editor is normally installed on most Linux distros by default,
    but `vim` often isn’t. On some distros, the `vim` command will work, even if `vim`
    isn’t actually installed. That’s because the `vim` command on them might be pointing
    to either `vim-minimal` or even to the old `vi`. At any rate, to install full-fledged
    `vim` on any Red Hat-type of distro, such as RHEL, Fedora, AlmaLinux, or Rocky
    Linux, just do:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 较老的 `vi` 文本编辑器通常在大多数 Linux 发行版中默认安装，但 `vim` 通常没有。某些发行版中，即使没有实际安装 `vim`，`vim`
    命令仍然可以工作。这是因为这些发行版中的 `vim` 命令可能指向的是 `vim-minimal`，甚至指向的是旧版的 `vi`。无论如何，要在任何基于 Red
    Hat 的发行版（如 RHEL、Fedora、AlmaLinux 或 Rocky Linux）上安装完整的 `vim`，只需执行以下命令：
- en: '[PRE10]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To install `vim` on Debian or Ubuntu, do:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 Debian 或 Ubuntu 上安装 `vim`，请执行以下命令：
- en: '[PRE11]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: As much as I like `vim`, I do have to tell you that some users are a bit put
    off from using it, because they believe that it’s too hard to learn. That’s because
    the original version of `vi` was created back in the Stone Age of Computing, before
    computer keyboards had cursor keys, backspace keys, or delete keys. The old `vi`
    commands that you used to have to use instead of these keys have been carried
    over to the modern implementations of `vim`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: So, most `vim` tutorials that you’ll find will still try to teach you all of
    those old keyboard commands.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21693_01_05.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.5: This photo of me was taken during the Stone Age of Computing, before
    computer keyboards had cursor keys, backspace keys, or delete keys.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: However, on the current versions of `vim` that you’ll install on Linux and modern
    Unix-like distros such as FreeBSD and OpenIndiana, the cursor keys, backspace
    key, and delete key all work as they do on any other text editor. So, it’s no
    longer necessary to learn all of those keyboard commands that you would have had
    to learn years ago. I mean, you’ll still need to learn a few basic keyboard commands,
    but not as many as you had to before.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: GUI Text Editors
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you’re using a desktop machine, you can still use either `nano` or `vim`
    if you desire. But, there’s also a wide range of GUI-type editors available if
    you’d rather use one of them. Some sort of no-frills text editor, such as `gedit`
    or `leafpad`, is probably already installed on your desktop system. Some slightly
    fancier programmer’s editors, such as `geany`, `kwrite`, and `bluefish`, are available
    in the normal repositories of most Linux distros and some Unix-like distros. Your
    best bet is to play around with different editors to see what you like. Here’s
    an example of `kwrite` with color-coded syntax highlighting enabled:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B21693_01_06.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1.6: The Kwrite text editor.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: If you’re a Windows user, you’ll never want to create or edit a shell script
    on your Windows machine with a Windows text editor such as Notepad or Wordpad,
    and then transfer the script to your Linux machine. That’s because Windows text
    editors insert an invisible carriage return character at the end of each line.
    You can’t see them, but your Linux shell can, and will refuse to run the script.
    Having said that, you might at times encounter scripts that someone else created
    with a Windows text editor, and you’ll need to know how to fix them so that they’ll
    run on your Linux or Unix machine. That’s easy to do, and we’ll look at that in
    *Chapter 7, Text Stream Filters-Part 2*.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: That’s about it for our overview of text editors for Linux. Let’s move on and
    talk about compiled versus interpreted programming languages.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Compiled versus Interpreted Programming
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Compiled programming** consists of writing program code in a text editor,
    and then using a compiler to convert the text file into an executable binary file.
    Once that’s done, users of the program won’t be able to easily view the source
    code of the program. With **interpreted programming**, the program runs directly
    from a text file, without having to compile it first.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**编译编程**是指在文本编辑器中编写程序代码，然后使用编译器将文本文件转换为可执行的二进制文件。一旦完成，程序的用户将无法轻易查看程序的源代码。而
    **解释性编程** 是直接从文本文件运行程序，而无需先进行编译。'
- en: Compiled programming languages, such as C, C++, or Fortran, are good for when
    you need maximum performance from your programs. However, they can be fairly hard
    to learn, especially when it comes to the lower-level functions such as working
    with files. Interpreted languages might not offer quite as high a level of performance,
    but they are generally quite flexible, and generally easier to learn. Interpreted
    languages in general also offer a higher degree of portability between different
    operating systems. Shell scripting falls into the category of interpreted languages.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 编译语言，例如 C、C++ 或 Fortran，适合当你需要从程序中获得最大性能时。然而，它们可能相当难学，尤其是当涉及到较低级的功能时，比如处理文件。解释性语言可能无法提供如此高的性能，但它们通常非常灵活，而且通常更容易学习。解释性语言通常也提供更高的操作系统间的便携性。Shell
    脚本就属于解释性语言的范畴。
- en: 'Here are some reasons why you might consider using an interpreted language:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些你可能会考虑使用解释性语言的原因：
- en: When you are looking for a simple solution.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你寻找一个简单的解决方案时。
- en: When you need a solution that is portable. If you pay attention to portability
    concerns, you can write one script that will work on different Linux distros,
    as well as on Unix/Unix-like systems. That can come in handy if you’re working
    in a large corporation with a large network of mixed operating systems. (You might
    even find some larger corporations that are still running legacy Unix systems,
    such as AIX, HPUX, or SUNOS, alongside more modern implementations of Linux, BSD,
    or macOS.)
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你需要一个便携的解决方案时。如果你关注便携性问题，你可以编写一个脚本，使其能够在不同的 Linux 发行版以及 Unix/类 Unix 系统上运行。如果你在一个大型公司，且该公司拥有一个混合操作系统的大型网络，这会非常有用。（你甚至可能会遇到一些较大的公司，它们仍在运行一些传统的
    Unix 系统，如 AIX、HPUX 或 SUNOS，同时还使用更现代的 Linux、BSD 或 macOS 实现。）
- en: 'And, here are some reasons why you might consider using a compiled language:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些你可能会考虑使用编译语言的原因：
- en: When the tasks require intensive use of system resources. This is especially
    true when speed is extremely important.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当任务需要大量使用系统资源时，尤其是在速度至关重要的情况下，这种情况尤为明显。
- en: When you are using math operations that require heavy number crunching.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你进行需要大量数值运算的数学操作时。
- en: When you need complex applications.
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你需要复杂的应用程序时。
- en: When your application has many sub-components with dependencies.
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你的应用程序有许多具有依赖关系的子组件时。
- en: When you want to create proprietary applications, and prevent users from viewing
    the application source code.
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你想要创建专有应用程序，并防止用户查看应用程序源代码时。
- en: When you think about it, pretty much every example of productivity, server,
    gaming, or scientific software falls into one or more of these categories, which
    means that they really should be built with compiled languages for best performance.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 当你仔细考虑时，几乎所有的生产力软件、服务器软件、游戏软件或科学软件都属于一个或多个这些类别，这意味着它们应该使用编译语言来构建，以获得最佳性能。
- en: Okay, let’s now talk about `sudo`.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，现在我们来谈谈`sudo`。
- en: Understanding root and sudo Privileges
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 root 和 sudo 权限
- en: Some of the things you’ll do in this course will require you to have administrative
    privileges. While it’s possible and convenient to just log into the root command
    prompt, that’s something that I like to discourage as much as possible. For best
    security, and to get used to what you’d be doing in an enterprise setting, your
    best bet is to use `sudo`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 本课程中你将做的一些事情需要具有管理员权限。虽然可以方便地登录到 root 命令提示符，但我尽量不鼓励这样做。为了最佳的安全性，并且习惯于企业环境中的操作，最好的选择是使用`sudo`。
- en: 'Modern Linux distros allow you to add yourself to an administrators’ group
    as you install the operating system. (That’s the `wheel` group on Red Hat-type
    systems, and the `sudo` group on Debian/Ubuntu-type systems.) To run a command
    that requires administrative privileges, just do something like this:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现代 Linux 发行版允许你在安装操作系统时将自己添加到管理员组中。（在 Red Hat 系统中，这是 `wheel` 组，在 Debian/Ubuntu
    系统中，这是 `sudo` 组。）要执行需要管理员权限的命令，只需像这样做：
- en: '[PRE12]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: You’ll then be asked to enter the password for your own user account, rather
    than the one for the root user account.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，系统会要求你输入你自己的用户账户密码，而不是 root 用户账户的密码。
- en: That’s about all we need to say about this topic, so let’s summarize and move
    on to the next chapter.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这个话题，我们差不多可以说完了，接下来让我们总结一下并继续下一章节。
- en: Summary
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, I’ve laid a bit of the groundwork for what’s to come in the
    following chapters. We looked at what an operating system shell is, and why we
    would use one. Then, we looked at the various ways to find help, did a high-level
    overview of Linux text editors, and wrapped up with a discussion of compiled versus
    interpreted programming and a brief mention of why we want to use `sudo` to run
    administrative commands.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我为接下来的章节奠定了一些基础。我们了解了操作系统 shell 是什么，以及为什么要使用它。接着，我们探讨了寻找帮助的各种方式，简要回顾了 Linux
    文本编辑器，并讨论了编译型和解释型编程语言的区别，还简单提到为何我们要使用 `sudo` 来执行管理员命令。
- en: In the next chapter, we’ll begin looking at the various things that an operating
    system shell does for us. I’ll see you there.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章节，我们将开始探讨操作系统 shell 为我们做的各种事情。我会在那时见到你。
- en: Questions
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is the most widely-used shell for Linux systems?
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Linux 系统最广泛使用的 shell 是什么？
- en: '`zsh`'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`zsh`'
- en: '`bash`'
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`bash`'
- en: '`korn`'
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`korn`'
- en: '`csh`'
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`csh`'
- en: What will happen if you create a Linux shell script on a Windows computer with
    a Windows text editor, such as Notepad or Wordpad?
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你在 Windows 电脑上使用 Windows 文本编辑器（如记事本或 Wordpad）创建一个 Linux shell 脚本，会发生什么？
- en: The script will run fine on a Linux machine.
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该脚本将在 Linux 机器上正常运行。
- en: Your Windows machine will just shut down in protest of the fact that you’re
    using it to create Linux scripts.
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的 Windows 机器会因你使用它来创建 Linux 脚本而愤怒关机。
- en: The script won’t run on a Linux machine, because Windows text editors insert
    an invisible carriage return character at the end of each line.
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该脚本无法在 Linux 机器上运行，因为 Windows 文本编辑器会在每行末尾插入一个不可见的回车符。
- en: Former Microsoft CEO Steve Ballmer will visit you and explain why Linux is a
    cancer.
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 微软前 CEO 史蒂夫·巴尔默将拜访你，解释为什么 Linux 是一种癌症。
- en: 3\. In which section would you find the man pages for administrative commands?
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3\. 在哪个章节可以找到管理员命令的 man 页面？
- en: '1'
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '1'
- en: '3'
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '3'
- en: '5'
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '5'
- en: '6'
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '6'
- en: '8'
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '8'
- en: Which of the following statements is true?
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项陈述是正确的？
- en: Interpreted programming languages are good for programs that perform heavy-duty
    math problems.
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释型编程语言适用于需要进行重数学运算的程序。
- en: Compiled programming languages are generally better than interpreted languages
    for any large, complex programs.
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编译型编程语言通常比解释型语言更适合处理大型复杂程序。
- en: Examples of interpreted programming languages include C, C++, and Fortran.
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释型编程语言的例子包括 C、C++ 和 Fortran。
- en: There’s no difference in performance between interpreted and compiled programming
    languages.
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解释型语言和编译型语言在性能上没有差别。
- en: 'True or False: To run administrative commands, it’s best to just log into the
    root user account.'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对还是错：要执行管理员命令，最好直接登录 root 用户账户。
- en: Further Reading
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 延伸阅读
- en: '22 Best Linux Text Editors for Coding: [https://phoenixnap.com/kb/best-linux-text-editors-for-coding](https://phoenixnap.com/kb/best-linux-text-editors-for-coding)'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 22 款最佳 Linux 编程文本编辑器：[https://phoenixnap.com/kb/best-linux-text-editors-for-coding](https://phoenixnap.com/kb/best-linux-text-editors-for-coding)
- en: 'Ballmer: “Linux is a Cancer”: [https://www.theregister.com/2001/06/02/ballmer_linux_is_a_cancer/](https://www.theregister.com/2001/06/02/ballmer_linux_is_a_cancer/)'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Ballmer: “Linux 是一种癌症”：[https://www.theregister.com/2001/06/02/ballmer_linux_is_a_cancer/](https://www.theregister.com/2001/06/02/ballmer_linux_is_a_cancer/)'
- en: 'Microsoft once called Linux a cancer, and that was a big mistake: [https://www.zdnet.com/article/microsoft-once-called-linux-a-cancer-and-that-was-a-big-mistake/](https://www.zdnet.com/article/microsoft-once-called-linux-a-cancer-and-that-was-a-big-mistake/)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软曾将 Linux 称为癌症，这个说法是个大错误：[https://www.zdnet.com/article/microsoft-once-called-linux-a-cancer-and-that-was-a-big-mistake/](https://www.zdnet.com/article/microsoft-once-called-linux-a-cancer-and-that-was-a-big-mistake/)
- en: 'VIM tutorial for Beginners: [https://linuxconfig.org/vim-tutorial](https://linuxconfig.org/vim-tutorial)'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VIM 初学者教程：[https://linuxconfig.org/vim-tutorial](https://linuxconfig.org/vim-tutorial)
- en: 'Distrowatch.com: [https://distrowatch.com/](https://distrowatch.com/)'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Distrowatch.com：[https://distrowatch.com/](https://distrowatch.com/)
- en: 'The Linux Documentation Project: [https://tldp.org/](https://tldp.org/)'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux文档项目：[https://tldp.org/](https://tldp.org/)
- en: 'LinuxQuestions.org: [https://www.linuxquestions.org/](https://www.linuxquestions.org/)'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LinuxQuestions.org：[https://www.linuxquestions.org/](https://www.linuxquestions.org/)
- en: 'Linux man pages: [https://linux.die.net/man/](https://linux.die.net/man/)'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux手册页：[https://linux.die.net/man/](https://linux.die.net/man/)
- en: Answers
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回答
- en: b
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: c
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: e
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: e
- en: b
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: False. It’s better to use `sudo` from your own user account.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误。最好从你自己的用户账户使用`sudo`。
- en: Join our community on Discord!
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加入我们的Discord社区！
- en: Read this book alongside other users, Linux experts, and the author himself.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他用户、Linux专家以及作者本人一起阅读本书。
- en: Ask questions, provide solutions to other readers, chat with the author via
    Ask Me Anything sessions, and much more. Scan the QR code or visit the link to
    join the community.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 提问、为其他读者提供解决方案、通过“问我任何问题”环节与作者交流，以及更多内容。扫描二维码或访问链接加入社区。
- en: '[https://packt.link/SecNet](https://packt.link/SecNet)'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/SecNet](https://packt.link/SecNet)'
- en: '![](img/QR_Code10596186092701843.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code10596186092701843.png)'
