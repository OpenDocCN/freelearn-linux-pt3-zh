- en: 5\. Allocating Windows Disk Partitions to Ubuntu
  prefs: []
  type: TYPE_NORMAL
- en: In the previous chapter, we looked at installing Ubuntu on the same disk as
    Windows. This so-called “dual boot” configuration allows the user to have both
    operating systems installed on a single disk drive with the option to boot one
    or the other when the system is powered on.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter is intended for users who have decided they like Ubuntu enough
    to delete Windows entirely from the disk and use the resulting space for Linux.
    In the following sections, we will work through this process step by step using
    both the command-line tools and the gnome-disks utility.
  prefs: []
  type: TYPE_NORMAL
- en: 5.1 Unmounting the Windows Partition
  prefs: []
  type: TYPE_NORMAL
- en: 'If the steps in the [“Dual Booting Ubuntu with Windows”](Ubuntu_Installation_Dual_Boot.xhtml#_idTextAnchor060)
    chapter were followed to mount the Windows partition from within Ubuntu, steps
    should be taken to unmount the partition before continuing with this chapter.
    Assuming that the Windows partition was mounted as /mnt/windows, it can be unmounted
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: umount /mnt/windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The /etc/fstab file should also be edited to remove the /mnt/windows auto-mount
    if it was previously added.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2 Deleting the Windows Partitions from the Disk
  prefs: []
  type: TYPE_NORMAL
- en: The first step in freeing up the Windows partition for use by Ubuntu is to delete
    that partition. Before doing so, however, any data you need to keep must be backed
    up from both the Windows and partitions. Having done that, it is safe to proceed
    with this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'To remove the Windows partitions, we first need to identify the disk on which
    they reside using the fdisk tool:'
  prefs: []
  type: TYPE_NORMAL
- en: fdisk -l
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Disk /dev/nvme0n1: 64 GiB, 68719476736 bytes, 134217728 sectors'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk model: VMware Virtual NVMe Disk'
  prefs: []
  type: TYPE_NORMAL
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disklabel type: gpt'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk identifier: F0D04B58-29F5-4B6B-B10F-07295BEF9AAC'
  prefs: []
  type: TYPE_NORMAL
- en: Device Start End Sectors Size Type
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p1 2048 206847 204800 100M EFI System
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p2 206848 239615 32768 16M Microsoft reserved
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p3 239616 80184560 79944945 38.1G Microsoft basic data
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p4 132833280 134213631 1380352 674M Windows recovery environment
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p5 80185344 132833279 52647936 25.1G Linux filesystem
  prefs: []
  type: TYPE_NORMAL
- en: In the above example output, the system contains one physical disk drive referenced
    by device name /dev/nvme0n1\. On that disk drive are six partitions accessed via
    the device names /dev/nvme0n1p1 through /dev/nvme0n1p5, respectively. Based on
    the values in the Types column, three Windows-related partitions exist. The first
    is the Windows system partition, while the second, much larger, partition is the
    Windows boot partition containing the Windows operating system and user data,
    followed by the Windows recovery partition.
  prefs: []
  type: TYPE_NORMAL
- en: 'To remove the partitions, start the fdisk tool using the device name of the
    disk containing the partition (/dev/nvme0n1 in this instance) and follow the instructions
    to display the partition and sector information once again:'
  prefs: []
  type: TYPE_NORMAL
- en: fdisk /dev/nvme0n1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to fdisk (util-linux 2.37.2).
  prefs: []
  type: TYPE_NORMAL
- en: Changes will remain in memory only, until you decide to write them.
  prefs: []
  type: TYPE_NORMAL
- en: Be careful before using the write command.
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): p'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk /dev/nvme0n1: 64 GiB, 68719476736 bytes, 134217728 sectors'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk model: VMware Virtual NVMe Disk'
  prefs: []
  type: TYPE_NORMAL
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disklabel type: gpt'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk identifier: F0D04B58-29F5-4B6B-B10F-07295BEF9AAC'
  prefs: []
  type: TYPE_NORMAL
- en: Device Start End Sectors Size Type
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p1 2048 206847 204800 100M EFI System
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p2 206848 239615 32768 16M Microsoft reserved
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p3 239616 80184560 79944945 38.1G Microsoft basic data
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p4 132833280 134213631 1380352 674M Windows recovery environment
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p5 80185344 132833279 52647936 25.1G Linux filesystem
  prefs: []
  type: TYPE_NORMAL
- en: Partition table entries are not in disk order.
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help):'
  prefs: []
  type: TYPE_NORMAL
- en: Before proceeding, note the start and end addresses of the partitions we will
    delete (in other words, the start of /dev/nvme0n1p2 and the sector before the
    start of /dev/nvme0n1p5).
  prefs: []
  type: TYPE_NORMAL
- en: 'At the command prompt, delete the Windows partitions (these being partitions
    2, 3, and 4 on our example system):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): d'
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition number (1-5, default 5): 2'
  prefs: []
  type: TYPE_NORMAL
- en: Partition 2 has been deleted.
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): d'
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition number (1,3-5, default 5): 3'
  prefs: []
  type: TYPE_NORMAL
- en: Partition 3 has been deleted.
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): d'
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition number (1,4,5, default 5): 4'
  prefs: []
  type: TYPE_NORMAL
- en: Partition 4 has been deleted.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have deleted the Windows partitions, we must create the new Ubuntu
    partition in the vacated disk space. The partition number must match the number
    of the first partition removed (in this case, 2). It will also be necessary to
    enter the Start and End sectors of the partition precisely as reported for the
    old partition (fdisk will typically offer the correct values by default, though
    it is wise to double-check):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): n'
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition number (2-4,6-128, default 2): 2'
  prefs: []
  type: TYPE_NORMAL
- en: 'First sector (206848-134217694, default 206848):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Last sector, +/-sectors or +/-size{K,M,G,T,P} (206848-80185343, default 80185343):'
  prefs: []
  type: TYPE_NORMAL
- en: Created a new partition 2 of type 'Linux filesystem' and of size 38.1 GiB.
  prefs: []
  type: TYPE_NORMAL
- en: 'Having made these changes, the next step is to check that the settings are
    correct:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): p'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk /dev/nvme0n1: 64 GiB, 68719476736 bytes, 134217728 sectors'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk model: VMware Virtual NVMe Disk'
  prefs: []
  type: TYPE_NORMAL
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disklabel type: gpt'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk identifier: F0D04B58-29F5-4B6B-B10F-07295BEF9AAC'
  prefs: []
  type: TYPE_NORMAL
- en: Device Start End Sectors Size Type
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p1 2048 206847 204800 100M EFI System
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p2 206848 80185343 79978496 38.1G Linux filesystem
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p5 80185344 132833279 52647936 25.1G Linux filesystem
  prefs: []
  type: TYPE_NORMAL
- en: 'To commit the changes, we now need to write the new partition information to
    disk and quit from the fdisk tool:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): w'
  prefs: []
  type: TYPE_NORMAL
- en: The partition table has been altered.
  prefs: []
  type: TYPE_NORMAL
- en: Syncing disks.
  prefs: []
  type: TYPE_NORMAL
- en: 5.3 Formatting the Unallocated Disk Partition
  prefs: []
  type: TYPE_NORMAL
- en: 'To make the new partition suitable for use by Ubuntu, it needs to have a file
    system created on it. The recommended file system type for the current release
    of Ubuntu is XFS which will be covered in greater detail in the chapter entitled
    [“Adding a New Disk Drive to an Ubuntu 23.04 System”](Adding_New_DIsk.xhtml#_idTextAnchor494).
    Creation of the file system is performed using the mkfs.xfs command as follows
    (installing the xfsprogs package if necessary):'
  prefs: []
  type: TYPE_NORMAL
- en: apt install xfsprogs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: mkfs.xfs -f /dev/nvme0n1p2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: meta-data=/dev/nvme0n1p2 isize=512 agcount=4, agsize=2499328 blks
  prefs: []
  type: TYPE_NORMAL
- en: = sectsz=512 attr=2, projid32bit=1
  prefs: []
  type: TYPE_NORMAL
- en: = crc=1 finobt=1, sparse=1, rmapbt=0
  prefs: []
  type: TYPE_NORMAL
- en: = reflink=1 bigtime=0 inobtcount=0
  prefs: []
  type: TYPE_NORMAL
- en: data = bsize=4096 blocks=9997312, imaxpct=25
  prefs: []
  type: TYPE_NORMAL
- en: = sunit=0 swidth=0 blks
  prefs: []
  type: TYPE_NORMAL
- en: naming =version 2 bsize=4096 ascii-ci=0, ftype=1
  prefs: []
  type: TYPE_NORMAL
- en: log =internal log bsize=4096 blocks=4881, version=2
  prefs: []
  type: TYPE_NORMAL
- en: = sectsz=512 sunit=0 blks, lazy-count=1
  prefs: []
  type: TYPE_NORMAL
- en: realtime =none extsz=4096 blocks=0, rtextents=0
  prefs: []
  type: TYPE_NORMAL
- en: 5.4 Mounting the New Partition
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we need to mount the new partition. In this example, we will mount it
    in a directory named /data. You are free, however, to mount the new partition
    using any valid mount point you desire or to use it as part of a logical volume
    (details of which are covered in the chapter entitled [“Adding a New Disk to an
    Ubuntu 23.04 Volume Group and Logical Volume”](Volume_Groups.xhtml#_idTextAnchor506)).
    First, we need to create the directory to act as the mount point:'
  prefs: []
  type: TYPE_NORMAL
- en: mkdir /data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Secondly, we need to edit the mount table in /etc/fstab so that the partition
    is automatically mounted each time the system starts. At the bottom of the /etc/fstab
    file, add the following line to mount the new partition (modifying the /dev/nvme0n1p2
    device to match your environment):'
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p2 /data xfs defaults 0 0
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we can manually mount the new partition (note that this will not be
    necessary on subsequent reboots as the partition will automount due to the setting
    we added to the /etc/fstab file above):'
  prefs: []
  type: TYPE_NORMAL
- en: mount /data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To check the partition, run the following command to display the available
    space:'
  prefs: []
  type: TYPE_NORMAL
- en: df -h /data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Filesystem Size Used Avail Use% Mounted on
  prefs: []
  type: TYPE_NORMAL
- en: /dev/nvme0n1p2 39G 305M 38G 1% /data
  prefs: []
  type: TYPE_NORMAL
- en: 5.5 Editing the Boot Menu
  prefs: []
  type: TYPE_NORMAL
- en: 'The next step is to modify the Ubuntu boot menu. Since this was originally
    a dual boot system, the menu is configured to provide the option of booting either
    Windows or Ubuntu. Now that the Windows partition is gone, we need to remove this
    boot option. On Ubuntu this can be achieved using the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: rm -r /boot/efi/EFI/Microsoft
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: update-grub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since there is now only one operating system to boot, the system will automatically
    boot Ubuntu on the next restart without displaying the boot menu. If you need
    to access this boot menu, for example to use the advanced boot options, simply
    press the Esc key during the initial stages of the startup process.
  prefs: []
  type: TYPE_NORMAL
- en: 5.6 Using GNOME Disks Utility
  prefs: []
  type: TYPE_NORMAL
- en: 'The gnome-disks utility provides a user-friendly graphical alternative to reclaiming
    the Windows partitions from the command-line. Since the example used here will
    convert the Windows NTFS partitions to XFS format, the first step is to install
    the xfsprogs package as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: apt install xfsprogs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once the package has been installed, open a terminal window and launch the
    gnome-disks utility:'
  prefs: []
  type: TYPE_NORMAL
- en: gnome-disks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After a short delay, the gnome-disks tool will appear as shown in [Figure 5-1](Reclaim_Windows_Partition.xhtml#_idTextAnchor089):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_disks_windows_mounted.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-1
  prefs: []
  type: TYPE_NORMAL
- en: 'In the above example, the disk contains two Windows NTFS partitions that will
    need to be deleted. Any NTFS partitions with a star shown in the disk map (as
    is the case for the highlighted partition in the above figure) will need to be
    unmounted before they can be deleted. This can be achieved by selecting the partition
    and clicking on the unmount button as indicated in [Figure 5-2](Reclaim_Windows_Partition.xhtml#_idTextAnchor090)
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_disks_unmount_button.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-2
  prefs: []
  type: TYPE_NORMAL
- en: 'With all the NTFS partitions unmounted, the next step is to delete them. Select
    the left-most NTFS partition in the disk map and click on the Delete button as
    shown in [Figure 5-3](Reclaim_Windows_Partition.xhtml#_idTextAnchor091):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_disks_delete_partition.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-3
  prefs: []
  type: TYPE_NORMAL
- en: 'Review the information in the confirmation dialog before clicking on the Delete
    button to commit the change. Once the first partition has been deleted, repeat
    this step for any remaining NTFS partitions. Once the NTFS partitions have been
    removed, the space should now be shown as being free within the disk map. A new
    partition now needs to be created to make use of this free space. With the space
    selected, click on the new partition button (indicated by the arrow in [Figure
    5-4](Reclaim_Windows_Partition.xhtml#_idTextAnchor092)):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_new_partition_button.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-4
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Create Partition dialog, choose whether the partition is to occupy all
    of the available space, or reduce the size if you plan to use the space for more
    than one partition:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_disks_new_partition.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-5
  prefs: []
  type: TYPE_NORMAL
- en: Click Next and, on the subsequent screen, enter a name for the new partition
    and choose whether the partition should be erased during creation. This causes
    the creation process to take more time but is a recommended option. Finally, choose
    a filesystem type for the partition. This will typically be either ext4 or XFS.
    Given the benefits of XFS, select Other before clicking the Next button.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_disks_format.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-6
  prefs: []
  type: TYPE_NORMAL
- en: 'On the next screen, select the XFS option before clicking on the Create button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_disks_xfs.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-7
  prefs: []
  type: TYPE_NORMAL
- en: 'The gnome-disks utility will begin the formatting process and display the status
    of the process:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_disks_progress.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-8
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the partition is ready, it can be mounted either from the command-line
    or using the gnome-disks utility. To configure a mount point, select the partition
    and click on the settings button as shown in [Figure 5-9](Reclaim_Windows_Partition.xhtml#_idTextAnchor093):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_disks_Settings_button.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-9
  prefs: []
  type: TYPE_NORMAL
- en: From the settings menu, select the Edit Mount Options... item to display the
    dialog shown in [Figure 5-10](Reclaim_Windows_Partition.xhtml#_idTextAnchor094).
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_disks_mount_options1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-10
  prefs: []
  type: TYPE_NORMAL
- en: Turn off the User Session Defaults switch and configure the mount point to your
    requirements. In the above figure, the partition is mounted at /mnt/Data at system
    startup and is configured to be identified by the label “Data”.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the settings are complete, click on OK, then click the mount button highlighted
    in [Figure 5-11](Reclaim_Windows_Partition.xhtml#_idTextAnchor095):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_gnome_disks_mount_button1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5-11
  prefs: []
  type: TYPE_NORMAL
- en: 'To check the partition is now mounted and ready for use, run the following
    command to display the available space:'
  prefs: []
  type: TYPE_NORMAL
- en: $ df -h /mnt/Data
  prefs: []
  type: TYPE_NORMAL
- en: Filesystem Size Used Avail Use% Mounted on
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda3 253G 1.8G 251G 1% /mnt/Data
  prefs: []
  type: TYPE_NORMAL
- en: Finally, update the boot menu to remove the Windows option using the steps outlined
    earlier in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 5.7 Summary
  prefs: []
  type: TYPE_NORMAL
- en: The Windows partitions in a dual boot configuration can be removed anytime to
    free up space for a Ubuntu system by identifying which partitions belong to Windows
    and then deleting them. Once deleted, the unallocated space can be used to create
    a new filesystem and mounted to make it available to the Ubuntu system.
  prefs: []
  type: TYPE_NORMAL
