["```\n$MyVariable = 'some stuff'\n```", "```\nNew-Variable -Name MyVariable\nSet-Variable -Name MyVariable -Value 'some stuff'\n```", "```\n$MyVariable = \"some stuff\"\n```", "```\nGet-Variable MyVariable | Get-Member\n```", "```\n$MyVariable = \"some stuff\"\n$MyVariable | Get-Member\n```", "```\n$MyVariable = 4.2\n```", "```\n$MyVariable = (Get-Process)\n$MyVariable | Get-Member\n```", "```\n$MyBoolean = $True\n$MyBoolean | Get-Member\n```", "```\n$MyNumber = 42\n$MyNumber | Get-Member\n```", "```\n$MyRealNumber = 42.0\n$MyRealNumber | Get-Member\n```", "```\n[char]$MyChar = 24\n$MyChar\n```", "```\n$MyVariable = 'some stuff'\n$MyVariable | Get-Member\n$MyVariable = 42\n$MyVariable | Get-Member\n```", "```\n$x = '4' + 4\n```", "```\n$x = 4 + '4'\n```", "```\n[int32]$MyNewVariable = '42'\n$MyNewVariable | Get-Member\n```", "```\n[int32]$MyNewVariable = 'Forty Two'\n```", "```\n$MyNewVariable = 'Forty Two'\n```", "```\n$MyNewVariable = 4.2\n```", "```\n[single]$MyNewVariable = 4.2\n```", "```\n[int32]$MyVariable = 42\n```", "```\n$MyString = [string]$MyVariable\n$MyString | Get-Member\n```", "```\n[string]$MyOtherString = $MyVariable\n```", "```\n$MyArray = 1,2,3\n$MyArray.GetType()\n```", "```\n$number = ,1\n[Array]$MyTinyArray = 1\n```", "```\n$NewArray = 1..10\n```", "```\n$AnotherArray = @(1..5; \"some stuff\")\n```", "```\n$NewArray[0]\n```", "```\n$NewArray[-2]\n```", "```\n$NewArray[0,2,5,7]\n```", "```\n$NewArray[6..9]\n```", "```\n$NewArray[5] = 5\n```", "```\n$NewArray += 11\n```", "```\n$ScruffyArray = 1, 'socks', (Get-Process)\n```", "```\n[Int32[]]$IntArray = 1..5\n```", "```\n$IntArray += 'socks'\n```", "```\n$BigArray  = $NewArray + $IntArray\n```", "```\n$NewArray | Get-Member\n```", "```\n@(0..3).ForEach({$_ * $_})\n```", "```\n$NewArray.where({$_ -gt 5})\n```", "```\n$NewArray | Where-Object {$_ -gt 5}\n```", "```\nMeasure-Command {@(0..100000).ForEach({$_ * $_})}\n```", "```\nMeasure-Command {@(0..100000) | ForEach-Object{$_ * $_}}\n```", "```\n$SlowArray = @()\n1..10000 | Foreach-Object { $Slowarray += $_ }\n```", "```\n$ArrayList = [System.Collections.ArrayList]@()\n1..10000 | ForEach-Object { $Null = $ArrayList.Add($_) }\n```", "```\n$AutoArray = (1..10000 | ForEach-Object {$_})\n```", "```\n$a = 42\n$b = $a\n$a = 'socks'\n```", "```\n$Array1 = 1,2,3\n$Array2 = $Array1\n$Array1[2] = 5\n$Array2\n```", "```\n$Array1 = 1,2,3\n$Array2 = $Array1 | ForEach-Object {$_}\n```", "```\n$Array1[2] = 5\n$Array2\n```", "```\n$String = \"PowerShell\"\n$String.Chars(0)\n```", "```\n$String.Length\n```", "```\n$String | Get-Member -MemberType Method | Measure-Object\n```", "```\n$String.ToUpper()\n```", "```\n$String.ToLower()\n```", "```\n$String.ToCharArray()\n```", "```\n$String.Replace('o','X')\n```", "```\n$String\n```", "```\n$List = 'one,two,three,four'\n$List.Split(',')\n```", "```\n$List -Split ','\n```", "```\n$Culture = Get-Culture\n[String]$DateString = '1/5/2024'\n$ImportantDate = $DateString.ToDateTime($Culture)\n```", "```\n[DateTime]$Anniversary = '1/5/2024'\n```", "```\n$MyName = 'Nick'\nWrite-Output 'My Name is $MyName'\nWrite-Output \"My Name is $MyName\"\n```", "```\n\"${MyName}: Engineer\"\n```", "```\nWrite-Output \"The value of `$MyName is $MyName\"\n```", "```\n$Hash = @{}\n```", "```\n$MyBike = @{HandleBar = \"ApeHanger\"; Color = \"Red\"; Wheel = 15}\n```", "```\n$MyBike.Add('Bell', $True)\n```", "```\n$MyBike.Add('Condition','Poor')\n```", "```\n$MyBike | Measure-Object\n```", "```\n$NewList = @(1,2,3,4)\n$NewList | Measure-Object\n```", "```\n$MyBike.Count\n```", "```\n$MyBike.condition\n```", "```\n$MyBike['Wheel']\n```", "```\n$MyBike['Gears'] = 'Fixed'\n```", "```\n$MyBike['HandleBar', 'Condition', 'Gears']\n```", "```\n$BikeDetails = 'HandleBar', 'Condition', 'Gears'\n$MyBike[$BikeDetails]\n```", "```\n$MyBike.GetEnumerator()\n```", "```\n$MyBike | ForEach-Object {[Array]$BikeProperties += $_}\n$BikeProperties.Count\n$MyBike.GetEnumerator() | ForEach-Object {[Array]$NewBikeProperties += $_}\n$NewBikeProperties.Count\n```", "```\n$MyBike.Remove('Gears')\n```", "```\n$MyBike.ContainsKey('HandleBar')\n```", "```\n$MyBike.ContainsValue('poor')\n```", "```\n$OrderedHash = [ordered]@{a=10;b=20;c=30}\n```", "```\n$OrderedHash.c\n$OrderedHash[1]\n```", "```\n$MyImaginaryBike = [PSCustomObject]$MyBike\n```", "```\n$Colors = @{\nForegroundColor = 'red'\nBackgroundColor = 'white'\n}\nWrite-Host 'all the pretty colors' @Colors\n```", "```\nWrite-Host @Colors 'OK, just red and white, then'\n```", "```\n    New-Variable -Name MyVariable -Value \"somestuff\"\n    Get-Variable MyVariable | Get-Member\n    ```", "```\n    $MyVariable = ,1\n    ```", "```\n    Write-Output 'My Name is $MyName'\n    ```"]