["```\nsudo mv terraform /usr/local/bin \n```", "```\nprovider \"aws\" {\n    region = \"us-east-1\"\n}\nresource \"aws_instance\" \"my-server-1\" {\n    ami                                   = \"ami-09d56f8956ab235b3\"\n    associate_public_ip_address = \"true\"\n    instance_type                         = \"t2.micro\"\n    key_name                              = \"jay_ssh\"\n    vpc_security_group_ids                = [ \"sg-0597d57383be308b0\" ]\n    tags = {\n        Name = \"Web Server 1\"\n    }\n} \n```", "```\nprovider \"aws\" {\n    region = \"us-east-1\"\n} \n```", "```\nresource \"aws_instance\" \"my-server-1\" { \n```", "```\n ami                         = \"ami-09d56f8956ab235b3\" \n```", "```\n associate_public_ip_address = \"true\" \n```", "```\n instance_type                          = \"t2.micro\" \n```", "```\n key_name                                = \"jay_ssh\" \n```", "```\n vpc_security_group_ids         = [ \"sg-0597d57383be308b0\" ] \n```", "```\n tags = {\n    Name = \"Web Server 1\"\n  } \n```", "```\nexport AWS_ACCESS_KEY_ID=\"AKIAVNXBZU2OBNWQQ7ET\"\nexport AWS_SECRET_ACCESS_KEY=\"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\" \n```", "```\nterraform init \n```", "```\nterraform plan \n```", "```\nPlan: 1 to add, 0 to change, 0 to destroy \n```", "```\nterraform apply \n```", "```\nprovider \"aws\" {\n    region = \"us-east-1\"\n}\nresource \"aws_instance\" \"my-server-1\" {\n    ami                                   = \"ami-09d56f8956ab235b3\"\n    associate_public_ip_address = \"true\"\n    instance_type                         = \"t2.micro\"\n    key_name                              = \"jay_ssh\"\n    vpc_security_group_ids        = [   \"${aws_security_group.external_access.id}\" ]\n    tags = {\n        Name = \"Web Server 1\"\n    }\n}\n  resource \"aws_security_group\" \"external_access\" {\n        name          = \"my_sg\"\n        description = \"Allow OpenSSH and Apache\"\n        ingress {\n        from_port   = 22\n        to_port        = 22\n        protocol       = \"tcp\"\n        cidr_blocks  = [ \"172.11.59.105/32\" ]\n        description   = \"Home Office IP\"\n    }\n    ingress {\n        from_port   = 80\n        to_port        = 80\n        protocol       = \"tcp\"\n        cidr_blocks  = [ \"172.11.59.105/32\" ]\n        description   = \"Home Office IP\"\n    }\n    egress {\n        from_port = 0\n        to_port = 0\n        protocol = \"-1\"\n        cidr_blocks = [\"0.0.0.0/0\"]\n    }\n} \n```", "```\nvpc_security_group_ids        = [ \"${aws_security_group.external_access.id}\" ] \n```", "```\nresource \"aws_security_group\" \"external_access\" { \n```", "```\n name          = \"my_sg\" \n```", "```\n description = \"Allow OpenSSH and Apache\" \n```", "```\n ingress {\n      from_port   = 22\n      to_port        = 22\n      protocol       = \"tcp\"\n      cidr_blocks  = [ \"172.11.59.105/32\" ]\n      description   = \"Home Office IP\"\n  } \n```", "```\n ingress {\n      from_port   = 80\n      to_port        = 80\n      protocol       = \"tcp\"\n      cidr_blocks  = [ \"172.11.59.105/32\" ]\n      description   = \"Home Office IP\"\n  } \n```", "```\n egress {\n      from_port = 0\n      to_port = 0\n      protocol = \"-1\"\n      cidr_blocks = [\"0.0.0.0/0\"]\n  } \n```", "```\nterraform destroy \n```", "```\nansible-pull -U https://github.com/myusername/ansible.git \n```", "```\n---\n- hosts: localhost\n  become: true\n  tasks:\n  - name: Install Apache\n    apt: name=apache2\n  - name: Start the apache2 services\n    service:\n      name: apache2\n      state: started\n  - name: Copy index.xhtml\n    copy:\n      src: index.xhtml\n      dest: /var/www/html/index.xhtml \n```", "```\nprovider \"aws\" {\n    region = \"us-east-1\"\n}\nresource \"aws_instance\" \"my-server-1\" {\n    ami                                   = \"ami-0dba2cb6798deb6d8\"\n    associate_public_ip_address = \"true\"\n    instance_type                         = \"t2.micro\"\n    key_name                              = \"jay_ssh\"\n    vpc_security_group_ids         = [ \"${aws_security_group.external_access.id}\" ]\n    user_data = file(\"bootstrap.sh\")\n    tags = {\n        Name = \"Web Server 1\"\n    }\n}\nresource \"aws_security_group\" \"external_access\" {\n    name = \"my_sg\"\n    description = \"Allow OpenSSH and Apache\"\n    ingress {\n      from_port   = 22\n      to_port     = 22\n      protocol    = \"tcp\"\n      cidr_blocks = [ \"173.10.59.105/32\" ]\n      description = \"Home Office IP\"\n  }\n  ingress {\n      from_port   = 80\n      to_port     = 80\n      protocol    = \"tcp\"\n      cidr_blocks = [ \"173.10.59.105/32\" ]\n      description = \"Home Office IP\"\n  }\n  egress {\n      from_port = 0\n      to_port = 0\n      protocol = \"-1\"\n      cidr_blocks = [\"0.0.0.0/0\"]\n  }\n} \n```", "```\n user_data = file(\"bootstrap.sh\") \n```", "```\n#!/bin/bash\nsudo apt update\nsudo apt install -y ansible\nsudo ansible-pull -U https://github.com/myusername/ansible.git \n```"]