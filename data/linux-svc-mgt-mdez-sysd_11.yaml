- en: '*Chapter 10*: Understanding Shutdown and Reboot Commands'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第10章*：理解关机和重启命令'
- en: By this point in your career, you most likely know the basic commands for shutting
    down or rebooting a text-mode Linux server. In this chapter, we'll look at some
    things that are more specific to the systemd method. So, bear with me. There's
    a chance that you might learn something that you didn't know before.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到了你职业生涯的这个阶段，你很可能已经知道如何使用基本命令来关闭或重启文本模式的 Linux 服务器。在本章中，我们将探讨一些更具体的 systemd
    方法。所以，请耐心等待。你可能会学到一些以前不知道的内容。
- en: 'Specific topics in this chapter include the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的具体内容包括以下几个主题：
- en: Shutting down with `systemctl`
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `systemctl` 关机
- en: Halting with `systemctl`
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `systemctl` 停止系统
- en: Rebooting with `systemctl`
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `systemctl` 重启
- en: Using `shutdown` instead of `systemctl`
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `shutdown` 而非 `systemctl`
- en: If you're ready, let's go.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你准备好了，我们开始吧。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Although either of your virtual machines will work equally well for this, all
    you need is a text-mode virtual machine, so there's no need to fire up the Alma
    desktop virtual machine if you don't want to. Toward the end of the chapter, we'll
    be working with some shell scripts. If you don't want to type them in yourself,
    simply download them from our Git repository.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你的虚拟机都能同样有效地工作，但你只需要一个文本模式虚拟机，因此如果不需要，完全可以不启动 Alma 桌面虚拟机。在本章的后面，我们将使用一些 shell
    脚本。如果你不想手动输入这些脚本，可以直接从我们的 Git 仓库下载它们。
- en: 'Check out the following link to see the Code in Action video: [https://bit.ly/3G6nbkD](https://bit.ly/3G6nbkD)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下链接，观看《Code in Action》视频：[https://bit.ly/3G6nbkD](https://bit.ly/3G6nbkD)
- en: Note
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Throughout this book, I've been using AlmaLinux 8 as a replacement for the soon-to-be
    discontinued CentOS 8\. (Of course, depending upon when you're reading this, CentOS
    8 may have already been discontinued.)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我一直使用 AlmaLinux 8 来替代即将被停用的 CentOS 8。（当然，根据你阅读本书的时间，CentOS 8 可能已经被停用。）
- en: A few days before I started writing this chapter, the stable release of Rocky
    Linux 8 finally became available. Using it is the same as using AlmaLinux, or
    any other RHEL 8 clone for that matter. However, if security is your thing, Rocky
    does have one huge advantage. Unlike the other RHEL 8 clones, Rocky comes with
    a set of OpenSCAP profiles that you can apply either during or after the installation
    of the operating system. As things stand now, Rocky Linux is the only RHEL 8 clone
    that fully supports OpenSCAP. (If you want to learn more about OpenSCAP, be sure
    to check out my other book, *Mastering Linux Security and Hardening*, also from
    Packt Publishing.)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在我开始写这章之前的几天，Rocky Linux 8 的稳定版本终于发布了。使用它就像使用 AlmaLinux，或者任何其他 RHEL 8 克隆一样。不过，如果你关注安全性，Rocky
    确实有一个巨大的优势。与其他 RHEL 8 克隆不同，Rocky 自带一套 OpenSCAP 配置文件，你可以在安装操作系统时或安装后应用这些配置文件。现在来看，Rocky
    Linux 是唯一完全支持 OpenSCAP 的 RHEL 8 克隆。（如果你想了解更多关于 OpenSCAP 的内容，一定要查看我另一本书《*Mastering
    Linux Security and Hardening*》，也是由 Packt Publishing 出版的。）
- en: All right, if you're ready, let's get cracking.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，如果你准备好了，我们就开始吧。
- en: Shutting down with systemctl
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 systemctl 关机
- en: 'Shutting down a systemd system is really easy, but there are a few options
    that you might not know about. Let''s start with the basic command to shut down
    and power off a machine, which looks like this:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 systemd 关机其实非常简单，但有一些你可能不知道的选项。我们从关闭并关机的基本命令开始，命令如下：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'So, what exactly is happening here? If you open the `systemctl` man page and
    scroll down to the `poweroff` item, you''ll see that this command starts `poweroff.target`,
    which looks like this:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，究竟发生了什么呢？如果你打开 `systemctl` 的手册页面，并向下滚动到 `poweroff` 项目，你会看到这个命令启动了 `poweroff.target`，其内容如下：
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the `[Unit]` section, you see that this *requires* `systemd-poweroff.service`,
    which means that this service will now get started. At the bottom of the `[Unit]`
    section, you will see two new parameters. The `JobTimeoutSec=30min` line gives
    systemd plenty of time to gracefully shut down all running services before it
    turns off the power. The `JobTimeoutAction=poweroff-force` line means that if
    all of the services haven't gracefully shut down within that 30-minute window,
    then systemd will turn off the power regardless. In the `[Install]` section, we
    see the `Alias=ctrl-alt-del.target` line. That seems a bit odd because the *Ctrl*
    + *Alt* + *Del* key sequence is for rebooting a machine, not for shutting it down.
    It's not just an Ubuntu oddity this time – it's the same way on the Alma machine.
    However, this is easy to explain. It's just that if the system hangs hard during
    a shutdown, doing the *Ctrl* + *Alt* + *Del* key sequence 7 times within 2 seconds
    will force the machine to do a reboot. You can then just boot to the GRUB command
    prompt, and shut the machine down from there. (You can read more about *Ctrl*
    + *Alt* + *Del* under the `systemd` man page.)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在`[Unit]`部分，你可以看到它*要求*`systemd-poweroff.service`，这意味着该服务将会启动。在`[Unit]`部分的底部，你会看到两个新参数。`JobTimeoutSec=30min`这一行给了systemd足够的时间来优雅地关闭所有正在运行的服务，然后再关闭电源。`JobTimeoutAction=poweroff-force`这一行意味着，如果所有服务在30分钟的时间窗口内没有优雅地关闭，那么systemd将强制关闭电源。在`[Install]`部分，我们看到了`Alias=ctrl-alt-del.target`这一行。这看起来有点奇怪，因为*Ctrl*
    + *Alt* + *Del*按键组合是用来重启机器的，而不是用来关闭机器的。此次不仅仅是Ubuntu的奇怪之处——在Alma机器上也是一样的。不过，这个问题其实很好解释。只是如果系统在关闭过程中挂起，按下*Ctrl*
    + *Alt* + *Del*组合键7次（在2秒内）将迫使机器重启。你然后可以直接启动到GRUB命令提示符，从那里关闭机器。（你可以在`systemd`的手册页中了解更多关于*Ctrl*
    + *Alt* + *Del*的信息。）
- en: 'Remember, using *Ctrl* + *A**lt* + *Del* to reboot a machine doesn''t require
    root privileges. That''s not normally a problem, because mission-critical servers
    should be locked away in a secure room where only authorized personnel can get
    to them. Even so, you might want to place restrictions on the ability to reboot
    servers. If this is the case, disable the *Ctrl* + *Alt* + *Del* reboot feature
    by masking `ctrl-alt-del.target`. The command to do that is:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，使用*Ctrl* + *Alt* + *Del*重启机器不需要管理员权限。这通常不是问题，因为关键任务的服务器应该被锁在一个安全的房间内，只有授权人员才能接触到它们。即便如此，你可能还是希望对重启服务器的权限进行一些限制。如果是这种情况，可以通过屏蔽`ctrl-alt-del.target`来禁用*Ctrl*
    + *Alt* + *Del*重启功能。执行此操作的命令是：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now, you can do *C**trl* + *Alt* + *Del* key sequences until the end of time,
    and nothing will happen.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以无限次地按*Ctrl* + *Alt* + *Del*键组合，什么也不会发生。
- en: 'On a desktop machine with a graphical interface, the *Ctrl* + *Alt* + *Del*
    key sequence is controlled by the desktop configuration, which might be different
    across various desktop environments. On the Alma machine with its Gnome 3 environment,
    doing *Ctrl* + *Alt* + *Del* brings up the normal shutdown menu, which looks like
    this:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在带有图形界面的桌面计算机上，*Ctrl* + *Alt* + *Del*键序列由桌面配置控制，在不同的桌面环境中可能有所不同。在Alma机器上，使用Gnome
    3环境，按下*Ctrl* + *Alt* + *Del*会弹出正常的关机菜单，如下所示：
- en: '![](img/Figure_10.1_B17491.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_10.1_B17491.jpg)'
- en: Figure 10.1 – The Gnome 3 Power Off menu on the Alma machine
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1 – Alma机器上的Gnome 3关机菜单
- en: Masking `ctrl-alt-del.target` on a desktop machine does not affect this behavior.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在桌面计算机上屏蔽`ctrl-alt-del.target`并不会影响这一行为。
- en: '`systemd-poweroff.service` only has a `[Unit]` section, which we see here:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`systemd-poweroff.service`只有一个`[Unit]`部分，具体如下：'
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This service requires `shutdown.target`, `umount.target`, and `final.target`.
    If we look in the unit files for these targets, we can see that they don''t appear
    to do anything. For example, here''s what the `shutdown.target` file looks like:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 该服务依赖于`shutdown.target`、`umount.target`和`final.target`。如果我们查看这些目标的单元文件，可以看到它们似乎什么也不做。例如，下面是`shutdown.target`文件的内容：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Our good friend `strings` shows us that `shutdown.target` is defined in the
    `systemd` executable file, as we see here:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的好朋友`strings`显示，`shutdown.target`在`systemd`可执行文件中有定义，如下所示：
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The same thing is true of `umount.target`, as we see here:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 同样的情况也适用于`umount.target`，如下所示：
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, we have `final.target`, as we see here:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们看到了`final.target`，如下所示：
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Although it also doesn''t appear to be doing anything, it''s not defined in
    the `systemd` executable file, as we see here:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然它看起来也没有做任何事情，但它并没有在`systemd`可执行文件中定义，如下所示：
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'So, I don''t know where `final.target` is defined, but that''s okay. For our
    current topic, it''s not important. I also couldn''t find any information about
    what `final.target` actually does, other than this short blurb in the `systemd.special`
    man page:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我不知道 `final.target` 是在哪里定义的，但没关系。对于我们现在讨论的内容，这不重要。我也没找到关于 `final.target`
    实际作用的任何信息，除了在 `systemd.special` 手册页面中的这段简短描述：
- en: '*"A special target unit that is used during the shutdown logic and may be used
    to pull in late services after all normal services are already terminated and
    all mounts unmounted."*'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*“一个特殊的目标单元，在关机逻辑中使用，并且在所有正常服务终止并且所有挂载卸载后，可能会用来拉入一些延迟的服务。”*'
- en: I don't know what those *late services* are supposed to be, but again, that's
    okay. For our present discussion, it doesn't matter.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道那些 *延迟服务* 是什么，但没关系。对于我们当前的讨论，这不重要。
- en: According to the `systemctl` man page, a `systemctl poweroff` command is supposed
    to send a `wall` message to all users who are logged into the system. However,
    that is incorrect. No message gets sent out, and there's no option switch to make
    it happen.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 `systemctl` 手册页面，`systemctl poweroff` 命令应该会向所有已登录系统的用户发送一个 `wall` 消息。然而，这是错误的。没有消息被发送出去，也没有选项可以让它发生。
- en: Normally, a `systemctl poweroff` command would shut down running services and
    unmount all mounted filesystems in an orderly manner. Using the `--force` option
    would shut down the system without taking time to shut down the services first.
    This could be handy if you have a service that's hung up and refuses to stop normally.
    Using the `--force` option *twice* would shut down the system without taking time
    to either shut down services normally or to unmount any mounted filesystems. Of
    course, this isn't recommended unless it's an absolute emergency, because it could
    corrupt your filesystem and cause data loss. On the other hand, using `--force
    --force` could be handy if the `systemd` process has crashed. This is because
    `--force --force` allows the `systemctl` executable to shut down the system without
    having to contact the `systemd` process.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，`systemctl poweroff` 命令会以有序的方式关闭正在运行的服务并卸载所有挂载的文件系统。使用 `--force` 选项则会在不先关闭服务的情况下直接关机。如果你有一个挂起的服务无法正常停止，这个选项会非常有用。使用
    `--force` 选项 *两次* 会在不关闭服务或卸载任何挂载的文件系统的情况下直接关机。当然，除非是绝对紧急的情况，否则不推荐这样做，因为这可能会损坏文件系统并导致数据丢失。另一方面，如果
    `systemd` 进程崩溃，使用 `--force --force` 可能会很有用。因为 `--force --force` 允许 `systemctl`
    可执行文件在不与 `systemd` 进程联系的情况下关机。
- en: Okay, let's *power off* the discussion about `poweroff`. Let's now talk briefly
    about halting a system.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，让我们 *结束* 关于 `poweroff` 的讨论。接下来，我们简单聊一下如何停止系统。
- en: Halting with systemctl
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 systemctl 停止
- en: Using a `sudo systemctl halt` command halts the operating system, but it doesn't
    power down the computer. Because I can read your mind, I know that you're saying,
    *But Donnie. Why would I want to halt the operating system but leave the computer
    running?* Well, I don't know. That's something that I've never figured out in
    my entire Linux career.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `sudo systemctl halt` 命令会停止操作系统，但不会关闭计算机。因为我能读懂你的心思，我知道你现在一定在想，*但 Donnie，我为什么要停止操作系统却让计算机继续运行呢？*
    嗯，我不知道。这是我在整个 Linux 生涯中从未弄明白的事。
- en: But seriously, `halt.target` works pretty much the same as `poweroff.target`.
    So, I'll leave it to you to look at the associated unit files, if you really want
    to.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 但说实话，`halt.target` 的作用几乎和 `poweroff.target` 一样。所以，如果你真的感兴趣，我把相关单元文件的查阅留给你。
- en: All right, let's *reboot* this discussion by talking about rebooting.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，让我们 *重新启动* 这个话题，聊聊重启的事情。
- en: Rebooting with systemctl
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 systemctl 重启
- en: You'll never guess what the command is to reboot a system. Okay, if you said
    `sudo systemctl reboot`, then you win today's grand prize. (Sadly, the grand prize
    consists of absolutely nothing, except for the good feeling that comes with giving
    a correct answer.)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你永远猜不到用来重启系统的命令是什么。好吧，如果你说是 `sudo systemctl reboot`，那你赢得了今天的大奖。（可惜，这个大奖什么都没有，除了给出正确答案的成就感。）
- en: Again, I'll leave it to you to look at the associated `reboot.target` files,
    because this also works pretty much the same as `poweroff.target`. One difference
    to note is that this time, the `Alias=ctrl-alt-del.target` line in the `[Install]`
    section actually does something for us. On a text mode machine, doing a *Ctrl*
    + *Alt* + *Del* sequence at the local terminal will reboot the machine. So yes,
    that old three-finger salute is still with us. (You don't even need to enter an
    admin password to make this work. So, fortunately, doing *Ctrl* + *Alt* + *Del*
    from a remote terminal doesn't work.) If you want to try this on your VirtualBox
    virtual machine, you'll need to click on the virtual machine's **Input** menu,
    click on **Keyboard**, and then click on **Insert Ctrl-Alt-Del**.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 再次提醒，我留给你去查看相关的`reboot.target`文件，因为它的工作方式与`poweroff.target`非常相似。唯一需要注意的不同之处是，这次在`[Install]`部分的`Alias=ctrl-alt-del.target`行实际上为我们做了些事情。在文本模式机器上，在本地终端按下*Ctrl*
    + *Alt* + *Del*组合键会重启机器。所以，是的，那个老三指礼仍然伴随着我们。（你甚至不需要输入管理员密码就能让它生效。所以，幸运的是，从远程终端按*Ctrl*
    + *Alt* + *Del*是不会生效的。）如果你想在你的VirtualBox虚拟机上尝试这个，你需要点击虚拟机的**输入**菜单，选择**键盘**，然后点击**插入Ctrl-Alt-Del**。
- en: Once again, I'm reading your mind. I know that you're saying, *But Donnie. These
    systemctl commands don't give us the cool options that we used to have with the
    old shutdown commands.* Yeah, you're right, which is why I still use the old `shutdown`
    commands. So, let's talk about them next, shall we?
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，我读懂了你的心思。我知道你在想，*但是，Donnie，这些systemctl命令没有给我们提供以前`shutdown`命令中的那些酷选项*。是的，你说得对，这也是为什么我仍然使用旧的`shutdown`命令。接下来，让我们谈谈这些命令，好吗？
- en: Using shutdown instead of systemctl
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`shutdown`代替`systemctl`
- en: 'The old `shutdown` commands that we used on SysV systems came with some cool
    options. We could schedule a shutdown or reboot for some time in the future, cancel
    a scheduled shutdown, and broadcast a message about an impending shutdown or reboot
    to all users who were logged into the system. With the `systemctl` commands, you
    can''t do any of that. Fortunately, the old `shutdown` options are still with
    us, in the form of a symbolic link that points to the `systemctl` executable,
    as we see here:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在SysV系统上使用的旧`shutdown`命令有一些很酷的选项。我们可以安排将来的关机或重启，取消已安排的关机，向所有已登录的用户广播即将关机或重启的消息。而使用`systemctl`命令时，你无法执行这些操作。幸运的是，旧的`shutdown`选项依然存在，通过一个符号链接指向`systemctl`可执行文件，正如我们在这里看到的：
- en: '[PRE9]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Even though you can't use the old `shutdown` options with `systemctl`, you can
    use them with the `shutdown` link that points to `systemctl`. (Strange, but true.)
    Now, I realize that you old-timers might know these `shutdown` commands already,
    and that's okay. You won't hurt my feelings if you're tempted to just skim over
    this. On the other hand, if you bear with me until the end, you'll see some cool
    stuff that you might not currently know about. If you're a Linux newbie, you're
    almost sure to find some useful information here. So, let's go.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你不能在`systemctl`中使用旧的`shutdown`选项，你仍然可以通过指向`systemctl`的`shutdown`链接使用它们。（奇怪，但是真的。）现在，我知道你这些老手可能已经知道这些`shutdown`命令了，没关系。如果你只是想略过这部分，也不会让我觉得不开心。另一方面，如果你能耐心看到最后，你会发现一些你目前可能还不知道的酷东西。如果你是Linux新手，这里几乎可以保证有一些有用的信息。所以，走吧。
- en: 'Whenever you do a `shutdown` command, you can specify the time at which you
    want the shutdown to occur. For example, to perform an immediate shutdown, just
    do:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你执行`shutdown`命令时，都可以指定关闭的时间。例如，要立即关闭机器，只需执行：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: On an old SysV system, this command would have just halted the operating system.
    To power down the machine, you would have had to use the `-h` option. On a systemd
    machine, this command powers off the machine, so the `-h` option switch is no
    longer necessary. (Curiously, the `-h` switch is still mentioned in the `shutdown`
    man page, even though it no longer does anything.)
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在旧的SysV系统上，这个命令只会停止操作系统。要关闭机器，你需要使用`-h`选项。在一个systemd系统上，这个命令会关闭机器，因此不再需要`-h`选项开关。（奇怪的是，`-h`选项仍然在`shutdown`的手册页面中提到，尽管它现在已经不再起作用。）
- en: 'You can also specify the time at which you want the shutdown to occur, using
    the 24-hour time format. For example, to shut down the machine at 6:00 P.M., do:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以指定关闭操作的时间，使用24小时制时间格式。例如，要在下午6:00关闭机器，可以执行以下命令：
- en: '[PRE11]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'At about 25 minutes before the scheduled shutdown time, the system will start
    sending broadcast messages to all logged-in users, as we see here for Goldie:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在计划关机时间前大约25分钟，系统会开始向所有已登录的用户发送广播消息，如我们在Goldie的例子中所见：
- en: '[PRE12]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The system will continue sending out this broadcast message until the shutdown
    actually occurs. The frequency with which the message gets sent out depends upon
    how soon the shutdown is scheduled to occur. Within the last ten minutes, the
    message will get sent out every minute. Fortunately, Goldie can regain use of
    the command prompt by just hitting the *Enter* key, which will allow her to finish
    what she's doing. (In case you're wondering, *Goldie* is the name of my youngest
    kitty. You'll never guess what color she is.)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 系统将继续发送广播消息，直到实际关机发生。消息发送的频率取决于关机计划发生的时间。如果在最后十分钟内，消息会每分钟发送一次。幸运的是，Goldie只需按下*Enter*键，就能重新获得命令提示符，这样她就可以完成她正在做的事情。（顺便说一下，*Goldie*是我的最小猫咪的名字。你永远猜不到她是什么颜色的。）
- en: 'If you change your mind and want to cancel the shutdown, use the `-c` option
    switch, as shown here:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你改变主意并想取消关机，可以使用`-c`选项开关，如下所示：
- en: '[PRE13]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You can also send out your own customized broadcast message by simply placing
    it after the `shutdown` command:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以通过在`shutdown`命令后简单地添加自定义广播消息来发送你的消息：
- en: '[PRE14]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'At five minutes before the scheduled shutdown time, a `nologin` file will get
    created in the `/run/` directory, as we see here:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在计划关机时间前五分钟，`nologin`文件将在`/run/`目录下创建，如我们所见：
- en: '[PRE15]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This will prevent any other users from logging in. The next time you boot up
    this system, this `nologin` file will get deleted.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这将阻止其他用户登录。下次启动系统时，`nologin`文件会被删除。
- en: 'Any time you schedule a future shutdown job, a `scheduled` file gets created
    in the `/run/systemd/shutdown/` directory. Look inside the file, and you''ll see
    something like this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 每次你安排未来的关机任务时，都会在`/run/systemd/shutdown/`目录中创建一个`scheduled`文件。打开文件，你会看到类似这样的内容：
- en: '[PRE16]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The `USEC=` line specifies the time for the scheduled shutdown, in Unix epoch
    format. If you don''t know when the system is scheduled to shut down and you want
    to find out, you can use a shell script to translate this to human-readable format.
    The first example of this type of script uses a `perl` command to do the actual
    translation. Here''s what it looks like:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`USEC=`行指定了计划关机的时间，采用Unix时间戳格式。如果你不知道系统计划关机的时间，并且想查找，可以使用一个shell脚本将其转换为人类可读的格式。下面是一个使用`perl`命令进行实际转换的脚本示例：'
- en: '[PRE17]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Save the file as `scheduled_shutdown_1.sh`, and set the executable permission,
    like this:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 将文件保存为`scheduled_shutdown_1.sh`，并设置可执行权限，如下所示：
- en: '[PRE18]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Schedule a shutdown for whatever time you want, and then run the script. The
    output should look something like this:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以根据需要安排关机时间，然后运行脚本。输出结果应该类似如下：
- en: '[PRE19]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'If `perl` isn''t installed on your system or if you''d prefer to not use `perl`,
    then you can use `awk` to perform the translation. The script with `awk` looks
    like this:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统上没有安装`perl`，或者你不想使用`perl`，你也可以使用`awk`来执行转换。使用`awk`的脚本如下所示：
- en: '[PRE20]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Both of these scripts are set up to search for the `scheduled` file, and to
    only run the translation command if the `scheduled` file exists. If the file doesn't
    exist, the script will inform you of that, and then exit gracefully.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个脚本都设置为查找`scheduled`文件，并且只有在`scheduled`文件存在时才会运行转换命令。如果文件不存在，脚本会通知你并优雅地退出。
- en: 'To reboot a machine, just use `shutdown` with the `-r` option, like this:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要重启机器，只需使用带有`-r`选项的`shutdown`命令，像这样：
- en: '[PRE21]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: You can schedule a reboot and send custom broadcast messages the same way that
    you would do for a shutdown operation.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以像安排关机操作一样安排重启并发送自定义广播消息。
- en: Note
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You old-timers might remember that on SysV systems, there was also an `f` option
    that you could use with the `-r` option. Doing a `sudo shutdown -rf now` command
    would reboot the machine, and would cause an `fsck` operation to be performed
    on the machine's filesystems before mounting them. That `f` option is now gone,
    because systemd systems are set up to always do an `fsck` operation on all supported
    filesystems every time you boot the machine. This happens because `systemd-fsckd.service`
    runs as part of the boot-up process if any supported filesystems are detected.
    (By *supported* filesystems, I mean that `fsck` works on the `ext4` filesystem
    that's the default for Ubuntu, but it doesn't work on the `xfs` filesystem, which
    is the default for RHEL and RHEL clones. So, don't be too disappointed if you
    see that `systemd-fsckd.service` doesn't run on your Alma machine.)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你们这些老前辈可能记得，在 SysV 系统上，有一个 `f` 选项可以和 `-r` 选项一起使用。执行 `sudo shutdown -rf now`
    命令时，系统会重启，并在挂载文件系统之前执行 `fsck` 操作。这个 `f` 选项现在已经不再使用了，因为 systemd 系统默认每次启动时都会对所有支持的文件系统执行
    `fsck` 操作。这是因为如果检测到任何支持的文件系统，`systemd-fsckd.service` 会作为启动过程的一部分运行。（这里所说的*支持的*文件系统，是指
    `fsck` 适用于 `ext4` 文件系统，这是 Ubuntu 的默认文件系统，但不适用于 `xfs` 文件系统，这是 RHEL 及其衍生版的默认文件系统。所以，如果你看到
    `systemd-fsckd.service` 在你的 Alma 系统上没有运行，也不必太失望。）
- en: In [*Chapter 7*](B17491_07_Final_NM_ePub.xhtml#_idTextAnchor091), *Understanding
    systemd Timers*, we learned how to set up a job to automatically run when you
    boot up your machine. Now, let's see how to set up a job to run when you shut
    down the machine.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在 [*第7章*](B17491_07_Final_NM_ePub.xhtml#_idTextAnchor091)，*理解 systemd 定时器* 中，我们学习了如何设置一个在你启动计算机时自动运行的任务。现在，让我们看看如何设置一个在关机时运行的任务。
- en: Running a job before shutting down
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在关机前运行任务
- en: Let's say that you want to have a job automatically run every time you shut
    down your computer. (I'll let you use your imagination about what kind of job
    that could be.) To set that up, just create your own custom service that's `WantedBy`
    `the` `shutdown.target`. Let's check out how.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想要每次关机时自动运行某个任务。（我让你发挥想象力，想想这个任务可能是什么。）为了实现这一点，只需创建一个自定义服务，并将其设置为`WantedBy`
    `the` `shutdown.target`。让我们来看一下如何操作。
- en: 'We''ll demonstrate this by creating a dummy shell script that goes along with
    our new service. In the `/usr/local/bin/` directory, create the `script.sh` file
    with the following contents:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过创建一个虚拟的 shell 脚本来演示这一点，该脚本与我们的新服务配合使用。在 `/usr/local/bin/` 目录下，创建一个 `script.sh`
    文件，内容如下：
- en: '[PRE22]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The first `systemctl list-jobs` command will search through the list of running
    jobs, looking for the `reboot.target.*start*` text string. If the text string
    is found, the `&&` operator will cause the `echo` command to run. The `echo` output
    will go to the `reboot_test.txt` file in the `/root/` directory. However, this
    will never actually happen, because this service will only get activated by `shutdown.target`,
    and not by `reboot.target`. The next line is the same, except it''s looking for
    the `shutdown.target.*start*` text string. If that text string is found, the `echo`
    command will send its output to the `/root/shutdown_test.txt` file. After you''ve
    saved the file, set the executable permission by doing:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个 `systemctl list-jobs` 命令会在正在运行的任务列表中查找 `reboot.target.*start*` 这个文本字符串。如果找到了这个文本字符串，`&&`
    运算符将触发 `echo` 命令的运行。`echo` 输出将会写入 `/root/` 目录下的 `reboot_test.txt` 文件。然而，这实际上永远不会发生，因为该服务仅会由
    `shutdown.target` 激活，而不是由 `reboot.target` 激活。下一行是相同的，只不过它是查找 `shutdown.target.*start*`
    这个文本字符串。如果找到了该字符串，`echo` 命令的输出将会发送到 `/root/shutdown_test.txt` 文件。保存文件后，设置可执行权限，方法是：
- en: '[PRE23]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Next, use `sudo systemctl edit --full --force myscript.service` to create the
    service. Add the following contents:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用 `sudo systemctl edit --full --force myscript.service` 创建该服务。添加以下内容：
- en: '[PRE24]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The `ExecStart=` line activates our shell script. In the `[Install]` section,
    we see that this service is `WantedBy` the `shutdown.target`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`ExecStart=` 行激活我们的 shell 脚本。在 `[Install]` 部分，我们看到该服务的 `WantedBy` 是 `shutdown.target`。'
- en: 'Once you''ve saved this file, do the normal `sudo systemctl daemon-reload`
    and `sudo systemctl enable myscript.service` operations. To test things out, first
    shut the machine down and then start it back up. You should now see the `shutdown_test.txt`
    file in the `/root/` directory:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦保存了这个文件，进行正常的 `sudo systemctl daemon-reload` 和 `sudo systemctl enable myscript.service`
    操作。为了测试，首先关机，然后重新启动。你应该能在 `/root/` 目录下看到 `shutdown_test.txt` 文件：
- en: '[PRE25]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Next, reboot the machine. This time, you'll see that no file gets created, proving
    that this service will run only for a shutdown, and not for a reboot.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，重新启动机器。这次您会发现没有文件被创建，证明此服务仅在关机时运行，而不是在重启时运行。
- en: Okay, I think that's about it. Let's wrap this baby up.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，我想这就是全部了。让我们结束这一章节。
- en: Summary
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: As usual, we've seen some cool stuff in this chapter. We started out by looking
    at the `systemctl` commands for shutting down, halting, or rebooting a machine.
    We then saw that the old-style `shutdown` commands still work, and will allow
    you to use the scheduling and messaging features that you've always been used
    to using. We ended by creating a service that would run a job whenever you shut
    down the machine.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 和往常一样，我们在本章看到了一些很酷的东西。我们开始查看用于关闭、停机或重启机器的`systemctl`命令。然后我们看到旧式的`shutdown`命令仍然有效，并且您可以继续使用您一直习惯使用的调度和消息功能。最后，我们创建了一个服务，该服务会在您关闭机器时运行一个作业。
- en: I realize that a lot of you might already have been familiar with a lot of what
    I presented in this chapter, but I did present some cool things at the end, and
    I hope that you enjoyed it.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我意识到你们中很多人可能已经熟悉我在本章中呈现的内容，但我在最后展示了一些很酷的东西，希望你们喜欢。
- en: This concludes part 1 of *Mastering systemd*. In part 2, we'll delve into the
    mysteries of *cgroups*. I'll see you there.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是*掌握systemd*第1部分的结束。在第2部分中，我们将深入探讨*cgroups*的奥秘。到那时见。
- en: Questions
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is the command for rebooting a Linux machine?
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Linux机器重启命令是什么？
- en: a) `sudo shutdown now`
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) `sudo shutdown now`
- en: b) `sudo systemctl -r now`
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) `sudo systemctl -r now`
- en: c) `sudo systemctl reboot now`
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) `sudo systemctl reboot now`
- en: d) `sudo systemctl reboot`
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) `sudo systemctl reboot`
- en: e) `sudo shutdown --reboot`
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: e) `sudo shutdown --reboot`
- en: What happens 5 minutes before a scheduled shutdown time?
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在预定关机时间的5分钟前会发生什么？
- en: a) The `scheduled` file gets created in the `/run/systemd/shutdown/` directory.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 在`/run/systemd/shutdown/`目录中创建了一个`scheduled`文件。
- en: b) The `scheduled` file gets created in the `/run/` directory.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 在`/run/`目录中创建了一个`scheduled`文件。
- en: c) The `nologin` file gets created in the `/run/systemd/shutdown/` directory.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 在`/run/systemd/shutdown/`目录中创建了一个`nologin`文件。
- en: d) The `nologin` file gets created in the `/run/` directory.
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 在`/run/`目录中创建了一个`nologin`文件。
- en: When you schedule a future shutdown, which of the following happens?
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您安排将来的关机时，以下哪些情况会发生？
- en: a) A `nologin` file gets created in the `/run/systemd/shutdown/` directory.
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 在`/run/systemd/shutdown/`目录中创建了一个`nologin`文件。
- en: b) A `scheduled` file gets created in the `/run/systemd/shutdown/` directory.
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 在`/run/systemd/shutdown/`目录中创建了一个`scheduled`文件。
- en: c) A `nologin` file gets created in the `/run/systemd/` directory.
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 在`/run/systemd/`目录中创建了一个`nologin`文件。
- en: d) A `scheduled` file gets created in the `/run/` directory.
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 在`/run/`目录中创建了一个`scheduled`文件。
- en: What could happen if you do a `sudo systemctl poweroff --force --force` command?
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果执行`sudo systemctl poweroff --force --force`命令会发生什么？
- en: a) Using the `--force` option twice would result in an error message.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a) 使用两次`--force`选项会导致错误消息。
- en: b) The system will ignore the second `--force` option.
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b) 系统会忽略第二个`--force`选项。
- en: c) You could damage your filesystem, which could result in data loss.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c) 您可能会损坏文件系统，这可能导致数据丢失。
- en: d) If the first `--force` doesn't ensure that the `power off` command works,
    the second one surely will.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: d) 如果第一个`--force`选项不能确保`power off`命令生效，那么第二个选项肯定会。
- en: Answers
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 答案
- en: d
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: d
- en: d
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: d
- en: b
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: b
- en: c
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: c
- en: Further reading
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: '`/tmp/` directory, which gets cleaned out every time you shut down the machine:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`/tmp/`目录，在每次关闭机器时都会被清空：'
- en: '[https://www.golinuxcloud.com/run-script-with-systemd-at-shutdown-only-rhel/](https://www.golinuxcloud.com/run-script-with-systemd-at-shutdown-only-rhel/)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.golinuxcloud.com/run-script-with-systemd-at-shutdown-only-rhel/](https://www.golinuxcloud.com/run-script-with-systemd-at-shutdown-only-rhel/)'
- en: '**How to check the time for a delayed shutdown**: You can find the answers
    to lots of your Linux admin questions with simple DuckDuckGo searches, as I did
    with this. Learn how to use DuckDuckGo. It can be a Linux administrator''s best
    friend:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '**如何检查延迟关机的时间**：您可以通过简单的DuckDuckGo搜索找到很多关于Linux管理的答案，就像我在这里做的那样。学习如何使用DuckDuckGo。它可能是Linux管理员的好朋友：'
- en: '[https://unix.stackexchange.com/questions/229745/systemd-how-to-check-scheduled-time-of-a-delayed-shutdown](https://unix.stackexchange.com/questions/229745/systemd-how-to-check-scheduled-time-of-a-delayed-shutdown)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://unix.stackexchange.com/questions/229745/systemd-how-to-check-scheduled-time-of-a-delayed-shutdown](https://unix.stackexchange.com/questions/229745/systemd-how-to-check-scheduled-time-of-a-delayed-shutdown)'
