- en: '9'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '9'
- en: Comprehensive Review and Test Exam Questions
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 综合复习与模拟考试问题
- en: 'In this chapter, we will go over the different things we have learned throughout
    this book. We will be working through mock exam questions that will help familiarize
    you with the format of questions that you may encounter on the exam. We will attempt
    to cover all things that could possibly be on the exam per the public listed information
    by Red Hat, which can be found here: [https://www.redhat.com/en/services/training/ex358-red-hat-certified-specialist-services-management-automation-exam?section=Objectives](https://www.redhat.com/en/services/training/ex358-red-hat-certified-specialist-services-management-automation-exam?section=Objectives).'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将回顾整个书籍中所学的内容。我们将通过模拟考试题目，帮助你熟悉考试中可能遇到的题型格式。我们将尽量覆盖根据Red Hat公开的考试目标可能出现在考试中的所有内容，详情请见：[https://www.redhat.com/en/services/training/ex358-red-hat-certified-specialist-services-management-automation-exam?section=Objectives](https://www.redhat.com/en/services/training/ex358-red-hat-certified-specialist-services-management-automation-exam?section=Objectives)。
- en: The outcome of this chapter will be preparing you fully to take the exam confidently
    and give you the information needed for you to pass the exam. We will go into
    other things that may not have been touched on in the book until now but will
    explain each topic as we go. We will also be covering the request to complete
    each question manually and to also do so with Ansible Automation. Let’s get started.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是帮助你充分准备考试，增强信心，并提供你通过考试所需的信息。我们将讨论一些直到现在本书中未涉及的内容，并在进行每个主题时进行详细解释。我们还将讨论如何手动完成每个问题的请求，并使用Ansible自动化完成这些任务。我们开始吧。
- en: 'In this chapter, we’re going to cover the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: A comprehensive review of all exam objectives and mock exams for you to test
    your newfound skills
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对所有考试目标的综合复习，以及模拟考试，帮助你测试新学到的技能
- en: Technical requirements
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: We will be using the setup of the systems that is used in [*Chapter 1*](B18607_01.xhtml#_idTextAnchor016),
    *Block Storage – Learning How to Provision Block Storage on Red Hat Enterprise
    Linux*. We will utilize this setup along with the setup from the additional **Network
    Interface Controllers** (**NICs**) for the teaming exercise, which can be found
    in [*Chapter 3*](B18607_03.xhtml#_idTextAnchor039), *Link Aggregation Creation
    – Creating Your Own Link and Mastering the Networking Domain*. This will allow
    you to utilize all the upcoming questions as if you were in a test environment.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用[*第1章*](B18607_01.xhtml#_idTextAnchor016)中所用的系统配置，*块存储——学习如何在Red Hat Enterprise
    Linux上配置块存储*。我们将结合[*第3章*](B18607_03.xhtml#_idTextAnchor039)中的附加**网络接口控制器**（**NICs**）配置，用于团队合作练习。该内容可以在[*第3章*](B18607_03.xhtml#_idTextAnchor039)中找到，*链路聚合创建——创建你自己的链路并掌握网络领域*。这将使你能够像在考试环境中一样使用所有即将出现的问题。
- en: Setting up GitHub access
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置GitHub访问权限
- en: 'Please refer to the instructions found in [*Chapter 1*](B18607_01.xhtml#_idTextAnchor016),
    *Block Storage – Learning How to Provision Block Storage on Red Hat Enterprise
    Linux*, to gain access to GitHub for the book’s repo. You will find the Ansible
    Automation playbooks for this chapter at the following link: [https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter09](https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter09).
    Remember these are suggested playbooks and are not the only way you can write
    them to make them work for you.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考[*第1章*](B18607_01.xhtml#_idTextAnchor016)的说明，*块存储——学习如何在Red Hat Enterprise
    Linux上配置块存储*，以便访问本书的GitHub仓库。你可以在以下链接找到本章的Ansible自动化剧本：[https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter09](https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter09)。记住，这些是建议的剧本，并不是你实现目标的唯一方法。
- en: You can always change them up using `raw`, `shell`, or `cmd` to achieve the
    same results, but we are demonstrating the best way to accomplish the goals. Also,
    keep in mind that we are not using the FCQN that is needed in future versions
    of Ansible, as that will not be supported in the exam, as it tests against Ansible
    2.9.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以随时使用`raw`、`shell`或`cmd`来改变它们，以实现相同的结果，但我们演示的是完成目标的最佳方法。此外，请记住，我们没有使用Ansible未来版本中所需的FCQN，因为在考试中不会支持它，考试是基于Ansible
    2.9版本的。
- en: A comprehensive review of all exam objectives and mock exams for you to test
    your newfound skills
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对所有考试目标和模拟考试的全面复习，帮助你测试新学到的技能
- en: We will present a mock exam with a mix of questions based on the skills you
    have learned throughout the entire book. We will go into more detail based on
    the items that you might run into in the exam itself. This will help prepare you
    to take the EX358 exam. These are not official questions; otherwise, they would
    not be provided in this book. Instead, they are theoretical scenarios you may
    face with differing information. Please set up your configuration as noted at
    the beginning of the chapter and then take note of your IP addresses, system names,
    and so on. This will allow you to grab the needed information fast for use within
    the exam so that you are not slowed down, as you only have 4 hours.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将呈现一个结合了你在整本书中学到的技能的模拟考试。我们将根据你在考试中可能遇到的项目深入讨论细节。这将帮助你准备参加 EX358 考试。这些不是官方问题；否则，它们不会出现在本书中。相反，它们是你可能遇到的理论场景，具有不同的信息。请按照章节开头所述设置你的配置，然后记录下你的
    IP 地址、系统名称等信息。这样，在考试时你可以快速获取所需的信息，以免被拖慢速度，因为你只有 4 个小时。
- en: 'Let’s get started with the exam. We will start with the information for my
    lab to give you an idea of how to write this out for your setup:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始考试吧。我们将从我的实验室的信息开始，给你一个如何为你的设置编写文档的概念：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can see that I have access to the information I need. If you set up your
    configuration to use hostnames through either DNS or your host file, you can connect
    to your devices easily. This also makes using the inventory a little easier in
    the Ansible inventory, as you do not have to add the `ansible_host` parameter.
    For our purposes, I will still be using `ansible_host` in my inventory file.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到我已经获得了所需的信息。如果你配置了 DNS 或主机文件来使用主机名，那么你可以轻松连接到你的设备。这也使得在 Ansible 清单中使用清单文件变得稍微简单一些，因为你不需要添加
    `ansible_host` 参数。为了我们的目的，我仍将在我的清单文件中使用 `ansible_host`。
- en: Another thing that makes everything easier is setting up RSA keys and sharing
    them across the system instead of using passwords. This is shown in the [*Chapter
    1*](B18607_01.xhtml#_idTextAnchor016), *Block Storage – Learning How to Provision
    Block Storage on Red Hat Enterprise Linux*, setup process as well. This makes
    running the playbooks easier, as they do not need to be run with the `-u emcleroy
    -k --ask-become` portion of the command added to pass the SSH and the escalated
    privilege password. We will be using the command with the extra parameters to
    make sure that you understand how to use the full command, if necessary, during
    the exam.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个让一切变得更简单的方法是设置 RSA 密钥并在系统间共享它们，而不是使用密码。这个过程在[*第1章*](B18607_01.xhtml#_idTextAnchor016)，*块存储—学习如何在红帽企业
    Linux 上配置块存储*中也有展示。这样做使得运行 playbooks 更加容易，因为它们不需要使用 `-u emcleroy -k --ask-become`
    这一命令部分来传递 SSH 和提升权限的密码。我们将使用带有额外参数的命令，以确保你理解如何在考试中使用完整命令（如果需要的话）。
- en: 'After you have set up your system as required, we will get started with the
    mock exam and go through each topic to review the items we have learned about.
    The questions will be in the order laid out by Red Hat on the objectives page
    found here: [https://www.redhat.com/en/services/training/ex358-red-hat-certified-specialist-services-management-automation-exam?section=Objectives](https://www.redhat.com/en/services/training/ex358-red-hat-certified-specialist-services-management-automation-exam?section=Objectives).'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在你按照要求设置好系统后，我们将开始模拟考试，并通过每个主题复习我们所学的内容。问题将按照红帽在目标页面上列出的顺序呈现，页面地址是：[https://www.redhat.com/en/services/training/ex358-red-hat-certified-specialist-services-management-automation-exam?section=Objectives](https://www.redhat.com/en/services/training/ex358-red-hat-certified-specialist-services-management-automation-exam?section=Objectives)。
- en: The questions follow. The answers will come directly after the questions, but
    please try to answer the questions without looking at the answers. I recommend
    attempting the questions once by yourself before looking at the solution. If you
    get feel stuck, feel free to read the answers and go through the solution to refresh
    your memory.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 问题如下。答案将直接跟在问题后面，但请尝试在不查看答案的情况下回答问题。我建议在查看答案之前先自己尝试回答这些问题。如果你感到卡住了，可以随时查看答案并阅读解决方案以刷新记忆。
- en: Managing network services
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理网络服务
- en: Managing network services is our first objective as noted by Red Hat for this
    exam.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 管理网络服务是我们考试的第一个目标，正如红帽所指出的那样。
- en: First up, we will set up IP connectivity for the network interfaces.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将设置网络接口的 IP 连通性。
- en: '*Question 1* – For this question, we would like you to provision the NICs on
    the servers with static addresses. Using the DHCP IP addresses, we would like
    you to change to the static IPs that were noted at the start of the instructions.
    (These will differ depending on your network):'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* – 对于这个问题，我们希望你为服务器上的网卡配置静态地址。使用 DHCP 分配的 IP 地址时，我们希望你更改为开始时所注明的静态 IP
    地址。（这些地址会根据你的网络而有所不同）：'
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once these are set up statically, you should be able to route between the two.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦这些设置为静态，你应该能够在这两者之间进行路由。
- en: '*Answer 1* – To set a static IP up manually, we will need to SSH to the device
    using the DHCP IP addresses and then modify them to the static addresses.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* – 要手动设置静态 IP，我们需要通过 SSH 使用 DHCP 分配的 IP 地址连接到设备，然后将其修改为静态地址。'
- en: 'First, we will use the `nmtui` command:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用`nmtui`命令：
- en: '![Figure 9.1 – NetworkManager TUI initial display](img/Figure_9.01_B18607.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.1 – NetworkManager TUI 初始显示](img/Figure_9.01_B18607.jpg)'
- en: Figure 9.1 – NetworkManager TUI initial display
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.1 – NetworkManager TUI 初始显示
- en: 'We will then choose to edit the connection and, from there, you will see the
    interfaces available, as shown in the following screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将选择编辑连接，从那里你将看到可用的接口，如下图所示：
- en: '![Figure 9.2 – NMTUI interface choices](img/Figure_9.02_B18607.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.2 – NMTUI 接口选择](img/Figure_9.02_B18607.jpg)'
- en: Figure 9.2 – NMTUI interface choices
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.2 – NMTUI 接口选择
- en: 'After choosing which interface to change, we will then move on to the settings
    to enable a static IP, as shown in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 选择要更改的接口后，我们将继续进行设置，启用静态 IP，如下图所示：
- en: '![Figure 9.3 – Manual setting choice for the selected interface](img/Figure_9.03_B18607.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.3 – 为选定接口选择手动设置](img/Figure_9.03_B18607.jpg)'
- en: Figure 9.3 – Manual setting choice for the selected interface
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.3 – 为选定接口选择手动设置
- en: 'We will then configure the required settings, such as the static IP, gateway,
    and DNS server, as shown in the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将配置所需的设置，例如静态 IP、网关和 DNS 服务器，如下图所示：
- en: '![Figure 9.4 – Static IP, gateway, and DNS settings](img/Figure_9.04_B18607.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.4 – 静态 IP、网关和 DNS 设置](img/Figure_9.04_B18607.jpg)'
- en: Figure 9.4 – Static IP, gateway, and DNS settings
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.4 – 静态 IP、网关和 DNS 设置
- en: 'After we have saved these settings, we will need to restart the network interface
    in order for it to change to the newly configured IP. We will do this by using
    the following command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 保存这些设置后，我们需要重新启动网络接口，以便它切换到新配置的 IP。我们将使用以下命令来完成此操作：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, we will test to ensure the new address is reachable, as shown using the
    `ping` test in the following screenshot:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将测试以确保新地址可达，如下图所示，使用`ping`测试：
- en: '![Figure 9.5 – IP ping test to ensure connectivity](img/Figure_9.05_B18607.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.5 – IP ping 测试以确保连通性](img/Figure_9.05_B18607.jpg)'
- en: Figure 9.5 – IP ping test to ensure connectivity
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.5 – IP ping 测试以确保连通性
- en: Next up, we will dig into setting up the IPV6 address configuration for previously
    configured network interfaces.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入了解为之前配置的网络接口设置 IPv6 地址的配置。
- en: '*Question 2* – For this question, we would like you to set up an IPv6 address
    on the already-configured NIC while maintaining connectivity via IPv4:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 2* – 对于这个问题，我们希望你为已经配置的网卡设置 IPv6 地址，同时保持 IPv4 连接：'
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: These should be routable, and you should maintain IPv4 routable connectivity
    as well once the change has been made.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这些应该是可路由的，并且一旦更改完成，你应该也能保持 IPv4 的可路由连通性。
- en: '*Answer 2* – We will use the `nmtui` command to set this up:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 2* – 我们将使用`nmtui`命令来设置此项：'
- en: '![Figure 9.6 – NMTUI network menu](img/Figure_9.06_B18607.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.6 – NMTUI 网络菜单](img/Figure_9.06_B18607.jpg)'
- en: Figure 9.6 – NMTUI network menu
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.6 – NMTUI 网络菜单
- en: 'After we initiate the `nmtui` menu, we will then choose to edit a connection,
    which will take you to the menu in the following screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动`nmtui`菜单后，我们将选择编辑连接，这会将你带到以下截图所示的菜单：
- en: '![Figure 9.7 – NMTUI interface selection screen](img/Figure_9.07_B18607.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.7 – NMTUI 接口选择界面](img/Figure_9.07_B18607.jpg)'
- en: Figure 9.7 – NMTUI interface selection screen
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.7 – NMTUI 接口选择界面
- en: 'After choosing the correct interface – in our case, **enp0s3**, but in your
    setup, it may be different depending on your lab – we will then be able to make
    configuration changes, as shown in the following screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择正确的接口后——在我们的情况下是**enp0s3**，但在你的设置中，可能会有所不同——我们将能够进行配置更改，如下图所示：
- en: '![Figure 9.8 – NMTUI interface configuration settings](img/Figure_9.08_B18607.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.8 – NMTUI接口配置设置](img/Figure_9.08_B18607.jpg)'
- en: Figure 9.8 – NMTUI interface configuration settings
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.8 – NMTUI接口配置设置
- en: 'After we choose **Manual** for **IPv6 CONFIGURATION**, we can then edit the
    values of the IPv6 address and gateway, as shown in the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**手动**配置**IPv6配置**后，我们可以编辑IPv6地址和网关的值，具体如下截图所示：
- en: '![Figure 9.9 – IPv6 interface settings](img/Figure_9.09_B18607.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.9 – IPv6接口设置](img/Figure_9.09_B18607.jpg)'
- en: Figure 9.9 – IPv6 interface settings
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.9 – IPv6接口设置
- en: 'After we set up the configuration as shown, we will then save the configuration.
    In order for the changes to take effect, we will need to run the following command
    to refresh the connectivity:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 配置设置完成后，我们将保存配置。为了使更改生效，我们需要运行以下命令来刷新连接：
- en: '[PRE4]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After both servers have been configured, we can then run IPv6 `ping` tests
    across the two interfaces to ensure connectivity, as shown in the following screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个服务器配置完成后，我们可以运行IPv6 `ping` 测试，检查两端接口的连通性，具体如下截图所示：
- en: '![Figure 9.10 – IPv6 ping tests](img/Figure_9.10_B18607.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.10 – IPv6 ping测试](img/Figure_9.10_B18607.jpg)'
- en: Figure 9.10 – IPv6 ping tests
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.10 – IPv6 ping测试
- en: We have shown one way to solve the issue of configuring your network with the
    preceding information. Now, we will move on to working with firewall services.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经展示了解决配置网络问题的一种方法。接下来，我们将处理防火墙服务。
- en: Managing firewall services
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理防火墙服务
- en: In this section, we will go over setting up firewall rules. We will talk about
    rich rules and other items that will block specific connectivity and allow connectivity
    for network traffic that is not currently allowed.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论如何设置防火墙规则。我们将讨论rich规则以及其他可能阻止特定连接并允许尚未允许的网络流量的项。
- en: '*Question 1* – For this question, we would like you to allow access to services
    and ports through the firewall. This will allow connectivity to web services that
    might be running on your servers in production. Please open access to the following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* – 对于此问题，我们希望您允许通过防火墙访问服务和端口。这将允许连接到可能在您的生产服务器上运行的Web服务。请打开以下访问权限：'
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Please do this manually and also set it up in an Ansible Automation playbook.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 请手动执行此操作，并在Ansible自动化剧本中进行设置。
- en: '*Answer 1* – We will use the following commands to set up the firewall to allow
    connectivity to these services:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* – 我们将使用以下命令设置防火墙，允许连接到这些服务：'
- en: '![Figure 9.11 – Firewall commands utilized to allow service connectivity](img/Figure_9.11_B18607.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.11 – 用于允许服务连接的防火墙命令](img/Figure_9.11_B18607.jpg)'
- en: Figure 9.11 – Firewall commands utilized to allow service connectivity
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.11 – 用于允许服务连接的防火墙命令
- en: 'The Ansible playbook for setting up `firewalld` services is as follows:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 设置`firewalld`服务的Ansible剧本如下：
- en: '[PRE6]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Please see the following screenshot with the inventory for your reference:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 请参见以下截图，参考您的清单：
- en: '![Figure 9.12 – Playbook inventory for all labs](img/Figure_9.12_B18607.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.12 – 所有实验室的剧本清单](img/Figure_9.12_B18607.jpg)'
- en: Figure 9.12 – Playbook inventory for all labs
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.12 – 所有实验室的剧本清单
- en: 'After we have set up and run the playbook with `ansible-playbook -i inventory
    firewalld.yml -u emcleroy -k –ask-become -v`, we will see the output in the following
    screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们使用`ansible-playbook -i inventory firewalld.yml -u emcleroy -k --ask-become
    -v`设置并运行剧本后，屏幕截图中将显示以下输出：
- en: '![Figure 9.13 – Successful Ansible playbook completion](img/Figure_9.13_B18607.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.13 – 成功完成Ansible剧本](img/Figure_9.13_B18607.jpg)'
- en: Figure 9.13 – Successful Ansible playbook completion
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.13 – 成功完成Ansible剧本
- en: '*Question 2* – For this question, we would like you to provide access to HTTP
    via the `192.168.1.0`/`24` domain, but block access via the `172.16.1.0/24` domain.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 2* – 对于这个问题，我们希望您通过`192.168.1.0`/`24`网络域提供HTTP访问，但阻止通过`172.16.1.0/24`网络域的访问。'
- en: Please do this manually and also set it up in an Ansible Automation playbook.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 请手动执行此操作，并在Ansible自动化剧本中进行设置。
- en: '*Answer 2* – We will use `firewall-cmd` rich rules to accomplish this change.
    We will use the following commands to successfully complete this exercise:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 2* – 我们将使用`firewall-cmd`的rich规则来完成这一更改。我们将使用以下命令成功完成此操作：'
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Now, let’s create an Ansible playbook to accomplish the same changes to the
    firewall rules, which can be seen in the following playbook:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们创建一个Ansible剧本，执行相同的防火墙规则更改，见以下剧本：
- en: '[PRE8]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'After we have run the playbook using `ansible-playbook -i inventory richrule.yml
    -u emcleroy -k –ask-become -v`, we will see the output in the following screenshot:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们使用`ansible-playbook -i inventory richrule.yml -u emcleroy -k –ask-become
    -v`运行playbook后，我们将看到以下截图中的输出：
- en: '![Figure 9.14 – Successful Ansible playbook completion output](img/Figure_9.14_B18607.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.14 – 成功完成Ansible playbook的输出](img/Figure_9.14_B18607.jpg)'
- en: Figure 9.14 – Successful Ansible playbook completion output
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.14 – 成功完成Ansible playbook的输出
- en: Managing SELinux
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理SELinux
- en: In this section, we will be working to fix SELinux issues when creating files
    and folders to ensure there are no permission issues.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将致力于解决在创建文件和文件夹时的SELinux问题，以确保没有权限问题。
- en: '*Question 1* – For this question, we would like you to create a folder and
    text file in the root directory and then repair the SELinux contexts to the correct
    permissions:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* – 对于这个问题，我们希望你在根目录创建一个文件夹和一个文本文件，然后修复SELinux上下文，确保权限正确：'
- en: '[PRE9]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Please do this manually and also set it up in an Ansible Automation playbook.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 请手动执行此操作，并且将其设置在Ansible自动化playbook中。
- en: '*Answer 1* – We will use the following commands to successfully create and
    resolve any SELinux context issues:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* – 我们将使用以下命令成功创建并解决任何SELinux上下文问题：'
- en: '[PRE10]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, we will accomplish this action with an Ansible playbook as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用Ansible playbook完成此操作，如下所示：
- en: '[PRE11]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'After we have created the Ansible playbook, we will run it with this command:
    `ansible-playbook -i inventory selinux.yml -u emcleroy -k --ask-become -v`. You
    can see the results in the following screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完Ansible playbook后，我们将使用以下命令运行它：`ansible-playbook -i inventory selinux.yml
    -u emcleroy -k --ask-become -v`。你可以在以下截图中看到运行结果：
- en: '![Figure 9.15 – Successful Ansible Automation playbook run output](img/Figure_9.15_B18607.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.15 – 成功运行Ansible自动化playbook的输出](img/Figure_9.15_B18607.jpg)'
- en: Figure 9.15 – Successful Ansible Automation playbook run output
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.15 – 成功运行Ansible自动化playbook的输出
- en: We learned how to resolve SELinux issues with files and folders in this section
    with easy-to-remember commands that should address issues you run into in the
    exam. Next, we will showcase how to control system processes that are running
    on your servers.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中我们学习了如何通过简单易记的命令解决SELinux在处理文件和文件夹时的问题，这些命令应该可以解决你在考试中遇到的问题。接下来，我们将展示如何控制在服务器上运行的系统进程。
- en: Managing system processes
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理系统进程
- en: In this section, we will start and enable services. We will also install packages,
    as they are needed for us to start and enable a service that is not already running.
    We are using `postgresql` as an example, but this will work for all the services
    you install, such as DHCP, DNS, and SMB.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将启动并启用服务。我们还将安装所需的包，以便启动和启用尚未运行的服务。我们以`postgresql`为例，但这适用于所有你安装的服务，如DHCP、DNS和SMB。
- en: '*Question 1* – For this question, we would like you to install `postgresql`
    and start and enable it on `rhel1`.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* – 对于这个问题，我们希望你在`rhel1`上安装`postgresql`并启动和启用它。'
- en: Please do this manually and also set it up in an Ansible Automation playbook.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 请手动执行此操作，并且将其设置在Ansible自动化playbook中。
- en: '*Answer 1* – We will use the following commands to install, enable, and start
    `postgresql` on `rhel1`:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* – 我们将使用以下命令在`rhel1`上安装、启用并启动`postgresql`：'
- en: '[PRE12]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'After we have completed the installation and startup of `postgresql` manually,
    we need to uninstall `postgresql` so that Ansible can install it. We will use
    the following command to remove `postgresql` from `rhel1`:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们手动完成`postgresql`的安装和启动后，需要卸载`postgresql`，以便Ansible可以重新安装它。我们将使用以下命令从`rhel1`中删除`postgresql`：
- en: '[PRE13]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Once `postgresql` has been removed, we will set up an Ansible playbook as follows
    to install, enable, and start the `postgresql` service:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦`postgresql`被移除，我们将设置一个Ansible playbook，按照以下步骤安装、启用并启动`postgresql`服务：
- en: '[PRE14]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We have added `ignore_errors` to the initialization step due to possible failures
    that do not affect the starting or enabling of the service.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在初始化步骤中添加了`ignore_errors`，这是因为可能出现一些不影响启动或启用服务的失败。
- en: 'After we have completed writing the playbook, we will run it using the `ansible-playbook
    -i inventory postgresql.yml -u emcleroy -k --ask-become -v` command. The result
    of running the playbook is shown in the following screenshot:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 完成playbook编写后，我们将使用`ansible-playbook -i inventory postgresql.yml -u emcleroy
    -k --ask-become -v`命令运行它。运行playbook的结果如下面的截图所示：
- en: '![Figure 9.16 – Successful run of the postgresql playbook](img/Figure_9.16_B18607.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.16 – 成功运行postgresql playbook](img/Figure_9.16_B18607.jpg)'
- en: Figure 9.16 – Successful run of the postgresql playbook
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.16 – 成功运行postgresql playbook
- en: In this section, we learned how to install, start, and enable services with
    the `postgresql` service as an example. These commands can be used with all services
    that you can install on an RHEL 8.1 system. In the next section, we will delve
    into network teaming.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何使用`postgresql`服务为例安装、启动和启用服务。这些命令可以用于你在RHEL 8.1系统上安装的所有服务。在下一节中，我们将深入探讨网络团队配置。
- en: Managing link aggregation
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理链路聚合
- en: 'In this section, we will set up network teaming:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将设置网络团队：
- en: '*Question 1* – For this question, we would like you to set up network teaming
    on the additional NICs that were provisioned in the setup process:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* —— 对于这个问题，我们希望你在设置过程中为额外的网卡配置网络团队：'
- en: '[PRE15]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: My setup has the NICs as **enp0s8** and **enp0s9** – yours might be different
    depending on your setup. Set up the connectivity as round-robin runner. You should
    be able to connect to each server using these IPs once set up. You should have
    connectivity to the network team when both NICs are up and when one of the two
    goes down. The connectivity of your main SSH IP should remain up and connected.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我的设置中，网卡是**enp0s8**和**enp0s9**——你的设置可能会有所不同，具体取决于你的配置。将连接设置为循环轮询（round-robin）方式。设置完成后，你应该能够通过这些IP连接到每台服务器。无论两个网卡都正常工作，还是其中一个网卡发生故障，你都应该能与网络团队保持连接。你的主SSH
    IP应该始终保持连接。
- en: Please do this manually and also set it up in an Ansible Automation playbook.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 请手动完成此操作，并将其也设置为Ansible自动化的playbook。
- en: '*Answer 1* – We will be using the following commands to set up the team on
    both systems. Please make sure you use the correct IPv4 address per server:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* —— 我们将使用以下命令在两台系统上设置团队。请确保为每台服务器使用正确的IPv4地址：'
- en: '[PRE16]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, repeat the process for `Rhel2`. Once that is complete, you should have
    a `team1` interface that is up and running with `roundrobin` connectivity. You
    can use `ping` to test the interface, as shown in the following screenshot:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，重复相同的过程为`Rhel2`。完成后，你应该有一个正常运行的`team1`接口，并且使用`roundrobin`方式进行连接。你可以使用`ping`命令测试接口，如下图所示：
- en: '![Figure 9.17 – ping tests to ensure connectivity to the newly set up team](img/Figure_9.17_B18607.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.17 – ping测试，确保连接到新设置的团队](img/Figure_9.17_B18607.jpg)'
- en: Figure 9.17 – ping tests to ensure connectivity to the newly set up team
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.17 – ping测试，确保连接到新设置的团队
- en: 'After we have completed the team creation manually, we will set up an Ansible
    playbook as follows to create the teams:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 手动完成团队创建后，我们将设置一个Ansible playbook，如下所示，用于创建团队：
- en: '[PRE17]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We will then add host variables to our inventory so that each server gets the
    correct IP, as shown in the following screenshot:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将向库存中添加主机变量，以便每台服务器都能获得正确的IP，如下图所示：
- en: '![Figure 9.18 – Updated inventory file with host variables](img/Figure_9.18_B18607.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.18 – 更新后的库存文件，包含主机变量](img/Figure_9.18_B18607.jpg)'
- en: Figure 9.18 – Updated inventory file with host variables
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.18 – 更新后的库存文件，包含主机变量
- en: 'After we have created the playbook, we can run it using the `ansible-playbook
    -i inventory networkteam.yml -u emcleroy -k --ask-become -v` command – the partial
    output is shown in the following screenshot:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完playbook后，我们可以使用`ansible-playbook -i inventory networkteam.yml -u emcleroy
    -k --ask-become -v`命令运行它——部分输出如下图所示：
- en: '![Figure 9.19 – Successful network teaming playbook run](img/Figure_9.19_B18607.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.19 – 成功的网络团队playbook运行](img/Figure_9.19_B18607.jpg)'
- en: Figure 9.19 – Successful network teaming playbook run
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.19 – 成功的网络团队playbook运行
- en: In this section, we learned how to team network interfaces together to provide
    redundancy across multiple NICs. In the next section, we will set up and manage
    DNS services.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何将网络接口组合在一起，以提供多个网卡的冗余。接下来的章节中，我们将设置和管理DNS服务。
- en: Managing DNS
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理DNS
- en: In this section, we will set up a DNS server.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将设置一个DNS服务器。
- en: '*Question 1* – For this question, we would like you to set up a DNS server.
    We would like you to add forward and reverse records for IPv4\. We will set up
    the DNS server on `rhel1.example.com`.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* —— 对于这个问题，我们希望你设置一个DNS服务器。我们希望你为IPv4添加正向和反向记录。我们将在`rhel1.example.com`上设置DNS服务器。'
- en: 'A and reverse aka PTR records will use the following information:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 正向和反向（即PTR）记录将使用以下信息：
- en: '[PRE18]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '*Answer 1* – We will start by installing the `bind` package:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* —— 我们将首先安装`bind`包：'
- en: '[PRE19]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Next, we will set up the firewall rules to allow for connectivity and the delivery
    of DNS records:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将设置防火墙规则，以允许连接并传递DNS记录：
- en: '[PRE20]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'From installing the package to setting up firewall rules, we will now configure
    the config DNS file, `/etc/named.conf`. This file should look like the following
    screenshot:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 从安装软件包到设置防火墙规则，我们现在将配置DNS文件`/etc/named.conf`。该文件应该像以下截图所示：
- en: '![Figure 9.20 – Configuration example settings](img/Figure_9.20_B18607.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.20 – 配置示例设置](img/Figure_9.20_B18607.jpg)'
- en: Figure 9.20 – Configuration example settings
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.20 – 配置示例设置
- en: 'Make sure to include the new zones in the configuration file as shown in the
    following screenshot:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在配置文件中包含新的区域，如下截图所示：
- en: '![Figure 9.21 – Zone information in the configuration file](img/Figure_9.21_B18607.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.21 – 配置文件中的区域信息](img/Figure_9.21_B18607.jpg)'
- en: Figure 9.21 – Zone information in the configuration file
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.21 – 配置文件中的区域信息
- en: 'Next, we need to create the zone files in the `/var/named` directory. These
    will include the forward and reverse zone records of `192.168.1.zone` and `example.com.zone`.
    We can see an example of each one in the following screenshots:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要在`/var/named`目录中创建区域文件。这些文件将包括`192.168.1.zone`和`example.com.zone`的正向和反向区域记录。我们可以在以下截图中看到每个文件的示例：
- en: '![Figure 9.22 – DNS zone file setup](img/Figure_9.22_B18607.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.22 – DNS区域文件设置](img/Figure_9.22_B18607.jpg)'
- en: Figure 9.22 – DNS zone file setup
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.22 – DNS区域文件设置
- en: 'After we have set up the forward zone, we will set up the reverse zone, as
    shown in the following screenshot:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置完正向区域后，我们将设置反向区域，如以下截图所示：
- en: '![Figure 9.23 – Reverse zone file](img/Figure_9.23_B18607.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.23 – 反向区域文件](img/Figure_9.23_B18607.jpg)'
- en: Figure 9.23 – Reverse zone file
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.23 – 反向区域文件
- en: 'Next, we will start and enable the `named` service that the `bind` package
    installed for running the DNS server:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将启动并启用`bind`包安装的`named`服务，用于运行DNS服务器：
- en: '[PRE21]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Then, we will do a lookup to ensure that we are getting the right addresses
    back for the names:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将进行查找，以确保获取到正确的地址：
- en: '[PRE22]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Next, we will install this by using Ansible Automation with the following playbook
    and templates:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用Ansible自动化通过以下剧本和模板进行安装：
- en: '[PRE23]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'The following are the templates that need to be in place for the correct configuration
    files to be successfully modified during the playbook execution as well. First,
    we have the `named.conf.j2` configuration file:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是需要在剧本执行过程中成功修改配置文件的模板。首先是`named.conf.j2`配置文件：
- en: '[PRE24]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Then, we have the zone files that are needed in order to provide the DNS records.
    First up is the `example.com.zone.j2` file:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要提供DNS记录的区域文件。首先是`example.com.zone.j2`文件：
- en: '[PRE25]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Finally, we will add in `192.168.1.zone.j2` for the **Pointer Record** (**PTR**)
    records, also known as the reverse lookup zone file:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将为**指针记录**（**PTR**）记录添加`192.168.1.zone.j2`，也就是反向查找区域文件：
- en: '[PRE26]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'After we create the playbook, we run the `ansible-playbook -i /home/emcleroy/playbooks/inventory
    dns.yml -u emcleroy -k --ask-become -v` command, and we can see the successful
    output in the following screenshot:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建完剧本后，我们运行命令`ansible-playbook -i /home/emcleroy/playbooks/inventory dns.yml
    -u emcleroy -k --ask-become -v`，并可以在以下截图中看到成功的输出：
- en: '![Figure 9.24 – Successful DNS server deployment via Ansible Automation](img/Figure_9.24_B18607.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.24 – 通过Ansible自动化成功部署DNS服务器](img/Figure_9.24_B18607.jpg)'
- en: Figure 9.24 – Successful DNS server deployment via Ansible Automation
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.24 – 通过Ansible自动化成功部署DNS服务器
- en: Managing DHCP
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理DHCP
- en: In this section, we will be setting up a DHCP server.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将设置一个DHCP服务器。
- en: '*Question 1* – For this question, we would like you to set up a DHCP server
    on `rhel1.example.com` that serves the `192.168.1.0`/`24` subnet with an available
    IP range of `192.168.1.100` – `192.168.1.220`. The DNS server is `192.168.1.198`
    or your `rhel1.example.com` IP address. We will want static entries for the following:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* – 对于这个问题，我们希望你在`rhel1.example.com`上设置一个DHCP服务器，服务`192.168.1.0`/`24`子网，提供可用的IP范围`192.168.1.100`
    – `192.168.1.220`。DNS服务器是`192.168.1.198`或你的`rhel1.example.com` IP地址。我们希望以下静态条目：'
- en: '[PRE27]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '*Answer 1* – We will start by installing the `dhcp-server` package as shown
    in the following:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* – 我们将首先安装`dhcp-server`软件包，如下所示：'
- en: '[PRE28]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Next, we will set up the `dhcp` file to accommodate and provide the IP range
    in `/etc/dhcp/dhcpd.conf`, as seen in the following screenshot:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将设置`dhcp`文件，以便在`/etc/dhcp/dhcpd.conf`中提供IP范围，如以下截图所示：
- en: '![Figure 9.25 – DHCP server configuration file](img/Figure_9.25_B18607.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.25 – DHCP服务器配置文件](img/Figure_9.25_B18607.jpg)'
- en: Figure 9.25 – DHCP server configuration file
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.25 – DHCP服务器配置文件
- en: 'Remember there is no need to remember all the lines, as there is an example
    provided after the installation found here: `/usr/share/doc/dhcp-server/dhcpd.conf.example`.
    After we have set up the DHCP configuration file, we will open the firewall rules
    and start and enable `dhcp` services for the server:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，无需记住所有行，因为安装后提供了一个示例，您可以在此找到：`/usr/share/doc/dhcp-server/dhcpd.conf.example`。设置完DHCP配置文件后，我们将开放防火墙规则，并启动和启用服务器上的`dhcp`服务：
- en: '[PRE29]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Now, let’s set up a DHCP server using Ansible Automation. We will start with
    the following playbook:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用Ansible自动化设置DHCP服务器。我们将从以下playbook开始：
- en: '[PRE30]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The following code displays the contents of the `dhcpd.conf.j2` file:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码显示`dhcpd.conf.j2`文件的内容：
- en: '[PRE31]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'After we have created the playbook, we can run it using the `ansible-playbook
    -i inventory dhcp.yml -u emcleroy -k --ask-become -v` command to run an Ansible
    playbook successfully, as can be seen in the following screenshot:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完playbook后，我们可以使用`ansible-playbook -i inventory dhcp.yml -u emcleroy -k --ask-become
    -v`命令成功运行Ansible playbook，如下截图所示：
- en: '![Figure 9.26 – Successful DHCP server playbook run](img/Figure_9.26_B18607.jpg)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![图9.26 – 成功的DHCP服务器playbook运行](img/Figure_9.26_B18607.jpg)'
- en: Figure 9.26 – Successful DHCP server playbook run
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.26 – 成功的DHCP服务器playbook运行
- en: In this section, we learned how to set up a DHCP server, including static entries
    in the configuration files. In the next section, we will work with printers that
    are on your network at home or work.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们学习了如何设置DHCP服务器，包括配置文件中的静态条目。在下一节中，我们将处理您在家或工作中的网络打印机。
- en: Managing printers
  id: totrans-193
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打印机管理
- en: In this section, we will be managing networked printers.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们将管理网络打印机。
- en: '*Question 1* – For this question, we would like you to set up a network printer
    on `rhel1.example.com`. Please set up a print queue named `myqueue`. If you have
    a network printer, you can test this. If not, you will not be able to test this
    solution/answer.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题1* – 对于这个问题，我们希望您在`rhel1.example.com`上设置一个网络打印机。请设置一个名为`myqueue`的打印队列。如果您有网络打印机，您可以进行测试。如果没有，您将无法测试该解决方案/答案。'
- en: '*Answer 1* – We will start by installing `cups` on the system:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案1* – 我们将从在系统上安装`cups`开始：'
- en: '[PRE32]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'We will then enable and start `cups` print services:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将启用并启动`cups`打印服务：
- en: '[PRE33]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Next, we will allow `mdns` firewall rules to allow access to the printer services:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将允许`mdns`防火墙规则，允许访问打印服务：
- en: '[PRE34]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'We will use the `ippfind` command to find the printers available. In my case,
    I will use `Brother`:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用`ippfind`命令查找可用的打印机。以我为例，我将使用`Brother`：
- en: '[PRE35]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Next, we will use the `ipp` address to create the print queue, `myqueue`, and
    add the printer to the queue:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用`ipp`地址创建打印队列`myqueue`，并将打印机添加到队列中：
- en: '[PRE36]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'If you run into the `lpadmin: Unable to connect to "BRW9C305BC2B044.local:631":
    Name or service not known` error, make sure that your DNS can look up that local
    address, and if not, put the host record that directs the use of a shortname or
    URL to an IP address in your `/``etc/hosts` file.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '如果遇到`lpadmin: Unable to connect to "BRW9C305BC2B044.local:631": Name or service
    not known`错误，请确保您的DNS能够解析该本地地址。如果不能，请在`/etc/hosts`文件中添加主机记录，将短名称或URL映射到IP地址。'
- en: 'Finally, we will set the default queue destination for printing:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将设置打印的默认队列目标：
- en: '[PRE37]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Next up, we will set up printers with Ansible Automation using the following
    playbook:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用以下playbook通过Ansible自动化设置打印机：
- en: '[PRE38]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'After we have created the playbook, we can run it using the `ansible-playbook
    -i inventory cups.yml -u emcleroy -k --ask-become -v` command to run an Ansible
    playbook successfully, as can be seen in the following screenshot:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完playbook后，我们可以使用`ansible-playbook -i inventory cups.yml -u emcleroy -k --ask-become
    -v`命令成功运行Ansible playbook，如下截图所示：
- en: '![Figure 9.27 – Successful cups playbook run](img/Figure_9.27_B18607.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![图9.27 – 成功的cups playbook运行](img/Figure_9.27_B18607.jpg)'
- en: Figure 9.27 – Successful cups playbook run
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.27 – 成功的cups playbook运行
- en: In this section, we learned how to connect to a network printer that may be
    available to you to utilize for your everyday work. In the next section, we will
    show you how to set up email services on your servers.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们学习了如何连接到可用的网络打印机，供日常工作使用。在下一节中，我们将向您展示如何在服务器上设置电子邮件服务。
- en: Managing email services
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电子邮件服务管理
- en: In this section, we will be creating email services on a server.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们将在服务器上创建电子邮件服务。
- en: '*Question 1* – For this question, we would like you to make a null zero client
    on `rhel1.example.com`. We would like any locally delivered mail to be forwarded
    to `rhel2.example.com` for normal delivery to the mail services:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* – 对于此问题，我们希望你在`rhel1.example.com`上创建一个空客户端。我们希望所有本地递送的邮件都能转发到`rhel2.example.com`，并正常送达邮件服务：'
- en: '[PRE39]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '*Answer 1* – We will start by installing `postfix`. We will then set the correct
    parameters that are noted in the question and ensure that the mail server does
    not accept external or internal mail:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* – 我们将首先安装`postfix`，然后设置问题中提到的正确参数，确保邮件服务器不接受外部或内部邮件：'
- en: '[PRE40]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Keep in mind that if the exam has you set this for IPv6 as well, make sure to
    set up `inet_protocols` for both IPv4 and IPv6.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，如果考试要求你为 IPv6 进行设置，请确保同时为 IPv4 和 IPv6 设置`inet_protocols`。
- en: 'Next, we will create an Ansible playbook to complete this same process:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个 Ansible 剧本来完成这个过程：
- en: '[PRE41]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'After we have created the playbook, we will use the `ansible-playbook -i inventory
    email.yml -u emcleroy -k --ask-become -v` command and run an Ansible playbook
    successfully, as shown in the following screenshot:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们创建剧本后，我们将使用`ansible-playbook -i inventory email.yml -u emcleroy -k --ask-become
    -v`命令，并成功运行 Ansible 剧本，如下图所示：
- en: '![Figure 9.28 – Successful Ansible playbook run for email services](img/Figure_9.28_B18607.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.28 – 成功运行的 Ansible 剧本，用于邮件服务](img/Figure_9.28_B18607.jpg)'
- en: Figure 9.28 – Successful Ansible playbook run for email services
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.28 – 成功运行的 Ansible 剧本，用于邮件服务
- en: In this section, we showed you how to modify email services and provided an
    example of setting up a null client configuration. In the next section, we will
    be going over MariaDB configuration and administration.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们向你展示了如何修改邮件服务，并提供了设置空客户端配置的示例。在下一节中，我们将讨论 MariaDB 配置和管理。
- en: Managing a MariaDB database server
  id: totrans-228
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理 MariaDB 数据库服务器
- en: In this section, we will be installing MariaDB, adding to tables, backing up,
    restoring the content that was previously stored in the columns and tables, and
    searching through the database.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将安装 MariaDB，添加表，备份，恢复之前存储在列和表中的内容，并搜索数据库。
- en: '*Question 1* – For this question, we will install and securely set up MariaDB
    so that `root` can only access locally and the `root` password is `redhat`. We
    will also do the following:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* – 对于此问题，我们将安装并安全设置 MariaDB，使得`root`只能本地访问，并且`root`的密码是`redhat`。我们还将执行以下操作：'
- en: Create a database named `available_stock`
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个名为`available_stock`的数据库
- en: Create the user `fred` with the password `redhat` with full user rights on database
    inventory
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建用户`fred`，设置密码`redhat`，并赋予其在数据库清单上的完全用户权限
- en: Create a backup of the database inventory
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建数据库清单的备份
- en: Restore the backup of the database inventory
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恢复数据库清单的备份
- en: '*Answer 1* – We will start by installing the `mariadb` server, starting and
    enabling it, after which we will secure the installation:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* – 我们将首先安装`mariadb`服务器，启动并启用它，然后进行安全安装：'
- en: '[PRE42]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: We will choose to only allow `root` locally during the secure installation.
    We will choose to remove the test database. We will set a password for `root`
    at this time as well.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在安全安装过程中选择仅允许本地的`root`用户。我们将选择删除测试数据库，并在此时为`root`设置密码。
- en: 'After we have started MariaDB and secured the installation, we will log in
    and create the database and user:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动 MariaDB 并进行安全安装后，我们将登录并创建数据库和用户：
- en: '[PRE43]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Next, we are going to take a backup of the database:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将备份数据库：
- en: '[PRE44]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'For the Ansible playbook, we are going to modify this, and in a slightly different
    way, we will set up just the database. We will now set up the MariaDB database
    using an Ansible Automation playbook as follows:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Ansible 剧本，我们将对其进行修改，并以稍有不同的方式，仅设置数据库。我们将通过如下所示的 Ansible 自动化剧本来设置 MariaDB
    数据库：
- en: '[PRE45]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'After we have completed creating the playbook, we will run the `ansible-playbook
    -i inventory mariadb.yml -u emcleroy -k --ask-become -v` command and see the successful
    output of the playbook in the following screenshot:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们完成创建剧本之后，我们将运行`ansible-playbook -i inventory mariadb.yml -u emcleroy -k --ask-become
    -v`命令，并在以下截图中查看剧本的成功输出：
- en: '![Figure 9.29 – Successful MariaDB playbook run](img/Figure_9.29_B18607.jpg)'
  id: totrans-245
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.29 – 成功运行的 MariaDB 剧本](img/Figure_9.29_B18607.jpg)'
- en: Figure 9.29 – Successful MariaDB playbook run
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.29 – 成功运行的 MariaDB 剧本
- en: In this section, we learned how to configure MariaDB, including setting up users
    for the database. In the next section, we will be going over setting up web servers.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 本节我们学习了如何配置 MariaDB，包括为数据库设置用户。下一节将介绍如何设置 Web 服务器。
- en: Managing web access
  id: totrans-248
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理 Web 访问
- en: In this section, we will be setting up web hosts using Apache.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用 Apache 设置 Web 主机。
- en: '*Question 1* – For this question, you will need to set up an Apache web host
    that displays `rhel1.example.com` server on the browser via port `80`.'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* – 对于这个问题，您需要设置一个 Apache 网络主机，通过端口 `80` 在浏览器中显示 `rhel1.example.com` 服务器。'
- en: '*Answer 1* – We will start by installing Apache via the `httpd` package on
    the `rhel1.example.com` server using the following command:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* – 我们将首先通过以下命令在 `rhel1.example.com` 服务器上安装 Apache，使用 `httpd` 包：'
- en: '[PRE46]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'After `httpd` has been successfully installed, we will create the `index.html`
    file in the default web page location of `/var/www/html/index.html`. Use your
    text editor of choice and create the file with **This server is working on Apache!!!**
    in it. Once we have created the file, we will then start and enable the service
    as displayed in the following commands:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `httpd` 安装成功后，我们将在默认的网页位置 `/var/www/html/index.html` 创建 `index.html` 文件。使用您喜欢的文本编辑器，创建文件并写入
    **此服务器正在 Apache 上运行!!!**。创建文件后，我们将启动并启用服务，如下命令所示：
- en: '[PRE47]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'After we have started and enabled the service, we will need to open the firewall
    rules to allow connectivity via HTTP using the following commands:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动并启用服务后，我们需要打开防火墙规则，以便通过 HTTP 进行连接，使用以下命令：
- en: '[PRE48]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Once we have opened the firewall rules, we will then be able to confirm that
    this is working by navigating to the web page via a browser. The following screenshot
    demonstrates a successful deployment of Apache `httpd`:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们打开防火墙规则，就可以通过浏览器访问网页来确认是否成功。以下截图展示了成功部署 Apache `httpd`：
- en: '![Figure 9.30 – Successful web host serving the index.html file](img/Figure_9.30_B18607.jpg)'
  id: totrans-258
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.30 – 成功的网络主机正在提供 index.html 文件](img/Figure_9.30_B18607.jpg)'
- en: Figure 9.30 – Successful web host serving the index.html file
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.30 – 成功的网络主机正在提供 index.html 文件
- en: 'Now, we will set up Apache `httpd` via Ansible Automation using the following
    playbook:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将通过 Ansible 自动化设置 Apache `httpd`，使用以下 playbook：
- en: '[PRE49]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: Please ensure that `index.html.j2` is within your playbook directory so that
    it can be copied over successfully.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 请确保 `index.html.j2` 位于您的 playbook 目录中，以便成功复制。
- en: 'We will use the following command to run the playbook:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下命令运行 playbook：
- en: '[PRE50]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: In this section, we set up web server access. In the next section, we will be
    working with NFS file shares.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 本节中，我们设置了 Web 服务器访问。下一节将介绍如何使用 NFS 文件共享。
- en: Managing NFS
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 管理 NFS
- en: In this section, we will be going over NFS.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍 NFS。
- en: '*Question 1* – For this question, you will need to make an NFS export on `rhel1.example.com`
    of the `/test` folder with read-only privileges to the `192.168.1.0/24` network
    and no access for the `172.16.1.0/24` network.'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 1* – 对于这个问题，您需要在 `rhel1.example.com` 上创建一个 NFS 导出，将 `/test` 文件夹以只读权限导出到
    `192.168.1.0/24` 网络，并且对 `172.16.1.0/24` 网络没有访问权限。'
- en: '*Question 2* – For this question, you will need to mount `/test` from `rhel1.example.com`
    on `rhel2.example.com` under `/mnt/test`, and you will need to ensure that it
    mounts on startup.'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '*问题 2* – 对于这个问题，您需要将 `rhel1.example.com` 上的 `/test` 挂载到 `rhel2.example.com`
    的 `/mnt/test` 目录下，并确保它在启动时自动挂载。'
- en: '*Answer 1* – We will start by installing `nfs-utils` using the following command:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 1* – 我们将首先使用以下命令安装 `nfs-utils`：'
- en: '[PRE51]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'After we install `nfs-utils`, we will need to enable and start the service.
    Then, we will ensure that it is running by using the following commands:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 `nfs-utils` 后，我们需要启用并启动服务。然后，我们将使用以下命令确保它正在运行：
- en: '[PRE52]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'After that, we will create the `/test` directory using the following command:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将使用以下命令创建 `/test` 目录：
- en: '[PRE53]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'After that, we will add the folder to the `/etc/exports` file in order to export
    it with the proper privileges, allow access from the `192.168.1.0/24` domain,
    and, by default, block it from the rest of the networks, as shown in the following
    screenshot:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将把文件夹添加到 `/etc/exports` 文件中，以便以适当的权限导出它，允许来自 `192.168.1.0/24` 域的访问，并默认阻止来自其他网络的访问，具体如以下截图所示：
- en: '![Figure 9.31 – exports file for NFS shares](img/Figure_9.31_B18607.jpg)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.31 – 用于 NFS 共享的 exports 文件](img/Figure_9.31_B18607.jpg)'
- en: Figure 9.31 – exports file for NFS shares
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.31 – 用于 NFS 共享的 exports 文件
- en: 'After we add the folder to the `exports` list, we will use the following commands
    to expose the NFS share:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们将文件夹添加到`exports`列表后，我们将使用以下命令暴露NFS共享：
- en: '[PRE54]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Then, we will open the firewall rules to allow NFS services out to the world
    using the following commands:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将打开防火墙规则，以允许NFS服务向外部世界提供服务，使用以下命令：
- en: '[PRE55]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'For the Ansible solution, we will create the following playbook in order to
    complete the automated version of these manual tasks:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ansible解决方案，我们将创建以下playbook来完成这些手动任务的自动化版本：
- en: '[PRE56]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'We will use the following command to run the `ansible-playbook -i inventory
    nfs_server.yml -u emcleroy -k --ask-become -v` playbook and you can see a successful
    run of the Ansible playbook in the following screenshot:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下命令运行`ansible-playbook -i inventory nfs_server.yml -u emcleroy -k --ask-become
    -v` playbook，以下截图显示了Ansible playbook的成功执行：
- en: '![Figure 9.32 – Successful playbook run creating an NFS share](img/Figure_9.32_B18607.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.32 – 成功运行的playbook创建NFS共享](img/Figure_9.32_B18607.jpg)'
- en: Figure 9.32 – Successful playbook run creating an NFS share
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.32 – 成功运行的playbook创建NFS共享
- en: '*Answer 2* – After we have completed *Question 1*, we can dive into attaching
    the `share` folder to a new machine. On `Rhel2`, we will start by opening the
    firewall to allow NFS connectivity, as shown in the following commands:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '*答案 2* – 在完成*问题 1*后，我们可以开始将`share`文件夹附加到新机器上。在`Rhel2`上，我们将首先打开防火墙，以允许NFS连接，如下命令所示：'
- en: '[PRE57]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Next, we are going to create the mount point folder in order to add the share
    to `/etc/fstab` and mount it:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建挂载点文件夹，以便将共享添加到`/etc/fstab`并进行挂载：
- en: '[PRE58]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'After that, we are going to add the NFS share to the `/etc/fstab` file in order
    to set it to mount at startup. The file should look something like the following
    screenshot but may differ depending on how you set up your test environment:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将把NFS共享添加到`/etc/fstab`文件中，以便它在启动时自动挂载。该文件应该如下截图所示，但根据你的测试环境设置，可能会有所不同：
- en: '![Figure 9.33 – fstab showing the mounts to run at startup](img/Figure_9.33_B18607.jpg)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.33 – 显示启动时运行的挂载项的fstab](img/Figure_9.33_B18607.jpg)'
- en: Figure 9.33 – fstab showing the mounts to run at startup
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.33 – 显示启动时运行的挂载项的fstab
- en: 'Once this has been added to `fstab`, we will then mount the items in `fstab`
    using the following command:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦将其添加到`fstab`中，我们将使用以下命令挂载`fstab`中的项目：
- en: '[PRE59]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Now, to test that this is working, add a file to the `test` directory on `rhel1`
    using the following command:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了测试这个是否有效，请使用以下命令向`rhel1`上的`test`目录添加一个文件：
- en: '[PRE60]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Once you have done that, navigate to the folder mount point of `/mnt/test`
    and ensure you can view the file from `rhel2` using the following commands:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，导航到`/mnt/test`的文件夹挂载点，并确保你可以从`rhel2`查看文件，使用以下命令：
- en: '[PRE61]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'As you can see, you are able to view the file. Now, try to add a file to the
    `/mnt/test` folder on `rhel2` and you should receive an error message, such as
    the one shown in the following screenshot, as this is a read-only share:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，你能够查看文件。现在，尝试向`rhel2`上的`/mnt/test`文件夹添加一个文件，你应该会收到一条错误信息，如下截图所示，因为这是一个只读共享：
- en: '![Figure 9.34 – Demonstration of being unable to write to any file within the
    share from outside of the server](img/Figure_9.34_B18607.jpg)'
  id: totrans-302
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.34 – 演示无法从服务器外部写入共享中的任何文件](img/Figure_9.34_B18607.jpg)'
- en: Figure 9.34 – Demonstration of being unable to write to any file within the
    share from outside of the server
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.34 – 演示无法从服务器外部写入共享中的任何文件
- en: Now, you have successfully mounted the read-only share, which will persist through
    a reboot as `fstab` mounts the listed mounts at startup.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经成功挂载了只读共享，它将通过重启持续存在，因为`fstab`会在启动时挂载列出的挂载项。
- en: 'Next, we will complete these manual tasks using Ansible Automation. We will
    use the following playbook to accomplish the mounting of the share:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用Ansible自动化完成这些手动任务。我们将使用以下playbook来完成共享的挂载：
- en: '[PRE62]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: 'After we have created the playbook, we will run it with the `ansible-playbook
    -i inventory nfs_client.yml -u emcleroy -k --ask-become -v` command. The following
    screenshot shows the successful execution of the playbook:'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们创建了playbook后，我们将使用`ansible-playbook -i inventory nfs_client.yml -u emcleroy
    -k --ask-become -v`命令运行它。以下截图显示了playbook成功执行：
- en: '![Figure 9.35 – Successful playbook run to mount NFS share](img/Figure_9.35_B18607.jpg)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.35 – 成功运行的playbook挂载NFS共享](img/Figure_9.35_B18607.jpg)'
- en: Figure 9.35 – Successful playbook run to mount NFS share
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.35 – 成功运行的playbook挂载NFS共享
- en: Summary
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we presented you with mock exam questions that you may be asked
    in some form on the exam itself. We explored what we have learned throughout this
    book through this comprehensive review. New ways of completing tasks were also
    shown in order for you to further enhance your abilities to answer the exam questions
    with ease. In the next chapter, we will look over some exam tips to save you both
    time and stress when taking the exam. We will go over different ways to approach
    the exam to effectively meet the requirements and pass. I look forward to providing
    these tips and tricks, and hope you benefit in some way from them and my own experience
    of taking these exams over the years.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们为你呈现了一些模拟考试题，这些题目可能以某种形式出现在实际考试中。通过这次全面的复习，我们回顾了本书中所学的内容。同时，我们还展示了完成任务的新方法，以便你进一步提高答题能力，轻松应对考试。在下一章，我们将分享一些考试技巧，帮助你在考试中节省时间，减轻压力。我们将讨论不同的应试策略，帮助你有效地应对考试要求并顺利通过。我期待提供这些技巧和经验，并希望你能从中受益，尤其是我多年来参加这些考试的经验。
