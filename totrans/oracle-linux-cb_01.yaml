- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Oracle Linux 8 – Get It? Got It? Good!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You finally made the choice to upgrade to the most secure and reliable free
    Linux distribution and now need to learn a few tricks. What’s next? How do you
    get started? It’s time to go back to the basics and answer the question *How do
    you install* *Oracle Linux?*
  prefs: []
  type: TYPE_NORMAL
- en: Back in the old days, installing a Linux distribution was a simple task; you
    simply ordered a CD-ROM, popped it into your computer, and booted from the disk.
    *Simple*… *effective*… and a *pain* for many system administrators. Who wants
    to order a CD-ROM, or for that matter, who even uses CD-ROMs or DVDs, or even
    Blu-ray disks, anymore? Do you even need media? Can’t you just boot from the network
    to install? To make it more complicated, what happens when you are in the cloud?
    Doesn’t the cloud do it all for you? What about the CPU type, such as Arm or x86?
    How can you automate things?
  prefs: []
  type: TYPE_NORMAL
- en: We also need to consider that there is more than just x86-64, with Arm becoming
    more and more popular due to its advantages. What about older systems; do you
    have to install Oracle Linux 8 from scratch, or can you just upgrade an Oracle
    Linux 7 system? Speaking of upgrades, what about RHEL and CentOS system? Can they
    be migrated to Oracle Linux? After all, they are both Fedora-based, just like
    Oracle Linux.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will provide insights into these questions and help you learn a
    few tricks to automate installing Oracle Linux, as well as some helpful troubleshooting
    tips if the installation does not go as planned.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following main recipes in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Oracle Linux 8 – which ISO is right? USB? Does anyone use DVDs?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Burning an ISO so it’s bootable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Two for the price of one – running Oracle Linux on **Windows Subsystem for**
    **Linux** (**WSL**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arm'ing for the future of IT – it’s not just a slice of Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leapping from Oracle Linux 7 to 8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Migrating from CentOS to Oracle Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The related configuration files for many of the recipes in this book are available
    on GitHub, at [https://github.com/PacktPublishing/Oracle-Linux-Cookbook](https://github.com/PacktPublishing/Oracle-Linux-Cookbook).
  prefs: []
  type: TYPE_NORMAL
- en: Oracle Linux 8 – which ISO is right? USB? Does anyone use DVDs?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we start anything else, let’s look at installing Oracle Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When installing Oracle Linux, you must first decide how to do the installation.
    There are a variety of options, from booting a new computer to an installable
    image, cloning a drive from another system, or even booting from the network.
    For all of these options, you need to have the right media. Trying to install
    using the source code **Red Hat Package Manager** (**RPM**) or the wrong CPU architecture
    is not going to cut it. Before you download anything, you will need internet access
    and enough free disk space to save the ISO file. Usually, at least 10 GB is recommended
    to download the ISO. Additional space will also be needed if you are going to
    use Oracle VM VirtualBox to run VMs based on the ISO. It’s common to allocate
    100 GB or more per VM, as this allows you to quickly grow a filesystem without
    having to add another disk to the volume group. That being said, 50 GB is the
    default for Oracle’s cloud images and can work for many users. In the cloud, the
    advantage of using a smaller disk is reduced costs, as the smaller disk equates
    to lower expenses.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: RPM is also defined as RPM Package Manager, but that’s recursive and confusing
    to many folks.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You also need to understand the hardware you are using for the installation.
    Burning an ISO to a DVD (or other optical formats) might be great for older systems
    that have these drives, but modern systems more often than not install via USB
    boot. Enterprise-grade servers take this to an even higher level, enabling you
    to boot from an ISO file mounted over the network or virtual console. You can
    also boot most systems from a **Preboot eXecution Environment** (**PXE**) server,
    for a more automated network-based installation. The choice of what method you
    use is really based on your hardware, and then how much automation you need.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Be careful of the automation trap. Often, you can spend significantly more time
    automating an installation than doing it by hand. In smaller environments, while
    automation is nice, it can take significantly more time to build and maintain
    the automation compared to doing 3-4 manual builds a year.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Though disk images are commonly called an ISO, the actual format of the ISO
    file is ISO 9660 Joliet, which is a format for optical disk media. **ISO** is
    actually an acronym for the **International Organization for Standardization**
    ([https://www.iso.org/home.html](https://www.iso.org/home.html)). The ISO organization
    was formed in 1947 and has standards for everything from quality management (ISO
    9001) to food safety (ISO 22000).
  prefs: []
  type: TYPE_NORMAL
- en: The easiest way to get the media is to download the ISO files from [https://yum.oracle.com/oracle-linux-isos.html](https://yum.oracle.com/oracle-linux-isos.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'On the site, there are four types of ISOs:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Full ISO**: This is the full installation for Oracle Linux. The ISO file
    contains everything needed to install Oracle Linux and is bootable. You can boot
    a system with this ISO by burning the file to a USB stick, or even a DVD. Also,
    on many servers, you can boot a system by virtually mounting the ISO via the lights-out
    management software. There are many types of remote control options on systems,
    including the generic **Intelligent Platform Management Interface** (**IPMI**),
    which has basic functionality, and the open source **Baseboard Management Controller**
    (**BMC**), which adds additional features. Most major hardware vendors also offer
    specific technologies, such as Oracle **Integrated Lights Out Manager** (**ILOM**),
    Dell’s **integrated Dell Remote Access Controller** (**iDRAC**), and HP’s **Integrated
    Lights** **Out** (**ILO**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Boot ISO**: This ISO is bootable using the Red Hat-compatible kernel for
    the installation process. It does not include all the files required to install.
    While this is a much smaller file, you will need the remainder of the installed
    RPM on your network or a local device. You can access the files via HTTP, enabling
    sourcing the files from [https://yum.oracle.com/](https://yum.oracle.com/) or
    a local HTTP server on your network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The **Unbreakable Enterprise Kernel** (**UEK**) for Oracle Linux has many advantages,
    such as enabling the BTFS filesystem for root, or a more modern kernel that matches
    the mainstream Linux kernel and includes better support for modern devices.
  prefs: []
  type: TYPE_NORMAL
- en: '**UEK boot ISO**: This ISO is bootable to the more modern UEK, but just like
    the boot ISO, it does not include all the files required to install. Installing
    using the more modern UEK is helpful, especially on systems that can’t install
    correctly on the older **Red Hat-Compatible Kernel** (**RHCK**). While this is
    a much smaller file, you will need the remainder of the installed RPMs on your
    network. UEK the only option for installation on the Arm architecture.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Source ISO**: This ISO is *not* bootable, but it’s helpful as it contains
    all the source RPMs, enabling you to audit the source code.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: With both boot ISO options, the media must be available on the network on an
    FTP server, an HTTP/HTTPS server, or an NFS server.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, there are two CPU families available. Make sure you pick the
    correct architecture for the installation. Let’s look at what they are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**x86_64**: This is the most common architecture and is used on most Intel
    and AMD systems. This includes Intel X-series processors and the i9, i7, i5, and
    i3 processors. For AMD systems, this includes the AMD EPYC processors, Ryzen processors,
    and the Athlon line. This is the most common option, but it’s being challenged
    in the industry by the Arm option. The full list of options from the download
    site for x86 can be seen in the following figure:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 1.1 – x86_64 ISOs](img/B18349_01_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.1 – x86_64 ISOs
  prefs: []
  type: TYPE_NORMAL
- en: '**AArch64**: This is what you need when using Oracle Linux on Arm servers,
    such as Raspberry Pi, or Ampere’s high-performance *cloud-native processor* CPUs.
    A cloud-native processor is a term for a CPU specifically designed for running
    cloud-native applications, optimized for lower power consumption with a more scalable
    architecture.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Running Oracle Linux on Arm is a very interesting option, as the application
    building blocks such as Java, Apache, Python, and Podman run using the same software
    versions that the x86 architectures use. All of these building blocks run almost
    identically to how they do on the x86 architecture, making the switch to Arm using
    Oracle Linux really easy for the applications. The advantage of Arm is it runs
    at a lower cost and higher density, offering a very attractive cost/performance
    story, enabling organizations to easily lower costs while improving performance.
    The currently available matrix of options for downloading Arm ISOs from the download
    site can be found in the following figure:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.2 – Arm ISOs](img/B18349_01_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.2 – Arm ISOs
  prefs: []
  type: TYPE_NORMAL
- en: Once we understand the platform, we also need to make another decision as to
    what version to use. Sometimes you may be able to download older versions and
    you may want to verify that the release will be supported. At the time of writing,
    while release 6 can be downloaded, support is available if you have purchased
    *Extended Support*, which is only available until June 2024.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Extended Support from Oracle allows you to pay a fee in order to get support,
    including patches and fixes for critical security issues and select high-impact
    critical bugs. This support does not cover all RPMs. Given this, you may want
    to reconsider downloading and using older versions of Linux and avoid delaying
    upgrading the OS past the point of it being generally available. The value of
    Extended Support is that it can give you additional time to upgrade applications
    that require older versions of Oracle Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Before you pick a release, check with your application team to verify the version
    is supported. There are differences between the major number (7 versus 8, etc.)
    and some software may not be available on all major release numbers. An example
    is **Oracle Linux Automation Manager** (this gives you centralized Ansible control,
    based on the AWX project, and is almost identical to Ansible Tower from Red Hat),
    which requires Oracle Linux 8\. Another example is Oracle Linux Manager (aka Spacewalk),
    which requires Oracle Linux 7 for the server.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Since Oracle Linux tracks Red Hat Enterprise Linux, the major and minor numbers
    are identical. Oracle Linux 7.10 is the same as Red Hat Enterprise Linux 7.10.
  prefs: []
  type: TYPE_NORMAL
- en: Burning an ISO so it’s bootable
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you have the ISO downloaded, you may need to do some additional preparations.
    If you are installing using a USB device, simply copying the file to a flash drive
    will not work, as the ISO is not actually unpacked on the media. If the ISO is
    not correctly unpacked and the media is not made bootable, you will be unable
    to boot and install from the media. The process of burning the ISO file to media
    correctly unpacks the media into individual files and directories as well as making
    the media bootable. If this is not done, all the media will have is a copy of
    the single ISO file.
  prefs: []
  type: TYPE_NORMAL
- en: There are several tools available to do this. With most systems no longer using
    optical media, the most common way is to boot a server from a flash drive or a
    virtual disk.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before you start, you will first need to download an ISO image. You also will
    need a USB flash drive, ideally with more than 16 GB of space. As the distro grows,
    8 GB drives are no longer large enough for a full media installation ISO.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before you can boot from a flash drive, you must first burn the ISO file to
    the flash drive. In Windows systems, a commonly used free tool is **balenaEtcher**,
    which can be downloaded from [https://www.balena.io/etcher/](https://www.balena.io/etcher/).
    Take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Once **Etcher** is installed, you will need to run it (make sure you right-click
    on it and run it as an administrator) and select the image file as the source
    and the flash drive as the destination.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the following screenshot, the source is the **Oracle Linux 8.7 ISO** for
    **x64**, and the destination is a flash drive:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.3 – Selecting the source and destination with Etcher](img/B18349_01_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.3 – Selecting the source and destination with Etcher
  prefs: []
  type: TYPE_NORMAL
- en: 'Etcher can automatically work with the compressed file, so in a few minutes
    (as seen in the following screenshot), you should have a flash drive with the
    image installed and ready to boot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.4 – balenaEtcher burning an ISO](img/B18349_01_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.4 – balenaEtcher burning an ISO
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: When using flash devices , be careful of discount brands. Often, off-brand cards
    can have significantly slower performance than name-brand cards. Also, when buying
    online, be careful of fake cards. Always buy flash devices from reputable vendors.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once you have the ISO file burned to a USB device, you can boot a server from
    the media. How you can boot from a USB device is based on the make and model of
    the system. Arm x86 systems have a setting in their **basic input/output system**
    (**BIOS**) that will allow you to boot from the freshly burned media. Arm systems
    usually use the **Unified Extensible Firmware Interface** (**UEFI**) firmware
    to boot from an ISO or USB stick.
  prefs: []
  type: TYPE_NORMAL
- en: One of the most common ways to install Oracle Linux on a server is to boot straight
    from the ISO file. Enterprise-grade servers, such as Ampere Arm systems, can allow
    you to boot from the ISO file by mounting the ISO as a virtual drive. Additionally,
    you can boot using a network boot technology called PXE, which is pronounced *pixie*.
  prefs: []
  type: TYPE_NORMAL
- en: Two for the price of one – running Oracle Linux on Windows Subsystem for Linux
    (WSL)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is one last way to install Oracle Linux on Microsoft Windows desktops,
    with WSL.
  prefs: []
  type: TYPE_NORMAL
- en: WSL lets you easily install Oracle Linux directly on Windows without the need
    to install a traditional VM such as VirtualBox. WSL includes an integrated VM,
    preconfigured for Windows, hiding the hypervisor from the user. WSL also has the
    advantage of enabling Linux commands straight from Windows, including Linux services
    such as Apache, MySQL, SSHD, Nginx, and PostgreSQL.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before you start, you will need a Windows 10 or Windows 11 system with internet
    access. You will also need local admin privileges on the system. This is not a
    difficult recipe and is well worth the time.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Installing WSL is fairly straightforward. You will need to take the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Start Command Prompt as an administrator. Don’t forget to right-click on **Command
    Prompt** to run this as an administrator, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.5 – Running Command Prompt as an administrator](img/B18349_01_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.5 – Running Command Prompt as an administrator
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: While these instructions are for WSL, please note that it’s really covering
    **WSL2**. There was an earlier release of WSL, also known as **WSL1**, that works
    slightly differently and is no longer used or deployed. Older versions of WSL
    should normally be avoided. This also goes for the OS version; use the latest
    8.X version when possible.
  prefs: []
  type: TYPE_NORMAL
- en: From Command Prompt, run the `wsl.exe –install` command. This will start several
    tasks off, including installing the Microsoft VM platform that enables WSL under
    the covers, installing the WSL subsystem itself, and installing an Ubuntu Linux
    distro.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the installation is complete, as seen in the following screenshot, Windows
    will need to be rebooted:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.6 – WSL installation](img/B18349_01_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.6 – WSL installation
  prefs: []
  type: TYPE_NORMAL
- en: 'Once your system is backed up, we will install Oracle Linux 8.5 as the Linux
    OS used by WSL. To do this, start the `Oracle Linux` in the search bar:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.7 – Microsoft Store searching for Oracle Linux 8.5](img/B18349_01_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.7 – Microsoft Store searching for Oracle Linux 8.5
  prefs: []
  type: TYPE_NORMAL
- en: 'In the search results, select the **Oracle Linux 8.5** app. This will take
    you to the screen where you can download and install Oracle Linux 8.5 under WSL:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.8 – Oracle Linux 8.5 in the Microsoft Store](img/B18349_01_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.8 – Oracle Linux 8.5 in the Microsoft Store
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the `Oracle Linux`. This not only finds the subsystem but also gives
    you the option to pin the subsystem to your taskbar or Start menu, as shown in
    the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.9 – Oracle Linux 8.5 subsystem app options](img/B18349_01_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.9 – Oracle Linux 8.5 subsystem app options
  prefs: []
  type: TYPE_NORMAL
- en: 'When you run the WSL subsystem, it works almost identically to any other Oracle
    Linux 8.5 system. You can easily run Oracle Linux commands under Windows now.
    This includes checking storage capacity, using `dnf` to install programs, editing
    files, and SSHing to other hosts:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.10 – WLS OS commands](img/B18349_01_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.10 – WLS OS commands
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also install new software with `dnf`. An example of installing `nmap`
    is shown in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.11 – WSL installing nmap with dnf](img/B18349_01_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.11 – WSL installing nmap with dnf
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also access your Windows drives from WLS. They will each be presented
    under the `/mtn/DRIVE` location, where the `C:` drive is `/mnt/c`. The Windows
    system can also access the Linux directory under the `\\``wsl$\OracleLinux_8_5`
    path:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.12 – Windows File Explorer and WSL](img/B18349_01_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.12 – Windows File Explorer and WSL
  prefs: []
  type: TYPE_NORMAL
- en: Caution
  prefs: []
  type: TYPE_NORMAL
- en: As a note of caution, be careful when you’re editing files. Windows and Linux
    format text differently, and you can easily accidentally corrupt files if you
    are not careful. It is recommended that Windows files are stored and accessed
    using Windows, and Linux files are edited and stored on the WSL image.
  prefs: []
  type: TYPE_NORMAL
- en: Running Oracle 8.5 as a Windows subsystem is a great tool for system administrators
    and developers. Its integration with Windows makes for a quick and easy installation
    while enabling transparent access to a Linux system on your personal system.
  prefs: []
  type: TYPE_NORMAL
- en: Arm'ing for the future of IT – it’s not just a slice of Raspberry Pi
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: First, let’s chat about Oracle Linux on **advanced RISC machines**, more commonly
    known as Arm CPUs. This newer architecture has many advantages over the older
    x86_64 architecture that Intel and AMD use. This includes lower power consumption;
    lower latency, enabling better performance; and a simplified architecture that
    enables higher-density systems. Leveraging Oracle Linux on an Arm system is a
    popular option for both cloud-scale operators such as Oracle and Microsoft as
    well as smaller organizations that are looking at reducing their compute power
    and cooling needs.
  prefs: []
  type: TYPE_NORMAL
- en: Having a single *enterprise OS* on all Linux systems has several advantages,
    such as using the same tools across all servers and access to the same commercial
    support for your systems. The use cases for Arm in your inventory of servers are
    also interesting. As a whole, Arm processors offer a lower cost due to their higher
    *potential* core density and lower *power consumption*. In the enterprise space,
    **Ampere** dominates and offers Arm processors with as many as 128 cores on a
    single chip in a single **rack unit** (**RU**) of space.
  prefs: []
  type: TYPE_NORMAL
- en: Performance is not lacking either, with each processor supporting up to 128
    Arm cores in two RUs of space with high CPU speeds of up to 3.0 GHz frequency
    per core. The I/O is also powerful, with 128 lanes of high-speed PCIe Gen4 and
    8×72 ECC-protected DDR4 3200 memory. With 64 GB **Dual In-Line Memory Modules**
    (**DIMMs**), that’s *4 terabytes* of RAM in a small form factor! These are enterprise-grade
    systems, with all the power, security, and reliability of Oracle Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Arm is not just for data centers; when you need a small system, such as a DNS
    server or a remote access device, there is the famous Raspberry Pi, which works
    well with it’s small size for tucking it away in a wiring closet for a backup
    DNS server or inside an Oracle Exadata cabinet to enable remote access. You can
    even use a Raspberry Pi as a monitoring system or a web server in a DMZ.
  prefs: []
  type: TYPE_NORMAL
- en: Regardless of what Arm platform you are running on (Ampere or Raspberry Pi),
    when running Oracle Linux, you also get access to UEK with its enhancements, including
    tools such as Ansible. Oracle Linux includes all the major technologies at one
    low price for support, and you always have the option of using it for free; you
    can even patch for free. As far as Arm goes, the platform is also not limited.
    You have commercial software such as MySQL 8.0 available to you, as well as a
    large amount of open source software.
  prefs: []
  type: TYPE_NORMAL
- en: It’s not just the Raspberry Pi use cases that are powerful. When you get to
    the larger Arm-based services, you open up a huge number of use cases for edge
    computing. Edge computing needs the application to bring data from the cloud into
    the locations that need low-latency access to the data. With MySQL 8.0 replication
    features, you can easily replicate data from the cloud to the edge, maintaining
    performance while, at the same time, leveraging the high core counts and low-power
    requirements of Arm systems made by companies such as Ampere, which offers an
    80-core CPU with a low 210w of power consumption. The high core counts combined
    with container technologies such as Docker and Kata containers enable a distributed
    microservices architecture, with centrally maintained applications that take advantage
    of the cloud’s automation but still provide the performance of a traditional on-premises
    solution. This is the future of IT.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before you start, you will need a Raspberry Pi with a Micro SD slot. You also
    will need a Micro SD card that can be used to install the OS. If you are using
    a Raspberry Pi compute module, or an enterprise Arm server such as an Ampere system,
    jump to [*Chapter 2*](B18349_02.xhtml#_idTextAnchor052) and PXE boot the system.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: That being said, let’s get Oracle Linux on a Raspberry Pi. While I’ve been using
    Oracle Linux on Arm and installing it the hard way, there is now a much easier
    way to install it. Oracle offers free images for the Raspberry Pi, with the OS
    already installed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Download the Oracle image at the following link: [https://www.oracle.com/linux/downloads/linux-arm-downloads.html](https://www.oracle.com/linux/downloads/linux-arm-downloads.html).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, you will need to write the image to an SD card. The easiest way to do
    this from a Windows system is to use **balenaEtcher**, which is a free utility
    that makes it easy to write images to SD cards and USB drives. You can download
    it from [https://www.balena.io/etcher/](https://www.balena.io/etcher/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: While balenaEtcher is used for the example, there are many other ways to write
    the file to a flash drive, such as Raspberry Pi Imager, or just using the `dd`
    command to write the file to a flash drive in Linux.
  prefs: []
  type: TYPE_NORMAL
- en: 'Run Etcher (make sure you right-click on it and run as administrator) and select
    the image file as the *source* and the SD card as the *destination*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.13 – Burning the Pi SD card](img/B18349_01_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.13 – Burning the Pi SD card
  prefs: []
  type: TYPE_NORMAL
- en: Etcher can automatically work with the compressed file, so in a minute or two,
    you should have an SD card with the image installed.
  prefs: []
  type: TYPE_NORMAL
- en: Next, pop the card into your Pi and boot the Pi. The normal GRUB loader will
    start, and you should have a login prompt.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.14 – Booting the Pi](img/B18349_01_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.14 – Booting the Pi
  prefs: []
  type: TYPE_NORMAL
- en: Yup, it’s that easy!
  prefs: []
  type: TYPE_NORMAL
- en: Once it’s booted, log in as `root`, with the password `oracle`. The system will
    require you to change the password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.15 – First login](img/B18349_01_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.15 – First login
  prefs: []
  type: TYPE_NORMAL
- en: Now it’s up to you what you want to install. By default, it has access to the
    free Oracle public **yum** server, so yum works out of the box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For Oracle Linux 8, you have access to the following repos:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`EPEL.repo` file with the following text in the `/``etc/yum/repos.d` directory:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
- en: 'The EPEL library can also be added using `dnf` with the following command:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Take a few minutes to play around with an Arm system. They are versatile, low
    cost, and very flexible. You should find plenty of uses for Oracle Linux on Arm.
  prefs: []
  type: TYPE_NORMAL
- en: Leapping from Oracle Linux 7 to 8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A challenge system admins often face is what to do when you have an older OS
    deployed and it’s about to reach the date when support ends. It happens, and it’s
    not fun. This will put you in a position to reinstall the newer OS on new systems,
    and then migrate your workload over. For many systems, there is a better way known
    as **Leapp**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Leapp allows you to upgrade your OS from Oracle Linux 7 to Oracle Linux 8\.
    There is no need to reinstall everything on new systems. **Leapping** consists
    of two phases:'
  prefs: []
  type: TYPE_NORMAL
- en: A pre-upgrade phase that checks the system to determine whether the software
    can be upgraded
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A second phase that actually performs the upgrade
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sounds good. But there are a few things you need to know.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First, Leapping from 7 to 8 is not supported for all use cases. *Table 1.1*
    shows what Oracle will support when performing the operation. Leapp does not always
    work well with complex applications, such as database systems that have specific
    installation options based on the underlying *OS version*. It also may break some
    applications that are not included with the OS:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Supported** **by Leapp** | **Unsupported** **by Leapp** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Platforms (latest shipping updates):'
  prefs: []
  type: TYPE_NORMAL
- en: x86_64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arm (AArch64)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Operating systems:'
  prefs: []
  type: TYPE_NORMAL
- en: Current Oracle Linux 7 version only
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Profiles:'
  prefs: []
  type: TYPE_NORMAL
- en: Minimal installation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtualization host
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Server with GUI
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Basic web server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Infrastructure server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: File and print server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Systems installed with the following:'
  prefs: []
  type: TYPE_NORMAL
- en: ISV applications, including Oracle Database and middleware
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'NoteISVs must provide and validate Leapp actors to coordinate their application
    upgrades:'
  prefs: []
  type: TYPE_NORMAL
- en: Oracle Linux Manager or Spacewalk for Oracle Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installations that did not use ISO images such as Ceph and GlusterFS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Migration of disks that are encrypted with LUKS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Systems that are registered with ULN
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Systems in FIPS mode or running Secure Boot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Systems configured with Docker containers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Table 1.1 – Leapp support matrix from Oracle
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, Leapp also has some limitations when upgrading the kernel. This matrix
    from Oracle is seen in the following table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Platform Notes** | **Starting Kernel (Oracle** **Linux 7)** | **Ending
    Kernel (Oracle** **Linux 8)** | **Supported** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| x86_64 not using Btrfs filesystem | RHCK | RHCK | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| RHCK | UEK | No |'
  prefs: []
  type: TYPE_TB
- en: '| UEK | UEK | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| UEK | RHCK | No |'
  prefs: []
  type: TYPE_TB
- en: '| x86_64 using Btrfs filesystem | RHCK | RHCK | No |'
  prefs: []
  type: TYPE_TB
- en: '| RHCK | UEK | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| UEK | UEK | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| UEK | RHCK | No |'
  prefs: []
  type: TYPE_TB
- en: '| AArch64 | UEK | UEK | Yes |'
  prefs: []
  type: TYPE_TB
- en: Table 1.2 – Supported kernel upgrade from Oracle
  prefs: []
  type: TYPE_NORMAL
- en: Always look before you Leapp
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Before Leapping from 7 to 8, you need to check a few things, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure you have a solid backup. Snapshots of the system work best in case
    things don’t go well.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If Secure Boot is running, disable it with `mokutil --sb-state`. You can check
    the status by running the `bootctl` `status` command.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure you have console access, just in case you need to troubleshoot issues.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable any network mounts, such as NFS mounts, Samba mounts, GlusterFS mounts,
    and so on. Disable them in your `/``etc/fstab` file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are using `yum-plugin-versionlock`, clear any locks with the `yum versionlock`
    `clear` command.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are running *any KVM VMs*, stop them all. You can do this with `virsh
    shutdown $VM_NAME`. If you’re not sure whether you are running any VMs, the `virsh
    list --all` command will list them all for you.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are using Spacewalk, Oracle Linux Manager, Unbreakable Linux Network,
    or any other centralized yum manager, unregister the system from it. You must
    Leapp against the `yum.oracle.com` repos.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you need an HTTP proxy to access the `yum.oracle.com` repos, make sure it’s
    added to your `/``etc/yum.conf` file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Verify that you are using `en_US.UTF-8` in `/etc/locale.conf`. You can switch
    via the `localectl set-locale` `LANG=en_US.UTF-8` command.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In your `/etc/ssh/sshd_config` file, verify that you can log in as root. `PermitRootLogin
    yes` should be in the config file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you’ve verified this list, patch your system against `yum.oracle.com` with
    `yum update -y`, and then reboot.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, you can add the *Leapp* repo with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, do another sanity reboot, and maybe grab a second backup. After the reboot,
    if you are using a proxy to access them, then you need to add the proxy server
    for each repository entry in `/etc/yum.repos.d/leapp-upgrade-repos-ol8.repo`.
    You can do this with a simple `sed` command: `sed -I ''/^enabled=0.*/a` `proxy=http://proxy-host:proxy-port''
    /etc/yum.repos.d/eap-upgrade-repos-ol8.repo`.'
  prefs: []
  type: TYPE_NORMAL
- en: Congratulations, you are now ready to analyze the system!
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You will need to take the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you are running anywhere but on Oracle’s cloud (known as OCI), you can run
    the report with the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you are on OCI, run this command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Both commands will run many checks and will give an alert if there are major
    issues. But you need to dig deeper into these:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Figure 1.16 – Leapp pre-upgrade results](img/B18349_01_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.16 – Leapp pre-upgrade results
  prefs: []
  type: TYPE_NORMAL
- en: Now, you should have some interesting output. The `/var/log/leapp/leapp-report.txt`
    file will identify any risks with the upgrade. They are classified in three rankings,
    with the highest being a *show stopper*. Address any of the risks, rerun the analyzer,
    and check the report again. Once you are comfortable with the results, you can
    continue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The next step is to look at `/var/log/leapp/answerfile`. The file consists
    of specific checks that Leapp performs on the system. Each check contains information
    about the system and also prompts you for confirmation on the action to be performed:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.17 – Leapp answerfile](img/B18349_01_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.17 – Leapp answerfile
  prefs: []
  type: TYPE_NORMAL
- en: 'In this example, there is only one answer to confirm. To accept an item in
    the file, add `confirm = True` in the section. Optionally, you can use the `leapp`
    command to confirm the line item, making sure the section matches:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Time to take the Leapp and start phase two
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Now that we’re set, it’s time to make the jump forward! As with the *Leapp
    pre-upgrade*, how you Leapp in OCI is slightly different than other environments:'
  prefs: []
  type: TYPE_NORMAL
- en: 'For non-OCI environments (as seen in the following screenshot), run `leapp
    upgrade --oraclelinux`. For OCI environments, run `leapp` `upgrade --oci`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.18 – Leapp upgrade starting](img/B18349_01_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.18 – Leapp upgrade starting
  prefs: []
  type: TYPE_NORMAL
- en: 'Leapp will take some time. Did you remember to make your backup? As Leapp runs,
    it will download all the Oracle Linux 8 packages, downloading about 600 MB for
    a small system and 1 GB for larger installations:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.19 – Leapp upgrade completed](img/B18349_01_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.19 – Leapp upgrade completed
  prefs: []
  type: TYPE_NORMAL
- en: When the Leapp process is done (as seen in the preceding screenshot), reboot.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Leapp performs the in-place upgrade, installing or upgrading the new RPMs and
    reconfiguring the boot loader to the upgraded OS version. This process upgrades
    the Oracle Linux-supported applications, as well as migrating configurations and
    preferences to the new version.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When you’ve done the reboot, you should see `/etc/oracle-release` updates for
    Oracle Linux 8\. You can also check the kernel with `uname -r`. After the upgrade,
    you will also need to do a few other tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: If you disabled **Secure Boot**, you will need to re-enable it in the system’s
    firmware.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Re-enable the firewall, as it was disabled during the upgrade:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: If you have KVM VMs running, you will need to restart them with the `virsh start
    $``VMNAME` command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can remove the `/root/tmp_leapp_py3` directory. This is optional but will
    free up disk space.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can reconnect the system to your normal patch and management systems. They
    should be added back as Oracle Linux 8 systems. Please verify that your management
    software reflects the new version; not all management systems will update the
    major release correctly.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Migrating from CentOS to Oracle Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first question is *why?* Why are we talking about moving from **CentOS**
    to Oracle Linux?
  prefs: []
  type: TYPE_NORMAL
- en: Before we explain this, let’s chat a little bit about the surprise that IBM
    Red Hat dropped on the Linux community on December 8, 2020\. CentOS as we know
    it is *dead!* It is `> /``dev/null`.
  prefs: []
  type: TYPE_NORMAL
- en: 'On December 8th, 2020, CentOS (which is controlled by IBM Red Hat) announced
    the news: “*CentOS Linux 8, as a rebuild of RHEL 8, will end at the end of 2021.*”
    The 2021 date is eight years earlier than planned, with 2029 being the original
    published date for the end of development on the CentOS 8 distribution. This means
    if you have CentOS 8 and you want to continue using a stable and predictable release,
    then you need to make a change.'
  prefs: []
  type: TYPE_NORMAL
- en: The CentOS team is “*shifting focus from CentOS Linux, the rebuild of Red Hat
    Enterprise Linux (RHEL), to CentOS Stream, which tracks just ahead of a current
    RHEL release.*” Remember Fedora, where new technology is constantly being introduced
    and withdrawn, where change is normal and expected? That is basically how the
    community looks at CentOS Stream. This one change basically destroyed the ability
    for **enterprise system administrators** to use CentOS 8 and beyond in production,
    and dev, test, and **quality assurance** (**QA**) environments.
  prefs: []
  type: TYPE_NORMAL
- en: So, *what’s next?* There are already several projects that have forked or cloned
    the CentOS model to replicate the effort and provide a stable distro that tracks
    RHEL, with a predictable release schedule and a stable organization to back up
    the project. A concern you should have with the multitude of projects that have
    started is picking the right one. You have no idea what new distros will fail
    or succeed. Some of these forks will take years to stabilize, and users need a
    solution now. As an admin, you do not need a fork or immature distribution that
    may change direction. You need a stable distribution that has the goal of maintaining
    compatibility with RHEL. Oracle Linux provides both, the proven stability and
    is actively investing in maintaining compatibility with RHEL though the **Open
    Enterprise Linux Association** (**OpenELA.rg**)
  prefs: []
  type: TYPE_NORMAL
- en: OpenELA was founded by Oracle, SUSE and CIQ, the company that is behind RockyLinux.OpenELA
    is a trade association that builds a compatible code base that is a drop in replacement
    for RHEL. This allows the open source community to combine their efforts to prove
    a stable replacement for CentOS.
  prefs: []
  type: TYPE_NORMAL
- en: CentOS is dead as we know it, have you looked at Oracle Linux yet?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Oracle Linux tracks RHEL, using OpenELA as their base code going forward, so
    Oracle Linux 8.3 is basically the same as RHEL 8.3 or CentOS 8.3 or even RockyLinux
    8.3\. It’s used by over 86% of the Fortune Global 100, making it one of the most
    popular Linux options in the Enterprise. Since Oracle runs its business and Oracle
    Cloud on Oracle Linux, you know it will be supported regardless of what other
    bombshells IBM Red Hat drops on the users.
  prefs: []
  type: TYPE_NORMAL
- en: Did I mention Oracle Linux is free? It’s free to download, free to distribute,
    and free to patch! To distribute, I can give you a copy for free and no lawyers
    are required. To patch, there’s no need to register your system or pay any fees,
    and it would also be free to download. There is no license fee to get it!
  prefs: []
  type: TYPE_NORMAL
- en: Yes, Oracle has a paid support offering that is a lot less expensive than RHEL,
    and due to the free model to download and patch, you can easily use Oracle Linux
    for free in your non-production systems and still have paid support for your production
    systems on the same distribution. It is also very stable as it has been available
    since 2006\. They even support Arm these days (Raspberry Pi, anyone?), and have
    several public mirrors where you can download it in case you don’t want to download
    it from [http://yum.oracle.com/oracle-linux-isos.html](http://yum.oracle.com/oracle-linux-isos.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'There are several cool things you can get if you pay for support, but all of
    these are well above and beyond what RHEL offers with their support. This includes
    a few technologies such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ksplice**: This lets you patch kernel and user space libraries while running'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DTrace**: This came over from Solaris and gives you a real-time view into
    kernel and application internals'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Enterprise Manager**: To manage and monitor the OS, logs, and more'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you are on CentOS, it’s really easy to move to Oracle Linux. Best of all
    is that when you move, you keep everything the same, so all your apps continue
    to run. Remember, Oracle Linux tracks RHEL, making it an easy drop-in replacement.
    Oracle has made the migration script free for anyone to use, and you can access
    it from the following GitHub URL: [https://github.com/oracle/centos2ol](https://github.com/oracle/centos2ol).'
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before you start, you will need a system running Scientific Linux 7.x and 8.x,
    Rocky 8.x, and CentOS 7.x and 8.X. If your CentOS system is CentOS Stream, the
    script will not work. There are a few other things to think about before running
    the Oracle script, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Make sure you have a solid backup. Snapshots of the system work best in case
    things don’t go well.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If Secure Boot is running, disable it with `mokutil --sb-state`. You can check
    the status by running the `bootctl` `status` command.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure you have console access, just in case you need to troubleshoot issues.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable any network mounts, such as NFS mounts, Samba mounts, and GlusterFS
    mounts. Disable them in your `/``etc/fstab` file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are using `yum-plugin-versionlock`, clear any locks with the `yum versionlock`
    `clear` command.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are running *any KVM VMs*, stop them all. You can do this with `virsh
    shutdown $VM_NAME=`. If you’re not sure whether you’re running any VMs, the `virsh
    list --all` command will list them all out for you.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are using Spacewalk, Oracle Linux Manager, Unbreakable Linux Network,
    or any other centralized *yum* manager, make sure the `yum` command works. Unlike
    Leapp, you can run the script against a private repo.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you need an HTTP proxy to access your yum server, make sure it is added to
    your `/``etc/yum.conf` file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you are using any third-party *yum repos*, please validate that their packages
    will not conflict with what you are running. It’s best to disable these repos
    while doing the switch.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check for stale repos. If the repo isn’t working, disable it.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make sure you have at least 5 GB of free space in `/var/cache`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable all automatic *yum* updates.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that you have checked and prepared the system to be migrated from CentOS,
    the actual migration from CentOS 8.x is fairly straightforward. You’ll now need
    to follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The easy way to do the upgrade is to use `wget` to download the script from
    GitHub as a raw file: [https://raw.githubusercontent.com/oracle/centos2ol/main/centos2ol.sh](https://raw.githubusercontent.com/oracle/centos2ol/main/centos2ol.sh).'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Next, you will need to perform the `chmod +x` operation the script with the
    following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Remember how CentOS 8 hit EOL really early? This also means that the CentOS
    *yum repos* for version 8 are gone. There is a workaround to this small problem,
    though. For now, you can use a copy located at [vault.centos.org](http://vault.centos.org),
    but each of the repo files will need to be updated. That can be done with this
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '![Figure 1.20 – CentOS to Oracle Linux process starting](img/B18349_01_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.20 – CentOS to Oracle Linux process starting
  prefs: []
  type: TYPE_NORMAL
- en: 'This will run for about 5 minutes on a fast system with 1GB/s internet speeds.
    Other systems can take as long as 45 minutes. When the script is done, reboot.
    As with Leapp, you can check the upgrade by looking at `/etc/oracle-release` and
    checking the kernel version with `uname -r`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.21 – Migration from CentOS 8 completed](img/B18349_01_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.21 – Migration from CentOS 8 completed
  prefs: []
  type: TYPE_NORMAL
- en: Once the reboot has finished and the server is up, `/etc/oracle-release` should
    correctly show Oracle Linux.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The script will connect your system to new patch repositories, and then basically
    perform an extended patch process against the Oracle repos. Old RPMs will be replaced
    with RPMs from Oracle. The script can also upgrade you from the older Linux 4.x
    kernel to UEK, where you can benefit from the performance advantages of the newer
    Linux 5 kernel.
  prefs: []
  type: TYPE_NORMAL
