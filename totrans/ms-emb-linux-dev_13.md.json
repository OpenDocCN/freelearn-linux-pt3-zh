["```\n# cat /etc/fw_env.config\n/dev/mmcblk0 0x800000 0x40000\n/dev/mmcblk0 0x1000000 0x40000 \n```", "```\n/ostree/repo/objects/...\n/ostree/deploy/os/a3c83.../\n /usr/bin/bash\n /usr/bin/echo\n/ostree/deploy/os/29ff9.../\n /usr/bin/bash\n /usr/bin/echo \n```", "```\n    bootargs=ostree=/ostree/deploy/os/deploy/29ff9... \n    ```", "```\n$ git clone -b scarthgap https://github.com/mendersoftware/meta-mender \n```", "```\n$ source poky/oe-init-build-env build-mender-qemu\n$ bitbake-layers add-layer ../meta-openembedded/meta-oe\n$ bitbake-layers add-layer ../meta-mender/meta-mender-core\n$ bitbake-layers add-layer ../meta-mender/meta-mender-demo\n$ bitbake-layers add-layer ../meta-mender/meta-mender-qemu \n```", "```\n1 MENDER_ARTIFACT_NAME = \"release-1\"\n2 INHERIT += \"mender-full\"\n3 MACHINE = \"vexpress-qemu\"\n4 INIT_MANAGER = \"systemd\"\n5 IMAGE_FSTYPES = \"ext4\" \n```", "```\n$ bitbake core-image-full-cmdline \n```", "```\n$ ../meta-mender/meta-mender-qemu/scripts/mender-qemu\n<…>\n[  OK  ] Started Boot script to demo Mender OTA updates.\n[  OK  ] Started Periodic Command Scheduler.\n         Starting D-Bus System Message Bus...\n[  OK  ] Started Getty on tty1.\n         Starting IPv6 Packet Filtering Framework...\n         Starting IPv4 Packet Filtering Framework...\n         Starting Mender-configure device configuration...\n[  OK  ] Started Serial Getty on ttyAMA0.\n<…>\n[  OK  ] Finished Wait for Network to be Configured.\n[  OK  ] Started Time & Date Service.\n[  OK  ] Finished Mender-configure device configuration.\nPoky (Yocto Project Reference Distro) 5.0.7 vexpress-qemu ttyAMA0\nvexpress-qemu login: \n```", "```\nmender-qemu: 117: qemu-system-arm: not found \n```", "```\n$ sudo apt install qemu-system-arm \n```", "```\n# fdisk -l /dev/mmcblk0\nDisk /dev/mmcblk0: 1 GiB, 1073741824 bytes, 2097152 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: gpt\nDisk identifier: 00000000-0000-0000-0000-00004D9B9EF0\nDevice           Start     End Sectors  Size Type\n/dev/mmcblk0p1   16384   49151   32768   16M EFI System\n/dev/mmcblk0p2   49152  933887  884736  432M Linux filesystem\n/dev/mmcblk0p3  933888 1818623  884736  432M Linux filesystem\n/dev/mmcblk0p4 1818624 2097118  278495  136M Linux filesystem \n```", "```\n# mount | head -1\n/dev/mmcblk0p2 on / type ext4 (rw,relatime) \n```", "```\n    $ source poky/oe-init-build-env build-mender-qemu \n    ```", "```\n    $ cd tmp/deploy/images/vexpress-qemu\n    $ cp core-image-full-cmdline-vexpress-qemu-grub.uefiimg \\\n    core-image-live-vexpress-qemu-grub.uefiimg\n    $ cd - \n    ```", "```\n    hostname:pn-base-files = \"vexpress-qemu-release2\" \n    ```", "```\n    $ bitbake core-image-full-cmdline \n    ```", "```\n    $ ../meta-mender/meta-mender-qemu/scripts/mender-qemu \\\n    core-image-live \n    ```", "```\n    # ping 10.0.2.2\n    PING 10.0.2.2 (10.0.2.2) 56(84) bytes of data.\n    64 bytes from 10.0.2.2: icmp_seq=1 ttl=255 time=0.842 ms\n    ^C\n    --- 10.0.2.2 ping statistics ---\n    1 packets transmitted, 1 received, 0% packet loss, time 0ms\n    rtt min/avg/max/mdev = 0.842/0.842/0.842/0.000 ms \n    ```", "```\n    $ cd tmp/deploy/images/vexpress-qemu\n    $ python3 -m http.server\n    Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ... \n    ```", "```\n    # mender-update --log-level info install \\\n    > http://10.0.2.2:8000/core-image-full-cmdline-vexpress-qemu-grub.mender\n    Installing artifact...\n    100%\n    <…>\n    Installed, but not committed.\n    Use 'commit' to update, or 'rollback' to roll back the update.\n    At least one payload requested a reboot of the device it updated. \n    ```", "```\n    # mount\n    /dev/mmcblk0p3 on / type ext4 (rw,relatime)\n    <…>\n    # hostname\n    vexpress-qemu-release2 \n    ```", "```\n    # grub-mender-grubenv-print upgrade_available\n    upgrade_available=1\n    # grub-mender-grubenv-print bootcount\n    bootcount=1 \n    ```", "```\n# mount\n/dev/mmcblk0p2 on / type ext4 (rw,relatime)\n<…>\n# hostname\nvexpress-qemu \n```", "```\n    # mender-update rollback\n    Rolled back.\n    # mender-update --log-level info install \\\n    > http://10.0.2.2:8000/core-image-full-cmdline-vexpress-qemu-grub.mender\n    # reboot \n    ```", "```\n    # mender-update commit\n    Committed.\n    # grub-mender-grubenv-print upgrade_available\n    upgrade_available=0\n    # grub-mender-grubenv-print bootcount\n    bootcount=1 \n    ```", "```\n$ docker --version\nDocker version 26.1.3, build 26.1.3-0ubuntu1~24.04.1\n$ docker-compose --version\ndocker-compose version 1.29.2, build unknown \n```", "```\n$ docker compose \n```", "```\n$ sudo apt install jq \n```", "```\n$ git clone -b \\\n3.7.9 https://github.com/mendersoftware/integration.git integration-3.7.9\n$ cd integration-3.7.9\n$ ./demo up\nStarting the Mender demo environment...\n<…>\nCreating a new user...\n****************************************\nUsername: mender-demo@example.com\nLogin password: F26E0B14587A\n****************************************\nPlease keep the password available, it will not be cached by the login script.\nMender demo server ready and running in the background. Copy credentials above and log in at https://localhost\nPress Enter to show the logs.\nPress Ctrl-C to stop the backend and quit. \n```", "```\n    $ cp -a MELD/Chapter10/meta-ota . \n    ```", "```\n    $ source poky/oe-init-build-env build-mender-qemu \n    ```", "```\n    $ bitbake-layers add-layer ../meta-ota \n    ```", "```\n    $ bitbake core-image-full-cmdline \n    ```", "```\n    $ cd tmp/deploy/images/vexpress-qemu\n    $ cp core-image-full-cmdline-vexpress-qemu-grub.uefiimg \\\n    core-image-live-ota-vexpress-qemu-grub.uefiimg\n    $ cd - \n    ```", "```\n    $ ../meta-mender/meta-mender-qemu/scripts/mender-qemu \\\n    core-image-live-ota \n    ```", "```\n    # cat /etc/mender/mender.conf\n    {\n     \"InventoryPollIntervalSeconds\": 5,\n     \"RetryPollIntervalSeconds\": 30,\n     \"ServerURL\": \"https://docker.mender.io\",\n     \"TenantToken\": \"dummy\",\n     \"UpdatePollIntervalSeconds\": 5\n    } \n    ```", "```\n    MENDER_ARTIFACT_NAME = \"OTA-update1\" \n    ```", "```\n    $ bitbake core-image-full-cmdline \n    ```", "```\n./demo down\n./demo up \n```"]