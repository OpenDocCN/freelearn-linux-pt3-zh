- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Logging Configuration and Remote Logging
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志配置和远程日志记录
- en: Logging is an important aspect of any operating system, including Linux. It
    provides a way to collect and analyze system events and activities, which can
    be useful for troubleshooting, monitoring, and auditing purposes. In this chapter,
    we will explore the different aspects of logging configuration and remote logging
    in Linux.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录是任何操作系统中一个重要的方面，包括 Linux。它提供了一种收集和分析系统事件和活动的方式，这对故障排除、监控和审计目的非常有用。在本章中，我们将探索
    Linux 中日志配置和远程日志记录的不同方面。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Logging configuration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志配置
- en: Log rotation
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志轮换
- en: Journald
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Journald
- en: Log forwarding
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志转发
- en: Logging configuration
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志配置
- en: Linux uses the syslog system for logging. The syslog daemon collects messages
    from different parts of the system and writes them to log files. The syslog configuration
    file is usually located at `/etc/syslog.conf` or `/etc/rsyslog.conf`, depending
    on the distribution. This file contains the rules that specify which messages
    to log and where to store them.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 使用 syslog 系统进行日志记录。syslog 守护进程收集来自系统不同部分的消息，并将其写入日志文件。syslog 配置文件通常位于
    `/etc/syslog.conf` 或 `/etc/rsyslog.conf`，具体取决于发行版。该文件包含指定哪些消息需要记录以及将其存储在哪个位置的规则。
- en: 'There is a critical parameter called `facility.severity` that is a crucial
    part of the logging configuration in Linux. It allows you to control which log
    messages should be recorded and where they should be stored. The facility and
    severity can be specified either numerically or using their symbolic names. For
    example, the following rule logs all messages with a severity level of warning
    or higher from the auth facility to the `/``var/log/auth.log` file:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个关键参数叫做 `facility.severity`，它是 Linux 中日志配置的关键部分。它允许你控制哪些日志消息应该被记录以及它们应该存储在哪里。设施和严重性可以通过数字或符号名称来指定。例如，以下规则将所有来自
    auth 设施且严重性级别为警告或更高的消息记录到 `/var/log/auth.log` 文件中：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The target part of the configuration file specifies where to store the logged
    messages. The target can be a file, a remote host, or a program that processes
    the messages. The target syntax is as follows:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件中的目标部分指定日志消息的存储位置。目标可以是一个文件、一个远程主机或一个处理消息的程序。目标的语法如下：
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The target type can be one of the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 目标类型可以是以下之一：
- en: '`file`: Stores the messages in a local file'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`file`：将消息存储在本地文件中'
- en: '`remote`: Sends the messages to a remote host using the syslog protocol'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`remote`：使用 syslog 协议将消息发送到远程主机'
- en: '`program`: Sends the messages to a local program for processing'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`program`：将消息发送到本地程序进行处理'
- en: 'For example, the following rule sends all messages with a severity level of
    error or higher to a remote host with an IP address of `192.168.1.100` using the
    syslog protocol:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，以下规则使用 syslog 协议将所有严重性级别为错误或更高的消息发送到 IP 地址为 `192.168.1.100` 的远程主机：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'After modifying the syslog configuration file, the syslog daemon must be restarted
    to apply the changes. The command to restart the syslog daemon varies depending
    on the distribution. For example, on Ubuntu, the command is as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 修改 syslog 配置文件后，必须重新启动 syslog 守护进程才能应用更改。重启 syslog 守护进程的命令根据发行版的不同而有所不同。例如，在
    Ubuntu 上，命令如下：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: A log message’s primary focus is on log data. Alternatively stated, log data
    is the explanation behind a log message. If you use an image, file, or other resources
    on a website, the server that hosts your site will likely keep track of that fact.
    You may see who accessed a certain resource by examining the log data – in this
    case, the user’s username.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 日志消息的主要关注点是日志数据。换句话说，日志数据是日志消息背后的解释。如果你在网站上使用了图像、文件或其他资源，托管你网站的服务器可能会跟踪这些事实。通过查看日志数据，你可以了解谁访问了某个资源——在这个例子中，就是用户的用户名。
- en: The term *logs* is shorthand for a collection of log messages that can be pieced
    together to provide context for an event.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*日志* 这个术语是指一组日志消息的缩写，这些消息可以拼凑在一起为一个事件提供上下文。'
- en: 'Each entry in the log file can be roughly classified as one of the following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 日志文件中的每一项条目大致可以分类为以下几种之一：
- en: '**Informational**: Purposely vague, these messages aim to inform users and
    administrators that a positive change has occurred. For instance, Cisco IOS will
    notify appropriate parties whenever the system reboots. However, caution is required.
    If a restart occurs at an inconvenient time, such as outside of maintenance or
    business hours, you may have cause for concern. The next few chapters of this
    book will teach you the knowledge and techniques you’ll need to deal with a situation
    like this.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信息**：这些消息故意含糊，旨在通知用户和管理员系统已经发生了积极的变化。例如，Cisco IOS每次系统重启时会通知相关方。然而，需要注意的是，如果重启发生在不合适的时间，例如维护或工作时间之外，你可能需要引起关注。本书接下来的章节将教你应对这种情况所需的知识和技巧。'
- en: '**Debug**: When something goes wrong with running application code, debug messages
    are sent by the system to help developers identify and address the problem.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调试**：当运行应用程序代码出现问题时，系统会发送调试信息，帮助开发人员识别和解决问题。'
- en: '**Warning**: This is issued when something is lacking or needed for a system,
    but not to the point where its absence would prevent the system from functioning.
    Some programs may log a notice to the user or operator if they don’t receive the
    expected number of arguments on the command line, even though they can still operate
    normally without them.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**警告**：当系统缺少或需要某些内容，但其缺失尚不足以阻止系统正常运行时，会发出警告。一些程序可能会在命令行上未收到预期的参数数量时向用户或操作员记录通知，尽管它们仍然可以正常运行。'
- en: '**Error**: In the event of an error, the computer system stores the relevant
    information in a log that may be analyzed later. An OS might generate an error
    log, for instance, if it is unable to synchronize buffers to disk. Unfortunately,
    many error messages simply provide a broad outline of the problem. More investigation
    is usually required to determine the root of a problem.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**错误**：在发生错误时，计算机系统会将相关信息存储在日志中，以供稍后分析。例如，如果操作系统无法将缓冲区同步到磁盘，它可能会生成错误日志。不幸的是，许多错误信息仅提供了问题的大致概述，通常需要进一步调查才能找出问题的根源。'
- en: '**Alert**: The purpose of an alert is to draw your attention to a noteworthy
    development. In most cases, notifications will come from security-related devices
    and systems, although this is not always the case. All incoming data to a network
    can be inspected by an **intrusion prevention system** (**IPS**) placed at its
    entrance. It examines the information included in the packets to determine whether
    or not to enable a certain network connection. The IPS can react in several predetermined
    ways if it detects a potentially malicious connection. The action and the decision
    will be documented.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**警报**：警报的目的是引起你对一个重要事件的关注。在大多数情况下，通知来自与安全相关的设备和系统，尽管并非总是如此。所有进入网络的数据都可以通过放置在网络入口的**入侵防御系统**（**IPS**）进行检查。它检查数据包中包含的信息，以决定是否启用某个网络连接。如果检测到潜在的恶意连接，IPS可以采取几种预定的反应方式。该行为和决策将被记录。'
- en: Next, we’ll quickly go through the processes involved in transmitting and collecting
    log data. Then, we’ll discuss what a log message is.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将快速浏览传输和收集日志数据的过程。然后，我们将讨论什么是日志消息。
- en: How does log data get sent and gathered?
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志数据是如何发送和收集的？
- en: It’s easy to send and gather log data. Syslog is a protocol used for sending
    and gathering log data in computer networks. It is a standard protocol that allows
    different devices to send log messages to a central logging server or device.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 发送和收集日志数据很容易。Syslog是一种用于在计算机网络中发送和收集日志数据的协议。它是一种标准协议，允许不同的设备将日志消息发送到中央日志服务器或设备。
- en: 'Here’s how it typically works:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是它通常如何工作的：
- en: A device generates a log message. This could be a server, network device, application,
    or any other device that generates logs.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个设备生成日志消息。这可以是服务器、网络设备、应用程序或任何其他生成日志的设备。
- en: The device sends the log message to a syslog server using the syslog protocol.
    The syslog server can be located on-premises or in the cloud.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设备使用syslog协议将日志消息发送到syslog服务器。syslog服务器可以位于本地或云端。
- en: The syslog server receives the log message and processes it. It can store the
    log message in a file or database, or forward it to other systems for further
    analysis.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: syslog服务器接收到日志消息并进行处理。它可以将日志消息存储在文件或数据库中，或者将其转发到其他系统以供进一步分析。
- en: The syslog server can also apply filters and rules to the log messages it receives.
    For example, it can discard log messages that are not relevant or send an alert
    when a critical error occurs.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: syslog服务器还可以对其接收到的日志消息应用过滤器和规则。例如，它可以丢弃不相关的日志消息，或者在发生严重错误时发送警报。
- en: System administrators and analysts can access the log data stored in the syslog
    server for troubleshooting, analysis, and reporting.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统管理员和分析人员可以访问存储在syslog服务器中的日志数据，用于故障排除、分析和报告。
- en: 'The following are some of the advantages of using a centralized log collector:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是使用集中式日志收集器的一些优点：
- en: It’s a centralized repository for all of your log messages
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是您所有日志消息的集中存储库
- en: Logs can be stored there for safekeeping
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志可以存储在此处以供保存
- en: This is where all of your server’s log information may be inspected
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是您可以检查所有服务器日志信息的地方
- en: Log analysis is crucial to the health of applications and server architecture,
    but it can be laborious if data is dispersed in multiple locations. Why not have
    just one consolidated logbook rather than a bunch of individual ones? Rsyslog
    may be the solution you’ve been looking for.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 日志分析对于应用程序和服务器架构的健康至关重要，但如果数据分散在多个位置，可能会变得繁琐。为什么不使用一个集中式日志本，而不是一堆独立的日志本呢？Rsyslog可能就是您一直在寻找的解决方案。
- en: Using a centralized logging system, you may collect the logs from all of your
    servers and programs into one centralized area. In addition, this tutorial will
    help you implement centralized logging on Linux nodes by use of the rsyslog configuration.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 使用集中式日志系统，您可以将所有服务器和程序的日志收集到一个集中区域。此外，本教程将帮助您通过使用rsyslog配置在Linux节点上实现集中式日志记录。
- en: This section is meant to be a practical example.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 本节旨在提供一个实际示例。
- en: Checking rsyslog service on all servers
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查所有服务器上的rsyslog服务
- en: A high-performance log processing system called rsyslog is pre-installed and
    ready to use on both Debian and RHEL systems.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一个高性能的日志处理系统——rsyslog，已经预安装并准备好在Debian和RHEL系统上使用。
- en: The syslog protocol has been improved with rsyslog, which gives it more contemporary
    and dependable features. These additional features include a large number of inputs
    and outputs, a modular design, and excellent filtering.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: rsyslog改进了syslog协议，提供了更多现代化和可靠的功能。这些额外功能包括大量的输入和输出、模块化设计以及卓越的过滤能力。
- en: The most recent version of rsyslog as of this writing is v8.2112.0\. Therefore,
    you will verify the rsyslog service’s status and the version of rsyslog installed
    on your computer. This will guarantee that rsyslog is running at its most recent
    version.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 截至本文编写时，rsyslog的最新版本是v8.2112.0。因此，您将验证rsyslog服务的状态以及安装在计算机上的rsyslog版本。这将确保rsyslog正在以其最新版本运行。
- en: Open a command prompt and use the following `sudo su` command to take control
    of all servers. When prompted, enter your password.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 打开命令提示符，并使用以下`sudo su`命令获取所有服务器的控制权限。当系统提示时，输入您的密码。
- en: 'In the following screenshot, you’ll find that Centos 8 ships with rsyslog v8.2102.0
    by default:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下截图中，您会发现Centos 8默认安装了rsyslog v8.2102.0：
- en: '![Figure 11.1 – Checking the rsyslog version](img/B18575_11_01.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.1 – 检查rsyslog版本](img/B18575_11_01.jpg)'
- en: Figure 11.1 – Checking the rsyslog version
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.1 – 检查rsyslog版本
- en: 'Check the status of the rsyslog service by running the `systemctl status` `rsyslog`
    command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行`systemctl status` `rsyslog`命令来检查rsyslog服务的状态：
- en: '![Figure 11.2 – Checking the status of the rsyslog service](img/B18575_11_02.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.2 – 检查rsyslog服务状态](img/B18575_11_02.jpg)'
- en: Figure 11.2 – Checking the status of the rsyslog service
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.2 – 检查rsyslog服务状态
- en: As you can see, the service is active and running.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，服务处于活动状态并正在运行。
- en: 'To check the status of the rsyslog service on multiple servers, you can use
    a configuration management tool such as Ansible or write a simple bash script
    to automate the process. Here’s an example of how to check the rsyslog service
    on all servers using a bash script:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查多个服务器上的rsyslog服务状态，您可以使用配置管理工具，如Ansible，或者编写一个简单的bash脚本来自动化该过程。以下是如何使用bash脚本检查所有服务器上rsyslog服务的示例：
- en: 'Create a file called `servers.txt` and add the list of servers you want to
    check, one per line:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`servers.txt`的文件，并将要检查的服务器列表逐行添加进去：
- en: '[PRE4]'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create a new bash script called `check_rsyslog_service.sh` and add the following
    code:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的bash脚本，命名为`check_rsyslog_service.sh`，并添加以下代码：
- en: '[PRE7]'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Make the script executable:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使脚本可执行：
- en: '[PRE12]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Run the script:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本：
- en: '[PRE13]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The script will iterate through the list of servers in `servers.txt` and execute
    the `systemctl status rsyslog` command over SSH to check the status of the rsyslog
    service on each server. The output will be displayed in the Terminal. You can
    modify the script to perform other actions on the servers, such as restarting
    the rsyslog service or updating the rsyslog configuration.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本将遍历 `servers.txt` 中的服务器列表，并通过 SSH 执行 `systemctl status rsyslog` 命令来检查每台服务器上
    rsyslog 服务的状态。输出结果将在终端中显示。你可以修改脚本，在服务器上执行其他操作，比如重启 rsyslog 服务或更新 rsyslog 配置。
- en: Configuring rsyslog for centralized logging
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 rsyslog 进行集中日志记录
- en: Centralized logging using the `central-rsyslog` server can be set up after you’ve
    updated to the most recent version of rsyslog.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在你将 rsyslog 更新到最新版本后，可以设置使用 `central-rsyslog` 服务器进行集中式日志记录。
- en: The central logging setup is created by turning on the rsyslog UDP input module,
    `imudp`, and building the rsyslog template to receive log messages from other
    servers. The `imudp` input module allows syslog messages to be broadcast over
    UDP to be received by the `central-rsyslog` server.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 集中日志记录设置是通过启用 rsyslog UDP 输入模块 `imudp` 并构建 rsyslog 模板来接收来自其他服务器的日志消息来创建的。`imudp`
    输入模块允许通过 UDP 广播 syslog 消息，供 `central-rsyslog` 服务器接收。
- en: Enable the options shown in the following screenshot in `/etc/rsyslog.conf`
    (the rsyslog configuration file) before saving the file and closing the editor.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在保存文件并关闭编辑器之前，请在 `/etc/rsyslog.conf`（rsyslog 配置文件）中启用以下截图所示的选项。
- en: 'The `imudp` input module needs to be configured to utilize the default UDP
    port of `514` to work:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`imudp` 输入模块需要配置为使用默认的 UDP 端口 `514` 才能正常工作：'
- en: '![Figure 11.3 – imudp module configuration](img/B18575_11_03.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.3 – imudp 模块配置](img/B18575_11_03.jpg)'
- en: Figure 11.3 – imudp module configuration
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.3 – imudp 模块配置
- en: Then, create a new rsyslog template (`/etc/rsyslog.d/50-remote-logs.conf`) and
    paste the configuration indicated in *Figure 11**.4*.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建一个新的 rsyslog 模板（`/etc/rsyslog.d/50-remote-logs.conf`），并粘贴在*图 11.4*中指示的配置。
- en: 'The following rsyslog template will allow you to collect logs from other servers
    and store them in the `/var/log/remotelogs/` directory on the `main-rsyslog` server:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 rsyslog 模板将允许你从其他服务器收集日志，并将其存储在 `main-rsyslog` 服务器上的 `/var/log/remotelogs/`
    目录中：
- en: '![Figure 11.4 – Template configuration](img/B18575_11_04.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.4 – 模板配置](img/B18575_11_04.jpg)'
- en: Figure 11.4 – Template configuration
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.4 – 模板配置
- en: 'To establish a new log directory (`/var/log/remotelogs/`) owned by the root
    user with the `adm` group, run the following instructions. By doing this, the
    rsyslog service will be able to create logs in the `/``var/log/remotelogs` folder:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要建立一个新的日志目录（`/var/log/remotelogs/`），并将其归 root 用户和 `adm` 组所有，可以运行以下指令。这样，rsyslog
    服务将能够在 `/var/log/remotelogs` 文件夹中创建日志：
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Then, change the ownership of the `remotelogs` folder:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，更改 `remotelogs` 文件夹的所有权：
- en: '[PRE15]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'To check the rsyslog settings (`/etc/rsyslog.conf` and `/etc/rsyslog.d/50-remote-logs.conf`),
    simply execute the `rsyslogd` commands provided here:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查 rsyslog 设置（`/etc/rsyslog.conf` 和 `/etc/rsyslog.d/50-remote-logs.conf`），只需执行这里提供的
    `rsyslogd` 命令：
- en: '![Figure 11.5 – Checking the syntax](img/B18575_11_05.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.5 – 检查语法](img/B18575_11_05.jpg)'
- en: Figure 11.5 – Checking the syntax
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.5 – 检查语法
- en: 'After double-checking the settings, you can restart the rsyslog service using
    the following command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在仔细检查设置后，你可以使用以下命令重启 rsyslog 服务：
- en: '[PRE16]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The rsyslog service, which has the `imudp` input module enabled, has exposed
    the syslog protocol’s default UDP port, `514`. Now, hosts can communicate with
    the `main-rsyslog` server by sending their logs there:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 启用了 `imudp` 输入模块的 rsyslog 服务已暴露了 syslog 协议的默认 UDP 端口 `514`。现在，主机可以通过将日志发送到 `main-rsyslog`
    服务器与其通信：
- en: '[PRE17]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'You can double-check that your ports have been properly opened by running the
    `ss` command, as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下 `ss` 命令来再次确认你的端口是否已正确打开：
- en: '[PRE18]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Here’s the output:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这是输出结果：
- en: '![Figure 11.6 – Command to see ports listening](img/B18575_11_06.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.6 – 查看监听端口的命令](img/B18575_11_06.jpg)'
- en: Figure 11.6 – Command to see ports listening
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.6 – 查看监听端口的命令
- en: Syslog is a simple and efficient protocol for collecting and managing log data
    in a distributed network environment. It provides a centralized location for storing
    logs, which makes it easier to manage, monitor, and troubleshoot systems.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: Syslog 是一种简单高效的协议，用于在分布式网络环境中收集和管理日志数据。它提供了一个集中存储日志的位置，这使得系统管理、监控和故障排除变得更加容易。
- en: Sending logs to a centralized rsyslog server
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向集中式 rsyslog 服务器发送日志
- en: You’ve already taken the first step toward streamlined log handling by configuring
    syslog on the `main-rsyslog` server. But how do you know that the `main-rsyslog`
    server is receiving the logs? Logs can be sent from a remote client system to
    a `main-rsyslog` server by activating and configuring the rsyslog output module
    (`main-rsyslog`).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经通过在`main-rsyslog`服务器上配置 syslog，迈出了简化日志处理的第一步。但是，您如何确认`main-rsyslog`服务器正在接收日志？日志可以通过激活并配置
    rsyslog 输出模块（`main-rsyslog`）从远程客户端系统发送到`main-rsyslog`服务器。
- en: In this example, the `client01` machine uses the rsyslog output module, `omfwd`,
    to transmit logs to the `main-rsyslog` server.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，`client01`机器使用 rsyslog 输出模块`omfwd`，将日志传输到`main-rsyslog`服务器。
- en: To process messages and logs, the `omfwd` module must be installed (it will
    be already). It can be used in conjunction with rsyslog templates. Finally, the
    module uses the rsyslog action object to transmit the data through UDP and TCP
    to the specified destinations.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要处理消息和日志，必须安装`omfwd`模块（它应该已经安装）。该模块可以与 rsyslog 模板结合使用。最后，模块通过 rsyslog 操作对象将数据通过
    UDP 和 TCP 协议传输到指定的目的地。
- en: Set up the client machine so that it can submit logs to the `main-rsyslog` server.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 设置客户端机器，使其能够向`main-rsyslog`服务器提交日志。
- en: Create a new rsyslog configuration (`/etc/rsyslog.d/20-forward-logs.conf`) in
    your preferred text editor and enter the settings shown in *Figure 11**.7*.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在您喜欢的文本编辑器中创建一个新的 rsyslog 配置文件（`/etc/rsyslog.d/20-forward-logs.conf`），并输入如*图
    11.7*所示的设置。
- en: 'Using the `SendRemote` template, log messages are formatted before being sent
    via the UDP protocol to the `main-rsyslog` server (`192.168.1.111`). In this case,
    the IP address should be replaced with the IP address of your primary rsyslog
    server:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`SendRemote`模板，日志消息在通过 UDP 协议发送到`main-rsyslog`服务器（`192.168.1.111`）之前会先进行格式化。在这种情况下，IP
    地址应该替换为您主 rsyslog 服务器的 IP 地址：
- en: '![Figure 11.7 – Template for SendRemote](img/B18575_11_07.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.7 – SendRemote 模板](img/B18575_11_07.jpg)'
- en: Figure 11.7 – Template for SendRemote
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.7 – SendRemote 模板
- en: The preceding screenshot shows the content of a template file for log forwarding.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的截图显示了日志转发模板文件的内容。
- en: 'Check if the syntax is correct by running this command:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行以下命令检查语法是否正确：
- en: '[PRE19]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Restart rsyslog by running the `sudo systemctl restart rsyslog` command and
    check whether the syslog server is receiving logs from the client.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行`sudo systemctl restart rsyslog`命令重新启动 rsyslog，并检查 syslog 服务器是否正在接收来自客户端的日志。
- en: Log rotation
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志轮换
- en: Log rotation is a crucial process in Linux systems to manage log files efficiently.
    As applications and services generate log data over time, log files can grow significantly,
    consuming disk space and potentially leading to performance issues. Log rotation
    allows for the periodic compression, archival, and removal of old log files, ensuring
    the system maintains a manageable log history.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 日志轮换是 Linux 系统中一个至关重要的过程，用于高效管理日志文件。随着应用程序和服务随着时间生成日志数据，日志文件可能会显著增长，占用磁盘空间，并可能导致性能问题。日志轮换允许定期压缩、归档和删除旧的日志文件，确保系统保持可管理的日志历史记录。
- en: In Linux, log rotation is typically handled by a log rotation tool called `logrotate`.
    The configuration file for `logrotate` is located at `/etc/logrotate.conf`, and
    it includes references to individual log rotation configurations in the `/``etc/logrotate.d/`
    directory.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 中，日志轮换通常由名为`logrotate`的日志轮换工具处理。`logrotate`的配置文件位于`/etc/logrotate.conf`，并且包含对`/etc/logrotate.d/`目录中单独的日志轮换配置文件的引用。
- en: 'Here’s a step-by-step guide on how to configure log rotation in Linux:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是如何在 Linux 中配置日志轮换的分步指南：
- en: '`logrotate` pre-installed. However, if it’s not available on your system, you
    can install it using the package manager specific to your Linux distribution.
    For example, on Debian/Ubuntu-based systems, you can install it with the following
    commands:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`logrotate`是预安装的。然而，如果您的系统没有此工具，您可以使用特定于您 Linux 发行版的包管理器进行安装。例如，在基于 Debian/Ubuntu
    的系统中，您可以通过以下命令进行安装：'
- en: '[PRE20]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**Create a log rotation configuration file**: You can create a new log rotation
    configuration file for your specific application/service or use the default one.
    It’s recommended to create separate files for different applications for easier
    management.'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建日志轮换配置文件**：您可以为您的特定应用程序/服务创建一个新的日志轮换配置文件，或者使用默认的配置文件。建议为不同的应用程序创建单独的文件，以便于管理。'
- en: 'Navigate to the `/etc/logrotate.d/` directory and create a new configuration
    file – for example, `myapp_logrotate`:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 转到`/etc/logrotate.d/`目录并创建一个新的配置文件——例如，`myapp_logrotate`：
- en: '[PRE22]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '`logrotate` configuration file follows a specific syntax. Here’s a basic example:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`logrotate`配置文件遵循特定的语法。以下是一个基本示例：'
- en: '[PRE23]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Replace `/path/to/your/logfile.log` with the actual path to your log file. Replace
    `<N>` with the desired number of log files to keep before removal (for example,
    `rotate 7` to keep 7 days’ worth of logs). Replace `<mode>`, `<user>`, and `<group>`
    with the appropriate permissions and ownership for the newly created log file.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 将`/path/to/your/logfile.log`替换为实际的日志文件路径。将`<N>`替换为在删除前要保留的日志文件数量（例如，`rotate
    7`表示保留7天的日志）。将`<mode>`、`<user>`和`<group>`替换为适当的权限和新创建日志文件的所有权。
- en: Save the configuration file and exit the text editor.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 保存配置文件并退出文本编辑器。
- en: '`logrotate` configuration is error-free, you can run the following command:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果`logrotate`配置没有错误，可以运行以下命令：
- en: '[PRE31]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The `-d` flag is for debugging, and it will show you what `logrotate` would
    do without actually rotating the log files.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '`-d`标志用于调试，它将显示`logrotate`会做的事情，但不会实际旋转日志文件。'
- en: '**Perform a manual log rotation**: Once you are confident that the configuration
    is correct, you can manually trigger log rotation with the following command:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**执行手动日志旋转**：一旦确认配置正确，您可以使用以下命令手动触发日志旋转：'
- en: '[PRE32]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '`logrotate` at regular intervals. You can add an entry to `crontab` using the
    following command:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`logrotate`可以按常规间隔运行。您可以使用以下命令将条目添加到`crontab`中：'
- en: '[PRE33]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Then, add the following line to run `logrotate` daily at midnight:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，添加以下行以在每天午夜运行`logrotate`：
- en: '[PRE34]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Save `crontab` and exit the text editor.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 保存`crontab`并退出文本编辑器。
- en: Now, your log files will be automatically rotated and archived based on the
    configuration settings. You can adjust the rotation frequency and other options
    in the `logrotate` configuration file to suit your specific needs.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您的日志文件将根据配置设置自动旋转和归档。您可以在`logrotate`配置文件中调整旋转频率和其他选项，以满足您的具体需求。
- en: Journald
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Journald
- en: Journal is part of systemd. Messages from various parts of a systemd-enabled
    Linux machine are collected here. This comprises notifications from the kernel
    and boot process, syslog, and other services.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 日志是systemd的一部分。来自启用systemd的Linux机器各个部分的消息都会在这里收集。这包括来自内核和启动过程、syslog以及其他服务的通知。
- en: Traditionally, during Linux’s boot process, the OS’s many subsystems and application
    daemons would each log messages in text files. Different levels of detail would
    be logged for each subsystem’s messages. When troubleshooting, administrators
    often had to sift through messages from several files spanning different periods
    and then correlate the contents. The journaling feature eliminates this problem
    by centrally logging all system and application-level messages.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，在Linux的启动过程中，操作系统的许多子系统和应用程序守护进程会将日志消息记录在文本文件中。每个子系统的消息会记录不同级别的详细信息。在故障排除时，管理员通常需要从多个文件中筛选出不同时间段的消息，并进行内容关联。日志记录功能通过集中记录所有系统和应用级消息消除了这个问题。
- en: The systemd-journald daemon is in charge of the journal. It gathers data from
    several resources and inserts the gathered messages into the diary.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: systemd-journald守护进程负责日志。它从多个资源收集数据，并将收集到的消息插入到日志中。
- en: When systemd is using in-memory journaling, the journal files are generated
    under the `/run/log/journal` folder. If there isn’t already such a directory,
    one will be made. The journal is generated with persistent storage in the `/var/log/journal`
    directory; again, systemd will establish this directory if necessary. Logs will
    be written to `/run/log/journal` in a non-persistent fashion if this directory
    is destroyed; systemd-journald will not recreate it automatically. When the daemon
    is restarted, the directory is recreated.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 当systemd使用内存中的日志时，日志文件会生成在`/run/log/journal`文件夹下。如果没有该目录，系统会创建一个。日志也可以使用持久化存储在`/var/log/journal`目录下生成；如果需要，systemd会创建这个目录。如果此目录被销毁，日志将以非持久化方式写入`/run/log/journal`，systemd-journald不会自动重新创建它。当守护进程重新启动时，目录会被重新创建。
- en: The `journalctl` command is useful for debugging services and processes since
    it allows you to examine and modify the systemd logs.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '`journalctl`命令对于调试服务和进程非常有用，因为它允许您查看和修改systemd日志。'
- en: The `journalctl` command and its numerous display options will be described
    next, along with how to view systemd logs. Since each machine has its own set
    of records, the results will vary.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来将介绍`journalctl`命令及其众多显示选项，以及如何查看systemd日志。由于每台机器有其独立的记录集，因此结果会有所不同。
- en: 'To show all journal entries, use the `journalctl` command without any options:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示所有日志条目，使用不带任何选项的`journalctl`命令：
- en: '[PRE35]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The output shows the time range of the log data. The columns contain the following
    data in order from left to right:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示日志数据的时间范围。列中包含以下按从左到右的顺序排列的数据：
- en: Date and time
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期和时间
- en: Host
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机
- en: Log source
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志来源
- en: Log message
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志消息
- en: 'To show logs specific to the current boot, use the `-b` tag, as follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 要显示与当前启动相关的日志，使用 `-b` 标签，如下所示：
- en: '[PRE36]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'If you want to see the logs from the last 10 minutes, for example, then you
    can use `journalctl -S "10` `minutes ago"`:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想查看过去 10 分钟内的日志，例如，可以使用 `journalctl -S "10` `minutes ago"`：
- en: '[PRE37]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'If you want to display only kernel journal log messages, then use the `-k`
    option, as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你只想显示内核日志消息，可以使用 `-k` 选项，如下所示：
- en: '[PRE38]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'You can also filter log messages based on priority using the following command:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用以下命令根据优先级过滤日志消息：
- en: '[PRE39]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The following are the priorities levels:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是优先级级别：
- en: '`0` or `emerg`'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0` 或 `emerg`'
- en: '`1` or `alert`'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1` 或 `alert`'
- en: '`2` or `crit`'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`2` 或 `crit`'
- en: '`3` or `err`'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`3` 或 `err`'
- en: '`4` or `warning`'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`4` 或 `warning`'
- en: '`5` or `notice`'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`5` 或 `notice`'
- en: '`6` or `info`'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`6` 或 `info`'
- en: '`7` or `debug`'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`7` 或 `debug`'
- en: You can find all the parameters available for `journalctl` using the `man` `journalctl`
    command.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `man` `journalctl` 命令查找所有可用的 `journalctl` 参数。
- en: DMESG
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DMESG
- en: '**dmesg** is a command-line tool in Linux that allows you to view the kernel
    ring buffer messages. The kernel ring buffer is a circular buffer in memory that
    stores messages generated by the kernel, such as hardware events, device driver
    information, and system error messages.'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '**dmesg** 是 Linux 中的一个命令行工具，允许你查看内核环形缓冲区的消息。内核环形缓冲区是内存中的一个循环缓冲区，存储内核生成的消息，如硬件事件、设备驱动程序信息和系统错误消息。'
- en: The `dmesg` command displays the contents of this kernel ring buffer, allowing
    you to view messages that have been generated since the system was last booted.
    These messages can be useful for debugging system problems, identifying hardware
    issues, and monitoring system events.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`dmesg` 命令显示这个内核环形缓冲区的内容，允许你查看自系统上次启动以来生成的消息。这些消息对于调试系统问题、识别硬件问题和监控系统事件非常有用。'
- en: 'Some of the common use cases of `dmesg` include the following:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`dmesg` 的一些常见用例包括以下内容：'
- en: '`dmesg` can be used to identify and diagnose system problems by displaying
    error messages, warnings, and other relevant information'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dmesg` 可用于通过显示错误消息、警告和其他相关信息来识别和诊断系统问题。'
- en: '`dmesg` can provide information about hardware devices and drivers, such as
    when a device is detected or when a driver fails to load'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dmesg` 可以提供关于硬件设备和驱动程序的信息，例如设备何时被检测到或驱动程序加载失败时的情况。'
- en: '`dmesg` can be used to monitor system events, such as when a user plugs in
    a USB device or when a system service starts or stops'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dmesg` 可用于监控系统事件，例如当用户插入 USB 设备或系统服务启动或停止时。'
- en: 'Here are some commonly used options that are used with the `dmesg` command:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些常用选项，可与 `dmesg` 命令一起使用：
- en: '`-T`: Displays the timestamp in human-readable format'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-T`：以人类可读格式显示时间戳。'
- en: '`-H`: Displays the output in a more human-readable format'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-H`：以更易读的格式显示输出。'
- en: '`-l level`: Displays only messages of the specified log level (`debug`, `info`,
    `notice`, `warning`, `err`, `crit`, `alert`, or `emerg`)'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-l level`：仅显示指定日志级别（`debug`、`info`、`notice`、`warning`、`err`、`crit`、`alert`
    或 `emerg`）的消息。'
- en: '`-k`: Displays only kernel messages'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-k`：仅显示内核消息。'
- en: Overall, `dmesg` is a powerful tool that can help you troubleshoot system problems
    and monitor system events in Linux.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，`dmesg` 是一个强大的工具，可以帮助你排查系统问题并监控 Linux 系统中的事件。
- en: The `dmesg` command provides a window into the inner workings of Linux. This
    *fault finder’s friend* allows you to read and observe messages sent by the kernel’s
    hardware devices and drivers from the kernel’s internal ring buffer.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '`dmesg` 命令提供了一个观察 Linux 内部工作情况的窗口。这个 *故障排查者的朋友* 允许你读取和观察从内核的硬件设备和驱动程序发送的消息，这些消息来自内核的内部环形缓冲区。'
- en: Understanding the ring buffer in Linux
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Linux 中的环形缓冲区
- en: When a computer is powered on, several events occur in a specific order; in
    Linux and Unix-like systems, these activities are referred to as booting and startup,
    respectively.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 当计算机开机时，会按特定顺序发生多个事件；在 Linux 和类 Unix 系统中，这些活动分别被称为引导和启动。
- en: After the initialization of the system has been completed by the boot procedures
    (BIOS or UEFI, MBR, and GRUB), the kernel is loaded into memory, the initial ramdisk
    (initrd or initramfs) is connected to the kernel, and systemd is launched.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统初始化（BIOS 或 UEFI、MBR 和 GRUB）完成后，内核被加载到内存中，初始内存磁盘（initrd 或 initramfs）与内核连接，并启动
    systemd。
- en: The OS is handed over to the startup routines, which finish the setup. When
    a system is first booted, it may take a while for logging daemons such as syslogd
    and rsyslogd to become operational. The kernel features a ring buffer that it
    employs as a message cache to ensure that critical error messages and warnings
    from this phase of initialization are not lost.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统被交给启动程序，这些程序完成设置。当系统首次启动时，可能需要一段时间才能使日志守护进程（如 syslogd 和 rsyslogd）开始工作。内核有一个环形缓冲区，用作消息缓存，以确保在初始化阶段产生的关键错误消息和警告不会丢失。
- en: A ring buffer is a special area of memory where messages can be stored. It has
    a standard size and straightforward construction. When it reaches capacity, newer
    messages replace older ones. It can be seen conceptually as a *circular buffer*.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 环形缓冲区是一个特殊的内存区域，用于存储消息。它具有固定的大小和简单的结构。当缓冲区达到容量时，新的消息会替换掉旧的消息。它可以被概念化为*环形缓冲区*。
- en: Information such as device driver initialization messages, hardware messages,
    and kernel module messages are all kept in the kernel ring buffer. The ring buffer
    is a handy place to begin troubleshooting hardware faults or other startup issues
    because it stores these low-level messages.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如设备驱动初始化消息、硬件消息和内核模块消息等信息都会保存在内核环形缓冲区中。环形缓冲区是开始故障排除硬件问题或其他启动问题的一个便捷位置，因为它存储着这些低级别的消息。
- en: 'With the `dmesg` command, you can examine the log of messages saved in the
    system’s ring buffer:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `dmesg` 命令，你可以检查系统环形缓冲区中保存的消息日志：
- en: '[PRE40]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: I added `-T` to show the timestamps in a readable format, and `less` to make
    it scrollable.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我添加了 `-T` 以以可读的格式显示时间戳，并使用 `less` 使其可滚动。
- en: 'The following is the output of the preceding command:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是前述命令的输出：
- en: '[PRE41]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The `dmesg --follow` command is a variation of the `dmesg` command that continuously
    displays new messages as they are generated in the kernel ring buffer.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '`dmesg --follow` 命令是 `dmesg` 命令的一种变体，它会持续显示在内核环形缓冲区中生成的新消息。'
- en: When you run `dmesg --follow` in a Terminal, it will display the most recent
    kernel messages and then continue to display any new messages that are generated
    in real time. This can be useful for monitoring system events as they occur or
    for diagnosing issues that may be occurring in real time.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在终端中运行 `dmesg --follow` 时，它将显示最近的内核消息，并继续实时显示任何新生成的消息。这对于监控系统事件的发生或诊断实时发生的问题非常有用。
- en: The `--follow` option is equivalent to the `-w` or `--wait` option, which tells
    `dmesg` to wait for new messages to be added to the kernel ring buffer and display
    them as they come in.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`--follow` 选项等同于 `-w` 或 `--wait` 选项，它告诉 `dmesg` 等待将新消息添加到内核环形缓冲区，并在消息到达时显示它们。'
- en: 'Here are some use cases for the `dmesg --``follow` command:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是 `dmesg --follow` 命令的一些用例：
- en: '`dmesg --follow` to monitor the kernel messages as you plug or unplug devices,
    or as you interact with hardware'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dmesg --follow` 用于监控在插拔设备时或与硬件交互时产生的内核消息。'
- en: '`dmesg --follow` can help you see what’s happening in real time and identify
    any patterns or issues that may be causing the problem'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dmesg --follow` 可以帮助你实时了解发生了什么，并识别可能导致问题的模式或问题。'
- en: '`dmesg --follow` to watch for any error messages or warnings that may be generated
    in the kernel ring buffer'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dmesg --follow` 用于监视在内核环形缓冲区中可能生成的任何错误消息或警告。'
- en: 'It’s worth noting that because `dmesg --follow` continuously displays new messages,
    the output can quickly become overwhelming and difficult to read. To stop the
    `dmesg` command from running, you can press *Ctrl* + *C* in the terminal:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，因为 `dmesg --follow` 会持续显示新消息，输出可能很快变得压倒性，难以阅读。要停止 `dmesg` 命令的运行，你可以在终端中按
    *Ctrl* + *C*：
- en: '[PRE42]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Observe that you are not taken back to the prompt where you entered commands.
    Whenever fresh messages are received, `dmesg` will show them in the Terminal’s
    footer.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你不会被带回到输入命令的提示符处。每当接收到新消息时，`dmesg` 会在终端底部显示这些消息。
- en: 'You can see the last 15 messages, for example, by using the following command:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，你可以使用以下命令查看最近的 15 条消息：
- en: '[PRE43]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Alternatively, you can search for specific terms (for example, `memory`) using
    the `dmesg | grep -I` `memory` command:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以使用 `dmesg | grep -I memory` 命令搜索特定的术语（例如，`memory`）：
- en: '[PRE44]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Use the `man` command to find out all the magic that you can do with one command.
    `dmesg` is a very powerful tool for investigating logs.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `man` 命令可以查找你可以用一个命令做的所有操作。`dmesg` 是一个非常强大的日志调查工具。
- en: Summary
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned about logs and how to configure rsyslog for centralized
    logging. Using various rsyslog input and output plugins, you transmitted server
    logs over the network to the consolidated rsyslog server. Your rsyslog server
    is now the only location you need to look for logs.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了日志以及如何配置 rsyslog 实现集中式日志记录。通过使用各种 rsyslog 输入和输出插件，你将服务器日志通过网络传输到集中式
    rsyslog 服务器。现在，你的 rsyslog 服务器是查找日志的唯一位置。
- en: We also provided examples of how to read systemd journal logs. The `journalctl`
    command is a powerful resource for diagnosing issues with Linux services and finding
    problems in the OS.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了如何读取 systemd 日志的示例。`journalctl` 命令是一个强大的工具，用于诊断 Linux 服务的问题并查找操作系统中的故障。
- en: Finally, you learned about the power of the `dmesg` command and how it can be
    used. `dmesg` is a powerful tool that can help you troubleshoot system problems
    and monitor system events in Linux.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你了解了 `dmesg` 命令的强大功能及其使用方法。`dmesg` 是一个强大的工具，能够帮助你排查系统问题并监控 Linux 系统事件。
- en: In the next chapter, we will talk about centralized authentication, where you
    can use a single server for all your clients to authenticate against.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论集中式认证，你可以使用一台服务器让所有客户端进行认证。
