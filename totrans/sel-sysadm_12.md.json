["```\n    # yum install elrepo-release\n    ```", "```\n    # yum install --enablerepo=elrepo-kernel kernel-ml\n    ```", "```\n    # grub2-mkconfig -o /boot/grub2/grub.cfg\n    ```", "```\n    # reboot\n    ```", "```\n    # dnf config-manger --set-enabled PowerTools\n    ```", "```\n    # yum install gcc xz-devel python36-devel acpica-tools uuid-devel ncurses-devel glib2-devel pixman-devel yajl yajl-devel zlib-devel transfig pandoc perl-Pod-Html git glibc-devel.i686 patch libuuid-devel\n    ```", "```\n    # yum install https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/d/dev86-0.16.21-2.el7.x86_64.rpm\n    ```", "```\n    $ tar xvf xen-4.13.1.tar.gz\n    ```", "```\n    $ cd xen-4.13.1\n    ```", "```\n    $ ./configure\n    ```", "```\n    $ make world\n    ```", "```\n    # make install\n    ```", "```\n    # grub2-mkconfig -o /boot/grub2/grub.cfg\n    ```", "```\n    # echo \"/usr/local/lib\" > /etc/ld.so.conf.d/local-xen.conf\n    # ldconfig\n    ```", "```\n    # semanage fcontext -a -e /usr/local/bin /usr/bin\n    # semanage fcontext -a -e /usr/local/sbin /usr/sbin\n    ```", "```\n    # restorecon -RvF /usr/local\n    ```", "```\n    # reboot\n    ```", "```\n    # systemctl start xencommons\n    # systemctl start xendomains\n    # systemctl start xendriverdomain\n    # systemctl start xen-watchdog\n    ```", "```\n    Domain-0, which is the guest you just executed the xl list command in.\n    ```", "```\n    # systemctl enable xencommons\n    # systemctl enable xendomains\n    # systemctl enable xendriverdomain\n    # systemctl enable xen-watchdog\n    ```", "```\n    # mount -o loop -t iso9660 /srv/data/alpine-virt-3.8.0-x86_64.iso /media/cdrom\n    ```", "```\n    # dd if=/dev/zero of=/srv/data/a1.img bs=1M count=3000\n    ```", "```\n    # Alpine Linux PV DomU\n    # Kernel paths for install\n    kernel = \"/media/cdrom/boot/vmlinuz-virt\"\n    ramdisk = \"/media/cdrom/boot/initramfs-virt\"\n    extra = \"modules=loop,squashfs console=hvc0\"\n    # Path to HDD and ISO file\n    disk = [\n      'format=raw, vdev=xvda, access=w, target=/srv/data/a1.img',\n      'format=raw, vdev=xvdc, access=r, devtype=cdrom, target=/srv/data/alpine-virt-3.8.0-x86_64.iso'\n    ]\n    # DomU settings\n    memory = 512\n    name = \"alpine-a1\"\n    vcpus = 1\n    maxvcpus = 1\n    ```", "```\n    -c option will immediately show the console to interact with, allowing you to initiate and complete the installation of the operating system in the guest. \n    ```", "```\n    # xl create -f /etc/xen/xa1.cfg\n    ```", "```\n    # xl list\n    Name           ID     Mem VCPUs       State      Time(s)\n    Domain-0        0    7836     4      r-----         99.4\n    alpina-a1       1     128     1      -b----          2.5\n    ```", "```\n    $ make clean\n    ```", "```\n    $ cd xen\n    ```", "```\n    $ make menuconfig\n    ```", "```\n    Common Features --->\n      [*] Xen Security Modules support\n      [*]   FLux Advanced Security Kernel support\n    [*]     Compile Xen with a built-in FLAS security \n              policy\n      [*]   SILO support\n    Default XSM implementation (FLux Advanced \n            Security Kernel)\n    ```", "```\n    $ cd ..\n    ```", "```\n    $ ./configure\n    $ make world\n    ```", "```\n    /boot (named xenpolicy-4.13.1).\n    ```", "```\n    # grub2-mkconfig -o /boot/grub2/grub.cfg\n    ```", "```\n    # reboot\n    ```", "```\n    # xl list -Z\n    Name               ID   ...     Security Label\n    Domain-0            0   ...   system_u:system_r:dom0_t\n    alpina-a1           1   ...   system_u:system_r:domU_t\n    ```", "```\nseclabel = 'system_u:system_r:isolated_domU_t'\n```", "```\n# xl list -Z\nName               ID   ...   Security Label\nDomain-0            0   ... system_u:system_r:dom0_t\nalpina-a1           1   ... system_u:system_r:isolated_domU_t\n```", "```\nGRUB_CMDLINE_XEN_DEFAULT=\"flask=enforcing\"\n```", "```\n# grub2-mkconfig -o /boot/grub2/grub.cfg\n```", "```\n# xl getenforce\nEnforcing\n```", "```\n# xl setenforce permissive\n```", "```\n# xl dmesg\n...\n(XEN) avc: granted { setenforce } for domid=0 scontext=system_u:system_r:dom0_t tcontext=system_u:system_r:security_t tclass=security\n```", "```\n    # flask-get-bool -a\n    guest_writeconsole: 1\n    prot_doms_locked: 0\n    ```", "```\n    # flask-set-bool prot_doms_locked 1\n    ```", "```\n    $ seinfo --all ./xenpolicy-4.13.1\n    ```", "```\n    $ sesearch -A ./xenpolicy-4.13.1\n    ```", "```\n# flask-label-pci 0000:03:02.0 system_u:object_r:nic_dev_t\n```", "```\n$ make\n```", "```\n# xl loadpolicy /path/to/xenpolicy-4.13.1\n```", "```\n# flask-loadpolicy /path/to/xenpolicy-4.13.1\n```"]