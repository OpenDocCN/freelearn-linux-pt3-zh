- en: 29\. Adding a New Disk Drive to a CentOS 8 System
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 29\. 向 CentOS 8 系统添加新硬盘驱动器
- en: One of the first problems encountered by users and system administrators these
    days is that systems tend to run out of disk space to store data. Fortunately
    disk space is now one of the cheapest IT commodities. In the next two chapters
    we will look at the steps necessary to configure CentOS 8 to use the space provided
    via the installation of a new physical or virtual disk drive.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 目前用户和系统管理员面临的第一个问题之一是，系统往往会因存储数据的磁盘空间不足而出现问题。幸运的是，磁盘空间现在是最便宜的 IT 商品之一。在接下来的两章中，我们将介绍配置
    CentOS 8 以使用新物理或虚拟硬盘驱动器提供的空间所需的步骤。
- en: 29.1 Mounted File Systems or Logical Volumes
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 29.1 挂载的文件系统或逻辑卷
- en: There are two ways to configure a new disk drive on a CentOS 8 system. One very
    simple method is to create one or more Linux partitions on the new drive, create
    Linux file systems on those partitions and then mount them at specific mount points
    so that they can be accessed. This approach will be covered in this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CentOS 8 系统上配置新硬盘有两种方法。一种非常简单的方法是，在新硬盘上创建一个或多个 Linux 分区，在这些分区上创建 Linux 文件系统，然后将它们挂载到特定的挂载点，以便访问。此方法将在本章中进行讲解。
- en: Another approach is to add the new space to an existing volume group or create
    a new volume group. When CentOS 8 is installed a volume group is created and named
    cl. Within this volume group are three logical volumes named root, home and swap
    that are used to store the / and /home file systems and swap partition respectively.
    By configuring the new disk as part of a volume group we are able to increase
    the disk space available to the existing logical volumes. Using this approach
    we are able, therefore, to increase the size of the /home file system by allocating
    some or all of the space on the new disk to the home volume. This topic will be
    discussed in detail in [“Adding a New Disk to a CentOS 8 Volume Group and Logical
    Volume”](../Text/Volume_Groups.xhtml#_idTextAnchor375).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是将新空间添加到现有的卷组中，或创建一个新的卷组。当 CentOS 8 安装时，会创建一个名为 cl 的卷组。在该卷组中，有三个逻辑卷，分别命名为
    root、home 和 swap，用于存储 / 和 /home 文件系统以及交换分区。通过将新硬盘配置为卷组的一部分，我们可以增加现有逻辑卷的磁盘空间。因此，我们可以通过将新硬盘上的部分或全部空间分配给
    home 卷，来增大 /home 文件系统的大小。这个话题将在[《向 CentOS 8 卷组和逻辑卷添加新硬盘》](../Text/Volume_Groups.xhtml#_idTextAnchor375)中详细讨论。
- en: 29.2 Finding the New Hard Drive
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 29.2 查找新硬盘
- en: This tutorial assumes that a new physical or virtual hard drive has been installed
    on the system and is visible to the operating system. Once added, the new drive
    should automatically be detected by the operating system. Typically, the disk
    drives in a system are assigned device names beginning hd or sd followed by a
    letter to indicate the device number. For example, the first device might be /dev/sda,
    the second /dev/sdb and so on.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程假设系统已安装新物理或虚拟硬盘，并且该硬盘对操作系统可见。添加后，操作系统应自动检测到新硬盘。通常，系统中的硬盘驱动器会分配以 hd 或 sd 开头的设备名称，后跟一个字母表示设备编号。例如，第一个设备可能是
    /dev/sda，第二个设备是 /dev/sdb，依此类推。
- en: 'The following is output from a system with only one disk drive connected to
    a SATA controller:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是只有一个硬盘驱动器连接到 SATA 控制器的系统输出：
- en: ls /dev/sd*
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ls /dev/sd*
- en: /dev/sda /dev/sda1 /dev/sda2
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda /dev/sda1 /dev/sda2
- en: This shows that the disk drive represented by /dev/sda is itself divided into
    2 partitions, represented by /dev/sda1 and /dev/sda2\.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了由 /dev/sda 表示的硬盘驱动器被分为 2 个分区，分别由 /dev/sda1 和 /dev/sda2 表示。
- en: 'The following output is from the same system after a second hard disk drive
    has been installed:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下输出来自同一系统，在安装了第二个硬盘驱动器后：
- en: ls /dev/sd*
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ls /dev/sd*
- en: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb
- en: As shown above, the new hard drive has been assigned to the device file /dev/sdb.
    Currently the drive has no partitions shown (because we have yet to create any).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，新硬盘已被分配到设备文件 /dev/sdb。目前该驱动器没有显示任何分区（因为我们尚未创建任何分区）。
- en: At this point we have a choice of creating partitions and file systems on the
    new drive and mounting them for access or adding the disk as a physical volume
    as part of a volume group. To perform the former continue with this chapter, otherwise
    read [“Adding a New Disk to a CentOS 8 Volume Group and Logical Volume”](../Text/Volume_Groups.xhtml#_idTextAnchor375)
    for details on configuring Logical Volumes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们可以选择在新磁盘上创建分区和文件系统并将其挂载以便访问，或者将该磁盘作为物理卷添加到卷组中。若要执行前者，请继续阅读本章，否则请阅读[“将新磁盘添加到CentOS
    8卷组和逻辑卷”](../Text/Volume_Groups.xhtml#_idTextAnchor375)，了解配置逻辑卷的详细信息。
- en: 29.3 Creating Linux Partitions
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 29.3 创建Linux分区
- en: 'The next step is to create one or more Linux partitions on the new disk drive.
    This is achieved using the fdisk utility which takes as a command-line argument
    the device to be partitioned:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是在新磁盘上创建一个或多个Linux分区。这是通过使用fdisk工具来实现的，fdisk工具接受一个命令行参数，该参数指定要分区的设备：
- en: fdisk /dev/sdb
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fdisk /dev/sdb
- en: Welcome to fdisk (util-linux 2.32.1).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎使用fdisk（util-linux 2.32.1）。
- en: Changes will remain in memory only, until you decide to write them.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 更改将仅保留在内存中，直到您决定写入它们。
- en: Be careful before using the write command.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用写入命令之前要小心。
- en: Device does not contain a recognized partition table.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 设备不包含可识别的分区表。
- en: Created a new DOS disklabel with disk identifier 0xbd09c991.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了一个新的DOS磁盘标签，磁盘标识符为0xbd09c991。
- en: 'Command (m for help):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入m以获取帮助）：
- en: 'In order to view the current partitions on the disk enter the p command:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了查看磁盘上的当前分区，请输入p命令：
- en: 'Command (m for help): p'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入m以获取帮助）：p
- en: 'Disk /dev/sdb: 8 GiB, 8589934592 bytes, 16777216 sectors'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘 /dev/sdb：8 GiB，8589934592字节，16777216个扇区
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 单位：1 * 512 = 512字节的扇区
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 扇区大小（逻辑/物理）：512字节 / 512字节
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: I/O大小（最小/最佳）：512字节 / 512字节
- en: 'Disklabel type: dos'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘标签类型：dos
- en: 'Disk identifier: 0xbd09c991'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘标识符：0xbd09c991
- en: 'As we can see from the above fdisk output, the disk currently has no partitions
    because it is a previously unused disk. The next step is to create a new partition
    on the disk, a task which is performed by entering n (for new partition) and p
    (for primary partition):'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的fdisk输出可以看出，该磁盘目前没有分区，因为它是一个以前未使用的磁盘。下一步是在磁盘上创建一个新分区，操作方法是输入n（表示新分区）和p（表示主分区）：
- en: 'Command (m for help): n'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入m以获取帮助）：n
- en: Partition type
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 分区类型
- en: p primary (0 primary, 0 extended, 4 free)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: p 主分区（0主分区，0扩展分区，4空闲）
- en: e extended (container for logical partitions)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: e 扩展分区（逻辑分区的容器）
- en: 'Select (default p): p'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 选择（默认p）：p
- en: 'Partition number (1-4, default 1):'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 分区号（1-4，默认1）：
- en: In this example we only plan to create one partition which will be partition
    1\. Next we need to specify where the partition will begin and end. Since this
    is the first partition we need it to start at the first available sector and since
    we want to use the entire disk we specify the last sector as the end. Note that
    if you wish to create multiple partitions you can specify the size of each partition
    by sectors, bytes, kilobytes or megabytes.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们只打算创建一个分区，即分区1。接下来，我们需要指定分区的起始和结束位置。由于这是第一个分区，我们需要它从第一个可用扇区开始，并且由于我们希望使用整个磁盘，我们将最后一个扇区作为结束位置。请注意，如果您希望创建多个分区，可以通过扇区、字节、千字节或兆字节来指定每个分区的大小。
- en: 'Partition number (1-4, default 1): 1'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 分区号（1-4，默认1）：1
- en: 'First sector (2048-16777215, default 2048):'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个扇区（2048-16777215，默认2048）：
- en: 'Last sector, +sectors or +size{K,M,G,T,P} (2048-16777215, default 16777215):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个扇区，+扇区数或+大小{K,M,G,T,P}（2048-16777215，默认16777215）：
- en: Created a new partition 1 of type ‘Linux’ and of size 8 GiB.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了一个新的类型为‘Linux’、大小为8 GiB的分区1。
- en: 'Command (m for help):'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入m以获取帮助）：
- en: 'Now that we have specified the partition, we need to write it to the disk using
    the w command:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经指定了分区，我们需要使用w命令将其写入磁盘：
- en: 'Command (m for help): w'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入m以获取帮助）：w
- en: The partition table has been altered.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 分区表已更改。
- en: Calling ioctl() to re-read partition table.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 正在调用ioctl()以重新读取分区表。
- en: Syncing disks.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 正在同步磁盘。
- en: 'If we now look at the devices again we will see that the new partition is visible
    as /dev/sdb1:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在再次查看设备，我们会看到新的分区显示为/dev/sdb1：
- en: ls /dev/sd*
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ls /dev/sd*
- en: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb /dev/sdb1
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb /dev/sdb1
- en: The next step is to create a file system on our new partition.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是在我们新创建的分区上创建文件系统。
- en: 29.4 Creating a File System on a CentOS 8 Disk Partition
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 29.4 在CentOS 8磁盘分区上创建文件系统
- en: 'We now have a new disk installed, it is visible to CentOS 8 and we have configured
    a Linux partition on the disk. The next step is to create a Linux file system
    on the partition so that the operating system can use it to store files and data.
    The easiest way to create a file system on a partition is to use the mkfs.xfs
    utility:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在安装了一块新磁盘，它对CentOS 8是可见的，我们已经在该磁盘上配置了一个Linux分区。接下来的步骤是在该分区上创建一个Linux文件系统，以便操作系统可以使用它来存储文件和数据。创建文件系统的最简单方法是使用mkfs.xfs工具：
- en: mkfs.xfs /dev/sdb1
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mkfs.xfs /dev/sdb1
- en: meta-data=/dev/sdb1 isize=512 agcount=4, agsize=524224 blks
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: meta-data=/dev/sdb1 isize=512 agcount=4, agsize=524224 blks
- en: = sectsz=512 attr=2, projid32bit=1
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: = sectsz=512 attr=2, projid32bit=1
- en: = crc=1 finobt=1, sparse=1, rmapbt=0
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: = crc=1 finobt=1, sparse=1, rmapbt=0
- en: = reflink=1
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: = reflink=1
- en: data = bsize=4096 blocks=2096896, imaxpct=25
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: data = bsize=4096 blocks=2096896, imaxpct=25
- en: = sunit=0 swidth=0 blks
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: = sunit=0 swidth=0 blks
- en: naming =version 2 bsize=4096 ascii-ci=0, ftype=1
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: naming =version 2 bsize=4096 ascii-ci=0, ftype=1
- en: log =internal log bsize=4096 blocks=2560, version=2
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: log =internal log bsize=4096 blocks=2560, version=2
- en: = sectsz=512 sunit=0 blks, lazy-count=1
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: = sectsz=512 sunit=0 blks, lazy-count=1
- en: realtime =none extsz=4096 blocks=0, rtextents=0
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: realtime =none extsz=4096 blocks=0, rtextents=0
- en: In this case we have created an XFS file system. XFS is a high performance file
    system which is the default filesystem type on CentOS 8 and includes a number
    of advantages in terms of parallel I/O performance and the use of journaling.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们创建了一个XFS文件系统。XFS是一个高性能文件系统，是CentOS 8上的默认文件系统类型，并且在并行I/O性能和使用日志记录方面具有许多优势。
- en: 29.5 An Overview of Journaled File Systems
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 29.5 日志记录文件系统概述
- en: A journaling filesystem keeps a journal or log of the changes that are being
    made to the filesystem during disk writing that can be used to rapidly reconstruct
    corruptions that may occur due to events such as a system crash or power outage.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 日志记录文件系统会保留一个日志，记录在磁盘写入过程中对文件系统所做的更改，可以用来快速重建由于系统崩溃或断电等事件导致的文件系统损坏。
- en: There are a number of advantages to using a journaling file system. Both the
    size and volume of data stored on disk drives has grown exponentially over the
    years. The problem with a non-journaled file system is that following a crash
    the fsck (filesystem consistency check) utility has to be run. The fsck utility
    will scan the entire filesystem validating all entries and making sure that blocks
    are allocated and referenced correctly. If it finds a corrupt entry it will attempt
    to fix the problem. The issues here are two-fold. First, the fsck utility will
    not always be able to repair damage and you will end up with data in the lost+found
    directory. This is data that was being used by an application but the system no
    longer knows where it was referenced from. The other problem is the issue of time.
    It can take a very long time to complete the fsck process on a large file system,
    potentially leading to unacceptable down time.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用日志记录文件系统有很多优点。随着时间的推移，存储在磁盘驱动器上的数据的大小和数量呈指数增长。非日志记录文件系统的问题是，在发生崩溃后，必须运行fsck（文件系统一致性检查）工具。fsck工具会扫描整个文件系统，验证所有条目，并确保块被正确分配和引用。如果发现损坏的条目，它会尝试修复问题。这里有两个问题。首先，fsck工具并不总是能够修复损坏，结果会将数据存放在lost+found目录中。这些数据曾被某个应用程序使用，但系统不再知道它来自哪里。另一个问题是时间问题。在大型文件系统上完成fsck过程可能需要很长时间，可能导致不可接受的停机时间。
- en: A journaled file system, on the other hand, records information in a log area
    on a disk (the journal and log do not need to be on the same device) during each
    write. This is a essentially an “intent to commit” data to the filesystem. The
    amount of information logged is configurable and ranges from not logging anything,
    to logging what is known as the “metadata” (i.e. ownership, date stamp information
    etc), to logging the “metadata” and the data blocks that are to be written to
    the file. Once the log is updated the system then writes the actual data to the
    appropriate areas of the filesystem and marks an entry in the log to say the data
    is committed.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，日志记录文件系统会在每次写入时，将信息记录到磁盘上的日志区域（日志和日志本身不需要位于同一设备上）。这本质上是“打算提交”数据到文件系统。日志的记录信息量是可配置的，范围从不记录任何信息，到记录“元数据”（如所有权、时间戳信息等），再到记录“元数据”以及将写入文件的数据块。一旦日志更新，系统会将实际数据写入文件系统的相应区域，并在日志中标记一个条目，表示数据已提交。
- en: After a crash the filesystem can very quickly be brought back on-line using
    the journal log, thereby reducing what could take minutes using fsck to seconds
    with the added advantage that there is considerably less chance of data loss or
    corruption.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在崩溃后，可以使用日志文件快速将文件系统重新上线，从而减少使用 `fsck` 可能需要几分钟的时间，带来的优势是几乎没有数据丢失或损坏的机会。
- en: 29.6 Mounting a File System
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 29.6 挂载文件系统
- en: 'Now that we have created a new file system on the Linux partition of our new
    disk drive we need to mount it so that it is accessible and usable. In order to
    do this we need to create a mount point. A mount point is simply a directory or
    folder into which the file system will be mounted. For the purposes of this example
    we will create a /backup directory to match our file system label (although it
    is not necessary that these values match):'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们在新磁盘驱动器的 Linux 分区上创建了一个新的文件系统，需要将其挂载以使其可访问和可用。为此，我们需要创建一个挂载点。挂载点只是文件系统将要挂载到其中的目录或文件夹。为了本例子的目的，我们将创建一个
    `/backup` 目录以匹配我们的文件系统标签（尽管这些值匹配并非必需）：
- en: mkdir /backup
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mkdir /backup
- en: 'The file system may then be manually mounted using the mount command:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以使用 `mount` 命令手动挂载文件系统：
- en: mount /dev/sdb1 /backup
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mount /dev/sdb1 /backup
- en: 'Running the mount command with no arguments shows us all currently mounted
    file systems (including our new file system):'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 `mount` 命令而不带任何参数会显示所有当前挂载的文件系统（包括我们的新文件系统）：
- en: mount
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mount
- en: sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime,seclabel)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime,seclabel)
- en: proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)
- en: .
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: .
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: /dev/sdb1 on /backup type xfs (rw,relatime,seclabel,attr2,inode64,noquota)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sdb1 on /backup type xfs (rw,relatime,seclabel,attr2,inode64,noquota)
- en: 29.7 Configuring CentOS 8 to Automatically Mount a File System
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 29.7 配置 CentOS 8 自动挂载文件系统
- en: 'In order to set up the system so that the new file system is automatically
    mounted at boot time an entry needs to be added to the /etc/fstab file. The format
    for an fstab entry is as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置系统，使新文件系统在引导时自动挂载，需要向 `/etc/fstab` 文件添加条目。`fstab` 条目的格式如下：
- en: <device> <dir> <type> <options> <dump> <fsck>
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: <device> <dir> <type> <options> <dump> <fsck>
- en: 'These entries can be summarized as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这些条目可以总结如下：
- en: •<device> - The device on which the filesystem is to be mounted.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: •<device> - 文件系统要挂载的设备。
- en: •<dir> - The directory that is to act as the mount point for the filesystem.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: •<dir> - 作为文件系统挂载点的目录。
- en: •<type> - The filesystem type (xfs, ext4 etc.)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: •<type> - 文件系统类型（xfs、ext4 等）。
- en: •<options> - Additional filesystem mount options, for example making the filesystem
    read-only or controlling whether the filesystem can be mounted by any user. Run
    man mount to review a full list of options. Setting this value to defaults will
    use the default settings for the filesystem (rw, suid, dev, exec, auto, nouser,
    async).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: •<options> - 额外的文件系统挂载选项，例如使文件系统为只读或控制是否可以由任何用户挂载文件系统。运行 `man mount` 可查看完整的选项列表。将此值设置为
    `defaults` 将使用文件系统的默认设置（rw、suid、dev、exec、auto、nouser、async）。
- en: •<dump> - Dictates whether the content of the filesystem is to be included in
    any backups performed by the dump utility. This setting is rarely used and can
    be disabled with a 0 value.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: •<dump> - 确定文件系统内容是否包含在由 `dump` 实用程序执行的任何备份中。此设置很少使用，可以通过设置为 0 来禁用。
- en: •<fsck> - Whether the filesystem is checked by fsck after a system crash and
    the order in which filesystems are to be checked. For journaled filesystems such
    as XFS this should be set to 0 to indicate that the check is not required.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: •<fsck> - 文件系统在系统崩溃后是否由 fsck 检查以及检查顺序。对于像 XFS 这样的日志文件系统，应将此设置为 0，表示不需要检查。
- en: 'The following example shows an fstab file configured to automount our /backup
    partition on the /dev/sdb1 partition:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例显示了一个配置自动挂载我们的 `/backup` 分区到 `/dev/sdb1` 分区的 `fstab` 文件：
- en: /dev/mapper/cl-root / xfs defaults 0 0
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/mapper/cl-root / xfs defaults 0 0
- en: UUID=b4fc85a1-0b25-4d64-8100-d50ea23340f7 /boot xfs defaults 0 0
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: UUID=b4fc85a1-0b25-4d64-8100-d50ea23340f7 /boot xfs defaults 0 0
- en: /dev/mapper/cl-home /home xfs defaults 0 0
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/mapper/cl-home /home xfs defaults 0 0
- en: /dev/mapper/cl-swap swap swap defaults 0 0
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/mapper/cl-swap swap swap defaults 0 0
- en: /dev/sdb1 /backup xfs defaults 0 0
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sdb1 /backup xfs defaults 0 0
- en: The /backup filesystem will now automount each time the system restarts.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 每次系统重新启动时，`/backup` 文件系统都会自动挂载。
- en: 29.8 Adding a Disk Using Cockpit
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 29.8 使用 Cockpit 添加磁盘
- en: 'In addition to working with storage using the command-line utilities outlined
    in this chapter, it is also possible to configure a new storage device using the
    Cockpit web console. To view the current storage configuration, log into the Cockpit
    console and select the Storage option as shown in [Figure 29-1](../Text/Adding_New_DIsk.xhtml#_idTextAnchor372):'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用本章中概述的命令行工具操作存储外，还可以使用Cockpit Web控制台配置新存储设备。要查看当前存储配置，请登录Cockpit控制台并选择“存储”选项，如[图29-1](../Text/Adding_New_DIsk.xhtml#_idTextAnchor372)所示：
- en: '![](img/centos_8_cockpit_storage_page.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_cockpit_storage_page.png)'
- en: Figure 29-1
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图29-1
- en: 'To locate the newly added storage, scroll to the bottom of the Storage page
    until the Drives section comes into view:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要查找新添加的存储，请滚动至存储页面底部，直到“驱动器”部分出现：
- en: '![](img/centos_8_cockpit_storage_devices.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_cockpit_storage_devices.png)'
- en: Figure 29-2
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图29-2
- en: 'In the case of the above figure, the new drive is the 8 GiB drive. Select the
    new drive to display the Drive screen as shown in [Figure 29-3](../Text/Adding_New_DIsk.xhtml#_idTextAnchor373):'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在上图的情况下，新硬盘是8 GiB的硬盘。选择新硬盘以显示如[图29-3](../Text/Adding_New_DIsk.xhtml#_idTextAnchor373)所示的硬盘界面：
- en: '![](img/centos_8_cockpit_storage_drive.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_cockpit_storage_drive.png)'
- en: Figure 29-3
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图29-3
- en: 'Click on the Create Partition Table button and, in the resulting dialog accept
    the default settings clicking on the Format button:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“创建分区表”按钮，在弹出的对话框中接受默认设置并点击“格式化”按钮：
- en: '![](img/centos_8_cockpit_storage_format.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_cockpit_storage_format.png)'
- en: Figure 29-4
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图29-4
- en: 'Click on the Create Partition button and use the dialog to specify how much
    space is to be allocated to this partition, the filesystem type (XFS is recommended)
    and an optional label, filesystem mount point and mount options. Note that if
    this new partition does not use all of the available space, additional partitions
    may subsequently be added to the drive. To change settings such as whether the
    filesystem is read-only or mounted at boot time, change the Mounting menu option
    to Custom and adjust the toggle button settings:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“创建分区”按钮，并使用对话框指定此分区将分配多少空间、文件系统类型（推荐使用XFS），以及可选的标签、文件系统挂载点和挂载选项。请注意，如果此新分区没有使用所有可用空间，后续可能会在硬盘上添加更多分区。如果需要更改设置，例如文件系统是否为只读或是否在启动时挂载，请将“挂载”菜单选项更改为“自定义”，并调整切换按钮设置：
- en: '![](img/centos_8_cockpit_storage_create_partition.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_cockpit_storage_create_partition.png)'
- en: Figure 29-5
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图29-5
- en: Once the settings have been selected, click on the Create partition button to
    commit the change. On completion of the creation process the new partition will
    be added to the disk, the corresponding filesystem created and mounted at the
    designated mount point and appropriate changes made to the /etc/fstab file.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择了设置，点击“创建分区”按钮以提交更改。完成创建过程后，新的分区将被添加到磁盘，相关的文件系统将被创建并挂载到指定的挂载点，且/etc/fstab文件将做出相应的更改。
- en: 29.9 Summary
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 29.9 小结
- en: This chapter has covered the topic of adding an additional physical or virtual
    disk drive to an existing CentOS 8 system. This is a relatively simple process
    of making sure the new drive has been detected by the operating system, creating
    one or more partitions on the drive and then making filesystems on those partitions.
    Although a number of different filesystem types are available on CentOS 8, XFS
    is generally the recommended option. Once the filesystems are ready, they can
    be mounted using the mount command. So that the newly created filesystems mount
    automatically on system startup, additions can be made to the /etc/fstab configuration
    file.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了如何将额外的物理或虚拟磁盘驱动器添加到现有的CentOS 8系统中。这个过程相对简单，主要包括确保操作系统检测到新硬盘、在硬盘上创建一个或多个分区，并在这些分区上创建文件系统。虽然CentOS
    8上有多种不同的文件系统类型可用，但通常推荐使用XFS。文件系统准备好后，可以使用`mount`命令进行挂载。为了确保新创建的文件系统在系统启动时自动挂载，可以在/etc/fstab配置文件中进行相应的添加。
