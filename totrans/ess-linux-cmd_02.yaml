- en: '2'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux User and Group Commands
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As important as it is to choose the right distribution of Linux, it’s equally
    important to understand the key components of Linux system administration, including
    Linux user and group management. The Linux operating system allows administrators
    to create multiple users and assign different permissions and group policies,
    ensuring system security, stability, and resource allocation. In this chapter,
    we will dive into Linux user and group management and focus on the key commands
    and tools used by Linux system administrators to manage users and groups.
  prefs: []
  type: TYPE_NORMAL
- en: The history of Linux user and group commands dates back to the early days of
    the Unix operating system, where user and group management was a key aspect of
    system security and resource allocation. With the growth of the open source movement,
    Linux adopted these concepts and expanded upon them, allowing for granular control
    over user and group permissions, user authentication and access control, and more.
    Today, Linux user and group commands form a critical component of any Linux system,
    providing system administrators with the tools they need to manage users, assign
    permissions, and ensure secure access to sensitive resources and data.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter we are going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: useradd, userdel, and usermod
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Files, directories, and permission commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: groupdel, groupmod, groupadd, and grpck
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: pwck, chage, and passwd commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: find, locate, and whereis commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: useradd, userdel, and usermod
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In a Linux system, it is important to manage users and groups to ensure security
    and access control. The `useradd`, `userdel`, and `usermod` commands are fundamental
    tools for creating, deleting, and modifying users on a Linux system. These commands
    allow administrators to create user accounts, assign permissions, and limit access
    to resources. Understanding how to use these commands is essential for managing
    users on a Linux system. Whether you are setting up a single-user system or an
    enterprise-level environment, the `useradd`, `userdel`, and `usermod` commands
    are indispensable tools for Linux administrators. We will explore these commands
    in detail, including their usage, options, and examples, to give you a comprehensive
    understanding of user management on a Linux system.
  prefs: []
  type: TYPE_NORMAL
- en: These tools—`useradd`, `userdel`, and `usermod`—are part of the Shadow Password
    Suite, which is commonly used on Linux systems to manage user accounts. It is
    essential to understand how to use these tools properly to ensure the security
    and stability of a Linux system. While these tools are primarily used on Linux
    systems, they can also be used on other Unix-like systems.
  prefs: []
  type: TYPE_NORMAL
- en: We will cover their usage in detail, including the options and syntax for each
    command. We will also discuss best practices for managing user accounts on a Linux
    system, such as creating a standard user account and using `sudo` for administrative
    tasks. Now, let’s dive into these commands in the following subsections.
  prefs: []
  type: TYPE_NORMAL
- en: useradd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The `useradd` command in Linux is used to create a new user account or update
    an existing one. It is a powerful tool that can be used to manage user accounts
    in a variety of ways, from assigning a home directory and shell to setting the
    user’s password and expiration date. When creating a new user account, `useradd`
    requires several pieces of information to be provided, such as the username, the
    `useradd` to customize the user account. For example, the `-m` flag can be used
    to create a home directory for the user, while the `-s` flag specifies the default
    shell for the user. The `-c` flag can be used to add a comment or description
    to the user account, which can be helpful in identifying the purpose of the account.
    Once the user account has been created, it can be modified using the `usermod`
    command. This command is used to modify the user’s account information, such as
    their password or expiration date. It can also be used to add or remove the user
    from groups, change the user’s default shell, and much more. The basic syntax
    of the `useradd` command is as follows (note that you will need `sudo` access
    to successfully run the command):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: instructor:x:1000:1000:instructor:/home/instructor:/bin/bash
  prefs: []
  type: TYPE_NORMAL
- en: tester1:x:1001:1001::/home/tester1:/bin/bash
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: username:password:lastpasswordchanged:minpasswordage:maxpasswordage:passwordwarningperiod:inactivityperiod:expirationdate:reservedfield
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
