- en: 24\. Managing KVM using the virsh Command-Line Tool
  prefs: []
  type: TYPE_NORMAL
- en: In previous chapters we have covered the steps necessary to install and configure
    KVM-based guest operating systems on CentOS 8\. This chapter is dedicated to exploring
    some additional areas of the virsh tool that have not been covered in previous
    chapters, and how it may be used to manage KVM-based guest operating systems from
    the command-line.
  prefs: []
  type: TYPE_NORMAL
- en: 24.1 The virsh Shell and Command-Line
  prefs: []
  type: TYPE_NORMAL
- en: The virsh tool is both a command-line tool and an interactive shell environment.
    When used in the command-line mode, the command is simply issued at the command
    prompt with sets of arguments appropriate to the task to be performed.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use the options as command-line arguments, use them at a terminal command
    prompt as shown in the following example:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh <option>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The virsh tool, when used in shell mode, provides an interactive environment
    from which to issue sequences of commands.
  prefs: []
  type: TYPE_NORMAL
- en: 'To run commands in the virsh shell, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to virsh, the virtualization interactive terminal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Type: ‘help’ for help with commands'
  prefs: []
  type: TYPE_NORMAL
- en: ‘quit’ to quit
  prefs: []
  type: TYPE_NORMAL
- en: 'virsh #'
  prefs: []
  type: TYPE_NORMAL
- en: 'At the virsh # prompt enter the options you wish to run. The following virsh
    session, for example, lists the current virtual machines, starts a virtual machine
    named FedoraVM and then obtains another listing to verify the VM is running:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to virsh, the virtualization interactive terminal.
  prefs: []
  type: TYPE_NORMAL
- en: 'Type: ‘help’ for help with commands'
  prefs: []
  type: TYPE_NORMAL
- en: ‘quit’ to quit
  prefs: []
  type: TYPE_NORMAL
- en: 'virsh # list'
  prefs: []
  type: TYPE_NORMAL
- en: Id Name State
  prefs: []
  type: TYPE_NORMAL
- en: '----------------------------------------------------'
  prefs: []
  type: TYPE_NORMAL
- en: 8 RHEL8VM running
  prefs: []
  type: TYPE_NORMAL
- en: 9 CentOS7VM running
  prefs: []
  type: TYPE_NORMAL
- en: 'virsh # start FedoraVM'
  prefs: []
  type: TYPE_NORMAL
- en: Domain FedoraVM started
  prefs: []
  type: TYPE_NORMAL
- en: 'virsh # list'
  prefs: []
  type: TYPE_NORMAL
- en: Id Name State
  prefs: []
  type: TYPE_NORMAL
- en: '----------------------------------------------------'
  prefs: []
  type: TYPE_NORMAL
- en: 8 RHEL8VM running
  prefs: []
  type: TYPE_NORMAL
- en: 9 CentOS7VM running
  prefs: []
  type: TYPE_NORMAL
- en: 10 FedoraVM running
  prefs: []
  type: TYPE_NORMAL
- en: virsh#
  prefs: []
  type: TYPE_NORMAL
- en: 'The virsh tool supports a wide range of commands, a full listing of which may
    be obtained using the help option:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh help
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Additional details on the syntax for each command may be obtained by specifying
    the command after the help directive:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh help restore
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: NAME
  prefs: []
  type: TYPE_NORMAL
- en: restore - restore a domain from a saved state in a file
  prefs: []
  type: TYPE_NORMAL
- en: SYNOPSIS
  prefs: []
  type: TYPE_NORMAL
- en: restore <file> [--bypass-cache] [--xml <string>] [--running] [--paused]
  prefs: []
  type: TYPE_NORMAL
- en: DESCRIPTION
  prefs: []
  type: TYPE_NORMAL
- en: Restore a domain.
  prefs: []
  type: TYPE_NORMAL
- en: OPTIONS
  prefs: []
  type: TYPE_NORMAL
- en: '[--file] <string> the state to restore'
  prefs: []
  type: TYPE_NORMAL
- en: --bypass-cache avoid file system cache when restoring
  prefs: []
  type: TYPE_NORMAL
- en: --xml <string> filename containing updated XML for the target
  prefs: []
  type: TYPE_NORMAL
- en: --running restore domain into running state
  prefs: []
  type: TYPE_NORMAL
- en: --paused restore domain into paused state
  prefs: []
  type: TYPE_NORMAL
- en: In the remainder of this chapter we will look at some of these commands in more
    detail.
  prefs: []
  type: TYPE_NORMAL
- en: 24.2 Listing Guest System Status
  prefs: []
  type: TYPE_NORMAL
- en: 'The status of the guest systems on a CentOS 8 virtualization host may be viewed
    at any time using the list option of the virsh tool. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh list
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The above command will display output containing a line for each guest similar
    to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'virsh # list'
  prefs: []
  type: TYPE_NORMAL
- en: Id Name State
  prefs: []
  type: TYPE_NORMAL
- en: '----------------------------------------------------'
  prefs: []
  type: TYPE_NORMAL
- en: 8 RHEL8VM running
  prefs: []
  type: TYPE_NORMAL
- en: 9 CentOS7VM running
  prefs: []
  type: TYPE_NORMAL
- en: 10 FedoraVM running
  prefs: []
  type: TYPE_NORMAL
- en: 24.3 Starting a Guest System
  prefs: []
  type: TYPE_NORMAL
- en: 'A guest operating system can be started using the virsh tool combined with
    the start option followed by the name of the guest operating system to be launched.
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh start myGuestOS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 24.4 Shutting Down a Guest System
  prefs: []
  type: TYPE_NORMAL
- en: 'The shutdown option of the virsh tool, as the name suggests, is used to shutdown
    a guest operating system:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh shutdown guestName
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Note that the shutdown option allows the guest operating system to perform
    an orderly shutdown when it receives the shutdown instruction. To instantly stop
    a guest operating system the destroy option may be used (with all the attendant
    risks of file system damage and data loss):'
  prefs: []
  type: TYPE_NORMAL
- en: virsh destroy guestName
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 24.5 Suspending and Resuming a Guest System
  prefs: []
  type: TYPE_NORMAL
- en: 'A guest system can be suspended and resumed using the virsh tool’s suspend
    and resume options. For example, to suspend a specific system:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh suspend guestName
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Similarly, to resume the paused system:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh resume guestName
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note that a suspended session will be lost if the host system is rebooted. Also,
    be aware that a suspended system continues to reside in memory. To save a session
    such that it no longer takes up memory and can be restored to its exact state
    (even after a reboot), it is necessary to save and restore the guest.
  prefs: []
  type: TYPE_NORMAL
- en: 24.6 Saving and Restoring Guest Systems
  prefs: []
  type: TYPE_NORMAL
- en: 'A running guest operating system can be saved and restored using the virsh
    utility. When saved, the current status of the guest operating system is written
    to disk and removed from system memory. A saved system may subsequently be restored
    at any time (including after a host system reboot):'
  prefs: []
  type: TYPE_NORMAL
- en: 'To save a guest:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh save guestName path_to_save_file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To restore a saved guest operating system session:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh restore path_to_save_file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 24.7 Rebooting a Guest System
  prefs: []
  type: TYPE_NORMAL
- en: 'To reboot a guest operating system:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh reboot guestName
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 24.8 Configuring the Memory Assigned to a Guest OS
  prefs: []
  type: TYPE_NORMAL
- en: 'To configure the memory assigned to a guest OS, use the setmem option of the
    virsh command. For example, the following command reduces the memory allocated
    to a guest system to 256Mb:'
  prefs: []
  type: TYPE_NORMAL
- en: virsh setmem guestName 256
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note that acceptable memory settings must fall within the memory available to
    the current Domain. This may be increased using the setmaxmem option.
  prefs: []
  type: TYPE_NORMAL
- en: 24.9 Summary
  prefs: []
  type: TYPE_NORMAL
- en: The virsh tool provides a wide range of options for creating, monitoring and
    managing guest virtual machines. As outlined in this chapter, the tool can be
    used in either command-line or interactive modes.
  prefs: []
  type: TYPE_NORMAL
