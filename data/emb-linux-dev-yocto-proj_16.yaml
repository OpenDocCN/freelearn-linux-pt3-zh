- en: '16'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '16'
- en: Speeding Up Product Development through Emulation – QEMU
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过仿真加速产品开发——QEMU
- en: In this chapter, we explore the possibilities of shortening product development
    through emulation and reducing the dependency on real hardware for most development.
    You will come to understand the benefits of using QEMU over hardware and when
    choosing real hardware is preferable. We also describe the `runqemu` capabilities
    and demonstrate some use cases.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将探讨通过仿真缩短产品开发周期的可能性，并减少对真实硬件的依赖。你将了解使用 QEMU 相比硬件的好处，以及在何种情况下选择真实硬件更为可取。我们还将介绍
    `runqemu` 的功能并展示一些使用案例。
- en: What is QEMU?
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 QEMU？
- en: '**Quick EMUlator** (**QEMU**) is a free, open source software tool that allows
    users to run multiple architectures on the same physical machine. It is a system
    emulator that can virtualize complete device hardware, including the CPU, memory,
    storage, and peripherals.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**快速模拟器**（**QEMU**）是一个免费的开源软件工具，允许用户在同一物理机器上运行多个架构。它是一个系统模拟器，可以虚拟化完整的设备硬件，包括
    CPU、内存、存储和外设。'
- en: Using QEMU for testing and debugging can save time and effort during development.
    It allows developers to test their code in various simulated environments.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 QEMU 进行测试和调试可以在开发过程中节省时间和精力。它允许开发人员在各种模拟环境中测试他们的代码。
- en: Among other things, the Yocto Project uses QEMU to run automated **Quality Assurance**
    (**QA**) tests on final images shipped with each release. Within the context of
    the Yocto Project, QEMU allows you to run a complete image you have built using
    the Yocto Project as another task on your build system. In addition, QEMU helps
    to run and test images and applications on supported Yocto Project architectures
    without having actual hardware.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 除了其他因素外，Yocto 项目使用 QEMU 在每次发布时对最终镜像进行自动化**质量保证**（**QA**）测试。在 Yocto 项目的上下文中，QEMU
    允许你将使用 Yocto 项目构建的完整镜像作为另一个任务在构建系统上运行。此外，QEMU 帮助在支持的 Yocto 项目架构上运行和测试镜像及应用程序，而无需实际的硬件。
- en: What are the benefits of using QEMU over hardware?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 QEMU 相比硬件的好处是什么？
- en: 'There are several situations where it may be more practical to use QEMU instead
    of real hardware for testing and debugging:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，使用 QEMU 代替真实硬件进行测试和调试可能更为实际：
- en: It allows you to quickly and easily test your code in various simulated environments
    without constantly deploying it to the target device
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它允许你在各种模拟环境中快速、轻松地测试代码，而无需不断将其部署到目标设备上
- en: If you don’t have the hardware that the software will be running on or if its
    availability is limited
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你没有运行软件的硬件，或者硬件的可用性有限
- en: When you need to test software on multiple hardware platforms without having
    to set up multiple physical machines
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你需要在多个硬件平台上测试软件，而不必设置多个物理机器时
- en: When you want to debug software in a controlled environment, such as reduced
    memory availability, to observe its behavior
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你希望在受控环境中调试软件，例如内存受限时，以观察其行为
- en: When you want to validate software that isn’t hardware specific and wish to
    reduce the time needed for testing, such as flashing, board wiring, and so on
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你想验证不依赖硬件的通用软件，并希望减少测试所需的时间，例如烧录、板级接线等
- en: However, it is essential to note that QEMU is a software emulator, which may
    not be a perfect substitute for real hardware at all times. Therefore, testing
    software on real hardware may be necessary to ensure it works correctly.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，必须注意，QEMU 是一个软件模拟器，并不总是能完美替代真实硬件。因此，测试软件在真实硬件上是否正确运行可能是必要的。
- en: When is choosing real hardware preferable?
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么时候选择真实硬件更为可取？
- en: 'There are several situations where it may be more practical, and even required,
    to use real hardware instead of QEMU for testing and debugging, such as the following:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，使用真实硬件进行测试和调试可能更为实用，甚至是必需的，以下是一些例子：
- en: When the software relies on specific hardware features, for example, a particular
    **Video Processing Unit** (**VPU**) or **Graphics Processing Unit** (**GPU**)
    feature
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当软件依赖于特定硬件特性时，例如某个特定的**视频处理单元**（**VPU**）或**图形处理单元**（**GPU**）特性
- en: When evaluating the software performance, QEMU may not be able to replicate
    the performance of real hardware
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在评估软件性能时，QEMU 可能无法复制真实硬件的性能
- en: While QEMU can be a valuable tool for testing and debugging software, it is
    not always a perfect substitute for real hardware.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 QEMU 是一个非常有价值的测试和调试软件的工具，但它并不总是能完全替代真实硬件。
- en: Using runqemu capabilities
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 runqemu 功能
- en: 'QEMU is deeply integrated into the Yocto Project, and it is crucial to learn
    how to take advantage of this integration so we can plan the testing of our projects.
    The `runqemu` usage lists the variety of options available, which you can see
    in the following figure:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: QEMU与Yocto项目深度集成，学习如何利用这种集成至关重要，这样我们才能规划项目的测试。`runqemu`的使用列出了可用的多种选项，您可以在下图中看到：
- en: "![Figure 16.1 \uFEFF– The runqemu usage](img/Figure_16.1_B19361.jpg)"
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图16.1 – runqemu使用方法](img/Figure_16.1_B19361.jpg)'
- en: Figure 16.1 – The runqemu usage
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.1 – runqemu使用方法
- en: 'There are a few use cases of QEMU that are important to highlight:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些QEMU的使用场景需要重点强调：
- en: Allows choosing different kernel images for testing
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许选择不同的内核镜像进行测试
- en: Allows choosing different `rootfs` for booting
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许选择不同的`rootfs`进行启动
- en: The capability to pass boot arguments for the kernel
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传递内核启动参数的功能
- en: Supports the use of a graphical environment with OpenGL or OpenGL ES options
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持使用OpenGL或OpenGL ES选项的图形环境
- en: It can pass extra QEMU command-line parameters
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以传递额外的QEMU命令行参数
- en: Allows the use of serial console-only for rapid image testing
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许仅使用串口控制台进行快速镜像测试
- en: Testing the audio stack support
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试音频堆栈支持
- en: Testing different init systems (e.g., systemd)
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试不同的初始化系统（例如，systemd）
- en: In the following few sections, we use the `qemux86-64` machine as a reference
    to cover some common use cases, illustrating the main `runqemu` capabilities.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的几个章节中，我们以`qemux86-64`机器为参考，介绍一些常见的用例，展示`runqemu`的主要功能。
- en: Using runqemu to test graphical applications
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用runqemu测试图形应用程序
- en: 'When we aim to validate the application, ignoring the embedded device GPU performance,
    we can rely on QEMU for such validation, for example, a Qt or GTK+ application.
    At first, we need to build the `core-image-weston` image. Next, we can run the
    validation as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们旨在验证应用程序时，可以忽略嵌入式设备GPU的性能，依赖QEMU进行验证，例如一个Qt或GTK+应用程序。首先，我们需要构建`core-image-weston`镜像。接下来，我们可以按以下方式运行验证：
- en: '![Figure 16.2 – The log after running QEMU with graphic support](img/Figure_16.2_B19361.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图16.2 – 运行QEMU并启用图形支持后的日志](img/Figure_16.2_B19361.jpg)'
- en: Figure 16.2 – The log after running QEMU with graphic support
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.2 – 运行QEMU并启用图形支持后的日志
- en: 'Next, you see the execution of `core-image-weston` inside QEMU:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将看到在QEMU中执行`core-image-weston`的情况：
- en: '![Figure 16.3 – Screenshot of QEMU running core-image-weston](img/Figure_16.3_B19361.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图16.3 – QEMU运行core-image-weston的截图](img/Figure_16.3_B19361.jpg)'
- en: Figure 16.3 – Screenshot of QEMU running core-image-weston
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.3 – QEMU运行core-image-weston的截图
- en: The preceding screenshot shows the Wayland Terminal open, showing the information
    of the running Linux kernel.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的截图显示了Wayland终端打开，展示了正在运行的Linux内核的信息。
- en: Using runqemu to validate memory constraints
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用runqemu验证内存限制
- en: 'When we aim to validate the application memory usage, we can rely on QEMU for
    such validation. At first, we need to build the `core-image-full-cmdline` image
    and run QEMU with the following command line:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们旨在验证应用程序的内存使用情况时，可以依赖QEMU进行验证。首先，我们需要构建`core-image-full-cmdline`镜像，并使用以下命令行运行QEMU：
- en: '![Figure 16.4 – The log after running QEMU with 128 MB of RAM](img/Figure_16.4_B19361.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图16.4 – 运行QEMU并分配128 MB RAM后的日志](img/Figure_16.4_B19361.jpg)'
- en: Figure 16.4 – The log after running QEMU with 128 MB of RAM
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.4 – 运行QEMU并分配128 MB RAM后的日志
- en: 'In the following screenshot, we can see the amount of memory in use inside
    QEMU:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，我们可以看到QEMU中正在使用的内存量：
- en: '![Figure 16.5 – Screenshot of QEMU running core-image-full-cmdline with 128
    MB of RAM](img/Figure_16.5_B19361.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图16.5 – QEMU运行core-image-full-cmdline并分配128 MB RAM的截图](img/Figure_16.5_B19361.jpg)'
- en: Figure 16.5 – Screenshot of QEMU running core-image-full-cmdline with 128 MB
    of RAM
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.5 – QEMU运行core-image-full-cmdline并分配128 MB RAM的截图
- en: Changing the command line used to run QEMU can help us test a set of different
    memory sizes via emulation.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 更改用于运行QEMU的命令行可以帮助我们通过仿真测试一组不同的内存大小。
- en: Using runqemu to help with image regression tests
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用runqemu帮助进行镜像回归测试
- en: The Yocto Project provides an automated testing framework, a crucial part of
    the Yocto Project Quality Assurance process. The integration or validation testing
    support uses the `testimage` class to execute the images inside the target.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: Yocto项目提供了一个自动化测试框架，这是Yocto项目质量保证过程中的关键部分。集成或验证测试支持使用`testimage`类在目标设备内执行镜像。
- en: Tip
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: The testing framework can test existing recipes and images and be enhanced with
    custom tests to validate new applications and integrations. The testing framework
    capabilities are described in the section *Types of Testing Overview from Yocto
    Project* *Tests* ([https://docs.yoctoproject.org/4.0.4/test-manual/intro.html#yocto-project-tests-types-of-testing-overview](https://docs.yoctoproject.org/4.0.4/test-manual/intro.html#yocto-project-tests-types-of-testing-overview)).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 测试框架可以测试现有的配方和镜像，并通过自定义测试进行增强，以验证新应用程序和集成。测试框架的功能在*Yocto项目测试类型概述*部分中进行了描述([https://docs.yoctoproject.org/4.0.4/test-manual/intro.html#yocto-project-tests-types-of-testing-overview](https://docs.yoctoproject.org/4.0.4/test-manual/intro.html#yocto-project-tests-types-of-testing-overview))。
- en: First, we enabled the `testimage` support by adding `IMAGE_CLASSES += "testimage"`
    in `build/conf/local.conf` and made sure to build the `core-image-weston` image.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们通过在`build/conf/local.conf`中添加`IMAGE_CLASSES += "testimage"`启用了`testimage`支持，并确保构建了`core-image-weston`镜像。
- en: Warning
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 警告
- en: During the image testing, the `sudo` command is used for networking setup and
    may trigger an error depending on your host configuration. Check *Yocto Project
    Development Tasks Manual*, in the *Enabling Runtime Tests on QEMU* section ([https://docs.yoctoproject.org/4.0.4/dev-manual/common-tasks.html#enabling-runtime-tests-on-qemu](https://docs.yoctoproject.org/4.0.4/dev-manual/common-tasks.html#enabling-runtime-tests-on-qemu))
    for how to avoid those errors.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在镜像测试过程中，使用了`sudo`命令进行网络设置，并可能根据主机配置触发错误。请查看*Yocto项目开发任务手册*中的*在QEMU上启用运行时测试*部分([https://docs.yoctoproject.org/4.0.4/dev-manual/common-tasks.html#enabling-runtime-tests-on-qemu](https://docs.yoctoproject.org/4.0.4/dev-manual/common-tasks.html#enabling-runtime-tests-on-qemu))，了解如何避免这些错误。
- en: 'Then, we must build the `core-image-weston` image. We are ready now to start
    the execution of `testimage` with the following command:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们必须构建`core-image-weston`镜像。现在我们可以开始执行`testimage`，命令如下：
- en: '![Figure 16.6 – The result of running the testimage task for core-image-weston](img/Figure_16.6_B19361.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图16.6 – 运行testimage任务的结果，适用于core-image-weston](img/Figure_16.6_B19361.jpg)'
- en: Figure 16.6 – The result of running the testimage task for core-image-weston
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图16.6 – 运行testimage任务的结果，适用于core-image-weston
- en: In the preceding log, we see the regression test results.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的日志中，我们看到了回归测试结果。
- en: Summary
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have learned how to use QEMU and how its capabilities can
    shorten the development cycle by emulating when possible and describing when it
    is not possible. It also presented some `runqemu` use cases.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用QEMU，以及它如何通过在可能的情况下进行仿真、在不可能的情况下进行描述，从而缩短开发周期。还介绍了一些`runqemu`的使用案例。
- en: In the final chapter, we offer a list of good practices that authors have been
    using over the years in the development of Yocto Project-based products.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一章，我们提供了一份清单，列出了多年来在开发基于Yocto项目的产品时，作者们一直使用的最佳实践。
