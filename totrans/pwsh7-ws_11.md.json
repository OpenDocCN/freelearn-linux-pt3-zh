["```\nusing module <module name>\n```", "```\nUsing module ActiveDirectory\n```", "```\nfunction Get-Square($a) {\n  $result = $a * $a\n  return $result\n    }\n```", "```\nImport-Module <ModuleName>\n```", "```\nWrite-Message \"dot source test\"\n```", "```\n$text = \"default message\"\nfunction Write-Message($text) {\n    Write-Output \"$text\"\n}\n```", "```\n. C:\\temp\\poshbook\\ch11\\Write-Message.ps1\n```", "```\n${function:Write-Message}.File\n```", "```\nImport-Module C:\\temp\\poshbook\\ch11\\Write-Message.psm1\n```", "```\nGet-Module Write-Message\n```", "```\nGet-Module Write-Message | Format-List\n```", "```\nfunction setMessage {\n    Write-Output \"$text\"\n}\n```", "```\nExport-ModuleMember -Function Write-Message\n```", "```\nExport-ModuleMember -variable $MyVariable\n```", "```\nWrite-Log \"Is this thing on?\"\n```", "```\nImport-Module \"C:\\temp\\poshbook\\ch11\\write-log.psm1\"\n$text = \"default message\"\nfunction Write-Message($text) {\n    Write-Output \"$text\"\n    Write-Log \"$text\"\n}\nfunction setMessage {\n    Write-Output \"$text\"\n}\n```", "```\nImport-Module -Global \"C:\\temp\\poshbook\\ch11\\write-log.psm1\"\n```", "```\n$code = @\"\nusing System.Management.Automation;\nnamespace SendMessage\n{\n    [Cmdlet(VerbsCommunications.Send, \"Message\")]\n    public class SendMessageCommand : Cmdlet\n    {\n        [Parameter(Mandatory = true)]\n        public string Name { get; set; }\n        protected override void ProcessRecord()\n        {\n            WriteObject(Name + \" loves PowerShell!\");\n        }\n    }\n}\n\"@\nAdd-Type -TypeDefinition $Code -OutputAssembly  c:\\temp\\MyBinaryModule.dll\n```", "```\nImport-Module c:\\temp\\MyBinaryModule.dll\n```", "```\nNew-ModuleManifest\n```", "```\nC:\\temp\\poshbook\\ch11\\ManifestModule\\ManifestModule.psd1\n```", "```\nNew-ModuleManifest -Path 'C:\\temp\\newmodule\\newmodule.psd1' -ModuleVersion '1.0.0'\n```", "```\nTest-ModuleManifest -Path 'C:\\temp\\newmodule\\newmodule.psd1'\n```", "```\nInstall-Module Plaster\n```", "```\nImport-Module Plaster\n```", "```\nGet-PlasterTemplate\n```", "```\nInvoke-Plaster\n```"]