- en: 18\. Sharing Files between CentOS 8 and Windows Systems with Samba
  prefs: []
  type: TYPE_NORMAL
- en: Although Linux has made some inroads into the desktop market, its origins and
    future are very much server-based. It is not surprising therefore that CentOS
    8 has the ability to act as a file server. It is also extremely common for CentOS
    and Windows systems to be used side by side in networked environments. It is a
    common requirement, therefore, that files on a CentOS 8 system be accessible to
    Linux, UNIX and Windows-based systems over network connections. Similarly, shared
    folders and printers residing on Windows systems may also need to be accessible
    from CentOS 8 based systems.
  prefs: []
  type: TYPE_NORMAL
- en: Windows systems share resources such as file systems and printers using a protocol
    known as Server Message Block (SMB). In order for a CentOS 8 system to serve such
    resources over a network to a Windows system and vice versa it must, therefore,
    support SMB. This is achieved using technology called Samba. In addition to providing
    integration between Linux and Windows systems, Samba may also be used to provide
    folder sharing between Linux systems (as an alternative to NFS which was covered
    in the previous chapter).
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter we will look at the steps necessary to share file system resources
    and printers on a CentOS 8 system with remote Windows and Linux systems, and to
    access Windows resources from CentOS 8\.
  prefs: []
  type: TYPE_NORMAL
- en: 18.1 Samba and Samba Client
  prefs: []
  type: TYPE_NORMAL
- en: Samba allows both CentOS 8 resources to be shared with Windows systems and Windows
    resources to be shared with CentOS 8 systems. CentOS accesses Windows resources
    using the Samba client. CentOS resources, on the other hand, are shared with Windows
    systems by installing and configuring the Samba service.
  prefs: []
  type: TYPE_NORMAL
- en: 18.2 Installing Samba on a CentOS 8 System
  prefs: []
  type: TYPE_NORMAL
- en: 'The default settings used during the CentOS 8 installation process do not typically
    install the necessary Samba packages. Unless you specifically requested that Samba
    be installed it is unlikely that you have Samba installed on your system. To check
    whether Samba is installed, open a terminal window and run the following rpm command:'
  prefs: []
  type: TYPE_NORMAL
- en: rpm -q samba samba-common samba-client
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If any of the Samba packages are not installed, rpm will return with “package
    is not installed”. That being the case, these can be installed using the dnf command-line
    tool:'
  prefs: []
  type: TYPE_NORMAL
- en: dnf install samba samba-common samba-client
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 18.3 Configuring the CentOS 8 Firewall to Enable Samba
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the firewall currently protecting the CentOS 8 system needs to be configured
    to allow Samba traffic. To achieve this, run the firewall-cmd command as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: firewall-cmd --permanent --add-port={139/tcp,445/tcp}
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: firewall-cmd --reload
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before starting the Samba service a number of configuration steps are necessary
    to define how the CentOS system will appear to Windows systems, and the resources
    which are to be shared with remote clients. The majority of these configuration
    tasks take place within the /etc/samba/smb.conf file.
  prefs: []
  type: TYPE_NORMAL
- en: 18.4 Configuring the smb.conf File
  prefs: []
  type: TYPE_NORMAL
- en: Prior to the introduction of CentOS 6, a user friendly graphical tool named
    system-config-samba was provided to assist in the configuration of Samba. In CentOS
    7 and later, however, this tool has been removed. This means that the Samba environment
    must be configured manually within the /etc/samba/smb.conf file and using the
    smbpasswd command-line tool. While the loss of system-config-samba may be mourned
    by those who relied on it, the tool’s simplicity actually masked many of the more
    advanced features of Samba. In practice, much more can be achieved by taking the
    time to understand the intricacies of the smb.conf file.
  prefs: []
  type: TYPE_NORMAL
- en: Samba is a highly flexible and configurable system that provides many different
    options for controlling how resources are shared on Windows networks. This flexibility
    can lead to the sense that Samba is overly complex to work with. In reality, however,
    many of the configuration options are not needed by the typical installation,
    and the learning curve to set up a basic configuration is actually quite short.
  prefs: []
  type: TYPE_NORMAL
- en: For the purposes of this chapter we will look at joining a CentOS 8 system to
    a Windows workgroup and setting up a directory as a shared resource that can be
    accessed by a specific user. This is a configuration known as a standalone Samba
    server. More advanced configurations such as integrating Samba within an Active
    Directory environment are also available, though these are outside the scope of
    this book.
  prefs: []
  type: TYPE_NORMAL
- en: The first step in configuring Samba is to edit the /etc/samba/smb.conf file.
  prefs: []
  type: TYPE_NORMAL
- en: 18.4.1 Configuring the [global] Section
  prefs: []
  type: TYPE_NORMAL
- en: The smb.conf file is divided into sections. The first section is the [global]
    section where settings can be specified that apply to the entire Samba configuration.
    While these settings are global, each option may be overridden within other sections
    of the configuration file.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first task is to define the name of the Windows workgroup on which the
    CentOS 8 resources are to be shared. This is controlled via the workgroup = directive
    of the [global] section which by default is configured as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: workgroup = SAMBA
  prefs: []
  type: TYPE_NORMAL
- en: 'Begin by changing this to the actual name of the workgroup. For example, if
    the workgroup is named WORKGROUP (the default for most Windows networks):'
  prefs: []
  type: TYPE_NORMAL
- en: '[global]'
  prefs: []
  type: TYPE_NORMAL
- en: workgroup = WORKGROUP
  prefs: []
  type: TYPE_NORMAL
- en: security = user
  prefs: []
  type: TYPE_NORMAL
- en: passdb backend = tdbsam
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to the workgroup setting, the other settings indicate that this
    is a standalone server on which the shared resources will be protected by user
    passwords. Before moving on to configuring the resources to be shared, a number
    of other parameters also need to be added to the [global] section as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[global]'
  prefs: []
  type: TYPE_NORMAL
- en: workgroup = WORKGROUP
  prefs: []
  type: TYPE_NORMAL
- en: security = user
  prefs: []
  type: TYPE_NORMAL
- en: netbios name = LinuxServer
  prefs: []
  type: TYPE_NORMAL
- en: passdb backend = tdbsam
  prefs: []
  type: TYPE_NORMAL
- en: log file = /var/log/samba/%m.log
  prefs: []
  type: TYPE_NORMAL
- en: log level = 1
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: The “netbios name” property specifies the name by which the server will be visible
    to other systems on the network, while the log settings simply specify a file
    location into which log output is to be recorded.
  prefs: []
  type: TYPE_NORMAL
- en: 18.4.2 Configuring a Shared Resource
  prefs: []
  type: TYPE_NORMAL
- en: 'The next step is to configure the shared resources (in other words the resources
    that will be accessible from other systems on the Windows network). In order to
    achieve this, the section is given a name by which it will be referred to when
    shared. For example, if we plan to share the /sampleshare directory of our CentOS
    8 system, we might entitle the section [sampleshare]. In this section a variety
    of configuration options are possible. For the purposes of this example, however,
    we will simply define the directory that is to be shared, indicate that the directory
    is both browsable and writable and declare the resource public so that guest users
    are able to gain access:'
  prefs: []
  type: TYPE_NORMAL
- en: '[sampleshare]'
  prefs: []
  type: TYPE_NORMAL
- en: comment = Example Samba share
  prefs: []
  type: TYPE_NORMAL
- en: path = /sampleshare
  prefs: []
  type: TYPE_NORMAL
- en: browseable = Yes
  prefs: []
  type: TYPE_NORMAL
- en: public = yes
  prefs: []
  type: TYPE_NORMAL
- en: writable = yes
  prefs: []
  type: TYPE_NORMAL
- en: 'To restrict access to specific users, the “valid users” property may be used,
    for example:'
  prefs: []
  type: TYPE_NORMAL
- en: valid users = demo, bobyoung, marcewing
  prefs: []
  type: TYPE_NORMAL
- en: 18.4.3 Removing Unnecessary Shares
  prefs: []
  type: TYPE_NORMAL
- en: 'The smb.conf file is pre-configured with sections for sharing printers and
    the home folders of the users on the system. If these resources do not need to
    be shared, the corresponding sections can be commented out so that they are ignored
    by Samba. In the following example, the [homes] section has been commented out:'
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: '#[homes]'
  prefs: []
  type: TYPE_NORMAL
- en: comment = Home Directories
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: valid users = %S, %D%w%S
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: browseable = No
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: read only = No
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: inherit acls = Yes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: 18.5 Configuring SELinux for Samba
  prefs: []
  type: TYPE_NORMAL
- en: SELinux is a system integrated by default into the Linux kernel on all CentOS
    8 systems and which provides an extra layer of security and protection to the
    operating system and user files.
  prefs: []
  type: TYPE_NORMAL
- en: Traditionally, Linux security has been based on the concept of allowing users
    to decide who has access to their files and other resources for which they have
    ownership. Consider, for example, a file located in the home directory of, and
    owned by, a particular user. That user is able to control the access permissions
    of that file in terms of whether other users on the system are able to read and
    write to or, in the case of a script or binary, execute the file. This type of
    security is referred to as discretionary access control since access to resources
    is left to the discretion of the user.
  prefs: []
  type: TYPE_NORMAL
- en: With SELinux, however, access is controlled by the system administrator and
    cannot be overridden by the user. This is referred to as mandatory access control
    and is defined by the administrator using SELinux policy. To continue the previous
    example, the owner of a file is only able to perform tasks on that file if SELinux
    policy defined either by default by the system, or by the administrator, permits
    it.
  prefs: []
  type: TYPE_NORMAL
- en: 'The current status of SELinux on a CentOS 8 system may be identified using
    the sestatus tool as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: sestatus
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'SELinux status: enabled'
  prefs: []
  type: TYPE_NORMAL
- en: 'SELinuxfs mount: /sys/fs/selinux'
  prefs: []
  type: TYPE_NORMAL
- en: 'SELinux root directory: /etc/selinux'
  prefs: []
  type: TYPE_NORMAL
- en: 'Loaded policy name: targeted'
  prefs: []
  type: TYPE_NORMAL
- en: 'Current mode: enforcing'
  prefs: []
  type: TYPE_NORMAL
- en: 'Mode from config file: enforcing'
  prefs: []
  type: TYPE_NORMAL
- en: 'Policy MLS status: enabled'
  prefs: []
  type: TYPE_NORMAL
- en: 'Policy deny_unknown status: allowed'
  prefs: []
  type: TYPE_NORMAL
- en: 'Memory protection checking: actual (secure)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Max kernel policy version: 31'
  prefs: []
  type: TYPE_NORMAL
- en: SELinux can be run in either enforcing or permissive mode. When enabled, enforcing
    mode denies all actions that are not permitted by SELinux policy. Permissive mode,
    on the other hand, allows actions that would normally have been denied to proceed
    but records the violation in a log file.
  prefs: []
  type: TYPE_NORMAL
- en: 'SELinux security is based on the concept of context labels. All resources on
    a system (including processes and files) are assigned SELinux context labels consisting
    of user, role, type and optional security level. The SELinux context of files
    or folders, for example, may be viewed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: $ ls -Z /home/demo
  prefs: []
  type: TYPE_NORMAL
- en: unconfined_u:object_r:user_home_t:s0 Desktop
  prefs: []
  type: TYPE_NORMAL
- en: unconfined_u:object_r:user_home_t:s0 Documents
  prefs: []
  type: TYPE_NORMAL
- en: 'Similarly, the ps command may be used to identify the context of a running
    process, in this case the ls command:'
  prefs: []
  type: TYPE_NORMAL
- en: $ ps -eZ | grep ls
  prefs: []
  type: TYPE_NORMAL
- en: unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 14311 tty1 00:00:18 ls
  prefs: []
  type: TYPE_NORMAL
- en: 'When a process (such as the above ls command) attempts to access a file or
    folder, the SELinux system will check the policy to identify whether or not access
    is permitted. Now consider the context of the Samba service:'
  prefs: []
  type: TYPE_NORMAL
- en: $ ps -eZ | grep smb
  prefs: []
  type: TYPE_NORMAL
- en: system_u:system_r:smbd_t:s0 14129 ? 00:00:00 smbd
  prefs: []
  type: TYPE_NORMAL
- en: system_u:system_r:smbd_t:s0 14132 ? 00:00:00 smbd-notifyd
  prefs: []
  type: TYPE_NORMAL
- en: SELinux implements security in a number of ways, the most common of which is
    referred to as type enforcement. In basic terms, when a process attempts to perform
    a task on an object (for example writing to a file), SELinux checks the context
    types of both the process and the object and verifies that the security policy
    allows the action to be taken. If a process of type A, for example, attempts to
    write to a file of type B, it will only be permitted to do so if SELinux policy
    specifically states that a process of type A may perform a write operation to
    a file of type B. In SELinux enforcement, all actions are denied by default unless
    a rule exists specifically allowing the action to be performed.
  prefs: []
  type: TYPE_NORMAL
- en: The issue with SELinux and Samba is that SELinux policy is not configured to
    allow processes of type smb_t to perform actions on files of any type other than
    samba_share_t. The /home/demo directory listed above, for example, will be inaccessible
    to the Samba service because it has a type of user_home_t. To make files or folders
    on the system accessible to the Samba service, the enforcement type of those specific
    resources must be changed to samba_share_t.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the purposes of this example, we will create the /sampleshare directory
    referenced previously in the smb.conf file and change the enforcement type so
    that it is accessible to the Samba service. Begin by creating the directory as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: mkdir /sampleshare
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, check the current SELinux context on the directory:'
  prefs: []
  type: TYPE_NORMAL
- en: $ ls -aZ /sampleshare/
  prefs: []
  type: TYPE_NORMAL
- en: unconfined_u:object_r:default_t:s0 .
  prefs: []
  type: TYPE_NORMAL
- en: 'In this instance, the context label of the folder has been assigned a type
    of default_t. To make the folder sharable by Samba, the enforcement type needs
    to be set to samba_share_t using the semanage tool as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: semanage fcontext -a -t samba_share_t "/sampleshare(/.*)?"
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Note the use of a wildcard in the semanage command to ensure that the type
    is applied to any sub-directories and files contained within the /sampleshare
    directory. Once added, the change needs to be applied using the restorecon command,
    making use of the -R flag to apply the change recursively through any sub-directories:'
  prefs: []
  type: TYPE_NORMAL
- en: restorecon -R -v /sampleshare
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Relabeled /sampleshare from unconfined_u:object_r:default_t:s0 to unconfined_u:object_r:samba_share_t:s0
  prefs: []
  type: TYPE_NORMAL
- en: Once these changes have been made, the folder is configured to comply with SELinux
    policy for the smb process and is ready to be shared by Samba.
  prefs: []
  type: TYPE_NORMAL
- en: 18.6 Creating a Samba User
  prefs: []
  type: TYPE_NORMAL
- en: 'Any user that requires access to a Samba shared resource must be configured
    as a Samba User and assigned a password. This task is achieved using the smbpasswd
    command-line tool. Consider, for example, that a user named demo is required to
    be able to access the /sampleshare directory of our CentOS 8 system from a Windows
    system. In order to fulfill this requirement we must add demo as a Samba user
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: smbpasswd -a demo
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'New SMB password:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Retype new SMB password:'
  prefs: []
  type: TYPE_NORMAL
- en: Added user demo.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have completed the configuration of a very basic Samba server, it
    is time to test our configuration file and then start the Samba services.
  prefs: []
  type: TYPE_NORMAL
- en: 18.7 Testing the smb.conf File
  prefs: []
  type: TYPE_NORMAL
- en: 'The settings in the smb.conf file may be checked for errors using the testparm
    command-line tool as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: testparm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Load smb config files from /etc/samba/smb.conf
  prefs: []
  type: TYPE_NORMAL
- en: 'rlimit_max: increasing rlimit_max (1024) to minimum Windows limit (16384)'
  prefs: []
  type: TYPE_NORMAL
- en: Processing section "[sampleshare]"
  prefs: []
  type: TYPE_NORMAL
- en: Processing section "[homes]"
  prefs: []
  type: TYPE_NORMAL
- en: Processing section "[printers]"
  prefs: []
  type: TYPE_NORMAL
- en: Processing section "[print$]"
  prefs: []
  type: TYPE_NORMAL
- en: Loaded services file OK.
  prefs: []
  type: TYPE_NORMAL
- en: 'Server role: ROLE_STANDALONE'
  prefs: []
  type: TYPE_NORMAL
- en: Press enter to see a dump of your service definitions
  prefs: []
  type: TYPE_NORMAL
- en: Global parameters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[global]'
  prefs: []
  type: TYPE_NORMAL
- en: log file = /var/log/samba/%m.log
  prefs: []
  type: TYPE_NORMAL
- en: netbios name = LINUXSERVER
  prefs: []
  type: TYPE_NORMAL
- en: printcap name = cups
  prefs: []
  type: TYPE_NORMAL
- en: security = USER
  prefs: []
  type: TYPE_NORMAL
- en: wins support = Yes
  prefs: []
  type: TYPE_NORMAL
- en: 'idmap config * : backend = tdb'
  prefs: []
  type: TYPE_NORMAL
- en: cups options = raw
  prefs: []
  type: TYPE_NORMAL
- en: '[sampleshare]'
  prefs: []
  type: TYPE_NORMAL
- en: comment = Example Samba share
  prefs: []
  type: TYPE_NORMAL
- en: guest ok = Yes
  prefs: []
  type: TYPE_NORMAL
- en: path = /sampleshare
  prefs: []
  type: TYPE_NORMAL
- en: read only = No
  prefs: []
  type: TYPE_NORMAL
- en: '[homes]'
  prefs: []
  type: TYPE_NORMAL
- en: browseable = No
  prefs: []
  type: TYPE_NORMAL
- en: comment = Home Directories
  prefs: []
  type: TYPE_NORMAL
- en: inherit acls = Yes
  prefs: []
  type: TYPE_NORMAL
- en: read only = No
  prefs: []
  type: TYPE_NORMAL
- en: valid users = %S %D%w%S
  prefs: []
  type: TYPE_NORMAL
- en: '[printers]'
  prefs: []
  type: TYPE_NORMAL
- en: browseable = No
  prefs: []
  type: TYPE_NORMAL
- en: comment = All Printers
  prefs: []
  type: TYPE_NORMAL
- en: create mask = 0600
  prefs: []
  type: TYPE_NORMAL
- en: path = /var/tmp
  prefs: []
  type: TYPE_NORMAL
- en: printable = Yes
  prefs: []
  type: TYPE_NORMAL
- en: '[print$]'
  prefs: []
  type: TYPE_NORMAL
- en: comment = Printer Drivers
  prefs: []
  type: TYPE_NORMAL
- en: create mask = 0664
  prefs: []
  type: TYPE_NORMAL
- en: directory mask = 0775
  prefs: []
  type: TYPE_NORMAL
- en: force group = @printadmin
  prefs: []
  type: TYPE_NORMAL
- en: path = /var/lib/samba/drivers
  prefs: []
  type: TYPE_NORMAL
- en: write list = @printadmin root
  prefs: []
  type: TYPE_NORMAL
- en: 18.8 Starting the Samba and NetBIOS Name Services
  prefs: []
  type: TYPE_NORMAL
- en: 'In order for a CentOS 8 server to operate within a Windows network both the
    Samba (SMB) and NetBOIS nameservice (NMB) services must be started. Optionally,
    also enable the services so that they start each time the system boots:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl enable smb
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: systemctl start smb
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: systemctl enable nmb
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: systemctl start nmb
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before attempting to connect from a Windows system, use the smbclient utility
    to verify that the share is configured:'
  prefs: []
  type: TYPE_NORMAL
- en: smbclient -U demo -L localhost
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Enter WORKGROUP\demo’s password:'
  prefs: []
  type: TYPE_NORMAL
- en: Sharename Type Comment
  prefs: []
  type: TYPE_NORMAL
- en: '--------- ---- -------'
  prefs: []
  type: TYPE_NORMAL
- en: sampleshare Disk Example Samba share
  prefs: []
  type: TYPE_NORMAL
- en: print$ Disk Printer Drivers
  prefs: []
  type: TYPE_NORMAL
- en: IPC$ IPC IPC Service (Samba 4.9.1)
  prefs: []
  type: TYPE_NORMAL
- en: demo Disk Home Directories
  prefs: []
  type: TYPE_NORMAL
- en: Reconnecting with SMB1 for workgroup listing.
  prefs: []
  type: TYPE_NORMAL
- en: Server Comment
  prefs: []
  type: TYPE_NORMAL
- en: '--------- -------'
  prefs: []
  type: TYPE_NORMAL
- en: Workgroup Master
  prefs: []
  type: TYPE_NORMAL
- en: '--------- -------'
  prefs: []
  type: TYPE_NORMAL
- en: WORKGROUP LINUXSERVER
  prefs: []
  type: TYPE_NORMAL
- en: 18.9 Accessing Samba Shares
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that the Samba resources are configured and the services are running, it
    is time to access the shared resource from a Windows system. On a suitable Windows
    system on the same workgroup as the CentOS 8 system, open Windows Explorer and
    navigate to the Network panel. At this point, explorer should search the network
    and list any systems using the SMB protocol that it finds. The following figure
    illustrates a CentOS 8 system named LINUXSERVER located using Windows Explorer
    on a Windows 10 system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_samba_share_on_windows.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 18-1
  prefs: []
  type: TYPE_NORMAL
- en: 'Double clicking on the LINUXSERVER host will prompt for the name and password
    of a user with access privileges. In this case it is the demo account that we
    configured using the smbpasswd tool:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_samba_windows_login.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 18-2
  prefs: []
  type: TYPE_NORMAL
- en: 'Entering the username and password will result in the shared resources configured
    for that user appearing in the explorer window, including the previously configured
    /sampleshare resource:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_samba_folder_on_windows.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 18-3
  prefs: []
  type: TYPE_NORMAL
- en: Double clicking on the /sampleshare shared resource will display a listing of
    the files and directories contained therein.
  prefs: []
  type: TYPE_NORMAL
- en: 18.10 Accessing Windows Shares from CentOS 8
  prefs: []
  type: TYPE_NORMAL
- en: 'As previously mentioned, Samba is a two way street, allowing not only Windows
    systems to access files and printers hosted on a CentOS 8 system, but also allowing
    the CentOS 8 system to access shared resources on Windows systems. This is achieved
    using the samba-client package which was installed at the start of this chapter.
    If it is not currently installed, install it from a terminal window as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: dnf install samba-client
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Shared resources on a Windows system can be accessed either from the CentOS
    desktop using the Files application, or from the command-line prompt using the
    smbclient and mount tools. The steps in this section assume that appropriate network
    sharing settings have been enabled on the Windows system.
  prefs: []
  type: TYPE_NORMAL
- en: 'To access any shared resources on a Windows system using the desktop, begin
    by launching the Files application and selecting the Other Locations option. This
    will display the screen shown in [Figure 18-4](../Text/Samba_File_Sharing.xhtml#_idTextAnchor246)
    below including an icon for the Windows Network (if one is detected):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_connect_to_windows_share.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 18-4
  prefs: []
  type: TYPE_NORMAL
- en: Selecting the Windows Network option will display the Windows systems detected
    on the network and allow access to any shared resources.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_files_windows_10_share.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 18-5
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, the Connect to Server option may be used to connect to a specific
    system. Note that the name or IP address of the remote system must be prefixed
    by smb:// and may be followed by the path to a specific shared resource, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: smb://WinServer10/Documents
  prefs: []
  type: TYPE_NORMAL
- en: 'In the absence of a desktop environment, a remote Windows share may be mounted
    from the command-line using the mount command and specifying the cifs filesystem
    type. The following command, for example, mounts a share named Documents located
    on a Windows system named WinServer at a local mount point named /winfiles:'
  prefs: []
  type: TYPE_NORMAL
- en: mount -t cifs //WinServer/Documents /winfiles -o user=demo
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 18.11 Summary
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter we have looked at the steps necessary to configure a CentOS
    8 system to act as both a Samba client and server allowing the sharing of resources
    with Windows based systems. Topics covered included the installation of Samba
    client and server packages and configuration of Samba as a standalone server.
    In addition, the basic concepts of SELinux were introduced together with the steps
    to provide Samba with access to a shared resource.
  prefs: []
  type: TYPE_NORMAL
