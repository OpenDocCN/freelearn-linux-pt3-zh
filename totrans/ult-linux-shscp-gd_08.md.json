["```\ngit clone https://github.com/PacktPublishing/The-Ultimate-Linux-Shell-Scripting-Guide.git \n```", "```\n#!/bin/bash \n```", "```\n#!/bin/sh \n```", "```\n#!/bin/bash\nrsync -avhe ssh /var/www/html/course/images/ root@192.168.0.22:/var/www/html/course/images/ \n```", "```\nchmod u+x rsync_with_debian \n```", "```\n    sudo useradd vicky\n    sudo passwd vicky \n    ```", "```\nsudo adduser vicky \n```", "```\n    ip a \n    ```", "```\n    ssh vicky@192.168.0.9 \n    ```", "```\n    who \n    ```", "```\n    #!/bin/bash\n    users=\"$(who | wc -l)\"\n    echo \"There are currently $users users logged in.\" \n    ```", "```\n    chmod u+x logged-in.sh \n    ```", "```\n    ./logged-in.sh \n    ```", "```\nThere are currently 5 users logged in. \n```", "```\n    #!/bin/bash\n    users=\"$(who | wc -l)\"\n    echo \"There are currently $users users logged in.\"\n    echo\n    uniqusers=\"$(who | cut -d\" \" -f1 | sort | uniq | wc -l)\"\n    echo \"There are currently $uniqusers unique users logged in.\" \n    ```", "```\n    There are currently 5 users logged in.\n    There are currently 4 unique users logged in. \n    ```", "```\n    #!/bin/bash\n    users=\"$(who | wc -l)\"\n    echo \"There are currently $users users logged in.\"\n    echo\n    uniqusers=\"$(who | cut -d\" \" -f1 | sort | uniq | wc -l)\"\n    echo \"There are currently $uniqusers unique users logged in.\"\n    echo\n    listusers=\"$(who | cut -d\" \" -f1 | sort | uniq)\"\n    echo \"These users are currently logged in: \\n$listusers \" \n    ```", "```\n    There are currently 5 users logged in.\n    There are currently 4 unique users logged in.\n    These users are currently logged in:\n    cleopatra\n    donnie\n    frank\n    vicky \n    ```", "```\n[donnie@fedora ~]$ test -d graphics || mkdir graphics\n[donnie@fedora ~]$ ls -ld graphics/\ndrwxr-xr-x. 1 donnie donnie 0 Sep 26 15:41 graphics/\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\ncd\npwd\ntest -d graphics || mkdir graphics\ncd graphics\npwd \n```", "```\n[donnie@fedora ~]$ ./test_graphics.sh\n/home/donnie\n/home/donnie/graphics\n[donnie@fedora ~]$ \n```", "```\n[ -d graphics ] \n```", "```\n#!/bin/bash\ncd\npwd\n[ -d graphics ] || mkdir graphics\ncd graphics\npwd \n```", "```\n#!/bin/bash\ncd\npwd\n[ ! -d graphics ] && mkdir graphics\ncd graphics\npwd \n```", "```\n[ $var -eq 0 ] \n```", "```\n#!/bin/bash\nvar1=0\nvar2=1\n[ $var1 -eq 0 ] && echo \"$var1 is equal to zero.\"\n[ $var2 -ne 0 ] && echo \"$var2 is not equal to zero.\" \n```", "```\n[donnie@fedora ~]$ ./test_var.sh\n0 is equal to zero.\n1 is not equal to zero.\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\ncd\npwd\nif [ ! -d graphics ]; then\n        mkdir graphics\nfi\ncd graphics\npwd \n```", "```\n[[ $var -ne 0 ]] \n```", "```\n#!/bin/bash\n[ -f myfile.txt ] && echo \"This file exists.\" || echo \"This file does not exist.\" \n```", "```\necho \"We will now create myfile.txt if it does not exist, and make it with only read permissions for $USER.\"\n[ -f myfile.txt ] || touch myfile.txt \n```", "```\nchmod 400 myfile.txt\nls -l myfile.txt\necho\necho \"We will now see if myfile.txt is writable.\"\n[ -w myfile.txt ] && echo \"This file is writable.\" || echo \"This file is not writable.\" \n```", "```\n[ -d somedir ] || echo \"somedir does not exist.\"\n[ -d somedir ] || mkdir somedir && echo \"somedir has just been created.\"\nls -ld somedir \n```", "```\n#!/bin/bash\necho \"We will now compare text strings.\"\nstring1=\"abcd\"\nstring2=\"efgh\"\n[[ $string1 > $string2 ]] && echo \"string1 comes after string2 alphabetically.\" || echo \"string1 comes before string2 alphabetically.\"\necho\necho \"We will now compare numbers.\"\nnum1=10\nnum2=9\n[[ $num1 -gt $num2 ]] && echo \"num1 is greater than num2.\" || echo \"num1 is less than num2.\" \n```", "```\n[donnie@fedora ~]$ car=Ford\n[donnie@fedora ~]$ echo $car\nFord\n[donnie@fedora ~]$ unset car\n[donnie@fedora ~]$ echo $car\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ export car=\"Volkswagen\"\n[donnie@fedora ~]$ echo $car\nVolkswagen\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\necho \\$car is set to $car\nexport car=Toyota\necho \"The $car is very fast.\"\necho \\$car is set to $car \n```", "```\n[donnie@fedora ~]$ ./car_demo.sh\n$car is set to Volkswagen\nThe Toyota is very fast.\n$car is set to Toyota\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ unset car\n[donnie@fedora ~]$ car=Studebaker\n[donnie@fedora ~]$ ./car_demo.sh\n$car is set to\nThe Toyota is very fast.\n$car is set to Toyota\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ car=Nash\n[donnie@fedora ~]$ echo $car\nNash\n[donnie@fedora ~]$ readonly car\n[donnie@fedora ~]$ unset car\nbash: unset: car: cannot unset: readonly variable\n[donnie@fedora ~]$ car=Hudson\nbash: car: readonly variable\n[donnie@fedora ~]$ \n```", "```\nname[index]=value \n```", "```\n[donnie@fedora ~]$ declare -a myarray\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ myarray=(item1 item2 item3 )\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${myarray[0]}\nitem1\n[donnie@fedora ~]$ echo ${myarray[1]}\nitem2\n[donnie@fedora ~]$ echo ${myarray[2]}\nitem3\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${myarray[*]}\nitem1 item2 item3\n[donnie@fedora ~]$ echo ${myarray[@]}\nitem1 item2 item3\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${#myarray[@]}\n3\n[donnie@fedora ~]$ echo ${#myarray[*]}\n3\n[donnie@fedora ~]$ \n```", "```\n    #!/bin/bash\n    echo \"IP Addresses of intruder attempts\"\n    declare -a ip\n    ip=( 192.168.3.78 192.168.3.4 192.168.3.9 )\n    echo \"ip[0] is ${ip[0]}, the first item in the list.\"\n    echo \"ip[2] is ${ip[2]}, the third item in the list.\"\n    echo \"*****************************\"\n    echo \"The most dangerous intruder is ${ip[1]}, which is in ip[1].\"\n    echo \"*****************************\"\n    echo \"Here is the entire list of IP addresses in the array.\"\n    echo ${ip[*]} \n    ```", "```\n    chmod u+x ip.sh\n    ./ip.sh \n    ```", "```\n    sudo mkdir /opt/scripts \n    ```", "```\n    192.168.0.48\n    24.190.78.101\n    38.101.148.126\n    41.206.45.202\n    58.0.0.0/8\n    59.107.0.0/17\n    59.108.0.0/15\n    59.110.0.0/15\n    59.151.0.0/17\n    59.155.0.0/16\n    59.172.0.0/15 \n    ```", "```\n    #!/bin/bash\n    badips=$(cat /opt/scripts/banned.txt)\n    declare -a attackers\n    attackers=( $badips )\n    echo \"Here is the complete list: \"\n    echo ${attackers[@]}\n    echo\n    echo \"Let us now count the items in the list.\"\n    num_attackers=${#attackers[*]}\n    echo \"There are $elements IP addresses in the list.\"\n    echo\n    echo \"attackers[2] is ${attackers[2]}, which is the third address in the list.\"\n    exit \n    ```", "```\n    chmod u+x attackers.sh\n    ./attackers.sh \n    ```", "```\n#!/bin/bash\ndeclare -a badips\nbadips=( $(cat /opt/scripts/banned.txt) )\necho \"Here is the complete list: \"\necho ${badips[@]}\necho\necho \"Let us now count the items in the list.\"\nelements=${#badips[*]}\necho \"There are $elements IP addresses in the list.\"\necho\necho \"badips[2] is ${badips[2]}, which is the third address in the list.\"\nexit \n```", "```\n[donnie@fedora ~]$ cat=Vicky\n[donnie@fedora ~]$ echo ${cat-\"This cat variable is not set.\"}\nVicky\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ unset cat\n[donnie@fedora ~]$ echo ${cat-\"This cat variable is not set.\"}\nThis cat variable is not set.\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo $cat\n[donnie@fedora ~]$ \n```", "```\ndonnie@fedora:~$ cat=\ndonnie@fedora:~$ echo ${cat-\"This cat variable is not set.\"}\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ echo ${cat:-\"This cat variable is not set.\"}\nThis cat variable is not set.\ndonnie@fedora:~$ \n```", "```\n[donnie@fedora ~]$ car=\"1958 Edsel Corsair\"\n[donnie@fedora ~]$ echo ${car+\"car is set and might or might not be null\"}\ncar is set and might or might not be null\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo $car\n1958 Edsel Corsair\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ computer=\n[donnie@fedora ~]$ echo ${computer:+\"computer is set and is not null\"}\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ computer=Dell\n[donnie@fedora ~]$ echo ${computer:+\"computer is set and might or might not be null\"}\ncomputer is set and might or might not be null\n[donnie@fedora ~]$ \n```", "```\ndonnie@fedora:~$ unset town\ndonnie@fedora:~$ echo $town\ndonnie@fedora:~$ echo ${town=\"Saint Marys\"}\nSaint Marys\ndonnie@fedora:~$ echo $town\nSaint Marys\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ echo ${town=\"Kingsland\"}\nSaint Marys\ndonnie@fedora:~$ echo $town\nSaint Marys\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ unset town\ndonnie@fedora:~$ town=\ndonnie@fedora:~$ echo ${town=\"Saint Marys\"}\ndonnie@fedora:~$ \n```", "```\n[donnie@fedora ~]$ armadillo=\n[donnie@fedora ~]$ echo ${armadillo:=Artie}\nArtie\n[donnie@fedora ~]$ echo $armadillo\nArtie\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ armadillo=Annie\n[donnie@fedora ~]$ echo ${armadillo:=Artie}\nAnnie\n[donnie@fedora ~]$ echo $armadillo\nAnnie\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ dog=\n[donnie@fedora ~]$ echo ${dog:?The dog variable is unset or null.}\nbash: dog: The dog variable is unset or null.\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ dog=Rastus\n[donnie@fedora ~]$ echo ${dog:?The dog variable is unset or null.}\nRastus\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nvar=\n: ${var:?var is unset, you big dummy}\necho \"I wonder if this will work.\" \n```", "```\n[donnie@fedora ~]$ ./ex.sh\n./ex.sh: line 3: var: var is unset, you big dummy\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nvar=somevalue\n: ${var:?\"var is unset, you big dummy\"}\necho \"I wonder if this will work with a value of \"$var\".\" \n```", "```\ndonnie@fedora:~$ ./ex_2.sh\nI wonder if this will work with a value of somevalue.\ndonnie@fedora:~$ \n```", "```\n#!/bin/bash\nvar=somevalue\necho ${var:?\"var is unset, you big dummy\"}\necho \"I wonder if this will work with a value of \"$var\".\" \n```", "```\ndonnie@fedora:~$ ./ex_3.sh\nsomevalue\nI wonder if this will work with a value of somevalue.\ndonnie@fedora:~$ \n```", "```\n[donnie@fedora ~]$ text=MailServer\n[donnie@fedora ~]$ echo $text\nMailServer\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${text:4}\nServer\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${text:0:4}\nMail\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${text:4:5}\nServe\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ location=\"Saint Marys GA 31558\"\n[donnie@fedora ~]$ echo \"Zip Code: ${location:14}\"\nZip Code:  31558\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo \"Zip Code: ${location: -5}\"\nZip Code: 31558\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ pathname=\"/var/lib/yum\"\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${pathname%/yum*}\n/var/lib\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${pathname%/lib}\n/var/lib/yum\n[donnie@fedora ~]$ echo ${pathname%/lib*}\n/var\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${pathname#/var}\n/lib/yum\n[donnie@fedora ~]$ echo ${pathname#/var/lib}\n/yum\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ string=\"Hot and Spicy Food\"\n[donnie@fedora ~]$ echo $string\nHot and Spicy Food\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${string/[[:space:]]/_}\nHot_and Spicy Food\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo ${string//[[:space:]]/_}\nHot_and_Spicy_Food\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo \"This machine is running kernel version $(uname -r).\"\nThis machine is running kernel version 6.5.5-200.fc38.x86_64.\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\n[[ ! -d Daily_Reports ]] && mkdir Daily_Reports\ncd Daily_Reports\ndatestamp=$(date +%F)\necho \"This is the report for $datestamp\" > daily_report_$datestamp.txt \n```", "```\n[donnie@fedora ~]$ ls -l Daily_Reports/\ntotal 4\n-rw-r--r--. 1 donnie donnie 34 Oct  3 15:30 daily_report_2023-10-03.txt\n[donnie@fedora ~]$ cat Daily_Reports/daily_report_2023-10-03.txt\nThis is the report for 2023-10-03\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\n[[ ! -d Daily_Reports ]] && mkdir Daily_Reports\ncd Daily_Reports\ndatestamp=$(date +%F)\n[[ ! -f daily_report_$datestamp.txt ]] && echo \"This is the report for $datestamp\" > daily_report_$datestamp.txt || echo \"This report has already been done today.\" \n```", "```\n[donnie@fedora ~]$ ./command_substitution_2.sh\nThis report has already been done today.\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\ntest $(whoami) != root && echo \"You are not the root user.\"\ntest $(whoami) == root && echo \"You are the root user.\" \n```", "```\n[donnie@fedora ~]$ whoami\ndonnie\n[donnie@fedora ~]$ sudo whoami\nroot\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ ./am_i_root_1.sh\nYou are not the root user.\n[donnie@fedora ~]$ sudo ./am_i_root_1.sh\n[sudo] password for donnie:\nYou are the root user.\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\ntest $(whoami) != root && echo \"You are not the root user.\" || echo \"You are the root user.\" \n```", "```\n[donnie@fedora ~]$ datestamp=`date +%F`\n[donnie@fedora ~]$ echo $datestamp\n2023-10-03\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nif [ $(id -u) == 0 ]; then\n        echo \"This user is root.\"\nfi\nif [ $(id -u) != 0 ]; then\n        echo \"This user is not root.\"\n        echo \"This user's name is $(id -un).\"\nfi \n```", "```\n[donnie@fedora ~]$ ./am_i_root_2.sh\nThis user is not root.\nThis user's name is donnie.\n[donnie@fedora ~]$\n[donnie@fedora ~]$ sudo ./am_i_root_2.sh\nThis user is root.\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nif [ $(id -u) == 0 ]; then\n        echo \"This user is root.\"\nelif [ $(id -u) != 0 ]; then\n        echo \"This user is not root.\"\n        echo \"This user's name is $(id -un).\"\nfi \n```", "```\n#!/bin/bash\nif [ $(id -u) == 0 ]; then\n        echo \"This user is root.\"\nelse\n        echo \"This user is not root.\"\n        echo \"This user's name is $(id -un).\"\nfi \n```", "```\n#!/bin/bash\nos=$(uname)\nif [[ $os == Linux ]]; then\n        echo \"This machine is running Linux.\"\nelif [[ $os == Darwin ]]; then\n        echo \"This machine is running macOS.\"\nelif [[ $os == FreeBSD ]]; then\n        echo \"This machine is running FreeBSD.\"\nelse\n        echo \"I don't know this $os operating system.\"\nfi \n```", "```\ndonnie@openindiana:~$ ./os-test.sh\nI don't know this SunOS operating system.\ndonnie@openindiana:~$ \n```", "```\n#!/bin/bash\nx=10\nwhile [[ $x -gt 0 ]]; do\n        x=$(expr $x - 1)\n        echo $x\ndone \n```", "```\n[donnie@fedora ~]$ ./while_demo.sh\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n[donnie@fedora ~]$ \n```", "```\n((x--)) \n```", "```\n#!/bin/bash\nfile=/etc/passwd\nwhile read -r line; do\n        echo $line\ndone < \"$file\" \n```", "```\n#!/bin/bash\nwhile :\ndo\n        echo \"This loop is infinite.\"\n        echo \"It will keep going until you stop it.\"\n        echo \"To stop it, hit Ctrl-c.\"\n        sleep 1\ndone \n```", "```\n[donnie@fedora ~]$ ./infinite_loop.sh\nThis loop is infinite.\nIt will keep going until you stop it.\nTo stop it, hit Ctrl-c.\nThis loop is infinite.\nIt will keep going until you stop it.\nTo stop it, hit Ctrl-c.\n^C\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nfor cars in Edsel Ford Nash Studebaker Packard Hudson\ndo\n        echo \"$cars\"\ndone\necho \"That's all, folks!\" \n```", "```\n[donnie@fedora ~]$ ./car_demo_2.sh\nEdsel\nFord\nNash\nStudebaker\nPackard\nHudson\nThat's all, folks!\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nfor filename in *\ndo\n        echo \"$filename\"\ndone \n```", "```\n[donnie@fedora ~]$ ./list_demo.sh\n15827_zip.zip\n2023-08-01_15-23-31.mp4\n2023-08-01_16-26-12.mp4\n2023-08-02_13-57-37.mp4\n. . .\n. . .\nxargs_test.txt\nyad-form.sh\nzoneinfo.zip\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nfor cars\ndo\n        echo \"$cars\"\ndone \n```", "```\n[donnie@fedora ~]$ ./car_demo_3.sh Toyota Volkswagen Subaru Honda\nToyota\nVolkswagen\nSubaru\nHonda\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nj=0\nwhile [[ $j -lt 5 ]]\ndo\n        echo \"This is number: $j\"\n        j=$((j + 1))\n        if [[ \"$j\" == '2' ]]; then\n                echo \"We have reached our goal: $j\"\n                break\n        fi\ndone\necho \"That's all, folks!\" \n```", "```\n[donnie@fedora ~]$ ./break_demo.sh\nThis is number: 0\nThis is number: 1\nWe have reached our goal: 2\nThat's all, folks!\n[donnie@fedora ~]$ \n```", "```\n((j++)) \n```", "```\n[donnie@fedora ~]$ ./break_demo.sh\nThis is number: 0\nThis is number: 1\nWe have reached our goal: 2\nThis is number: 2\nThis is number: 3\nThis is number: 4\nThat's all, folks!\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nfor cars in Pontiac Oldsmobile Buick Chevrolet Ford Mercury\ndo\n        if [[ $cars == Buick || $cars == Mercury ]]; then\n                continue\n        fi\n        echo $cars\ndone \n```", "```\n[donnie@fedora ~]$ ./for_continue.sh\nPontiac\nOldsmobile\nChevrolet\nFord\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nj=0\nwhile [[ $j -lt 6 ]]\ndo\n        j=$((j + 1))\n        [[ $j -eq 3 || $j -eq 6 ]] && continue\n        echo \"$j\"\ndone \n```", "```\n[donnie@fedora ~]$ ./while_continue.sh\n1\n2\n4\n5\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nsecretword=Donnie\nword=\necho \"Hi there, $USER!\"\necho \"Would you like to play a guessing game?\"\necho \"If so, then enter the correct secret word\"\necho \"to win a special prize.\"\necho\necho\nuntil [[ \"$word\" = \"$secretword\" ]]\ndo\n        echo -n \"Enter your guess.  \"\n        read word\ndone\necho \"Yay!  You win a pat on the back!\" \n```", "```\n[donnie@fedora ~]$ ./secret_word.sh\nHi there, donnie!\nWould you like to play a guessing game?\nIf so, then enter the correct secret word\nto win a special prize.\nEnter your guess.  Vicky\nEnter your guess.  Cleopatra\nEnter your guess.  Donnie\nYay!  You win a pat on the back!\n[donnie@fedora ~]$ \n```", "```\ncase $variable in\n  match_1)\n     commands_to_execute\n     ;;\n  match_2)\n   commands_to_execute\n     ;;\n  match_3)\n   commands_to_execute\n     ;;\n*)  Optional Information\n    commands_to_execute_for_no_match\n     ;;\nesac \n```", "```\n#!/bin/bash\necho -n \"Choose Background Color for Terminal(b-black,g-grey): \"\nread color\ncase \"$color\" in\nb)\n  setterm -background black -foreground white\n  ;;\ng)\n  setterm -background white -foreground black\n  ;;\n*)\n  echo \"I do not understand\"\n  ;;\nesac\nexit \n```", "```\n[donnie@fedora ~]$ ./term_color.sh\nChoose Background Color for Terminal(b-black,g-grey): g\n[donnie@fedora ~]$ \n```", "```\necho -n \"Choose Background Color for Terminal(b-black,g-grey,y-yellow): \" \n```", "```\ny)\n  setterm -background yellow -foreground red\n  ;; \n```", "```\n#!/bin/bash\n# position_demo\necho \"I have a cat, whose name is $1.\"\necho \"I have another cat, whose name is $2.\"\necho \"I have yet another cat, whose name is $3.\"\necho\necho\necho \"The script that I just ran is $0\" \n```", "```\n[donnie@fedora ~]$ ./position_demo.sh Vicky Cleopatra Lionel\nI have a cat, whose name is Vicky.\nI have another cat, whose name is Cleopatra.\nI have yet another cat, whose name is Lionel.\nThe script that I just ran is ./position_demo.sh\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ ./position_demo.sh Vicky\nI have a cat, whose name is Vicky.\nI have another cat, whose name is .\nI have yet another cat, whose name is .\nThe script that I just ran is ./position_demo.sh\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\n# position_demo\nif [[ $# -ne 3 ]]; then\n        echo \"This script requires three arguments.\"\n        exit 1\nfi\necho \"I have a cat, whose name is $1.\"\necho \"I have another cat, whose name is $2.\"\necho \"I have yet another cat, whose name is $3.\"\necho\necho\necho \"The script that I just ran is $0\" \n```", "```\n[donnie@fedora ~]$ vim position_demo_2.sh\n[donnie@fedora ~]$ ./position_demo_2.sh Vicky\nYou entered 1 argument(s).\nThis script requires two arguments.\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ date\nFri Oct  6 03:24:39 PM EDT 2023\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nset $(date)\necho $*\necho \"Day, First Argument: $1\"\necho \"Month, Second Argument: $2\"\necho \"Date, Third Argument: $3\"\necho \"Time, Fourth and Fifth Arguments: $4, $5\"\necho \"Time Zone, Sixth Argument: $6\"\necho \"Year, Seventh Argument: $7\"\necho \"$2 $3, $7\" \n```", "```\n[donnie@fedora ~]$ ./position_demo_3.sh\nFri Oct 6 03:46:28 PM EDT 2023\nDay, First Argument: Fri\nMonth, Second Argument: Oct\nDate, Third Argument: 6\nTime, Fourth and Fifth Arguments: 03:46:28, PM\nTime Zone, Sixth Argument: EDT\nYear, Seventh Argument: 2023\nOct 6, 2023\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ find /etc -name passwd\nfind: '/etc/audit': Permission denied\nfind: '/etc/cups/ssl': Permission denied\n. . .\n. . .\n/etc/pam.d/passwd\nfind: '/etc/pki/rsyslog': Permission denied\nfind: '/etc/polkit-1/localauthority': Permission denied\nfind: '/etc/polkit-1/rules.d': Permission denied\n. . .\n. . .\nfind: '/etc/credstore.encrypted': Permission denied\n/etc/passwd\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo $?\n1\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ sudo find /etc -name passwd\n[sudo] password for donnie:\n/etc/pam.d/passwd\n/etc/passwd\n[donnie@fedora ~]$ echo $?\n0\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nexit n \n```", "```\n[donnie@fedora ~]$ ./exit.sh\n./exit.sh: line 2: exit: n: numeric argument required\n[donnie@fedora ~]$ echo $?\n2\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ ls -l somescript.sh\n-rw-r--r--. 1 donnie donnie 0 Oct  7 16:26 somescript.sh\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ ./somescript.sh\nbash: ./somescript.sh: Permission denied\n[donnie@fedora ~]$ echo $?\n126\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ donnie\nbash: donnie: command not found\n[donnie@fedora ~]$ echo $?\n127\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nif [[ $# -eq 0 ]]; then\n        site=\"google.com\"\nelse\n        site=\"$1\"\nfi\nping -c 2 $site > /dev/null\nif [[ $? != 0 ]]; then\n        echo $(date +%F) . . . Network Failure!\n        logger \"Could not reach $site.\"\nelse\n        echo $(date +%F) . . . Success!\n        logger \"$site is reachable.\"\nfi \n```", "```\n[donnie@fedora ~]$ ./netchk.sh\n2023-10-07 . . . Success!\n[donnie@fedora ~]$ ./netchk.sh www.donnie.com\nping: www.donnie.com: Name or service not known\n2023-10-07 . . . Network Failure!\n[donnie@fedora ~]$ \n```", "```\n#!/bin/bash\nos=$(uname)\nquantity=$(cut -f3 -d: /etc/passwd | grep -w 0 | wc -l)\nif [ $os == Linux ]; then\n        if [ $quantity -gt 1 ]; then\n                echo \"CRITICAL.  There are $quantity accounts with UID 0.\"\n                exit 2\n        else\n                echo \"OKAY.  There is only one account with UID 0.\"\n                exit 1\n        fi \n```", "```\n[donnie@fedora ~]$ echo -n \"The fat cat jumped over the skinny dog.\"\nThe fat cat jumped over the skinny dog.[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo -e \"The fat cat jumped\\v over the skinny dog.\"\nThe fat cat jumped\n                   \tover the skinny dog.\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo -e \"The fat cat jumped\\t over the skinny dog.\"\nThe fat cat jumped\t \tover the skinny dog.\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo -e \"The fat cat jumped over the thin\\\\skinny dog.\"\nThe fat cat jumped over the thin\\skinny dog.\n[donnie@fedora ~]$ \n```", "```\n[donnie@fedora ~]$ echo *\n1 15827_zip.zip 18.csv 2023-08-01_15-23-31.mp4 2023-08-01_16-26-12.mp4 2023-08-02_13-57-37.mp4 2023-10-25_price.txt 21261.zip 4-2_Building_an_Alpine_Container.bak 4-2_Building_an_Alpine_Container.pptx 46523.zip 48986.zip 50645.zip 54586.zip 70604.zip access_log_parse.sh access_log_parse.txt actorfile_10.txt actorfile_11.txt actorfile_1.txt actorfile_2.txt actorfile_4.txt actorfile_5.txt actorfile_6.txt actorfile_7.txt actorfile_8.txt actorfile_9.txt add_fields.awk add-repos.sh addresses.txt alignment_1.txt alignment_2.txt alma9_default.txt alma9_future.txt alma_link.t\n. . .\n. . .\ndonnie@fedora:~$ \n```", "```\n[donnie@fedora ~]$ echo -e \"These are my files:\\n\" *\nThese are my files:\n 15827_zip.zip 2023-08-01_15-23-31.mp4 2023-08-01_16-26-12.mp4\n. . .\n. . .\ntest.txt yad-form.sh zoneinfo.zip\n[donnie@fedora ~]$ \n```", "```\n    [donnie@fedora ~]$ ./UID-0_check.sh\n    OKAY.  There is only one account with UID 0.\n    [donnie@fedora ~]$ \n    ```", "```\nvicky:x:1001:1001::/home/vicky:/bin/bash \n```", "```\nvicky:x:0:1001::/home/vicky:/bin/bash \n```", "```\n    [donnie@fedora ~]$ ./UID-0_check.sh\n    CRITICAL.  There are 2 accounts with UID 0.\n    [donnie@fedora ~]$ \n    ```", "```\n    sudo dnf install httpd\n    sudo systemctl enable --now httpd \n    ```", "```\n    sudo firewall-cmd --permanent --add-service=http\n    sudo firewall-cmd --reload \n    ```", "```\n    http://192.168.0.10 \n    ```", "```\n    sudo less /var/log/httpd/access_log \n    ```", "```\n192.168.0.25 - - [06/Oct/2023:16:44:15 -0400] \"GET /poweredby.png HTTP/1.1\" 200 5714 \"http://192.168.0.10/\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/118.0\" \n```", "```\n    [donnie@fedora-server ~]$ sudo cut -d\" \" -f1 /var/log/httpd/access_log\n    ::1\n    192.168.0.16\n    192.168.0.16\n    192.168.0.27\n    . . .\n    . . .\n    192.168.0.25\n    192.168.0.25\n    192.168.0.9\n    192.168.0.8\n    192.168.0.8\n    192.168.0.8\n    192.168.0.8\n    [donnie@fedora-server ~]$ \n    ```", "```\n    sudo cut -d\" \" -f1 /var/log/httpd/access_log | sort \n    ```", "```\n    [donnie@fedora-server ~]$ sudo cut -d\" \" -f1 /var/log/httpd/access_log | sort | uniq -c\n          1 ::1\n         11 192.168.0.16\n          4 192.168.0.25\n          4 192.168.0.27\n          4 192.168.0.8\n          1 192.168.0.9\n    [donnie@fedora-server ~]$ \n    ```", "```\n    [donnie@fedora-server ~]$ sudo cut -d\" \" -f1 /var/log/httpd/access_log | sort | uniq -c | sort -nr\n         11 192.168.0.16\n          4 192.168.0.8\n          4 192.168.0.27\n          4 192.168.0.25\n          1 192.168.0.9\n          1 ::1\n    [donnie@fedora-server ~]$ \n    ```", "```\n    #!/bin/bash\n    cut -d\" \" -f1 /var/log/httpd/access_log | sort | uniq -c | sort -nr \n    ```", "```\n    #!/bin/bash\n    timestamp=$(date +%F)\n    echo \"These addresses have accessed this webserver as of $timestamp.\" > ipaddress_list_$timestamp.txt\n    cut -d\" \" -f1 /var/log/httpd/access_log | sort | uniq -c | sort -nr >> ipaddress_list_$timestamp.txt \n    ```", "```\n    sudo dnf install sysstat smartmontools \n    ```", "```\n    sudo systemctl start sysstat\n    systemctl status sysstat \n    ```", "```\n    sudo dnf -y upgrade \n    ```", "```\n    sudo ./hard_drive.sh \n    ```", "```\n        `names=( Vicky Frank Cleopatra Katelyn )` \n        ```", "```\n        `names=( Vicky Frank Cleopatra Katelyn )` \n        ```", "```\n        `names=( Vicky Frank Cleopatra Katelyn )` \n        ```", "```\n        `names=( Vicky Frank Cleopatra Katelyn )` \n        ```", "```\n        `names=( Vicky Frank Cleopatra Katelyn )` \n        ```"]