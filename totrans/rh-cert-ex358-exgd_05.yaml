- en: '5'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '5'
- en: DNS, DHCP, and IP Addressing – Gaining Deeper Knowledge of Red Hat Linux Networking
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DNS、DHCP 和 IP 地址配置 – 深入了解 Red Hat Linux 网络
- en: In this chapter, we are going to dig deeper into networking. We will discuss
    `192.168.1.10`, with a gateway address of `192.168.1.1`, whereas with DHCP, the
    IP information is provided by a DHCP server and the system goes through a handshake
    mechanism to obtain an IP and the DNS and gateway information on the connected
    subnet. We will go into more detail about static addressing and DHCP addressing
    later in this chapter. We will also be setting up a DHCP server to provide IP
    addressing information to systems on your network both manually and through Ansible
    Automation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入探讨网络配置。我们将讨论 `192.168.1.10`，网关地址为 `192.168.1.1`，而在 DHCP 的情况下，IP 信息由
    DHCP 服务器提供，系统通过握手机制获取连接子网的 IP、DNS 和网关信息。我们将在本章后面详细讨论静态地址配置和 DHCP 配置。我们还将设置一个 DHCP
    服务器，通过手动和 Ansible 自动化提供 IP 配置信息。
- en: We are then going to look at how we can find other addresses on the internet
    through the **Dynamic Name System** (**DNS**), which attaches **Fully Qualified
    Domain Names** (**FQDNs**) to IP addresses. This translates things such as [http://redhat.com](http://redhat.com)
    to an IP address that your computer can then use to reach from your web browser
    or other connectivity sources such as Telnet or SSH. This is all handled through
    domain name registrars where the DNS is associated with the website to IP (and
    vice versa) information. We will set up a DNS server both manually and through
    Ansible Automation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将了解如何通过**动态名称系统**（**DNS**）查找互联网上的其他地址，DNS 将**完全限定域名**（**FQDN**）与 IP 地址关联。这将像
    [http://redhat.com](http://redhat.com) 这样的地址转换为你的计算机可以通过 Web 浏览器或其他连接方式（如 Telnet
    或 SSH）访问的 IP 地址。这一切都通过域名注册商来处理，DNS 将网站与 IP 地址（以及反向映射）关联。我们将手动并通过 Ansible 自动化设置一个
    DNS 服务器。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主要内容：
- en: Diving deeper into Linux networking where we look at DNS, DHCP, and static IP
    addressing
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入学习 Linux 网络配置，重点是 DNS、DHCP 和静态 IP 地址配置
- en: Setting up static IP addresses for times when DHCP is not available but you
    still need to make that service reachable
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置静态 IP 地址，以应对 DHCP 不可用时仍需确保服务可达的情况
- en: Using the basic out-of-the-box DHCP configuration to get online fast when available
    on your network
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用基本的开箱即用的 DHCP 配置，在网络上可用时快速联网
- en: Learning what the DNS is and why you need to know about it
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解 DNS 是什么以及为什么你需要了解它
- en: The technical requirements for this chapter are covered in the following section.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的技术要求将在以下部分中介绍。
- en: Setting up GitHub access
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 GitHub 访问权限
- en: 'Please refer to the instructions found in [*Chapter 1*](B18607_01.xhtml#_idTextAnchor016),
    *Block Storage – Learning How to Provision Block Storage on Red Hat Enterprise
    Linux*, to gain access to GitHub. You will find the Ansible Automation playbooks
    for this chapter at the following link: [https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter05](https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter05).
    Remember, these are suggested playbooks and are not the only way you can write
    them to make the playbooks work for you.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考[*第 1 章*](B18607_01.xhtml#_idTextAnchor016)，*块存储 – 学习如何在 Red Hat 企业版 Linux
    上配置块存储*，以获得 GitHub 的访问权限。你可以在以下链接找到本章的 Ansible 自动化剧本：[https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter05](https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter05)。记住，这些是建议的剧本，并不是唯一的写法，你可以根据需要调整剧本以适应你的情况。
- en: You can always change them up using raw, shell, or CMD to achieve the same results,
    but we are demonstrating the best way to accomplish our goals. Also keep in mind
    that we are not using the FQCN that is needed in the future version of Ansible,
    as that will not be supported in the exam since it is testing against Ansible
    2.9.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用原始的、Shell 或 CMD 脚本来实现相同的结果，但我们展示的是实现目标的最佳方法。还要记住，我们没有使用未来版本 Ansible 所需的
    FQCN，因为在考试中不会支持这一点，考试是针对 Ansible 2.9 版本进行的。
- en: Diving deeper into Linux networking where we look at DNS, DHCP, and static IP
    addressing
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入学习 Linux 网络配置，重点是 DNS、DHCP 和静态 IP 地址配置
- en: So far, we have briefly talked about Linux networking and what it means to you
    – the ability to provide and gain access to your servers, applications, and so
    on that reside on your and other networks. We will take that a step past the initial
    setup of the IP addressing of an interface and build upon what we have learned
    so far in this book. We will show you not only how your devices get your IP, gateway,
    and DNS configurations but also how to provide those services to your servers
    and applications.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们简要地讨论了Linux网络及其对您的意义——为您的服务器、应用程序等提供访问权限，并在您和其他网络中获得访问。我们将基于接口的IP地址配置的初始设置，进一步扩展我们在本书中学到的内容。我们不仅会向您展示您的设备如何获取IP、网关和DNS配置，还会展示如何将这些服务提供给您的服务器和应用程序。
- en: First, we will go over the importance of each aspect of the different items.
    Your IP address is like your home address. Your gateway is like your driveway
    out into the world. The DNS is like your GPS because it shows you how to reach
    your online destination. The configuration of all of these things, either automatically
    through DHCP or manually through static addressing, is the bare minimum needed
    to get online and reach your destination.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将讨论不同项的每个方面的重要性。您的IP地址就像您的家庭地址。您的网关就像通往世界的车道。DNS就像您的GPS，因为它显示了如何到达您的在线目的地。无论是通过DHCP自动配置，还是通过静态地址手动配置，所有这些内容的配置都是联网并到达目标所需的最低配置。
- en: We have talked previously about IP addressing and how static addressing is done
    manually through interface configuration. The same is true for DHCP; however,
    your system talks to another device to automatically obtain the information it
    needs to get online. This information includes the DNS, which is the GPS of how
    you locate the different things you are looking to find online, such as e-commerce
    websites, news, and so on. We will delve deeper into each of these categories
    as we move through this chapter.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前讨论过IP地址配置，以及如何通过接口配置手动进行静态地址配置。DHCP也是如此；不过，您的系统会与另一个设备通信，以自动获取所需的上网信息。这些信息包括DNS，它是您在互联网上寻找不同内容（如电子商务网站、新闻等）的GPS。我们将在本章接下来的内容中深入探讨这些类别。
- en: Setting up static IP addresses for times when DHCP is not available but you
    still need to make that service reachable
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在没有DHCP的情况下，仍需设置静态IP地址以确保该服务可访问
- en: 'This is for times when you don’t have DHCP or when you need to always ensure
    the same address. This will provide the IP address, gateway, DNS, and routing
    that comes along with that setup; you sometimes need to enable the system via
    static configurations. You will notice that in the following screenshot, it did
    get a DHCP address but for our purposes, we are going to assume it received the
    incorrect address that is needed for the application. We will show the current
    IP address on the server using the following command:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这适用于您没有DHCP时，或需要始终确保使用相同地址的情况。此设置将提供IP地址、网关、DNS和路由等信息；有时，您需要通过静态配置来启用系统。您会注意到，在以下截图中，系统确实获得了DHCP地址，但为了我们的目的，我们假设它获得了一个不正确的地址，而这个地址对于应用程序来说是必需的。我们将使用以下命令显示服务器的当前IP地址：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following screenshot shows the IP address information that is currently
    configured on the server:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了当前在服务器上配置的IP地址信息：
- en: '![Figure 5.1 – IP addressing based on DHCP currently](img/Figure_5.01_B18607.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图5.1 – 当前基于DHCP的IP地址配置](img/Figure_5.01_B18607.jpg)'
- en: Figure 5.1 – IP addressing based on DHCP currently
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.1 – 当前基于DHCP的IP地址配置
- en: 'So, in order to resolve this issue, we are going to set the system up statically
    using the `nmtui` command to gain a GUI-style interface, as shown in the following
    screenshot:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为了解决这个问题，我们将使用`nmtui`命令将系统设置为静态配置，以获得一个图形用户界面（GUI）风格的界面，如下图所示：
- en: '![Figure 5.2 – Initiated GUI using the nmtui command](img/Figure_5.02_B18607.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图5.2 – 使用nmtui命令启动的GUI界面](img/Figure_5.02_B18607.jpg)'
- en: Figure 5.2 – Initiated GUI using the nmtui command
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.2 – 使用nmtui命令启动的GUI界面
- en: 'Within the GUI, we are going to choose the **Edit a connection** option. This
    will allow us to choose our interface and set the appropriate settings manually.
    Choosing the right interface after selecting the mentioned option is shown in
    the following screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在图形用户界面（GUI）中，我们将选择**编辑连接**选项。这将允许我们选择接口并手动设置适当的配置。选择该选项后选择正确的接口，详情请见下图：
- en: "![Figure 5.3 – \uFEFFThe Edit a connection option chosen and the correct interface\
    \ highlighted](img/Figure_5.03_B18607.jpg)"
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: "![图 5.3 – \uFEFF选择“编辑连接”选项，并高亮显示正确的接口](img/Figure_5.03_B18607.jpg)"
- en: Figure 5.3 – The Edit a connection option chosen and the correct interface highlighted
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3 – 选择“编辑连接”选项，并高亮显示正确的接口
- en: 'After choosing the correct interface, we are going to choose the **Manual**
    setting so we can open up the needed fields for manipulation, as shown in the
    following screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 选择正确的接口后，我们将选择**手动（Manual）**设置，以便打开所需的字段进行操作，如下图所示：
- en: '![Figure 5.4 – Selecting Manual to open up the Ethernet settings for configuration](img/Figure_5.04_B18607.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.4 – 选择手动以打开以太网设置进行配置](img/Figure_5.04_B18607.jpg)'
- en: Figure 5.4 – Selecting Manual to open up the Ethernet settings for configuration
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.4 – 选择手动（Manual）以打开以太网设置进行配置
- en: 'We will then set the correct configuration for the interface. This might be
    information that you have to obtain from your network team in some cases. The
    reason behind that is that you have to know your DNS, gateway, and subnet range.
    These may not be known to you as a server admin, and that’s why DHCP is preferred,
    at least for desktop usage, as it auto-populates all of these fields. The following
    screenshot shows the required configuration to get this interface up and connected
    to the world:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将为接口设置正确的配置。在某些情况下，这些信息可能需要从网络团队处获得。原因是你需要知道你的DNS、网关和子网范围。作为服务器管理员，你可能不了解这些信息，这也是为什么在桌面使用时，DHCP更受欢迎，因为它会自动填充这些字段。以下截图显示了将此接口启动并连接到网络所需的配置：
- en: '![Figure 5.5 – IP address with subnet range, gateway, and DNS for the required
    connectivity options](img/Figure_5.05_B18607.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.5 – 包含子网范围、网关和DNS的IP地址，用于所需的连接选项](img/Figure_5.05_B18607.jpg)'
- en: Figure 5.5 – IP address with subnet range, gateway, and DNS for the required
    connectivity options
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.5 – 包含子网范围、网关和DNS的IP地址，用于所需的连接选项
- en: 'From there, you would save this information and exit the `nmtui` GUI and then
    run the following command:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你需要保存这些信息，退出`nmtui`图形界面，并运行以下命令：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The output from the command is shown in the following screenshot from the server:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 从命令的输出中，以下是来自服务器的截图：
- en: '![Figure 5.6 – Command to reload the interface to gain the new settings you
    specified](img/Figure_5.06_B18607.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.6 – 重新加载接口的命令，以便获取你指定的新设置](img/Figure_5.06_B18607.jpg)'
- en: Figure 5.6 – Command to reload the interface to gain the new settings you specified
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.6 – 重新加载接口的命令，以便获取你指定的新设置
- en: 'Alternatively, you can run the following command from SSH if you do not have
    direct access to the server:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有直接访问服务器的权限，可以通过SSH运行以下命令：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the following screenshot, you can see the output of the command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下截图中，你可以看到命令的输出：
- en: '![Figure 5.7 – Command to reload network manager in order to gain the new static
    settings](img/Figure_5.07_B18607.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.7 – 重新加载网络管理器的命令，以便获得新的静态设置](img/Figure_5.07_B18607.jpg)'
- en: Figure 5.7 – Command to reload network manager in order to gain the new static
    settings
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.7 – 重新加载网络管理器的命令，以便获得新的静态设置
- en: Using the basic out-of-the-box DHCP configuration to get online fast when available
    on your network
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用默认的DHCP配置，在网络中有可用的情况下快速连接
- en: Out-of-the-box DHCP addressing will give you the IP addressing you need when
    physically connected to a network with a router and DHCP server running in order
    to obtain an IP automatically and connect to the network. This allows you to get
    online quickly without the need to know the connectivity settings such as subnet,
    gateway, or routing information.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 开箱即用的DHCP寻址将为你提供所需的IP地址，当物理连接到一个有路由器和DHCP服务器运行的网络时，系统会自动获取IP并连接到网络。这样你可以快速上线，而无需知道子网、网关或路由信息等连接设置。
- en: Using DHCP at initial interface connectivity provided by an external source
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用DHCP来提供由外部源提供的初始接口连接
- en: 'When you first fire up your computer and plug it into the network, by default,
    most systems are configured to try to use DHCP. This handshake method allows for
    connectivity to the internet to occur faster and without direct intervention.
    For instance, in RHEL, when you fire up the interface when installing it, you
    will automatically have the configuration set to DHCP. This is due to most users
    having a serving DHCP server. This means that a handshake occurs between the DHCP
    server and the RHEL machine to provide it with connectivity information. This
    occurs in the form of the **DHCP Discover** message or the computer or client
    server asking for connectivity. The server replies with a **DHCP Offer** to provide
    the information. The client then responds with the **DHCP Request** for the information
    to connect. Finally, the DHCP server responds with a **DHCP Acknowledgement**
    that includes the information for connectivity. This can be seen in the following
    diagram:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当您首次启动计算机并将其连接到网络时，默认情况下，大多数系统都配置为尝试使用 DHCP。此握手方法可以使互联网连接更快速且无需直接干预。例如，在 RHEL
    中，当您安装时启动接口，系统会自动将配置设置为 DHCP。这是因为大多数用户都有一个提供服务的 DHCP 服务器。这意味着 DHCP 服务器与 RHEL 计算机之间会进行握手，以提供连接信息。此过程通过
    **DHCP Discover** 消息或计算机或客户端服务器请求连接的方式进行。服务器回复 **DHCP Offer** 提供信息。客户端然后通过 **DHCP
    Request** 请求连接信息。最后，DHCP 服务器通过 **DHCP Acknowledgement** 响应，包含连接信息。以下图示展示了这一过程：
- en: '![Figure 5.8 – DHCP handshake](img/Figure_5.08_B18607.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.8 – DHCP 握手](img/Figure_5.08_B18607.jpg)'
- en: Figure 5.8 – DHCP handshake
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.8 – DHCP 握手
- en: Once you have the information from the DHCP server, your machine will be configured
    with an IP address, gateway, and DNS. This allows you to get online quicker and
    without the hassle of setting up the information yourself. In some cases, this
    is necessary because you neither have the required information (such as what IP
    addresses are free on your network) nor do you know what the gateway or DNS addresses
    are. By using DHCP, you are able to connect to the network reliably and without
    conflict and reach your local network.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦从 DHCP 服务器获取信息，您的计算机将配置一个 IP 地址、网关和 DNS。这使您能够更快地在线，并且无需自己设置这些信息。在某些情况下，这种方式是必要的，因为您既没有所需的信息（例如，网络上哪些
    IP 地址是空闲的），也不知道网关或 DNS 地址是什么。通过使用 DHCP，您可以可靠地连接到网络，避免冲突，并访问您的本地网络。
- en: In most enterprise environments, however, you will not use a DHCP server for
    application servers, but you will in most cases for providing connectivity to
    workers. Most application production servers are set through static or through
    automation using the next available application IP. This is why it is such a big
    deal to be able to set up a DHCP server as you will want the connectivity to be
    easy for your workers to be able to log in and get right to work. Knowing there
    is a need for a DHCP server, we will use it as a motivation to set up a DHCP server
    that will provide connectivity to internal workers at your company or your family
    at home.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在大多数企业环境中，您不会为应用服务器使用 DHCP 服务器，但在大多数情况下，您会为员工提供连接。大多数应用生产服务器通过静态配置或通过自动化使用下一个可用的应用
    IP 设置。这就是为什么能够设置 DHCP 服务器如此重要，因为您希望员工能够轻松连接、登录并立即开始工作。知道有设置 DHCP 服务器的需求后，我们将以此为动力，设置一个
    DHCP 服务器，以便为您的公司内部员工或您家中的家庭成员提供连接。
- en: 'With a DHCP server running and having connectivity, either through physical
    Ethernet or Wi-Fi, here is how you can set up DHCP IP addressing for your device.
    For this, you will need direct access to the server via the console or through
    the VM manager. Using the following command, you can check what your IP address
    is:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DHCP 服务器运行并具备连接能力的情况下，无论是通过物理以太网还是 Wi-Fi，您都可以按照以下步骤为设备设置 DHCP IP 地址。为此，您需要通过控制台或虚拟机管理器直接访问服务器。使用以下命令，您可以检查设备的
    IP 地址：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As the following screenshot demonstrates, your device currently has no IP address:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如以下截图所示，您的设备当前没有 IP 地址：
- en: '![Figure 5.9 – There is currently no IP address associated with the connected
    enp0s3 interface](img/Figure_5.09_B18607.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.9 – 当前没有与连接的 enp0s3 接口关联的 IP 地址](img/Figure_5.09_B18607.jpg)'
- en: Figure 5.9 – There is currently no IP address associated with the connected
    enp0s3 interface
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.9 – 当前没有与连接的 enp0s3 接口关联的 IP 地址
- en: 'We are going to use `nmtui` again as we did when working with static addresses,
    but this time, we will choose **Automatic**, which utilizes DHCP, as shown in
    the following screenshot:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将再次使用`nmtui`，就像我们处理静态地址时一样，但这次我们将选择**自动**，即使用DHCP，如下图所示：
- en: '![Figure 5.10 – Choosing the Automatic option within nmtui interface settings](img/Figure_5.10_B18607.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.10 – 在nmtui界面设置中选择自动选项](img/Figure_5.10_B18607.jpg)'
- en: Figure 5.10 – Choosing the Automatic option within nmtui interface settings
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.10 – 在nmtui界面设置中选择自动选项
- en: 'After you choose the `nmtui`:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 选择`nmtui`后：
- en: '![Figure 5.11 – Activating a connection within nmtui](img/Figure_5.11_B18607.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.11 – 在nmtui中激活连接](img/Figure_5.11_B18607.jpg)'
- en: Figure 5.11 – Activating a connection within nmtui
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.11 – 在nmtui中激活连接
- en: 'After you choose **Activate a connection**, you then need to choose the interface
    that is physically connected, as shown in the following screenshot:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**激活连接**后，你需要选择物理连接的接口，如下图所示：
- en: '![Figure 5.12 – Choosing the correct interface you previously set up to enable
    connectivity](img/Figure_5.12_B18607.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.12 – 选择你之前设置的正确接口以启用连接](img/Figure_5.12_B18607.jpg)'
- en: Figure 5.12 – Choosing the correct interface you previously set up to enable
    connectivity
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.12 – 选择你之前设置的正确接口以启用连接
- en: 'After that is activated, the interface should come up and complete the DHCP
    handshake that was outlined previously to gain the information needed to make
    a network connection. Using the following command, you can see what IP address
    was obtained automatically:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 激活后，接口应该会启动并完成之前概述的DHCP握手，以获取建立网络连接所需的信息。使用以下命令，你可以查看自动获取的IP地址：
- en: '[PRE4]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The connectivity information that was automatically obtained is shown in the
    following screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 自动获取的连接信息如下图所示：
- en: '![Figure 5.13 – The IP address and routing of the gateway](img/Figure_5.13_B18607.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.13 – 网关的IP地址和路由](img/Figure_5.13_B18607.jpg)'
- en: Figure 5.13 – The IP address and routing of the gateway
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.13 – 网关的IP地址和路由
- en: We have just set up your server or client machine to acquire network connectivity
    using DHCP. Through the automated system, you will be able to get online fast
    without having to worry about manually setting anything up. This is a big advantage
    for things that do not always need to have the same IP but only need network connectivity.
    Next, we will talk about creating a DHCP server to provide this type of functionality.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚设置了你的服务器或客户端机器，通过DHCP获取网络连接。通过自动化系统，你将能够快速在线，而无需担心手动配置任何设置。这对于那些不总是需要相同IP地址但只需要网络连接的设备来说是一个很大的优势。接下来，我们将讨论如何创建一个DHCP服务器来提供这种功能。
- en: Setting up DHCP server configuration manually to provide DHCP services
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 手动设置DHCP服务器配置以提供DHCP服务
- en: In some cases, there will not be a DHCP server already set up on the network.
    As a system administrator, it may fall upon you to set one up. This is due to
    the need for a DHCP server for desktop support in many cases, and a necessity
    to get workers online fast and with minimal effort. This could mean that they
    are physically plugged into the network using Wi-Fi or a **Virtual Private Network**
    (**VPN**) to connect. Regardless of how they are connecting, if they fall within
    the authorized connectivity, we need to provide them with the correct addressing
    information. This allows them access not only to the internet but also to their
    systems within the intranet of the internal company. Let’s get started with setting
    up a DHCP server manually.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，网络上可能没有设置DHCP服务器。作为系统管理员，可能需要你来设置一个。这是因为在许多情况下，桌面支持需要DHCP服务器，并且需要快速且尽可能少的工作量让工作人员上线。这可能意味着他们通过Wi-Fi或**虚拟私人网络**（**VPN**）连接到网络。无论他们是如何连接的，只要他们在授权的连接范围内，我们就需要为他们提供正确的地址信息。这不仅允许他们访问互联网，还能让他们访问公司内部网络中的系统。让我们开始手动设置DHCP服务器。
- en: 'The first thing you are going to need to do is to install the `dhcp-server`
    package using the following command:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你首先需要做的是使用以下命令安装`dhcp-server`软件包：
- en: '[PRE5]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This output can be seen in the commands shown in the following screenshot:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 该输出可以在以下截图中看到的命令中查看：
- en: '![Figure 5.14 – Installing the required dhcp-server package](img/Figure_5.14_B18607.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.14 – 安装所需的dhcp-server软件包](img/Figure_5.14_B18607.jpg)'
- en: Figure 5.14 – Installing the required dhcp-server package
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.14 – 安装所需的dhcp-server软件包
- en: 'From there, we will need to set the parameters within the correct configuration
    file so that `dhcp-server` knows what information to provide to the client machines.
    Using the following command, we can open and edit the `dhcpd.conf` file:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The command is shown in the following screenshot:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.15 – Editing the dhcpd.conf file to set the required network settings](img/Figure_5.15_B18607.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
- en: Figure 5.15 – Editing the dhcpd.conf file to set the required network settings
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to save us somewhat of a headache, there is a trick that can be utilized.
    The trick is to look at the example of a configuration file and copy and paste
    the options. Once you''ve done that, you would then need to edit the options to
    match what your network requires to have the server provide the correct information
    to the clients. Using the following command, we can view the examples of working
    DHCP servers:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This example can be found in the following screenshot:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 5.16 – Example of a configured dhcp\uFEFFd.conf file](img/Figure_5.16_B18607.jpg)"
  id: totrans-88
  prefs: []
  type: TYPE_IMG
- en: Figure 5.16 – Example of a configured dhcpd.conf file
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: 'Further within the example, you will see the main portion of what is necessary
    to set up that internal DHCP server for your clients. This portion is shown in
    the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.17 – The necessary items fall under the “A slightly different configuration”
    section](img/Figure_5.17_B18607.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
- en: Figure 5.17 – The necessary items fall under the “A slightly different configuration”
    section
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: 'By copying the subnet section and pasting it into the `dhcpd.conf` file, you
    can then edit it to the values you need easily without worrying about whether
    you missed any items. This configuration file is shown in the following screenshot:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.18 – Configuration for dhcp-server that provides a 192.168.1.0/24
    network](img/Figure_5.18_B18607.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
- en: Figure 5.18 – Configuration for dhcp-server that provides a 192.168.1.0/24 network
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: 'After you have all of the correct settings in your `dhcpd.conf` file, you can
    then start and enable the `dhcp-server` daemon in order to ensure that the server
    is running. We will use the following commands to enable and start the `dhcpd`
    service:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The results of the commands are shown in the following screenshot:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.19 – Starting and enabling the service so that it starts at boot](img/Figure_5.19_B18607.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
- en: Figure 5.19 – Starting and enabling the service so that it starts at boot
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: 'After we have started and enabled the service, it is always a good idea to
    check and ensure that the system has successfully started. We can use the following
    command to view the status of the service:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The status of `running` is shown in the following screenshot for `dhcp-server`:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.20 – The status of running is shown for dhcp-server thus confirming
    it has been set up correctly](img/Figure_5.20_B18607.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
- en: Figure 5.20 – The status of running is shown for dhcp-server thus confirming
    it has been set up correctly
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: 'As with all other services, we want to reach the outside world, for which we
    need to open a firewall to allow incoming broadcast requests for a DHCP lease.
    We will use the following commands to open and reload the firewall:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他所有服务一样，我们希望连接到外部世界，为此我们需要打开防火墙以允许 DHCP 租约的传入广播请求。我们将使用以下命令打开并重新加载防火墙：
- en: '[PRE10]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Opening the firewall command output is shown in the following screenshot:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 打开防火墙命令的输出如以下截图所示：
- en: '![Figure 5.21 – Opening firewall ports for DHCP and reloading the firewall
    to allow connectivity](img/Figure_5.21_B18607.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.21 – 为 DHCP 打开防火墙端口并重新加载防火墙以允许连接](img/Figure_5.21_B18607.jpg)'
- en: Figure 5.21 – Opening firewall ports for DHCP and reloading the firewall to
    allow connectivity
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.21 – 为 DHCP 打开防火墙端口并重新加载防火墙以允许连接
- en: 'Previously, we skipped double-checking to ensure that the firewall rule was
    actually in place. This time, I wanted to showcase how you can check and see whether
    a service is allowed through your firewall. We will use the following command
    to view the services currently allowed by the firewall:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，我们跳过了双重检查，以确保防火墙规则已实际生效。这一次，我想展示如何检查并查看一个服务是否被允许通过防火墙。我们将使用以下命令查看当前防火墙允许的服务：
- en: '[PRE11]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In the following screenshot, the command shows that the DHCP service is listed:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在下图中，命令显示 DHCP 服务已列出：
- en: "![Figure 5.22 – Using the \uFEFFfirewall-cmd --list-services command; you can\
    \ see it includes DHCP](img/Figure_5.22_B18607.jpg)"
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.22 – 使用 `firewall-cmd --list-services` 命令；你可以看到它包括 DHCP](img/Figure_5.22_B18607.jpg)'
- en: Figure 5.22 – Using the firewall-cmd --list-services command; you can see it
    includes DHCP
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.22 – 使用 `firewall-cmd --list-services` 命令；你可以看到它包括 DHCP
- en: We have set up a DHCP server to provide connectivity to client devices connected
    to the subnet. This allows you to control what IP addresses devices receive from
    static DHCP addressing to next-in-line IP address pools. We briefly showcased
    options such as `default-lease-time`, which is the time the machine will keep
    the IP address before making a new request, for example. Also, with static MAC
    address mapping, it allows you to know ahead of time what IP address your machine
    will receive from a DHCP server. This is helpful when setting up Ansible playbooks
    to run against a specific IP address, for example. Next, we are going to talk
    about how to set this service up through Ansible Automation to ensure that it
    is easily repeatable and to lower the possibility of human error.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经设置了一个 DHCP 服务器，以提供连接到子网的客户端设备的连接。这使你能够控制设备从静态 DHCP 地址分配到下一个 IP 地址池所接收的 IP
    地址。我们简要展示了一些选项，如 `default-lease-time`，它表示机器在发出新请求之前将保持 IP 地址的时间。例如，静态 MAC 地址映射使你提前知道你的设备将从
    DHCP 服务器获取哪个 IP 地址。这对于设置 Ansible playbooks 以便运行特定 IP 地址时非常有用。接下来，我们将讨论如何通过 Ansible
    自动化设置此服务，以确保它容易重复并降低人为错误的可能性。
- en: Automating DHCP server configuration to provide DHCP services
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动化 DHCP 服务器配置以提供 DHCP 服务
- en: 'We are going to start by setting up Ansible’s inventory of systems, which,
    in our case, is [rhel1.example.com](https://rhel1.example.com) for our target
    device for the DHCP server. This will allow us to target only the device we are
    looking to run against; also, we will call out the server in our playbook to ensure
    that only `rhel1` is configured. Make a directory for your playbook, or you can
    have one directory with all of your playbooks, but it will use the same inventory
    so keep that in mind. In our case, we are going to make a directory in our `Documents`
    folder for the playbook and inventory to reside in, named `dhcp_server_playbook`:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从设置 Ansible 系统的清单开始，在我们的例子中，目标设备是 [rhel1.example.com](https://rhel1.example.com)，用于配置
    DHCP 服务器。这将允许我们仅针对我们要运行的设备进行操作；同时，我们将在 playbook 中调用该服务器，以确保仅配置 `rhel1`。为你的 playbook
    创建一个目录，或者你也可以将所有 playbook 放在同一个目录中，但它将使用相同的清单，所以请记住这一点。在我们的例子中，我们将在 `Documents`
    文件夹中创建一个名为 `dhcp_server_playbook` 的目录，以存放 playbook 和清单文件：
- en: '[PRE12]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The inventory file should look something like the following screenshot:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 清单文件应类似于以下截图：
- en: '![Figure 5.23 – DHCP server inventory file for the playbook to create the DHCP
    server](img/Figure_5.23_B18607.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图 5.23 – 用于创建 DHCP 服务器的 playbook 的 DHCP 服务器清单文件](img/Figure_5.23_B18607.jpg)'
- en: Figure 5.23 – DHCP server inventory file for the playbook to create the DHCP
    server
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.23 – 用于创建 DHCP 服务器的 playbook 的 DHCP 服务器清单文件
- en: 'We will then move on to the playbook itself, where we will create tasks to
    install the DHCP server. First, we are going to want to point toward the inventory
    group we created so that no other hosts are updated. We will also set the `become`
    state to `true` in order to escalate our privileges, and `become_method` to `sudo`
    so that Ansible knows how to escalate privileges:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'We then need to add some tasks to start building the DHCP server itself. We
    will start by installing the `dhcp-server` package using the `package` module.
    We will set the task to install the latest version of the package as well:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: After we have installed the server, we will then set the configuration files
    using the templating module through the use of a Jinja template.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let’s look at the playbook layout, and then we will address the templates.
    We will use the `template` module to copy a template we have built to the system
    in order to configure `dhcp-server`. You will notice we are using a predefined
    variable of `playbook_dir` in order to point to the right location for the file.
    This is built into Ansible and is not something you need to configure yourself:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now, let’s take a look at the `jinja2` template, which shows a normal `dhcpd.conf`
    layout for the subnet we want to create, as shown in the following screenshot:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.24 – dhcpd.conf.j2 file for use with the Ansible playbook](img/Figure_5.24_B18607.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
- en: Figure 5.24 – dhcpd.conf.j2 file for use with the Ansible playbook
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: 'After this is completed, we will then start and enable the service. Open the
    firewall rules for `dhcp` and reload the firewall:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Then, we are going to run the playbook in order to set up the DHCP server.
    We will use the following command; if you have keys fully set up, this is not
    necessary, but I wanted to show you how to do it with passwords:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The output from running the playbook is shown in the following screenshot:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.25 – Successful run of the dhcp_server_playbook.yml](img/Figure_5.25_B18607.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
- en: Figure 5.25 – Successful run of the dhcp_server_playbook.yml
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: With this running successfully, you can point your server toward the system
    to look for a DNS server. Since my system is currently on a DHCP server, it makes
    it harder to test as I am bridging the connections, but you can change the configuration
    to use a non-bridged connection such as an internal network in VirtualBox and
    you will be able to test the DHCP to see what it provides.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we learned how to automate the setup of a DHCP server. This
    allows us to provide DHCP to systems automatically. This allows the ease of use
    of connecting to a new network for client computers when running in an enterprise
    environment. Next, we will discuss the DNS and how that relates to network connectivity.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Learning about the DNS and why you need to know about it
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DNS is important to learn about as it simplifies how we find addresses of networked
    devices on the world wide web. Without the DNS to allow FQDNs to translate into
    IP addresses, we would all have to search for websites via IP. This would become
    confusing as there are so many websites we use today that remembering all the
    IP addresses for them would be hectic and unmanageable. This would inevitably
    lead to a database that you would have to look at each time you wanted to go to
    a website. Thus, the DNS was born, and it provides that function allowing you
    to remember friendly names of websites in order to access them, such as [google.com](https://google.com).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: Setting up DNS server configuration manually to provide DNS services
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The first thing we will need to do is install the `bind` package for the DNS
    to be able to run. This allows for the daemon needed to serve the DNS entries
    to the systems. We will start by using `sudo dnf install bind -y`, with the output
    shown in the following screenshot:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 5.26 – Bind \uFEFFbeing installed through the package manager](img/Figure_5.26_B18607.jpg)"
  id: totrans-146
  prefs: []
  type: TYPE_IMG
- en: Figure 5.26 – Bind being installed through the package manager
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: 'After `bind` is installed, we are going to go to the documentation to get a
    clear look at the items that need to be set. We can find the `named.conf` file
    example shown at the following path in the screenshot:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.27 – Documentation location for bind settings](img/Figure_5.27_B18607.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
- en: Figure 5.27 – Documentation location for bind settings
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: 'Once we have installed `bind` for the DNS, we are going to configure the `/etc/named.conf`
    file in order to set up the needed parameters. This file’s location is shown in
    the following screenshot and edited with the `sudo vi /``etc/named.conf` command:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 5.28 – Command to edit the /etc/named.conf file to configure \uFEFF\
    the DNS](img/Figure_5.28_B18607.jpg)"
  id: totrans-152
  prefs: []
  type: TYPE_IMG
- en: Figure 5.28 – Command to edit the /etc/named.conf file to configure the DNS
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 'You will notice that the first things that need to be set up are the listening
    ports and interfaces. The DNS listens on port `53` as that is the well-known (default)
    port for the DNS that is set up in the networking world. We are going to adjust
    the settings so that we listen for incoming requests on port `53` on any interface
    connected to the network. This configuration is shown in the following screenshot:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.29 – Interface settings for DNS port 53](img/Figure_5.29_B18607.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
- en: Figure 5.29 – Interface settings for DNS port 53
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: 'The next portion of the configuration file we are concerned with is the location
    of the zone files. A zone file is what tells the DNS what IP addresses to give
    to an FQDN (these files are what are looked up when you search for a website such
    as [www.google.com](https://www.google.com)), which then returns an IP address
    to your computer via the DNS so that it can reach the destination. In this case,
    as you can see in the following screenshot, the location of these files is the
    `/``var/named` directory:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.30 – Zone file directory location](img/Figure_5.30_B18607.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
- en: Figure 5.30 – Zone file directory location
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: 'When setting up an authoritative DNS server, or what is known as a top-level
    DNS server, you will want to set `recursion` to `no` for something like a lab
    environment or even an exam where you would like DNS to learn from other DNS servers''
    upstream information. Then, to save that information, such as a DNS entry, you
    will want `recursion` set to `yes`. In our case, for this example, we are setting
    it to `no` as we want to be top level, as shown in the following screenshot:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.31 – Recursion is set to no for authoritative DNS servers](img/Figure_5.31_B18607.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
- en: Figure 5.31 – Recursion is set to no for authoritative DNS servers
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: 'The next thing we are going to set up is a zone file location for a master
    forward lookup zone. A forward lookup zone is used to look up the IP address of
    the DNS FQDN when provided. This allows for your computer or server to be able
    to find the item that it is attempting to reach over the internet or intranet.
    The `example.com` zone is shown in the following screenshot:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.32 – The example.com zone file location provided to the named.conf
    file](img/Figure_5.32_B18607.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
- en: Figure 5.32 – The example.com zone file location provided to the named.conf
    file
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we are going to set up a reverse zone lookup file location within the
    `named.conf` file. This is so that if you were to look up the IP address in your
    system, it would provide the FQDN for that IP address. This `192.168.1.0` PTR
    record, which, in our case, will point to `example.com`:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.33 – PTR record location provided to named.conf file for 192.168.1.0
    zone](img/Figure_5.33_B18607.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
- en: Figure 5.33 – PTR record location provided to named.conf file for 192.168.1.0
    zone
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have added the needed zone file locations to `named.conf`, we need
    to create the zone files for DNS to be able to look up information related to
    the DNS records. We can use the localhost example provided in `/var/named/named.localhost`
    to showcase the needed items for a zone file. This zone file example is shown
    in the following screenshot:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.34 – Example zone file for DNS records](img/Figure_5.34_B18607.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
- en: Figure 5.34 – Example zone file for DNS records
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in the previous screenshot, there are some different items we need
    to go into detail about. First would be the `@` with a `.`) of the administrator
    of the DNS server. The next important items listed in this file are the records
    themselves. These include `A` records (which are IPV4 DNS records), `AAAA` records
    (which are IPV6 records), and `NS` records (which are name server records and
    determine what the DNS servers that are utilized are set at and are needed for
    all zone files). The serial number is important as it helps to identify whether
    a DNS record that is retrieved by the host machine is up to date or not. The end
    `.` (dot) is used on the named items when they are FQDNs that can be reached.
    In the following screenshot, you will see how we set up a simple zone file for
    `example.com`:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.35 – Zone file configured for example.com with A records and NS
    records set](img/Figure_5.35_B18607.jpg)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
- en: Figure 5.35 – Zone file configured for example.com with A records and NS records
    set
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: 'Following that zone setup, we will then set up the PTR zone for reverse DNS
    lookup. This is accomplished in the same format but with the reverse DNS layout
    of the IP address in reverse of the record, which allows servers to be discovered
    using the IP address instead of the name. This record type and setup are shown
    in the following screenshot:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.36 – Zone file for PTR reverse DNS lookup of the 192.168.1.0 subnet
    for example.com](img/Figure_5.36_B18607.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
- en: Figure 5.36 – Zone file for PTR reverse DNS lookup of the 192.168.1.0 subnet
    for example.com
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: 'After our configuration files are set up and our zone files are populated,
    we will then want to enable and start the named service provided by the `bind`
    package to provide the DNS to systems pointed at it for DNS records. This is accomplished
    with the commands in the following screenshot:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 5.37 – Start and enable the named service to provide \uFEFFthe DNS](img/Figure_5.37_B18607.jpg)"
  id: totrans-179
  prefs: []
  type: TYPE_IMG
- en: Figure 5.37 – Start and enable the named service to provide the DNS
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: 'To ensure that the DNS is up and running, we will use the following command:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'We can now view the output status of the named service, as shown in the following
    screenshot, which shows it is actively running without any failures:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 5.38 – Status of the named service for \uFEFFthe DNS](img/Figure_5.38_B18607.jpg)"
  id: totrans-184
  prefs: []
  type: TYPE_IMG
- en: Figure 5.38 – Status of the named service for the DNS
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to ensure that the DNS service can be reached by outside systems,
    we need to allow it within the firewall. We will use the following commands to
    start, enable, and apply firewall rules:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The `firewalld` setup, start and enable output, and commands are shown in the
    following screenshot:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.39 – Allowed DNS and then reloaded the firewall for connectivity](img/Figure_5.39_B18607.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
- en: Figure 5.39 – Allowed DNS and then reloaded the firewall for connectivity
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: 'To ensure that the system is providing the DNS records that we set up in the
    zone files, we will do a dig lookup on the specific DNS server for a system we
    propagated in the zone file. Keep in mind that whenever you update a zone file,
    you need to reload `named.service` as well. We will use the `dig` command to do
    a DNS lookup:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The following screenshot shows the `dig or lookup of a record from a DNS server`
    from the DNS server we created the information for `rhel2.example.com`:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.40 – DNS dig lookup of the rhel2.example.com server](img/Figure_5.40_B18607.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
- en: Figure 5.40 – DNS dig lookup of the rhel2.example.com server
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we learned how to manually set up a DNS server. This is crucial
    in enhancing your understanding of how the DNS works and why it is used. We showed
    how forward and reverse zones are set up to allow for connectivity as well as
    installing the service needed. Next, we are going to delve into automating a DNS
    server creation using Ansible Automation.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: Automating DNS server configuration to provide DNS services
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next up, we are going to learn how to set up a DNS server using Ansible Automation
    through Jinja templates as we did with our DHCP setup. These files might need
    to be altered for your setup, but you will come to understand the principles of
    how to complete the Ansible playbook.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
- en: 'We are going to start by creating the directory for the playbook using the
    following commands:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The output of these commands can be seen in the following screenshot:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.41 – Creating the playbook directory](img/Figure_5.41_B18607.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
- en: Figure 5.41 – Creating the playbook directory
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
- en: 'We are then going to create the inventory inside the new directory. This inventory
    example can be seen in the following screenshot:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.42 – Example of an inventory](img/Figure_5.42_B18607.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
- en: Figure 5.42 – Example of an inventory
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we will start writing our playbook and then move on to creating the
    Jinja2 templates. As always, we will begin our playbook as follows:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Next, we will move on to the tasks that we need to complete in order to install
    `bind`, which installs `named.service`, which runs the DNS server. We will then
    copy over the configuration files for `named.conf` and the zones. Then, we will
    update the firewall and test the name resolution. Please keep in mind that you
    will want to substitute any IP addresses for those of your systems and your DNS
    server for this playbook. The tasks are as follows:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Once that is complete, we will create our `named.conf` and zone files as `.``j2`
    templates.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
- en: 'The `named.conf` file can be seen in the following screenshot:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.43 – The named.conf file truncated for reading](img/Figure_5.43_B18607.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
- en: Figure 5.43 – The named.conf file truncated for reading
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the forward zone file:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.44 – Forward zone file example.com.zone.j2](img/Figure_5.44_B18607.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
- en: Figure 5.44 – Forward zone file example.com.zone.j2
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we have the reverse zone file for the PTR records in the following
    screenshot:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.45 – Reverse zone file 1.168.192.zone.j2](img/Figure_5.45_B18607.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
- en: Figure 5.45 – Reverse zone file 1.168.192.zone.j2
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: 'After creating that, we will run the playbook using the following command again,
    which illustrates if you need to run the command without SSH keys set up. If you
    have SSH keys set up, you can omit `-k -ask-become`. Also, we are going to add
    verbosity so that we can see more of the standard out type of logs output by adding
    `-v`; this command is as follows:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The following screenshot shows a successful playbook run:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 5.46 – Playbook output](img/Figure_5.46_B18607.jpg)'
  id: totrans-224
  prefs: []
  type: TYPE_IMG
- en: Figure 5.46 – Playbook output
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
- en: This wraps up working with Ansible Automation to automate your DNS servers.
    The use of Ansible Automation allows you to create these servers easily, and when
    you need to replicate them for any reason, such as **Disaster Recovery** (**DR**),
    you are able to do so quickly. This allows you to ensure that the configurations
    are copied over correctly every time without errors that can sometimes occur during
    human intervention.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned about IP addressing, DHCP, and DNS. We learned what
    is needed to get you started connecting on the internet and how it applies to
    you and your company. We were able to set up these programs to establish automatic
    DNS and DHCP via your very own servers. This allows you to control how your network
    is set up and how you connect to the intranet or internet. In the next chapter,
    we are going to learn about printers and email. The ability to set up these services
    is crucial to normal enterprise infrastructure and an important part of every
    company. Email servers and print servers are important as they allow the company
    to perform day-to-day business without faltering. I look forward to seeing you
    in the next chapter.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 3: Red Hat Linux 8 – Configuring and Maintaining Applications with Automation
    and a Comprehensive Review with Exam Tips'
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this part, you will learn to set up and maintain applications manually and
    automatically, and we will also provide a comprehensive review and tips and tricks
    to pass the EX358 exam.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: 'This part contains the following chapters:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B18607_06.xhtml#_idTextAnchor076), *Printer and Email – Setting
    up Printers and Email Services on Linux Servers*'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B18607_07.xhtml#_idTextAnchor085), *Databases – Setting up and Working
    with MariaDB SQL Databases*'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B18607_08.xhtml#_idTextAnchor094), *Web Servers and Web Traffic
    – Learning How to Create and Control Traffic*'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B18607_09.xhtml#_idTextAnchor104), *Comprehensive Review and Test
    Exam Questions*'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B18607_10.xhtml#_idTextAnchor123), *Tips and Tricks to Help
    with the Exam*'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
