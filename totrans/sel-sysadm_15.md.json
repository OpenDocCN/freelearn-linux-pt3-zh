["```\n# semanage boolean -l | grep policyload\nsecure_mode_policyload\t(off, off)\n  Boolean to determine whether the system permits loading\n  policy, setting enforcing mode, and changing boolean values.\n  Set this to true and you have to reboot to set it back.\n```", "```\n# getsebool secure_mode_policyload\nsecure_mode_policyload --> off\n```", "```\n# getsebool -a | grep policy\nsecure_mode_policyload --> off\n```", "```\n# sepolicy booleans -b secure_mode_policyload\nsecure_mode_policyload=_(\"Boolean to ...\")\n```", "```\n# cat /sys/fs/selinux/booleans/secure_mode_policyload\n0 0\n```", "```\n# setsebool httpd_can_sendmail on\n```", "```\n# togglesebool httpd_can_sendmail\n```", "```\n# setsebool -P httpd_can_sendmail off\n```", "```\n# semanage boolean -m --on httpd_can_sendmail\n```", "```\n# echo 0 > /sys/fs/selinux/booleans/httpd_can_sendmail\n# getsebool httpd_can_sendmail\nhttpd_can_sendmail --> on pending: off\n```", "```\n# echo 1 > /sys/fs/selinux/commit_pending_bools\n```", "```\n# sesearch -b httpd_can_sendmail -A\nallow httpd_suexec_t bin_t:dir { getattr open search }; [ httpd_can_sendmail ]:True\n...\nallow system_mail_t httpd_t:process sigchld; [ httpd_can_sendmail ]:True\n```", "```\n# sesearch -s system_mail_t -t httpd_t -A\nallow domain domain:key { link search };\nallow system_mail_t httpd_t:fd use; [ httpd_can_sendmail ]:True\n...\n```", "```\n# semodule -l\nabrt\naccountsd\n...\nzosremote\n```", "```\n# semodule --list-modules=full\n100 abrt       pp\n100 accountsd  pp\n...\n400 test       cil\n...\n100 zosremote  pp\n```", "```\n# ls /var/lib/selinux/targeted/active/modules/*\n/var/lib/selinux/targeted/active/modules/100:\nabrt\naccountsd\n...\n/var/lib/selinux/targeted/active/modules/400:\ntest\n```", "```\n# semodule -i screen.pp\n```", "```\n# semodule -X 500 -i test.cil\nlibsemanage.semanage_direct_install_info: Overriding test module at lower priority 400 with module at priority 500.\n```", "```\n# semodule -r test\n```", "```\n# semodule -X 500 -r test\nlibsemanage.semanage_direct_remove_key: test module at priority 400 is now active.\n```", "```\n# semodule -d screen\n```", "```\n# semodule -e screen\n```", "```\ntype=AVC msg=audit(...): avc: denied { write } for pid=58002 comm=\"su\" name=\"btmp\" dev=\"vda1\" ino=4213650 scontext=staff_u:staff_r:staff_t:s0 tcontext=system_u:object_r:faillog_t:s0 tclass=file permissive=0\n```", "```\n# grep btmp /var/log/audit/audit.log | audit2allow\n#============ staff_t ============\nallow staff_t faillog_t:file write;\n```", "```\n# grep btmp /var/log/audit/audit.log | audit2allow -M localpolicy\n************ IMPORTANT ************\nTo make this policy package active, execute:\nsemodule -i localpolicy.pp\n```", "```\n# grep btmp /var/log/audit/audit.log | audit2allow -D -M localpolicy\n```", "```\n# file screen/cil\ncil: bzip2 compressed data, block size = 500k\n# bzcat screen/cil\n(typealias secadm_screen_home_t\n...\n```", "```\n# semodule -l | grep ^custom_\ncustom_staff_su_faillog\n```", "```\n# grep btmp /var/log/audit/audit.log | audit2allow -R\nrequire {\n  type staff_t;\n}\n#============ staff_t ============\nauth_rw_faillog(staff_t)\n```", "```\n# make -f /usr/share/selinux/devel/Makefile custom_staff_su_faillog.pp\nCompiling targeted custom_staff_su_faillog.pp policy package\nrm tmp/custom_staff_su_faillog.mod tmp/custom_staff_su_faillog.mod.fc\n```", "```\n    # checkmodule -M -m -o custom_nonrefpol.mod \\\n      custom_nonrefpol.te\n    ```", "```\n    # semodule_package -o custom_nonrefpol.pp \\\n      -m custom_nonrefpol.mod\n    # semodule_package -o custom_nonrefpol.pp \\\n      -m custom_nonrefpol.mod -f custom_nonrefpol.fc\n    ```", "```\n    $ rpm -qi selinux-policy\n    Name\t\t: selinux-policy\n    Version\t: 3.14.3\n    ...\n    Source RPM\t: selinux-policy-3.14.3-20.el8.src.rpm\n    ...\n    ```", "```\n    ~/rpmbuild directory.\n    ```", "```\n    screen.te file can be found in the ./selinux-policy-contrib-c8ebb*/policy/modules/contrib subdirectory.\n    ```"]