["```\n$ git clone -b scarthgap git://git.openembedded.org/meta-openembedded\n$ git clone -b scarthgap git://git.yoctoproject.org/meta-raspberrypi \n```", "```\n    $ cd poky \n    ```", "```\n    $ cd meta/recipes-core/images \n    ```", "```\n    $ ls -1 core*\n    core-image-base.bb\n    core-image-initramfs-boot.bb\n    core-image-minimal.bb\n    core-image-minimal-dev.bb\n    core-image-minimal-initramfs.bb\n    core-image-minimal-mtdutils.bb\n    core-image-ptest-all.bb\n    core-image-ptest.bb\n    core-image-ptest-fast.bb\n    core-image-tiny-initramfs.bb \n    ```", "```\n    $ cat core-image-base.bb\n    SUMMARY = \"A console-only image that fully supports the target device \\\n    hardware.\"\n    IMAGE_FEATURES += \"splash\"\n    LICENSE = \"MIT\"\n    inherit core-image \n    ```", "```\n    $ cat core-image-minimal.bb\n    SUMMARY = \"A small image just capable of allowing a device to boot.\"\n    IMAGE_INSTALL = \"packagegroup-core-boot ${CORE_IMAGE_EXTRA_INSTALL}\"\n    IMAGE_LINGUAS = \" \"\n    LICENSE = \"MIT\"\n    inherit core-image\n    IMAGE_ROOTFS_SIZE ?= \"8192\"\n    IMAGE_ROOTFS_EXTRA_SPACE:append = \"${@bb.utils.contains(\"DISTRO_FEATURES\", \"systemd\", \" + 4096\", \"\", d)}\" \n    ```", "```\n    $ cat core-image-minimal-dev.bb\n    require core-image-minimal.bb\n    DESCRIPTION = \"A small image just capable of allowing a device to boot and \\\n    is suitable for development work.\"\n    IMAGE_FEATURES += \"dev-pkgs\" \n    ```", "```\n    $ cd ../../classes-recipe \n    ```", "```\n    $ cat core-image.bbclass \n    ```", "```\n    $ cd ../../.. \n    ```", "```\n    $ cd meta-raspberrypi/recipes-core/images \n    ```", "```\n    $ ls -1\n    rpi-test-image.bb \n    ```", "```\n    $ cat rpi-test-image.bb\n    # Base this image on core-image-base\n    include recipes-core/images/core-image-base.bb\n    COMPATIBLE_MACHINE = \"^rpi$\"\n    IMAGE_INSTALL:append = \" packagegroup-rpi-test\" \n    ```", "```\n    $ cd ../packagegroups \n    ```", "```\n    $ cat packagegroup-rpi-test.bb\n    DESCRIPTION = \"RaspberryPi Test Packagegroup\"\n    LICENSE = \"MIT\"\n    LIC_FILES_CHKSUM = \"file://${COMMON_LICENSE_DIR}/MIT;md5=0835ade698e0bcf8506ecda2f7b4f302\"\n    PACKAGE_ARCH = \"${MACHINE_ARCH}\"\n    inherit packagegroup\n    COMPATIBLE_MACHINE = \"^rpi$\"\n    OMXPLAYER  = \"${@bb.utils.contains('MACHINE_FEATURES', 'vc4graphics', '', 'omxplayer', d)}\"\n    RDEPENDS:${PN} = \"\\\n        ${OMXPLAYER} \\\n        bcm2835-tests \\\n        raspi-gpio \\\n        rpio \\\n        rpi-gpio \\\n        pi-blaster \\\n        python3-adafruit-circuitpython-register \\\n        python3-adafruit-platformdetect \\\n        python3-adafruit-pureio \\\n        python3-rtimu \\\n        connman \\\n        connman-client \\\n        wireless-regdb-static \\\n        bluez5 \\\n    \"\n    RRECOMMENDS:${PN} = \"\\\n        ${@bb.utils.contains(\"BBFILE_COLLECTIONS\", \"meta-multimedia\", \"bigbuckbunny-1080p bigbuckbunny-480p bigbuckbunny-720p\", \"\", d)} \\\n        ${MACHINE_EXTRA_RRECOMMENDS} \\\n    \" \n    ```", "```\n    $ cd ../../.. \n    ```", "```\n    $ source poky/oe-init-build-env build-rpi \n    ```", "```\n    $ bitbake-layers add-layer ../meta-openembedded/meta-oe\n    $ bitbake-layers add-layer ../meta-openembedded/meta-python\n    $ bitbake-layers add-layer ../meta-openembedded/meta-networking\n    $ bitbake-layers add-layer ../meta-openembedded/meta-multimedia\n    $ bitbake-layers add-layer ../meta-raspberrypi \n    ```", "```\n    $ bitbake-layers show-layers \n    ```", "```\n    layer              path                                   priority\n    ==================================================================\n    core               /home/frank/poky/meta                         5\n    yocto              /home/frank/poky/meta-poky                    5\n    yoctobsp           /home/frank/poky/meta-yocto-bsp               5\n    openembedded-layer /home/frank/meta-openembedded/meta-oe         5\n    meta-python        /home/frank/meta-openembedded/meta-python     5\n    networking-layer   /home/frank/meta-openembedded/meta-networking 5\n    multimedia-layer   /home/frank/meta-openembedded/meta-multimedia 5\n    raspberrypi        /home/frank/meta-raspberrypi                  9 \n    ```", "```\n    $ cat conf/bblayers.conf \n    ```", "```\n    $ ls ../meta-raspberrypi/conf/machine \n    ```", "```\n    MACHINE = \"raspberrypi4-64\" \n    ```", "```\n    MACHINE ??= \"qemux86-64\" \n    ```", "```\n    LICENSE_FLAGS_ACCEPTED = \"synaptics-killswitch\" \n    ```", "```\n    ERROR: Nothing RPROVIDES 'linux-firmware-rpidistro-bcm43455' \n    ```", "```\n    EXTRA_IMAGE_FEATURES ?= \"debug-tweaks ssh-server-openssh\" \n    ```", "```\n    $ bitbake rpi-test-image \n    ```", "```\n$ ls -l tmp/deploy/images/raspberrypi4-64/rpi-test*wic.bz2 \n```", "```\n    $ ssh root@raspberrypi4-64.local \n    ```", "```\n    root@raspberrypi4-64:~# lsmod | grep 80211\n    cfg80211              753664  1 brcmfmac\n    rfkill                 32768  6 nfc,bluetooth,cfg80211 \n    ```", "```\n    root@raspberrypi4-64:~# connmanctl\n    connmanctl> \n    ```", "```\n    connmanctl> enable wifi\n    Enabled wifi \n    ```", "```\n    connmanctl> agent on\n    Agent registered \n    ```", "```\n    connmanctl> scan wifi\n    Scan completed for wifi \n    ```", "```\n    connmanctl> services\n    *AO Wired ethernet_dca6320a8ead_cable\n     RT-AC66U_B1_38_2G wifi_dca6320a8eae_52542d41433636555f42315f33385f3247_managed_psk\n     RT-AC66U_B1_38_5G wifi_dca6320a8eae_52542d41433636555f42315f33385f3547_managed_psk \n    ```", "```\n    connmanctl> connect wifi_dca6320a8eae_52542d41433636555f42315f33385f3547_managed_psk\n    Agent RequestInput wifi_dca6320a8eae_52542d41433636555f42315f33385f3547_managed_psk\n     Passphrase = [ Type=psk, Requirement=mandatory ]\n    Passphrase? somepassword\n    Connected wifi_dca6320a8eae_52542d41433636555f42315f33385f3547_managed_psk \n    ```", "```\n    connmanctl> services\n    *AO Wired ethernet_dca6320a8ead_cable\n    *AR RT-AC66U_B1_38_5G wifi_dca6320a8eae_52542d41433636555f42315f33385f3547_managed_psk\n     RT-AC66U_B1_38_2G wifi_ca6320a8eae_52542d41433636555f42315f33385f3247_managed_psk \n    ```", "```\n    connmanctl> quit \n    ```", "```\n    root@raspberrypi4-64:~# client_loop: send disconnect: Broken pipe \n    ```", "```\n    $ ssh root@raspberrypi4-64.local \n    ```", "```\n    root@raspberrypi4-64:~# connmanctl\n    connmanctl> \n    ```", "```\n    connmanctl> services\n    *AO RT-AC66U_B1_38_5G wifi_dca6320a8eae_52542d41433636555f42315f33385f3547_managed_psk \n    ```", "```\n    $ ssh root@raspberrypi4-64.local \n    ```", "```\n    root@raspberrypi4-64:~# lsmod | grep bluetooth\n    bluetooth             643072  29 hci_uart,btbcm,bnep,rfcomm\n    ecdh_generic           16384  1 bluetooth\n    rfkill                 32768  7 nfc,bluetooth,cfg80211\n    libaes                 12288  3 aes_arm64,bluetooth,aes_generic \n    ```", "```\n    root@raspberrypi4-64:~# btuart \n    ```", "```\n    root@raspberrypi4-64:~# connmanctl\n    connmanctl> \n    ```", "```\n    connmanctl> enable bluetooth\n    Enabled Bluetooth \n    ```", "```\n    connmanctl> quit \n    ```", "```\n    root@raspberrypi4-64:~# bluetoothctl\n    Agent registered\n    [CHG] Controller DC:A6:32:0A:8E:AF Pairable: yes \n    ```", "```\n    [bluetooth]# default-agent\n    Default agent request successful \n    ```", "```\n    [bluetooth]# power on\n    Changing power on succeeded \n    ```", "```\n    [bluetooth]# show\n    Controller DC:A6:32:0A:8E:AF (public)\n    Name: BlueZ 5.72\n    Alias: BlueZ 5.72\n    Class: 0x00200000\n    Powered: yes\n    Discoverable: no\n    DiscoverableTimeout: 0x000000b4\n    Pairable: yes \n    ```", "```\n    [bluetooth]# scan on\n    Discovery started\n    [CHG] Controller DC:A6:32:0A:8E:AF Discovering: yes\n    …\n    [NEW] Device DC:08:0F:03:52:CD Frank's iPhone\n    … \n    ```", "```\n    [bluetooth]# scan off\n    …\n    [CHG] Controller DC:A6:32:0A:8E:AF Discovering: no\n    Discovery stopped \n    ```", "```\n    [bluetooth]# pair DC:08:0F:03:52:CD\n    Attempting to pair with DC:08:0F:03:52:CD\n    [CHG] Device DC:08:0F:03:52:CD Connected: yes\n    Request confirmation\n    [agent] Confirm passkey 936359 (yes/no): \n    ```", "```\n    [agent] Confirm passkey 936359 (yes/no): yes\n    [CHG] Device DC:08:0F:03:52:CD ServicesResolved: yes\n    [CHG] Device DC:08:0F:03:52:CD Paired: yes\n    Pairing successful\n    [CHG] Device DC:08:0F:03:52:CD ServicesResolved: no\n    [CHG] Device DC:08:0F:03:52:CD Connected: no \n    ```", "```\n    [bluetooth]# connect DC:08:0F:03:52:CD\n    Attempting to connect to DC:08:0F:03:52:CD\n    [CHG] Device DC:08:0F:03:52:CD Connected: yes\n    Connection successful\n    [CHG] Device DC:08:0F:03:52:CD ServicesResolved: yes\n    Authorize service \n    ```", "```\n    [agent] Authorize service 0000110e-0000-1000-8000-\n    00805f9b34fb (yes/no): yes\n    [Frank's iPhone]# \n    ```", "```\n    $ source poky/oe-init-build-env build-rpi \n    ```", "```\n    $ bitbake-layers create-layer ../meta-gattd\n    NOTE: Starting bitbake server...\n    Add your new layer with 'bitbake-layers add-layer ../meta-gattd' \n    ```", "```\n    $ cd ../meta-gattd \n    ```", "```\n    $ tree\n    .\n    ├── conf\n    │   └── layer.conf\n    ├── COPYING.MIT\n    ├── README\n    └── recipes-example\n        └── example\n            └── example_0.1.bb \n    ```", "```\n    $ mv recipes-example recipes-gattd \n    ```", "```\n    $ cd recipes-gattd\n    $ mv example gattd \n    ```", "```\n    $ cd gattd\n    $ mv example_0.1.bb gattd_0.1.bb \n    ```", "```\n    $ cat gattd_0.1.bb \n    ```", "```\n    $ cd ../../.. \n    ```", "```\n    $ git clone -b scarthgap https://github.com/fvasquez/meta-gattd.git \n    ```", "```\n    $ source poky/oe-init-build-env build-rpi \n    ```", "```\n    $ bitbake-layers add-layer ../meta-gattd \n    ```", "```\n    $ bitbake-layers show-layers \n    ```", "```\n    CORE_IMAGE_EXTRA_INSTALL += \"gattd\" \n    ```", "```\n    $ bitbake rpi-test-image \n    ```", "```\n    $ source poky/oe-init-build-env build-mine \n    ```", "```\n    MACHINE ?= \"qemuarm64\" \n    ```", "```\n    $ bitbake-layers create-layer ../meta-mine \n    ```", "```\n    $ bitbake-layers add-layer ../meta-mine \n    ```", "```\n    $ bitbake-layers show-layers \n    ```", "```\nlayer              path                                   priority\n==================================================================\ncore               /home/frank/poky/meta                         5\nyocto              /home/frank/poky/meta-poky                    5\nyoctobsp           /home/frank/poky/meta-yocto-bsp               5\nmeta-mine          /home/frank/meta-mine                         6 \n```", "```\n$ devtool build-image core-image-full-cmdline \n```", "```\n$ runqemu qemuarm64 nographic\n<…>\nPoky (Yocto Project Reference Distro) 5.0.4 qemuarm64 ttyAMA0\nqemuarm64 login: root\nroot@qemuarm64:~# \n```", "```\n    $ source poky/oe-init-build-env build-mine \n    ```", "```\n    $ devtool add https://github.com/containers/validator/releases/download/0.2.2/validator-0.2.2.tar.xz \n    ```", "```\n    $ devtool edit-recipe validator \n    ```", "```\n    FILES:${PN} += \"${datadir}\"\n    do_install:append() {\n        rm -rf ${D}/usr/lib/dracut\n    } \n    ```", "```\n    $ devtool build validator \n    ```", "```\n    $ devtool deploy-target validator root@192.168.7.2 \n    ```", "```\n    root@qemuarm64:~# validator --help \n    ```", "```\n    $ devtool undeploy-target validator root@192.168.7.2 \n    ```", "```\n    $ devtool finish -f validator ../meta-mine \n    ```", "```\n    $ devtool reset validator \n    ```", "```\n    $ bitbake-layers remove-layer workspace\n    $ bitbake-layers remove-layer meta-mine \n    ```", "```\n    $ git clone -b scarthgap https://github.com/openembedded/meta-openembedded.git ../meta-openembedded \n    ```", "```\n    $ bitbake-layers add-layer ../meta-openembedded/meta-oe\n    $ bitbake-layers add-layer ../meta-mine \n    ```", "```\n    $ bitbake-layers show-layers \n    ```", "```\n    layer              path                                   priority\n    ==================================================================\n    core               /home/frank/poky/meta                         5\n    yocto              /home/frank/poky/meta-poky                    5\n    yoctobsp           /home/frank/poky/meta-yocto-bsp               5\n    openembedded-layer /home/frank/meta-openembedded/meta-oe         5\n    meta-mine          /home/frank/meta-mine                         6 \n    ```", "```\n    IMAGE_INSTALL:append = \" onig\" \n    ```", "```\n    $ devtool build-image core-image-full-cmdline \n    ```", "```\n    $ runqemu qemuarm64 nographic \n    ```", "```\n    $ devtool modify jq \n    ```", "```\n    $ devtool build jq \n    ```", "```\n    $ devtool deploy-target jq root@192.168.7.2 \n    ```", "```\n    $ ssh-keygen -f \"/home/frank/.ssh/known_hosts\" -R \"192.168.7.2\" \n    ```", "```\n    $ devtool undeploy-target jq root@192.168.7.2 \n    ```", "```\n    $ devtool finish jq ../meta-mine \n    ```", "```\n    $ devtool reset jq \n    ```", "```\n    $ bitbake-layers remove-layer workspace\n    $ bitbake-layers remove-layer meta-mine \n    ```", "```\n    $ bitbake-layers add-layer ../meta-openembedded/meta-python\n    $ bitbake-layers add-layer ../meta-mine \n    ```", "```\n    $ bitbake-layers show-layers \n    ```", "```\n    layer              path                                   priority\n    ==================================================================\n    core               /home/frank/poky/meta                         5\n    yocto              /home/frank/poky/meta-poky                    5\n    yoctobsp           /home/frank/poky/meta-yocto-bsp               5\n    openembedded-layer /home/frank/meta-openembedded/meta-oe         5\n    meta-python        /home/frank/meta-openembedded/meta-python     5\n    meta-mine          /home/frank/meta-mine                         6 \n    ```", "```\n    $ bitbake -s | grep ^python3 \n    ```", "```\n    IMAGE_INSTALL:append = \" python3 python3-mypy\" \n    ```", "```\n    $ devtool build-image core-image-full-cmdline \n    ```", "```\n    $ runqemu qemuarm64 nographic \n    ```", "```\n    $ devtool upgrade python3-mypy --version 1.12.1 \n    ```", "```\n    $ devtool edit-recipe python3-mypy \n    ```", "```\n    $ devtool build python3-mypy \n    ```", "```\n    $ devtool deploy-target python3-mypy root@192.168.7.2 \n    ```", "```\n    $ ssh-keygen -f \"/home/frank/.ssh/known_hosts\" -R \"192.168.7.2\" \n    ```", "```\n    root@qemuarm64:~# mypy --version\n    mypy 1.12.1 (compiled: no) \n    ```", "```\n    $ devtool undeploy-target python3-mypy root@192.168.7.2 \n    ```", "```\n    rm -rf workspace/sources/python3-mypy/build\n    rm -rf workspace/sources/python3-mypy/mypy/__pycache__ \n    ```", "```\n    cd workspace/sources/python3-mypy\n    git add mypy.egg-info/SOURCES.txt\n    git commit -m \"add setup cfg to egg SOURCES\" \n    ```", "```\n    $ cd ../../..\n    $ devtool finish python3-mypy ../meta-mine \n    ```", "```\n    $ devtool reset python3-mypy \n    ```", "```\n    $ source poky/oe-init-build-env build-rpi \n    ```", "```\n    $ bitbake-layers remove-layer meta-gattd \n    ```", "```\n    #CORE_IMAGE_EXTRA_INSTALL += \"gattd\" \n    ```", "```\n    $ bitbake-layers create-layer ../meta-mackerel \n    ```", "```\n    $ bitbake-layers add-layer ../meta-mackerel \n    ```", "```\nDISTRO_NAME = \"Mackerel (Mackerel Embedded Linux Distro)\"\nDISTRO_VERSION = \"0.1\" \n```", "```\nDISTRO_FEATURES: Add software support for these features.\nDISTRO_EXTRA_RDEPENDS: Add these packages to all images.\nDISTRO_EXTRA_RRECOMMENDS: Add these packages if they exist.\nTCLIBC: Select this version of the C standard library. \n```", "```\nPACKAGE_CLASSES ?= \"package_ipk\" \n```", "```\n$ source poky/oe-init-build-env build-rpi \n```", "```\nMACHINE = \"raspberrypi4-64\" \n```", "```\n#PACKAGE_CLASSES ?= \"package_rpm\" \n```", "```\nEXTRA_IMAGE_FEATURES ?= \"debug-tweaks ssh-server-openssh package-management\" \n```", "```\nDISTRO = \"mackerel\" \n```", "```\n$ bitbake -c clean rpi-test-image\n$ bitbake rpi-test-image \n```", "```\n$ ls tmp-glibc/deploy/images/raspberrypi4-64/rpi-test-image*wic.bz2 \n```", "```\n$ ssh root@raspberrypi4-64.local \n```", "```\n$ ssh-keygen -f \"/home/frank/.ssh/known_hosts\" -R \"raspberrypi4-64.local\" \n```", "```\nroot@raspberrypi4-64:~# which opkg\n/usr/bin/opkg \n```", "```\n    $ source poky/oe-init-build-env build-rpi \n    ```", "```\n    $ bitbake curl \n    ```", "```\n    $ bitbake package-index \n    ```", "```\n    $ ls tmp-glibc/deploy/ipk \n    ```", "```\n    $ cd tmp-glibc/deploy/ipk \n    ```", "```\n    $ sudo python3 -m http.server --bind 192.168.1.69 80\n    [sudo] password for frank:\n    Serving HTTP on 192.168.1.69 port 80\n    (http://192.168.1.69:80/) ... \n    ```", "```\n    $ ssh root@raspberrypi4-64.local \n    ```", "```\n    src/gz all http://192.168.1.69/all\n    src/gz cortexa72 http://192.168.1.69/cortexa72\n    src/gz raspberrypi4_64 http://192.168.1.69/raspberrypi4_64\n    dest root /\n    option lists_dir /var/lib/opkg/lists \n    ```", "```\n    root@raspberrypi4-64:~# opkg update\n    Downloading http://192.168.1.69/all/Packages.gz.\n    Updated source 'all'.\n    Downloading http://192.168.1.69/aarch64/Packages.gz.\n    Updated source 'aarch64'.\n    Downloading http://192.168.1.69/raspberrypi4_64/Packages.gz.\n    Updated source 'raspberrypi4_64'. \n    ```", "```\n    root@raspberrypi4-64:~# curl \n    ```", "```\n    root@raspberrypi4-64:~# opkg install curl\n    Installing libcurl4 (7.69.1) on root\n    Downloading http://192.168.1.69/aarch64/\n    libcurl4_7.69.1-r0_aarch64.ipk.\n    Installing curl (7.69.1) on root\n    Downloading http://192.168.1.69/aarch64/curl_7.69.1-r0_aarch64.ipk.\n    Configuring libcurl4.\n    Configuring curl. \n    ```", "```\n    root@raspberrypi4-64:~# curl\n    curl: try 'curl --help' for more information\n    root@raspberrypi4-64:~# which curl\n    /usr/bin/curl \n    ```", "```\nroot@raspberrypi4-64:~# opkg list-upgradable \n```", "```\nroot@raspberrypi4-64:~# opkg upgrade \n```"]