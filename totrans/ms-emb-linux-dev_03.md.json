["```\n$ sudo apt-get install autoconf automake bison bzip2 cmake flex g++ gawk gcc gettext git gperf help2man libstdc++6 libtool libtool-bin make patch texinfo unzip wget xz-utils \n```", "```\n$ gcc -dumpmachine\nx86_64-linux-gnu \n```", "```\n$ mipsel-unknown-linux-gnu-gcc -dumpmachine\nmipsel-unknown-linux-gnu \n```", "```\n$ wget https://toolchains.bootlin.com/downloads/releases/toolchains/aarch64/tarballs/aarch64--glibc--stable-2024.02-1.tar.bz2 \n```", "```\n$ bzip2 -d aarch64--glibc--stable-2024.02-1.tar.bz2\n$ tar -xvf aarch64--glibc--stable-2024.02-1.tar\n<…> \n```", "```\n$ PATH=~/aarch64--glibc--stable-2024.02-1/bin:$PATH \n```", "```\n#include <stdio.h>\n#include <stdlib.h>\nint main (int argc, char *argv[])\n{\n    printf (\"Hello, World!\\n\");\n    return 0;\n} \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc helloworld.c -o helloworld \n```", "```\n$ file helloworld\nhelloworld: ELF 64-bit LSB pie executable, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, for GNU/Linux 3.7.0,  not stripped \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc --version\naarch64-buildroot-linux-gnu-gcc.br_real (Buildroot 2021.11-11272-ge2962af) 12.3.0\nCopyright (C) 2022 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc -v\nUsing built-in specs.\nCOLLECT_GCC=/home/frank/aarch64--glibc--stable-2024.02-1/bin/aarch64-buildroot-linux-gnu-gcc.br_real\nCOLLECT_LTO_WRAPPER=/home/frank/aarch64--glibc--stable-2024.02-1/bin/../libexec/gcc/aarch64-buildroot-linux-gnu/12.3.0/lto-wrapper\nTarget: aarch64-buildroot-linux-gnu\nConfigured with: ./configure --prefix=/builds/buildroot.org/toolchains-builder/build/aarch64--glibc--stable-2024.02-1 --sysconfdir=/builds/buildroot.org/toolchains-builder/build/aarch64--glibc--stable-2024.02-1/etc --enable-static --target=aarch64-buildroot-linux-gnu --with-sysroot=/builds/buildroot.org/toolchains-builder/build/aarch64--glibc--stable-2024.02-1/aarch64-buildroot-linux-gnu/sysroot --enable-__cxa_atexit --with-gnu-ld --disable-libssp --disable-multilib --disable-decimal-float --enable-plugins --enable-lto --with-gmp=/builds/buildroot.org/toolchains-builder/build/aarch64--glibc--stable-2024.02-1 --with-mpc=/builds/buildroot.org/toolchains-builder/build/aarch64--glibc--stable-2024.02-1 --with-mpfr=/builds/buildroot.org/toolchains-builder/build/aarch64--glibc--stable-2024.02-1 --with-pkgversion='Buildroot 2021.11-11272-ge2962af' --with-bugurl=http://bugs.buildroot.net/ --without-zstd --disable-libquadmath --disable-libquadmath-support --enable-tls --enable-threads --without-isl --without-cloog --with-abi=lp64 --with-cpu=cortex-a53 --enable-languages=c,c++,fortran --with-build-time-tools=/builds/buildroot.org/toolchains-builder/build/aarch64--glibc--stable-2024.02-1/aarch64-buildroot-linux-gnu/bin --enable-shared --enable-libgomp\nThread model: posix\nSupported LTO compression algorithms: zlib\ngcc version 12.3.0 (Buildroot 2021.11-11272-ge2962af)\n<…> \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc -mcpu=cortex-a72 helloworld.c -o helloworld \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc --target-help \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc -print-sysroot\n/home/frank/aarch64--glibc--stable-2024.02-1/aarch64-buildroot-linux-gnu/sysroot \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc myprog.c -o myprog -lm \n```", "```\n$ aarch64-buildroot-linux-gnu-readelf -a myprog | grep \"Shared library\"\n0x0000000000000001 (NEEDED)             Shared library: [libm.so.6]\n0x0000000000000001 (NEEDED)             Shared library: [libc.so.6] \n```", "```\n$ aarch64-buildroot-linux-gnu-readelf -a myprog | grep \"program interpreter\"\n      [Requesting program interpreter: /lib/ld-linux-aarch64.so.1] \n```", "```\n${CROSS_COMPILE}readelf -a $1 | grep \"program interpreter\"\n${CROSS_COMPILE}readelf -a $1 | grep \"Shared library\" \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc -static helloworld.c -o helloworld-static \n```", "```\n$ ls -l helloworld*\n-rwxrwxr-x 1 frank frank   8928 Apr 28 23:34 helloworld\n-rw-rw-r-- 1 frank frank    123 Apr 28 23:30 helloworld.c\n-rwxrwxr-x 1 frank frank 718472 Apr 28 23:33 helloworld-static \n```", "```\n$ export SYSROOT=$(aarch64-buildroot-linux-gnu-gcc -print-sysroot)\n$ cd $SYSROOT\n$  ls -l usr/lib/libc.a\n-rw-r--r-- 1 frank frank 5551484 Mar  3  2024 usr/lib/libc.a \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc -c test1.c\n$ aarch64-buildroot-linux-gnu-gcc -c test2.c\n$ aarch64-buildroot-linux-gnu-ar rc libtest.a test1.o test2.o\n$ ls -l\ntotal 24\n-rw-rw-r--  1 frank frank 2392 Nov  9 09:28 libtest.a\n-rw-rw-r--  1 frank frank  116 Nov  9 09:26 test1.c\n-rw-rw-r--  1 frank frank 1080 Nov  9 09:27 test1.o\n-rw-rw-r--  1 frank frank  121 Nov  9 09:26 test2.c\n-rw-rw-r--  1 frank frank 1088 Nov  9 09:27 test2.o \n```", "```\n$ cd MELD/Chapter02/library\n$ tree\n.\n├── hello-arm\n│   ├── hello-arm.c\n│   └── Makefile\n├── inc\n│   └── testlib.h\n├── shared\n│   ├── Makefile\n│   └── testlib.c\n└── static\n    ├── Makefile\n    └── testlib.c \n```", "```\n$ cd static\n$ CC=aarch64-buildroot-linux-gnu-gcc make\naarch64-buildroot-linux-gnu-gcc -Wall -g -I../inc -c testlib.c\nar rc libtest.a testlib.o \n```", "```\n$ cd ../hello-arm\n$ CC=aarch64-buildroot-linux-gnu-gcc make hello-arm-static\naarch64-buildroot-linux-gnu-gcc -c -Wall -I../inc -o hello-arm.o hello-arm.c\naarch64-buildroot-linux-gnu-gcc -o hello-arm-static hello-arm.o -L../static -ltest \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc -fPIC -c test1.c\n$ aarch64-buildroot-linux-gnu-gcc -fPIC -c test2.c\n$ aarch64-buildroot-linux-gnu-gcc -shared -o libtest.so test1.o test2.o \n```", "```\n$ cd MELD/Chapter02/library\n$ cd shared\n$ CC=aarch64-buildroot-linux-gnu-gcc make\naarch64-buildroot-linux-gnu-gcc -Wall -g -fPIC -I../inc -c testlib.c\naarch64-buildroot-linux-gnu-gcc -shared -o libtest.so testlib.o \n```", "```\n$ cd ../hello-arm\n$ CC=aarch64-buildroot-linux-gnu-gcc make hello-arm-shared\naarch64-buildroot-linux-gnu-gcc -c -Wall -I../inc -o hello-arm.o hello-arm.c\naarch64-buildroot-linux-gnu-gcc -o hello-arm-shared hello-arm.o -L../shared -ltest\n$ ~/MELD/list-libs hello-arm-shared\n      [Requesting program interpreter: /lib/ld-linux-aarch64.so.1]\n 0x0000000000000001 (NEEDED)             Shared library: [libtest.so]\n 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6] \n```", "```\n$ export LD_LIBRARY_PATH=/opt/lib:/opt/usr/lib \n```", "```\n$ readelf -a /usr/lib/x86_64-linux-gnu/libjpeg.so.8.2.2 | grep SONAME\n0x000000000000000e (SONAME)    Library soname: [libjpeg.so.8] \n```", "```\n$ make CROSS_COMPILE=aarch64-buildroot-linux-gnu- \n```", "```\n$ export CROSS_COMPILE=aarch64-buildroot-linux-gnu-\n$ make \n```", "```\n$ ./configure\n$ make\n$ sudo make install \n```", "```\n$ CC=aarch64-buildroot-linux-gnu-gcc ./configure \n```", "```\n<…>\nchecking for suffix of executables...\nchecking whether we are cross compiling... configure: error: in '/home/frank/sqlite-autoconf-3440000':\nconfigure: error: cannot run C compiled programs.\nIf you meant to cross compile, use '--host'.\nSee 'config.log' for more details \n```", "```\n$ CC=aarch64-buildroot-linux-gnu-gcc ./configure --host=aarch64-buildroot-linux-gnu \n```", "```\n$ CC=aarch64-buildroot-linux-gnu-gcc ./configure --host=aarch64-buildroot-linux-gnu --prefix=/usr \n```", "```\n$ wget http://www.sqlite.org/2023/sqlite-autoconf-3440000.tar.gz\n$ tar xf sqlite-autoconf-3440000.tar.gz\n$ cd sqlite-autoconf-3440000 \n```", "```\n$ CC=aarch64-buildroot-linux-gnu-gcc ./configure --host=aarch64-buildroot-linux-gnu --prefix=/usr \n```", "```\n$ make \n```", "```\n$ make DESTDIR=$(aarch64-buildroot-linux-gnu-gcc -print-sysroot) install \n```", "```\n$ aarch64-buildroot-linux-gnu-gcc -lsqlite3 sqlite-test.c -o sqlite-test \n```", "```\ncat $(aarch64-buildroot-linux-gnu-gcc -print-sysroot)/usr/lib/pkgconfig/sqlite3.pc\n# Package Information for pkg-config\nprefix=/usr\nexec_prefix=${prefix}\nlibdir=${exec_prefix}/lib\nincludedir=${prefix}/include\nName: SQLite\nDescription: SQL database engine\nVersion: 3.44.0\nLibs: -L${libdir} -lsqlite3\nLibs.private: -lm -ldl -lpthread\nCflags: -I${includedir} \n```", "```\n$ pkg-config sqlite3 --libs --cflags\nPackage sqlite3 was not found in the pkg-config search path.\nPerhaps you should add the directory containing 'sqlite3.pc' to the PKG_CONFIG_PATH environment variable\nNo package 'sqlite3' found \n```", "```\n$ export PKG_CONFIG_LIBDIR=$(aarch64-buildroot-linux-gnu-gcc -print-sysroot)/usr/lib/pkgconfig\n$ pkg-config sqlite3 --libs --cflags\n-lsqlite3 \n```", "```\n$ export PKG_CONFIG_LIBDIR=$(aarch64-buildroot-linux-gnu-gcc -print-sysroot)/usr/lib/pkgconfig\n$ aarch64-buildroot-linux-gnu-gcc $(pkg-config sqlite3 --cflags --libs) sqlite-test.c -o sqlite-test \n```", "```\n$ cmake .\n$ make\n$ sudo make install \n```", "```\n$ mkdir build\n$ cd build\n$ cmake .. \n```", "```\n$ make\n$ sudo make install \n```", "```\n$ cmake .. -D CMAKE_INSTALL_PREFIX=../build \n```", "```\n$ cmake .. -D CMAKE_C_COMPILER=\"/home/frank/aarch64--glibc--stable-<version>/bin/aarch64-buildroot-linux-gnu-gcc\" \n```", "```\ncmake_minimum_required (VERSION 3.0)\nproject (Dummy)\nadd_executable(dummy dummy.c)\nfind_package (SQLite3)\ntarget_include_directories(dummy PRIVATE ${SQLITE3_INCLUDE_DIRS})\ntarget_link_libraries (dummy PRIVATE ${SQLITE3_LIBRARIES}) \n```"]