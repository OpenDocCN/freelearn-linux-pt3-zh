["```\n# sudo apt install mariadb-server mariadb-client\n```", "```\n# sudo yum install mariadb mariadb-server\n```", "```\n[servers]\nubuntu-testhost\ncentos-testhost\n```", "```\n---\n- name: Install MariaDB Server on Ubuntu or Debian\n  apt:\n    name: \"{{ item }}\"\n    state: present\n  loop:\n    - mariadb-server\n    - mariadb-client\n  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'\n\n- name: Install MariaDB Server on CentOS or RHEL\n  yum:\n    name: \"{{ item }}\"\n    state: present\n  loop:\n    - mariadb-server\n    - mariadb\n  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'\n```", "```\n---\n- name: Install MariaDB\n  hosts: all\n  become: yes\n\n  roles:\n    - installmariadb\n```", "```\n---\n- name: Uninstall MariaDB Server on Ubuntu or Debian\n  apt:\n    name: \"{{ item }}\"\n    state: absent\n  loop:\n    - mariadb-server\n    - mariadb-client\n  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'\n\n- name: Uninstall MariaDB Server on CentOS or RHEL\n  yum:\n    name: \"{{ item }}\"\n    state: absent\n  loop:\n    - mariadb-server\n    - mariadb\n  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'\n```", "```\n---\n- name: Install Duplicati beta on Ubuntu\n  apt:\n    deb: https://github.com/duplicati/duplicati/releases/download/v2.0.4.23-2.0.4.23_beta_2019-07-14/duplicati_2.0.4.23-1_all.deb\n  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'\n\n- name: Install Duplicati beta on CentOS or RHEL\n  yum:\n    name: https://github.com/duplicati/duplicati/releases/download/v2.0.4.23-2.0.4.23_beta_2019-07-14/duplicati-2.0.4.23-2.0.4.23_beta_20190714.noarch.rpm\n    state: present\n  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'\n```", "```\n---\n- name: download virtualmin install script\n  get_url:\n   url: http://software.virtualmin.com/gpl/scripts/install.sh\n   dest: /root/install.sh\n   mode: 0755\n\n- name: virtualmin install (takes around 10 mins) you can see progress using: tail -f /root/virtualmin-install.log\n  shell: /root/install.sh --force --hostname {{ inventory_hostname }} --minimal --yes\n  args:\n    chdir: /root\n```", "```\nbind-address       = 127.0.0.1\n```", "```\n---\n- name: Reconfigure MariaDB Server to listen for external connections\n  lineinfile:\n    path: /etc/mysql/mariadb.conf.d/50-server.cnf\n    regexp: '^bind-address\\s+='\n    line: 'bind-address = 0.0.0.0'\n    insertafter: '^\\[mysqld\\]'\n    state: present\n\n- name: Restart MariaDB to pick up configuration changes\n  service:\n    name: mariadb\n    state: restarted\n```", "```\n#bind-address = 0.0.0.0\n```", "```\nbind-address=127.0.0.1\n bind-address = 127.0.0.1\n```", "```\n# The MariaDB/MySQL tools read configuration files in the following order:\n# 1\\. \"/etc/mysql/mariadb.cnf\" (this file) to set global defaults,\n# 2\\. \"/etc/mysql/conf.d/*.cnf\" to set global options.\n# 3\\. \"/etc/mysql/mariadb.conf.d/*.cnf\" to set MariaDB-only options.\n# 4\\. \"~/.my.cnf\" to set user-specific options.\n```", "```\n[mysqld]\nbind-address = 127.0.0.1\n```", "```\n---\n- name: Disable root logins over SSH\n  lineinfile:\n    dest: /etc/ssh/sshd_config\n    regexp: \"^PermitRootLogin\"\n    line: \"PermitRootLogin no\"\n    state: present\n```", "```\n# Override Ansible roles\n  PermitRootLogin yes\n```", "```\n^\\s*PermitRootLogin\\s+\n```", "```\nChallengeResponseAuthentication no\nUsePAM yes\nX11Forwarding no\nPrintMotd no\nAcceptEnv LANG LC_*\nSubsystem sftp /usr/lib/openssh/sftp-server\nPasswordAuthentication no\nPermitRootLogin no\n```", "```\n---\n- name: Copy SSHd configuration to target host\n  copy:\n    src: files/sshd_config\n    dest: /etc/ssh/sshd_config\n    owner: root\n    group: root\n    mode: 0644\n\n- name: Restart SSH daemon\n  service:\n    name: ssh\n    state: restarted\n```", "```\nroles/\n└── securesshd\n    ├── files\n    │   └── sshd_config\n    └── tasks\n        └── main.yml\n```", "```\n---\n- name: Copy SSHd configuration to target host\n  copy:\n    src: files/sshd_config\n    dest: /etc/ssh/sshd_config\n    owner: root\n    group: root\n    mode: 0644\n  notify:\n    - Restart SSH daemon\n```", "```\n---\n- name: Restart SSH daemon\n  service:\n    name: ssh\n    state: restarted\n```", "```\nroles/\n└── securesshd\n    ├── files\n    │   └── sshd_config\n    ├── handlers\n    │   └── main.yml\n    └── tasks\n        └── main.yml\n```", "```\n---\n- name: Copy SSHd configuration to target host\n  copy:\n    src: files/sshd_config\n    dest: /etc/ssh/sshd_config\n    owner: root\n    group: root\n    mode: 0644\n  notify:\n    - Restart SSH daemon\n\n- name: Perform an additional modification\n  lineinfile:\n    path: /etc/ssh/sshd_config\n    regexp: '^\\# Configured by Ansible'\n    line: '# Configured by Ansible on {{ inventory_hostname }}'\n    insertbefore: BOF\n    state: present\n  notify:\n    - Restart SSH daemon\n```", "```\n# Configured by Ansible {{ inventory_hostname }}\nChallengeResponseAuthentication no\nUsePAM yes\nX11Forwarding no\nPrintMotd no\nAcceptEnv LANG LC_*\nSubsystem sftp /usr/lib/openssh/sftp-server\nPasswordAuthentication no\nPermitRootLogin no\n```", "```\n---\n- name: Copy SSHd configuration to target host\n  template:\n    src: templates/sshd_config.j2\n    dest: /etc/ssh/sshd_config\n    owner: root\n    group: root\n    mode: 0644\n  notify:\n    - Restart SSH daemon\n```", "```\nroles\n└── securesshd\n    ├── handlers\n    │   └── main.yml\n    ├── tasks\n    │   └── main.yml\n    └── templates\n        └── sshd_config.j2\n```", "```\n[server]\n[mysqld]\nuser = mysql\npid-file = /var/run/mysqld/mysqld.pid\nsocket = /var/run/mysqld/mysqld.sock\nport = {{ mariadb_port }}\nbasedir = /usr\ndatadir = /var/lib/mysql\ntmpdir = /tmp\nlc-messages-dir = /usr/share/mysql\nskip-external-locking\nbind-address = {{ mariadb_bind_address }}\n```", "```\nkey_buffer_size = 16M\nmax_allowed_packet = 16M\nthread_stack = 192K\nthread_cache_size = 8\nmyisam_recover_options = BACKUP\nquery_cache_limit = 1M\nquery_cache_size = 16M\nlog_error = /var/log/mysql/error.log\nexpire_logs_days = 10\nmax_binlog_size = {{ mariadb_max_binlog_size }}\ncharacter-set-server = utf8mb4\ncollation-server = utf8mb4_general_ci\n[embedded]\n[mariadb]\n[mariadb-10.1]\n```", "```\n[client-server]\n!includedir /etc/mysql/conf.d/\n!includedir /etc/mysql/mariadb.conf.d/\n```", "```\n---\n- name: Copy MariaDB configuration files to host\n  template:\n    src: {{ item.src }}\n    dest: {{ item.dest }}\n    owner: root\n    group: root\n    mode: 0644\n  loop:\n    - { src: 'templates/mariadb.cnf.j2', dest: '/etc/mysql/mariadb.cnf' }\n    - { src: 'templates/50-server.cnf.j2', dest: '/etc/mysql/mariadb.conf.d/50-server.cnf' }\n  notify:\n    - Restart MariaDB Server\n```", "```\n---\n- name: Restart MariaDB Server\n  service:\n    name: mariadb\n    state: restarted\n```", "```\n---\nmariadb_bind_address: \"127.0.0.1\"\nmariadb_port: \"3306\"\nmariadb_max_binlog_size: \"100M\"\n```", "```\nroles/\n└── configuremariadb\n    ├── defaults\n    │   └── main.yml\n    ├── handlers\n    │   └── main.yml\n    ├── tasks\n    │   └── main.yml\n    └── templates\n        ├── 50-server.conf.j2\n        └── mariadb.cnf.j2\n```", "```\n[dbservers]\nubuntu-testhost\n\n[dbservers:vars]\nmariadb_port=3307\nmariadb_bind_address=0.0.0.0\nmariadb_max_binlog_size=250M\n```"]