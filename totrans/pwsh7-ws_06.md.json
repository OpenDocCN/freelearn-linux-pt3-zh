["```\nGet-Help *FormatData\n```", "```\nGet-Process pwsh | Format-List *\n```", "```\nGet-Process pwsh | Format-List -Property Name, Id, CPU, Responding\n```", "```\nGet-Process | Format-Table -Property Name, Id, CPU, Responding\n```", "```\nGet-Process | Format-Table -Property Name, Id, CPU, Path, Modules\nGet-Process | Format-Table -Property Name, Id, CPU, Path, Modules -Wrap\n```", "```\nGet-ChildItem | Format-Wide\nGet-ChildItem | Format-Wide -Column 5\nGet-ChildItem | Format-Wide -AutoSize\n```", "```\nGet-Process | Out-File -FilePath C:\\temp\\poshbook\\procsRaw.txt\nGet-Process | Format-Table -Property Name, Id, CPU, Path, Modules | Out-File -FilePath C:\\temp\\poshbook\\procsNoWrap.txt\nGet-Process | Format-Table -Property Name, Id, CPU, Path, Modules -Wrap | Out-File -FilePath C:\\temp\\poshbook\\procsWrap.txt\n```", "```\nGet-Process | Format-Table -Property Name, Id, CPU, Path, Modules -Wrap | Out-File C:\\temp\\poshbook\\procsWrap.csv\n```", "```\nGet-Process | ConvertTo-Csv\n```", "```\nGet-Process w* | ConvertTo-Csv | Out-File C:\\temp\\poshbook\\ProcessesConvertTo.csv\n```", "```\nGet-Process | Export-Csv C:\\temp\\poshbook\\ProcessesExport.csv\n```", "```\n    DateTime objects, which in some \"DateTime\"; \"Monday, August 6, 2022 17:55\".\n    ```", "```\nGet-Date |Export-Clixml -Path C:\\temp\\poshbook\\date.xml\n```", "```\nGet-Date | ConvertTo-Html | Out-File -FilePath C:\\temp\\poshbook\\date.html\n```", "```\nTable {\n    color: blue ;\n    text-align: center;\n    background-color: bisque;\n}\nBody {\n    background-color: cadetblue;\n    font-family: 'Trebuchet MS';\n    color: yellow;\n}\n```", "```\n$params = @{\n    As = 'List'\n    Title = 'My Date Page'\n    Body = 'Here is my Date'\n    CssUri = 'Style.css'\n}\nGet-Date | ConvertTo-Html @params | Out-File C:\\temp\\poshbook\\FancyDate.Html\nC:\\temp\\poshbook\\FancyDate.html\n```", "```\nGet-PSProvider\n```", "```\nSet-Location Env:\n```", "```\nNew-PsDrive -Name MyFiles -Root /home/nickp -PSProvider FileSystem\n```", "```\n    Copy-Item lets us make a copy of an item in a different location:\n\n    ```", "```\n    Rename-Item lets us change the name of an item:\n\n    ```", "```\n    Get-Item lists the item and its value; it doesn’t get the contents. Most of the time, we want to use Get-ChildItem instead when we’re working in the filesystem, but if we wanted to know the value of an environment variable, then we would use this cmdlet. Try this. Type the following:\n\n    ```", "```\n\n    ```", "```\n\n    ```", "```\n\n    ```", "```\n    Invoke-Item: Performs the default action on an item. For instance, if it’s an executable file, it will run it. If it is a TXT file, it will open the file in the default text editor:\n\n    ```", "```\n\n    ```", "```\nGet-Process | Export-Csv processes.csv\n$procs = Import-Csv processes.csv\n$procs.name\n```", "```\n$procs | Get-Member\n```", "```\n$procs[1]\n```", "```\nGet-Date | Export-Clixml -Path date.xml\nNotepad date.xml\n$date = (Import-Clixml -Path date.xml)\n$date | Get-Member\n$date\n```", "```\nGet-Process | Export-Clixml processes.xml\n$XmlProcs =Import-Clixml processes.xml\n```", "```\n$XmlProcs | Get-Member\n```", "```\n$cred = Get-Credential\n```", "```\n$cred | Export-Clixml Credential.xml\n```", "```\n$newcred = Import-Clixml Credential.xml\n```", "```\n    $TheTrial  =  Get-Content -Path .\\thetrial.txt -Raw$TheTrial = get-content -path .\\thetrial.txt -Raw\n    ```", "```\n    $TrialWords = $TheTrial.Split(\" \")\n    ```", "```\n    $TrialWords.Length\n    ```", "```\n    $GroupedWords = $TrialWords | Group-Object\n    ```", "```\n    $GroupedWords = $TrialWords | Group-Object | Sort-Object Count\n    ```", "```\n    \"I love PowerShell\" string to a new file in the directory you are working in.\n    ```", "```\n    Import-Clixml: Element 'Objs' with namespace name 'http://schemas.microsoft.com/powershell/2004/04' was not found.\n    ```"]