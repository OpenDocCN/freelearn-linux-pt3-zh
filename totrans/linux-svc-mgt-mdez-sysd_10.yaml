- en: '*Chapter 9*: Setting System Parameters'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we'll look at how to use `systemd` utilities to set certain
    parameters that you used to have to set by either editing configuration files
    or creating symbolic links. We'll also look at the services that get involved
    when you use these utilities.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Setting the locale parameter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting time and time zone parameters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting the hostname and machine information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you're ready, let's jump in!
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The technical requirements are the same as in the previous chapters. So, fire
    up your Ubuntu server and AlmaLinux virtual machines and follow along.
  prefs: []
  type: TYPE_NORMAL
- en: 'Check out the following link to see the Code in Action video: [https://bit.ly/3xKA7K0](https://bit.ly/3xKA7K0)'
  prefs: []
  type: TYPE_NORMAL
- en: Setting the locale parameter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Computers are used all over the world, by people of many different cultures
    and languages. (I know that you already knew that, but I'm telling you anyway.)
    Fortunately, all major operating systems have ways to accommodate users of almost
    all languages on Earth. On Unix and Linux systems, the `locale` set of parameters
    helps us out with that. Let's start by taking a closer look at it.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the locale
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '`locale` is a set of parameters that define lots of things that could be important
    to a user. There are parameters for the user''s preferred language, character
    encoding, currency formats, and several other things.'
  prefs: []
  type: TYPE_NORMAL
- en: Normally, `locale` is set when you install the operating system, and you won't
    have to mess around with it afterward. Linux installers don't have a screen that
    specifically says *Choose your locale*, but they do have a screen for you to choose
    a keyboard layout and another for you to choose your time zone. In my case, I
    would choose the US English keyboard layout and the US Eastern time zone. From
    that, the installer can figure out that I want to use a locale with settings for
    the United States.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a few differences in how `locale` is implemented on Debian/Ubuntu
    and Red Hat systems. One difference is in where `locale` is defined. On Red Hat-type
    systems, such as my Alma virtual machine, and on the openSUSE host machine that
    I''m using to write this, it''s set in the `/etc/locale.conf` file, as we see
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Inside the `locale.conf` file, we only see this one line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: So, `locale` is set by the `LANG=` parameter, which consists of two parts. The
    first part (`en_US`) defines the language and region that I want to use, while
    the second part (`UTF-8`) defines the character set that I want to use.
  prefs: []
  type: TYPE_NORMAL
- en: Okay, the language and region part are self-explanatory. But what's a character
    set? Well, it's just the set of characters that the operating system can display.
    A character set consists of alphanumeric characters, punctuation characters, and
    other miscellaneous special characters. Just like everything else on a computer,
    a character – also known as a *code point* – consists of a combination of ones
    and zeros. A character set defines the combinations of ones and zeros that make
    up each character. Early characters sets, such as the old EBCDIC and ASCII sets,
    were limited in the number of characters that they could display. Making things
    worse is that the design of the EBCDIC set contains flaws that make it hard for
    programmers to use. UTF-8 was designed to address these shortcomings.
  prefs: []
  type: TYPE_NORMAL
- en: 'On Ubuntu Server, `locale` is set in the `/etc/default/locale` file. *If* the
    Ubuntu installer worked correctly – I''ll comment more about that in a few moments
    – the file should look something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: The only difference is that in the Ubuntu file, the `locale` specification isn't
    surrounded by double quotes as it is on the Alma machine.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, let''s take a look at what''s in the `locale` setting. We''ll do that
    with the `locale` utility, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'To see what these settings are all about, you''ll need to consult a `locale`
    man page. The only catch is that there are several `locale` man pages, as you
    can see here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'We want the number `5` man page in this case. Open it by doing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Only because I can read your mind, I already know what your next question is.
    *Exactly what do these locale settings affect?* Ah, I'm glad you asked. (And I
    hope it doesn't seem too creepy that I can read your mind.)
  prefs: []
  type: TYPE_NORMAL
- en: The various `locale` settings affect how utilities such as `awk`, `grep`, and
    `sort` display their output. On desktop machines, they might be used by the display
    manager for login purposes. Finally, as I'm about to demonstrate, they're also
    used by certain shell programming functions. I'll demonstrate this on the Alma
    machine since it already has several different locales available for use. The
    Bash shell's `printf` function provides us with the perfect demo. (Note that you
    might have to modify this demo a bit for your particular locale.)
  prefs: []
  type: TYPE_NORMAL
- en: 'On the command line of the Alma machine, let''s see how `printf` works with
    the default `en_US.UTF-8` locale set by trying to print out a decimal number:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'This works because in the US, the period (`.`) is the decimal point symbol.
    In most of Europe, though, the comma (`,`) is the decimal point symbol. We can
    change just one individual `locale` setting, so let''s temporarily change the
    `LC_NUMERIC` setting to a European one, just to see what happens:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'This time, `printf` gives us an invalid number error. That''s because it''s
    now expecting to see a European number format. If we try this again with a comma,
    it should work. Let''s see if it does:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Yeah, it works like a champ. And don't worry about that `LC_NUMERIC` setting
    – it will go away as soon as you log out of the terminal window.
  prefs: []
  type: TYPE_NORMAL
- en: 'So far, we''ve only used the legacy `locale` utility, which has been around
    forever. To bring this back to the `systemd` topic, let''s use `localectl` to
    see what the default `locale` setting is:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: It works, but it doesn't give us as much information as the legacy `locale`
    tool.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's learn how to change the default locale.
  prefs: []
  type: TYPE_NORMAL
- en: Changing the default locale on the Alma machine
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We'll continue using the Alma machine for this since it already has several
    locales installed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before you change the default locale, you need to see whether the locale you
    want is installed on your system. You can do that with either the `locale -a`
    command or with the `localectl list-locales` command. Either way, you''ll get
    the same output, which will look something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'There are two ways to change the `locale` setting. You could just open the
    `/etc/locale.conf` file in your text editor and change the setting, but where''s
    the fun in that? Instead, let''s use our handy-dandy `localectl` tool to do this,
    like so:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: So, I've set the machine to Canadian English.
  prefs: []
  type: TYPE_NORMAL
- en: 'Curiously, the double quotes that were there are now gone. So, I''m guessing
    that they aren''t really needed. Also, note that this setting won''t take effect
    until we log out of the machine and then log back in. Once we do, we''ll see that
    the locale setting has changed, but that the keymap setting hasn''t:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'The `localectl list-keymaps` command shows us what keymap settings are available.
    Let''s say that I want to change the keymap to Canadian, to match my locale. I''ll
    do it like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'After logging out and logging back in again, the `localectl` status will look
    something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Whenever you use `localectl` to change any settings, it''s `systemd-localed.service`
    that does the work. I can''t show you the entire `systemd-localed.service` file
    due to formatting reasons, so I''ll just show you the relevant part:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: I'd like for you to note two things here. First, in the `[Service]` section,
    note the `BusName=org.freedesktop.locale1` line. There's no `Type=dbus` line,
    but that's okay. Just having a `BusName=` line automatically makes this a `dbus`
    type of service. Also, note that there's no `[Install]` section, which makes this
    a static type of service that we can't enable. Instead, any time that you use
    `localectl` to change a setting, `localectl` will start the service by sending
    it a `dbus` message.
  prefs: []
  type: TYPE_NORMAL
- en: Once you've seen what you want to see, feel free to go back to your normal settings.
  prefs: []
  type: TYPE_NORMAL
- en: Next, let's look at how the process is different on Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: Changing the default locale on Ubuntu
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Ubuntu comes with a variety of `locale` definitions, but you have to build
    them before you can use them. In the `/etc/locale.gen` file, you''ll see a list
    of locales that you can build. Here''s what the top part of the file looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '*If* the Ubuntu installer worked correctly, you should see that all but one
    of the `locale` listings in the file have been commented out. The one that isn''t
    commented out is the one that was built on your system. On the Ubuntu machine
    that I showed you previously, the `en_US.UTF-8` locale is the only one that isn''t
    commented out, as we see here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: So, this locale is the only one that was built.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, remember, I said that this would be the case *if* the Ubuntu installer
    worked properly. This virtual machine is the second Ubuntu machine that I set
    up for this chapter, and the installer did work properly in this instance. When
    I set up the first Ubuntu virtual machine, the installer did *not* work properly,
    and no locales were built. When I look at the `/etc/default/locale` file on it,
    I see this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'In this `/etc/locale.gen` file, all the locale listings are commented out,
    which tells me that no locales were built. So, this Ubuntu machine defaults to
    the generic `C` locale, which may or may not work in all situations. To change
    that, I''ll open the `/etc/locale.gen` file in my text editor and remove the comment
    symbol at the front of the `en_US.UTF-8 UTF-8` line. Next, I''ll generate the
    locale, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Finally, I''ll set the default locale and keymap settings the same way that
    I did on the Alma machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'After I logged out and logged back in, everything was as it should be, as we
    see here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Now, I have to say that I have no idea why the Ubuntu installer didn't set the
    locale correctly for this machine. All I know is that with Ubuntu, I've come to
    expect an occasional bit of weirdness.
  prefs: []
  type: TYPE_NORMAL
- en: Okay, I think that that about covers it for `locale`. Now, let's talk about
    setting time and timezone information.
  prefs: []
  type: TYPE_NORMAL
- en: Setting time and timezone parameters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Back in the Stone Age of computing, maintaining accurate time on a computer
    wasn't all that important. To set the time on my old 8088-powered Sanyo PC clone,
    I just typed in whatever my watch said. That wasn't the most accurate way of doing
    things, but it didn't matter. The only real reason to set the computer time at
    all was to have somewhat accurate timestamps on the files that I created.
  prefs: []
  type: TYPE_NORMAL
- en: Nowadays, accurate timekeeping on computers is vitally important for a lot of
    reasons. Fortunately, we now have the `systemd` suite comes with the `timedatectl`
    utility and `systemd-timedated.service` to help us out. In this chapter, we'll
    talk about `timedatectl`, but we'll save discussing `systemd-timedated.service`
    until [*Chapter 17*](B17491_17_Final_NM_ePub.xhtml#_idTextAnchor253), *Understanding
    systemd and Bootloaders*.
  prefs: []
  type: TYPE_NORMAL
- en: 'To see the status of your machine''s timekeeping, just use `timedatectl`, as
    I show you here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '`Local time` is the time for my timezone, which is **Eastern Daylight Time**
    (**EDT**). This is the time that''s set in the operating system.'
  prefs: []
  type: TYPE_NORMAL
- en: '`Universal time` (**UTC**) is the time in Greenwich, England, which is the
    timezone that''s used as a worldwide reference. (UTC used to be known as **Greenwich
    Mean Time**, or **GMT**.)'
  prefs: []
  type: TYPE_NORMAL
- en: '`RTC`, which stands for Real-Time Clock, is the time that''s set in the computer''s
    hardware clock. You can see that the RTC time nearly matches the UTC time. Of
    the two, UTC will normally be more accurate, because it periodically fetches the
    current time from time servers that are either on the Internet or the local network.
    Somewhat less periodically, the operating system updates the RTC time from UTC.
    It is possible to configure the RTC time to update from local time, but that will
    cause problems with setting timezones and knowing when to switch to and from Daylight
    Savings Time.'
  prefs: []
  type: TYPE_NORMAL
- en: We can also see that the system clock is synchronized, that the **NTP service**
    is active, and that RTC has *not* been set to local time.
  prefs: []
  type: TYPE_NORMAL
- en: In the `timedatectl` man page, you'll find directions on how to manually change
    the system's time. Years ago, when I first got into Linux, I used to have to do
    this all the time, because the older NTP services wouldn't automatically set the
    time if the machine's clock was more than a few minutes off. The modern NTP services
    work much better. Now, as long as an NTP server is available when you boot the
    machine, the NTP service will set the time properly, regardless of how far off
    the machine's clock is. So, there's a good chance that you'll never need to set
    the time manually.
  prefs: []
  type: TYPE_NORMAL
- en: 'You also might not ever need to set the timezone manually, because that''s
    normally set up when you install the operating system. However, there might be
    times when you will, such as if you ever have to move a server from one timezone
    to another. To do this, you''ll have to look at the list of available timezones,
    like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'That''s a very long list, so let''s use our good friend `grep` to narrow it
    down. Let''s say that I''m only interested in US timezones. My `grep` filter will
    look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Okay; that doesn''t narrow things down as much as I''d like since `America`
    covers timezones in both North and South America. Also, instead of choosing the
    actual name of a timezone, we have to choose a city that''s in the desired timezone.
    In my case, even though I''m down in the southeast corner of Georgia, USA, I have
    to choose `America/New_York` for my zone because New York just happens to be here
    in the Eastern timezone. Let''s say that for some crazy reason, I''ve decided
    to move to the west coast. To change the timezone on my computer, I would do:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'The status would now look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: So, I'm now set up for Pacific Daylight Savings Time.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `timedatectl` man page, you''ll see a couple of commands that work on
    Ubuntu but don''t work on Alma. That''s because Ubuntu is configured to use `systemd-timesyncd.service`
    as its timekeeping service, and Alma is configured to use `chronyd`. On an Ubuntu
    machine, you can view the status of the timekeeping service like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: That pretty much covers it for timekeeping. Let's move on to setting `hostname`
    and machine information.
  prefs: []
  type: TYPE_NORMAL
- en: Setting the hostname and machine information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Setting a proper hostname on a computer is very useful in the business world.
    It allows the computer to be registered in a `IPv6` address?) Before we look at
    how to set this information, let's learn how to view it. (Note that this hostname
    can be automatically registered either by using **Dynamic Domain Name Service**
    (**DDNS**) or by using orchestration tools such as Puppet, Chef, or Ansible.)
  prefs: []
  type: TYPE_NORMAL
- en: Viewing the information
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'A computer''s hostname is set in the `/etc/hostname` file, as we see here on
    my Alma machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: The installers for most Linux operating systems allow you to set your own custom
    hostname during system installation. I didn't do that for this virtual machine,
    so it just uses the default `localhost.localdomain`. In this case, we're using
    a `localhost` part is the actual hostname, while the `localdomain` part is the
    network domain to which the computer belongs. On a for-real network, the domain
    part would be the same for every computer on the network, and the `hostname` part
    would be unique for each computer. On a home network, or any other time that a
    whole FQDN isn't required, you could just have a hostname without a domain name.
  prefs: []
  type: TYPE_NORMAL
- en: 'On an old SysV machine, all you have is just the hostname or FQDN that''s been
    set in the `/etc/hostname` file. With `systemd`, there''s a whole lot more. On
    the Alma machine, let''s look at the extra information that the `hostnamectl`
    command gives us:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'Here''s the breakdown:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Static hostname`: This is the hostname or FQDN that''s set in the `/etc/hostname`
    file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Icon name`: Certain graphical applications will represent a computer as an
    icon. `Icon name` is the name that will show up with the icon for this computer.
    I haven''t set `Icon name` on this virtual machine, so it just defaults to `computer-vm`.
    (The system automatically detected that this is a virtual machine, which explains
    the `vm` part.)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Chassis`: This denotes the type of computing device that we''re using. I didn''t
    set this one either, so it just defaults to `vm`, for *virtual machine*. (Most
    of the time, `systemd` can automatically detect the correct `Chassis` type.)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Machine ID`: This hexadecimal number is a unique number that gets assigned
    to the computer either during system installation or the first bootup. According
    to the `machine-id` man page, this ID number should be treated as confidential
    information, and should never be exposed to an untrusted network. This ID number
    is stored in the `/etc/machine-id` file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Boot ID`: This number changes every time you boot the machine. The `hostnamectl`
    command pulls this number from the `/proc/sys/kernel/random/boot_id` file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Virtualization`: This line only shows up for virtual machines. I''m running
    this virtual machine under Oracle VirtualBox, so the parameter shows up here as
    `oracle`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Operating System`: Information about the operating system comes from the `/etc/os-release`
    file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CPE OS Name`: This is the name of the operating system in **Common Platform
    Enumeration** (**CPE**) format. (I won''t go into the details about CPE here,
    but you can read about it by following the link in the *Further reading* section,
    at the end of this chapter.)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Kernel`: This is the version of the running Linux kernel. You can see the
    same information by using the `uname -r` command.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Architecture`: This shows the type of CPU that''s in the computer. You can
    see the same information by using the `uname -m` command.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Just for fun, let''s look at the `hostnamectl` output from my host machine,
    which is running openSUSE 15.2:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'There are a few differences here that I want you to note. First, there''s no
    `Static hostname` value. Unlike the AlmaLinux installer, the openSUSE installer
    doesn''t put anything into the `/etc/hostname` file if you don''t assign a hostname
    during installation. The file is there, but there''s nothing in it, as you can
    see here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: Instead of a `Static hostname` value, we have a `Transient hostname` value.
    This `Transient hostname` value is a dynamic hostname that's maintained by the
    Linux kernel. It's normally pulled in from the `Static hostname` property that's
    set in the `/etc/hostname` file. If nothing is in the `hostname` file, `Transient
    hostname` will default to `localhost.localdomain`, unless a hostname is assigned
    by either a DHCP or mDNS server.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, `Icon name` and `Chassis` reflect the fact that this is a desktop machine,
    running on bare metal. (Today, that bare metal is a 2009 vintage Hewlett-Packard
    workstation, running with a pair of AMD Opteron quad-core processors. It's old,
    but it still gets the job done.) Again, the system automatically detected the
    correct `Chassis` value, just as it did with the virtual machine.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: To see the other available `Chassis` types, look at the `machine-info` man page.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we've *viewed* how to view the hostname and machine information, let's
    learn how to set it.
  prefs: []
  type: TYPE_NORMAL
- en: Setting the information
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are three types of hostnames on `systemd` machines, and you've already
    seen two of them. In addition to `Static hostname` and `Transient hostname`, there's
    also `Pretty hostname`. To explain the *pretty* concept, let's look at the criteria
    for `Static hostname` and `Transient hostname`.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the man page for the `hostname` file, which you can access with the `man
    5 hostname` command, you''ll see the criteria for creating hostnames. Here''s
    a breakdown of what it says:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Requirement**: The hostname cannot be more than 64 characters in length.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Recommendations**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only use characters from the old 7-bit ASCII character set. (See the link in
    the *Further reading* section to see which characters belong to this set.)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: All letters should be in lowercase.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Do not have spaces or dots in the hostname. (The only dots should be between
    the name of the host and the domain name, and between the two parts of the domain
    name.)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Use a format that's compatible with DNS domain name labels.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: So, you're somewhat limited with how you create traditional hostnames. Now,
    with `Pretty hostname`, you can create a hostname that's more human-friendly,
    such as `Donnie's Computer`. (Okay, I didn't use a lot of imagination with that
    one, but you get the point.)
  prefs: []
  type: TYPE_NORMAL
- en: 'When you use `hostnamectl` to set a hostname, the default is to set all three
    `hostname` types at once. For example, let''s say that I want my computer to be
    `Donnie''s Computer`. Here''s the command that I would use:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s view the `hostnamectl` information:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Here, you can see that `hostnamectl` automatically converted `Pretty hostname`
    into the proper format for `Static hostname`, except that it still allows uppercase
    letters. After I log out and log back in, the new `Static hostname` value will
    show up in the command prompt, which will look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Okay, that''s great for a home computer, but it''s not so good for a business
    network. This time, let''s create an FQDN that''s suitable for use with DNS. Let''s
    say that my local network has been set up as the `tevault.com` domain and that
    I want to name this computer `development-1`. My command to create the FQDN would
    look like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Use `hostnamectl` again, and you''ll see that `Pretty hostname` is now gone:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'After I log out and log back in again, I''ll see the proper DNS-friendly hostname
    in the command prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'If I just want to set a `Pretty hostname` value, I can do it like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'There are several other things that you can set with `hostnamectl`, which you
    can see on the `machine-info` man page. The `hostnamectl` man page shows you the
    commands for setting these extra parameters. For example, let''s set the location
    of this virtual machine to my current location, which is the teeming metropolis
    of Saint Marys, Georgia:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'The location will now show up in the output of `hostnamectl`. Also, the first
    time you use `hostnamectl` to add any of these additional parameters, it will
    create the `/etc/machine-info` file, which wasn''t there previously. Here''s what
    mine looks like now that I''ve added a `Pretty hostname` value and location:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: Cool. Saint Marys, Georgia, is now world-famous.
  prefs: []
  type: TYPE_NORMAL
- en: 'As we''ve already seen with `localectl`, using `hostnamectl` to change a parameter
    invokes a dbus-type service. In this case, it''s `systemd-hostnamed.service`.
    Here''s what it looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_9.1_B17491.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9.1 – The systemd-hostnamed.service file
  prefs: []
  type: TYPE_NORMAL
- en: Note that a lot of security-related parameters have been set, which gives this
    service pretty much the same protection as a good mandatory access control system
    such as SELinux. The `ProtectHome=yes` line and the `ProtectSystem=strict` line
    make most of this machine's filesystem inaccessible to this service, but the `ReadWritePaths=/etc`
    line at the bottom provides an exception. The `ReadWritePaths=/etc` line allows
    the service to read from or write to files in the `/etc/` directory. (`systemd-localed.service`,
    which we looked at in the *Changing the default locale on the Alma machine* section,
    is set up the same way, but I neglected to point that out at the time.)
  prefs: []
  type: TYPE_NORMAL
- en: Okay, I think that pretty much wraps it up for this chapter. Let's summarize
    and then move on.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As always, we've seen some cool stuff in this chapter. We started by looking
    at what locales are and how to set the default locale on a `systemd` system. Then,
    we saw how to set the time and timezones, and finished up by setting hostnames
    and machine information. In the next chapter, we'll give your brain a bit of a
    rest by looking at something a bit easier – that is, we'll look at the various
    ways to shut down or reboot your system. I'll see you there!
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which of the following commands shows you what locales are installed on your
    system?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`systemctl list-locales`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`locale list-locales`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`localectl list-locales`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`localectl -a`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What type of service gets invoked when you use either `localectl` or `hostnamectl`
    to set a parameter?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`dbus`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`oneshot`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`notify`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`forking`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What happens if your computer has nothing in its `hostname` file?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It sets the default `Static hostname` value to `localhost.localdomain` or to
    whatever it might get from a local DHCP or mDNS server.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: The computer will have no hostname.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: It sets `Pretty hostname` to `localhost.localdomain`.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: It sets the default `Transient hostname` value to `localhost.localdomain` or
    to whatever it might get from a local DHCP or mDNS server.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What time does the computer's hardware clock normally show?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Local time
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: UTC time
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Answers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: C
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: D
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: B
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To learn more about the topics that were covered in this chapter, take a look
    at the following resources:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Setting the locale:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.tecmint.com/set-system-locales-in-linux/](https://www.tecmint.com/set-system-locales-in-linux/)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Defining the locale and language settings:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.shellhacks.com/linux-define-locale-language-settings/](https://www.shellhacks.com/linux-define-locale-language-settings/)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Eric S. Raymond''s Jargon File entry for EBCDIC:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://www.catb.org/jargon/html/E/EBCDIC.html](http://www.catb.org/jargon/html/E/EBCDIC.html)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'The ASCII character set:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://www.asciitable.com/](http://www.asciitable.com/)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Common Platform Enumeration** (**CPE**):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/cpe](https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/cpe)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Configuring hostnames:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/ch-configure_host_names#sec-Recommended_Naming_Practices](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/ch-configure_host_names#sec-Recommended_Naming_Practices)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
