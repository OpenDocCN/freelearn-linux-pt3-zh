- en: '*Chapter 2*: Choosing Your Distribution and Release Model'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第2章*：选择你的发行版和发布模型'
- en: When we talk about **Linux system administration**, we probably jump quickly
    to wondering what flavor of Linux we are going to be talking about. This is typically
    the first topic that pops into our minds when having even a casual conversation
    with a business owner or someone in another, non-technical department. What we
    rarely spend much time thinking about is release and support models and how these
    play into our planning, risk, and expenditure models.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们谈论**Linux系统管理**时，我们可能会迅速跳到我们将要讨论的Linux版本问题。这通常是我们与企业主或其他非技术部门人员进行即使是随意交谈时首先想到的话题。我们很少花时间考虑的是发布和支持模型，以及它们如何影响我们的规划、风险和支出模型。
- en: A quarter century ago we used to be educated regularly about the merits, caveats,
    and machinations of different software licensing models. Today terms such as *open-source*
    are used constantly and no one is surprised to hear them but like with all things
    technical as the adoption rate of a term increases the general understanding of
    it likely decreases. Therefore, we need to investigate some nuances of licensing
    as this plays a role in how an operating system will interact with the outside
    world, at least from a legal perspective.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 四分之一世纪前，我们曾经定期接受关于不同软件许可模型的优缺点和运作方式的教育。今天，像*开源*这样的术语被广泛使用，几乎没有人对这些术语感到惊讶，但正如所有技术领域的事物一样，随着一个术语的普及率增加，其一般理解可能会降低。因此，我们需要探讨一些许可的细微差别，因为它在操作系统如何与外界互动（至少从法律角度来看）中起着重要作用。
- en: 'In this chapter we are going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要主题：
- en: Understanding Linux in Production
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 理解生产环境中的Linux
- en: Linux Licensing
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Linux许可
- en: Getting to Know Key Vendors and Products
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 了解主要厂商和产品
- en: 'Grokking Releases and Support Models: Rapid, Long Term, and Rolling'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 理解发布和支持模型：快速发布、长期支持和滚动更新
- en: Choosing Your Distribution
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你的发行版
- en: Understanding Linux in production
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解生产环境中的Linux
- en: '**Linux** is used in every aspect of business and production systems today.
    Simply by being a Linux-based system actually tells us incredibly little about
    what a device might be doing or how it might be used. Unlike macOS, which essentially
    guarantees that the use case is either a desktop or a laptop end user device,
    or Windows Server, which all but assures us that a system is an infrastructure
    or line of business (LOB) server. Having a system be built on Linux gives us very
    little to go on when looking to determine the intended use of that system. Linux
    is used on servers, in virtualization, in desktops, laptops, tablets, routers,
    firewalls, phones, IoT devices, appliances, and more. Linux is everywhere. And
    Linux is doing just about everything that there is to do. There are almost no
    roles that Linux does not cover, at least some of the time.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**Linux**如今被广泛应用于商业和生产系统的各个方面。仅仅因为是基于Linux的系统，实际上并不能告诉我们设备可能在做什么或如何使用。与macOS不同，macOS基本上可以保证其用途是桌面设备或笔记本电脑，或者与Windows
    Server不同，Windows Server几乎可以保证系统是一个基础设施或业务线（LOB）服务器。系统基于Linux构建并不能为我们提供很多线索来判断该系统的预期用途。Linux被应用于服务器、虚拟化、桌面、笔记本电脑、平板电脑、路由器、防火墙、手机、物联网设备、电器等多个领域。Linux无处不在，几乎承担着任何可以做的事情。几乎没有Linux没有覆盖的角色，至少在某些时候是这样。'
- en: For the context of a book on **Linux Administration**, we are going to assume
    that we are talking about Linux in the standard *GNU*/*Linux* vein using the industry
    standard set of baseline tools, and in multi-user environments. We will focus
    almost entirely on the idea of Linux on servers but will consider that end user
    devices such as desktops and laptops are valid hardware candidates as well. Much
    of what we discuss will, of course, apply to things such as Android devices or
    even to non-Linux systems. Linux itself is an almost unlimitedly large topic,
    but there is a generally accepted *this is what people mean by Linux* idea that
    we will work with. So, we aren't talking about Android, Chrome OS, and so on.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的**Linux管理**上下文中，我们假设讨论的是基于标准的*GNU*/*Linux*体系结构，使用行业标准的基础工具集，并且是在多用户环境中。我们几乎会专注于Linux在服务器上的应用，但也会考虑到桌面和笔记本电脑等终端用户设备作为有效的硬件候选。我们讨论的许多内容，当然，也适用于安卓设备或甚至非Linux系统。Linux本身是一个几乎无限广泛的主题，但有一个广泛接受的*人们理解的Linux*概念，我们将基于这个概念进行讨论。因此，我们不会讨论Android、Chrome
    OS等。
- en: Linux itself is a *kernel*, not an operating system. But as a kernel, it has
    formed the backbone (and only a small overall common component) of several related
    **UNIX** operating systems.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Linux本身是一个*内核*，而不是操作系统。但作为内核，它已经形成了多个相关**UNIX**操作系统的核心部分（且只是一个小的公共组成部分）。
- en: Is Linux UNIX?
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux是UNIX吗？
- en: You'll likely hear people say that Linux isn't UNIX at some point in your Linux
    career. And to some degree, they are correct, but not in the way that they likely
    mean. Linux is only a kernel, one piece of a UNIX operating system. But operating
    systems built on Linux are, by and large, UNIX - at least according to the most
    definitive possible source, Dennis Ritche, one of the creators of UNIX. Linux
    implements both the UNIX approach and ecosystem, as well as the UNIX interfaces.
    It is a UNIX, just as FreeBSD and others are. UNIX is both a standard and a trademark.
    But the two are not necessarily maintained together. The waters are a bit muddy
    here. But standard Linux systems, any that we will be discussing in this book,
    implement the UNIX standard (known as POSIX originally and now a super set of
    POSIXs, known as SUS). So, they are a UNIX variant or derivative, just as Dennis
    Ritchie said that they were way back in 1999\. He said the same thing about the
    BSD operating system family, as well.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的Linux学习过程中，你可能会听到人们说Linux不是UNIX。从某种程度上来说，他们是对的，但并不是他们通常所说的那种方式。Linux只是一个内核，是UNIX操作系统的一部分。但基于Linux构建的操作系统在大多数情况下是UNIX——至少根据最权威的来源，Dennis
    Ritche，他是UNIX的创始人之一。Linux实现了UNIX的方法和生态系统，以及UNIX接口。它是UNIX，就像FreeBSD和其他操作系统一样。UNIX既是一个标准，也是一个商标。但这两者并不一定是一起维护的。这里的水有点混乱。不过，标准的Linux系统，我们在本书中讨论的所有系统，都实现了UNIX标准（最初称为POSIX，现在是POSIX的超集，称为SUS）。因此，它们是UNIX的变体或衍生物，正如Dennis
    Ritchie在1999年所说的那样。他当时也对BSD操作系统家族说了同样的话。
- en: 'But the story is a little better than that. While most operating systems built
    from Linux have never bothered to pay for any kind of UNIX certification, one
    of them recently did: EulerOS by Huawei which is built from CentOS, which in turn,
    is built from Fedora. Only EulerOS as a product officially carries the UNIX trademark
    designation, but it shows that the broader ecosystem is meeting the specifications.
    The nature of the certification process is that it makes it easy and obvious to
    certify large, proprietary, commercially backed UNIX projects such AIX or macOS.
    But in the Linux space where each distribution counts as a unique operating system
    and often defining exactly which OS is unique from another is a bit of a gray
    area (Is Kubuntu covered under Ubuntu? Is Ubuntu covered under Debian?) and where
    projects are often volunteer efforts that have no revenue source to cover a meaningless
    certification process it would be all but impossible to certify them through a
    complicated and expensive certification process, especially when that process
    has no value. In reality, the Linux and BSD ecosystems have demonstrated that
    the utility of the UNIX certification process has run its course and the process
    is now detrimental to the industry and serves no purpose. At the end of the day,
    being compatible with UNIX is worthless, it is Linux and BSD that other systems
    want to maintain compatibility with.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 但事情比这稍微复杂一些。虽然大多数基于Linux构建的操作系统从未花费过任何费用来获得UNIX认证，但其中一个最近做到了：华为的EulerOS，它基于CentOS，而CentOS又基于Fedora。只有EulerOS作为产品正式拥有UNIX商标认证，但它显示出更广泛的生态系统正在符合这些规范。认证过程的特点是，它使得像AIX或macOS这样的商业化支持的大型专有UNIX项目容易且显而易见地获得认证。但在Linux领域，由于每个发行版都算作一个独立的操作系统，而且通常很难明确区分一个操作系统与另一个操作系统的不同（比如Kubuntu是否包含在Ubuntu内？Ubuntu是否包含在Debian内？），而且许多项目通常是志愿者的工作，无法提供收入来支付一个无意义的认证过程，因此几乎不可能通过一个复杂且昂贵的认证过程对其进行认证，尤其是当这个过程没有价值时。实际上，Linux和BSD生态系统已经证明了UNIX认证过程的实用性已经走到了尽头，且该过程对行业有害，已无任何意义。最终，与UNIX兼容是毫无价值的，Linux和BSD才是其他系统想要保持兼容的对象。
- en: Microsoft demonstrated this last point beautifully in the last few years when
    their traditional UNIX compatibility layer called Windows SFU (Windows Subsystem
    for UNIX) was rebuilt and renamed WSL (Windows Subsystem for Linux) and intentionally
    made fully compatible with Linux in order to be able to run Linux-based operating
    systems on top of the Windows kernel. Microsoft, once the largest maker of traditional
    UNIX systems with their Xenix product now sees only Linux compatibility as valuable.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 微软在过去几年中完美地展示了这一点，他们将其传统的 UNIX 兼容层 Windows SFU（Windows Subsystem for UNIX）重新构建并更名为
    WSL（Windows Subsystem for Linux），并故意使其与 Linux 完全兼容，以便能够在 Windows 内核上运行基于 Linux
    的操作系统。微软，曾是传统 UNIX 系统最大的制造商之一，其 Xenix 产品如今只看重 Linux 兼容性。
- en: If there ever truly was an operating system war, UNIX won through and through.
    And within UNIX, Linux won.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果曾经真的发生过操作系统之战，那么 UNIX 完全赢得了胜利。在 UNIX 之中，Linux 胜出。
- en: So, we are continuously challenged to define exactly what we mean by Linux.
    Everyone has their own definition whether intentionally or simply by not understanding
    either the relationship between a kernel and an operating system, or by not understanding
    the role of Linux distributions. It does not take too long working with Linux
    in business before you will get a feel for what people mean when they are discussing
    it, however. Somehow while not having any formal definition we have managed to
    arrive at some sort of standard in the industry. When saying a system is or is
    not Linux, we know not to include *Android* or *Chrome OS* when talking about
    administration, but to include them when we are talking about Linux adoption on
    the desktop. There is a lot of nuance and there is no reliable way to know completely
    for sure when someone means one thing or another and we can assume that over time
    these definitions will morph as they are not actually based on anything solid
    and are not accurate.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们不断被挑战，去精确定义我们所说的 Linux 到底是什么。每个人都有自己的定义，无论是有意的，还是仅仅因为没有理解内核与操作系统之间的关系，或者没有理解
    Linux 发行版的作用。事实上，在企业中使用 Linux 不久后，你会对人们讨论时所指的 Linux 有个大致的了解。然而，尽管没有正式的定义，我们已经设法在业内达成了一种标准。当我们说一个系统是
    Linux 还是不是 Linux 时，知道在谈论系统管理时不包括*Android* 或 *Chrome OS*，但在讨论 Linux 在桌面端的采用时要包括它们。这个概念充满了细微差别，没有可靠的方式来完全确定别人是指这个意思还是那个意思，我们可以假设，随着时间推移，这些定义会逐渐变化，因为它们实际上并没有基于任何坚实的基础，且并不准确。
- en: Because of this strange approach to Linux naming conventions where nothing is
    formal and we use contextual clues to determine what is meant, we actually use
    phrases such as *switching from Chrome OS to a Linux desktop*, which should make
    no sense as Chrome OS is as much Linux as any other Linux-based operating system
    is.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 正因为这种奇怪的 Linux 命名惯例——没有正式定义，我们依靠上下文线索来判断所指的内容——我们实际上使用了像 *从 Chrome OS 切换到 Linux
    桌面* 这样的短语，这本不应该有意义，因为 Chrome OS 和任何其他基于 Linux 的操作系统一样，都是 Linux。
- en: Now, at the highest level, we should have a decent idea of what Linux is and,
    more importantly, what most people mean when they talk about something being Linux
    or even being a UNIX system. We are also ready to defend why Linux is absolutely
    a true member of the UNIX family at our next system administration cocktail reception!
    Next up is licensing, but don't worry because the Linux universe makes licensing
    as easy as it gets.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在最高层次上，我们应该对 Linux 有一个基本的了解，更重要的是，当人们谈论某物是 Linux 或甚至是 UNIX 系统时，他们通常指的是什么。我们也已经准备好在下次的系统管理鸡尾酒会中辩护，说明为什么
    Linux 绝对是 UNIX 家族的真正成员！接下来是许可证问题，但不用担心，因为 Linux 宇宙让许可证管理变得轻松至极。
- en: Linux licensing
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux 许可证
- en: 'Few discussions of Linux happen without the topic of **licensing** being mentioned.
    Mostly this happens for a few reasons: because **Linux licensing** is so different
    from nearly all of its competitors that it plays a significant role in business
    decisions, because it is the largest and most prominent open-source product on
    the market regardless of category, and because it arose in popularity in conjunction
    with the rise of the open-source software movement and quickly became its poster
    child. Most people instantly connect (and sometimes even confuse) Linux with any
    mention of open-source software, which leads to a lot of confusion as there are
    millions of other equally open-source software packages out there and when mentioning
    closed source software, no one jumps to any one comparable poster-child software
    package and assumes that that is what we are talking about. Linux, for whatever
    reason, gets treated differently than pretty much any other product on the market
    in how people talk, name, and think about it.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 很少有关于 Linux 的讨论不提到 **许可协议**。这种情况通常出于几个原因：因为 **Linux 许可协议** 与几乎所有竞争对手的许可协议都大相径庭，因此在商业决策中占有重要地位；因为它是市场上最大的、最突出的开源产品，无论在哪个类别中；而且因为它与开源软件运动的兴起一同流行起来，迅速成为了这一运动的代表作。大多数人一提到开源软件，就立刻会联想到（甚至会混淆）Linux，这导致了很多混乱，因为市场上有数百万个同样是开源的软件包，而在提到闭源软件时，没有人会跳出来立刻联想到某个具体的代表软件包并认为我们指的就是它。无论出于何种原因，Linux
    的讨论方式、命名和思考方式总是与市场上几乎任何其他产品不同。
- en: Linux itself is licensed under the **GNU General Public License** (aka **GPL**)
    also known as a **CopyLeft** which is the best known of all open-source licenses.
    This license provides us with many advantages in the use of Linux.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 本身的许可协议是 **GNU 通用公共许可证**（也称为 **GPL**），也被称为 **CopyLeft**，是所有开源许可证中最著名的。这种许可证为我们使用
    Linux 提供了许多优势。
- en: Being the best-known open-source license alone is a significant benefit. Understanding
    of how this license applies to organizations is extensive and licensing resources
    abound. Applying this license to organizations is standard industry knowledge
    and because essentially all companies globally use software licensed under the
    GPL at least a little, if not extensively, any concerns about the license must
    be addressed for myriad reasons. While other open-source licenses, such as BSD
    or MIT licenses, might be seen as superior from an end user IT department perspective,
    they are certainly less well known.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最知名的开源许可证，这本身就是一个显著的优势。关于此许可证如何应用于组织的理解广泛，相关的许可资源也比比皆是。将此许可证应用于组织是行业标准知识，且由于几乎全球所有公司都在至少某种程度上使用
    GPL 许可的软件，如果不是广泛使用，那么关于许可证的任何问题都必须解决，原因多种多样。虽然其他开源许可证，如 BSD 或 MIT 许可证，可能从最终用户
    IT 部门的角度看被认为更优，但它们的知名度肯定不如 GPL。
- en: The GPL guarantees that access to the source code for Linux is available to
    everyone, always, for free. This gives organizations important protections. It
    increases security by allowing for code reviews by anyone who is interested, and
    with a product like Linux the number of governments, large businesses, security
    research firms, and interested developers who try to do so is extremely large.
    Linux is easily the most reviewed code in history. Open-source software of this
    nature retains every security advantage of closed source software while adding
    the extremely critical options for public review and, perhaps even more importantly,
    public accountability.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: GPL 保证了每个人都可以免费、随时访问 Linux 的源代码。这为组织提供了重要的保护。它通过允许任何感兴趣的人进行代码审查来提高安全性，像 Linux
    这样的大型产品，进行审查的政府、大型企业、安全研究公司以及开发人员的数量极其庞大。Linux 可以说是历史上最受审查的代码。此类开源软件在保留闭源软件所有安全优势的同时，还增加了至关重要的公共审查选项，并且更重要的是，增加了公共问责制。
- en: Freely available source code also guarantees companies using Linux that any
    vendor disruptions that might occur, which might include a bankruptcy, or a vendor
    suddenly deciding to change strategy and dropping a product or taking a product
    in an unwanted direction, can be mitigated in several ways such as another vendor
    taking up the product on their own and providing an alternative support and production
    path, or even the customer themselves doing so. Most importantly, an original
    vendor does not retain the power to hold customers truly hostage through a change
    in pricing, licensing, or product availability. The customer, and the market,
    always retain options should the product have value.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 开源代码的自由获取也确保了使用 Linux 的公司，即使发生供应商中断的情况（比如破产，或供应商突然决定改变战略，放弃产品或将产品推向不受欢迎的方向），也能通过多种方式进行缓解。例如，另一家供应商可能会接手该产品并提供替代的支持和生产路径，甚至是客户自己来完成。最重要的是，原始供应商不能通过改变定价、许可或产品的可用性来真正将客户“扣为人质”。客户和市场始终保有选项，只要产品具有价值。
- en: A great feature of open-source software of this nature is that every customer
    benefit from the protections, security, and flexibility of the license even if
    they do not do things like review the code themselves or fork the product to make
    their own release.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这种开源软件的一个伟大特点是，每个客户都能从许可证的保护、安全性和灵活性中受益，即使他们没有像自己审核代码或分叉产品以制作自己版本那样做。
- en: It is critical to understand, however, that open source does not mean nor imply
    free. Famously in the open-source community the expression *free as in freedom,
    not free as in beer* is used to explain this. Meaning that the code is free, but
    products made from the code may or may not be free. You are totally allowed under
    the license, as a vendor, to use the free and open-source code to compile a resulting
    product that is not free to purchase. There are Linux operating system vendors
    who take this approach. This doesn't remove the benefits of the code being open
    source, it simply means that you have to track licensing and costs the same as
    you work with many other operating systems such as Windows or AIX.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，理解开源并不意味着或暗示是免费的这一点至关重要。在开源社区中，有一个著名的表达方式是 *自由如同自由，而非免费如同啤酒* 来解释这一点。意思是代码是免费的，但由代码制成的产品可能是免费的，也可能不是。作为供应商，您完全可以根据许可证使用免费的开源代码，编译一个需要付费购买的产品。许多
    Linux 操作系统供应商采用这种做法。这并不会削弱代码是开源的好处，它只是意味着您在与 Windows 或 AIX 等操作系统合作时，需要像追踪其他操作系统的许可证和费用一样，跟踪开源代码的许可证和费用。
- en: Most Linux derived operating systems are completely free, though, and this is
    a very big deal in the industry. Being completely free has obvious benefits, but
    these can be misleading as the lack of upfront cost makes for an easy target for
    salespeople to prey on the emotionally confusing saying *you get what you pay
    for*, which we all know intrinsically is untrue and has no foundation in reality
    or logic, but it's oft repeated and easy to make sound plausible. We can instantly
    counter this with the option to pay as much as you want for Linux, no vendor will
    turn down the option of a donation and one must wonder *does the value then increase
    because you voluntarily paid more for it?* Of course not, the entire notion is
    nonsensical. And yet this is a common argument made that simply throwing money
    at products is its own reward.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，大多数基于 Linux 的操作系统是完全免费的，这在行业中具有非常大的意义。完全免费的好处是显而易见的，但这些好处也可能具有误导性，因为没有前期成本使得销售人员容易用情感上混淆的说法
    *你得到的就是你付出的* 来攻击消费者，我们都知道这个说法本质上是错误的，并没有现实或逻辑基础，但它经常被重复，且容易让人觉得有道理。我们可以立即反驳这一点：你可以为
    Linux 自愿支付任何金额，没有供应商会拒绝捐赠的选项，然而，*那是否意味着你因为自愿支付更多而让价值增加呢？* 当然不是，这一概念完全荒谬。然而，这也是一个常见的论点，认为仅仅将钱投入产品就是它的回报。
- en: Beyond avoiding up front purchase costs, freely available software, especially
    operating system software, can do a lot for a business. Probably the biggest benefit
    is **flexibility**. With a free Linux option, you can deploy software as needed
    anywhere in the organization without managing licenses, getting budgetary approval,
    or trying to figure out how to coordinate with vendors to purchase. It's actually
    not uncommon for licensing overhead to actually exceed technology overhead in
    the deployment of non-free operating systems! This becomes even more exacerbated
    in the *cloud* and *DevOps* world when deployments may become automated, transparent,
    and unpredictable.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 除了避免前期购买成本，免费的软件，尤其是操作系统软件，对于企业来说能够提供很多帮助。可能最大的好处就是**灵活性**。有了免费的 Linux 选项，你可以根据需要在组织内的任何地方部署软件，无需管理许可证、获得预算批准，或是需要与供应商协调购买事宜。实际上，在非免费操作系统的部署中，许可证的开销往往会超过技术的开销！在*云计算*和*DevOps*领域，随着部署可能变得自动化、透明且不可预测，这个问题会变得更加严重。
- en: Free also means that staff, subsidiaries, employee candidates, partner companies,
    customers, or anyone really, is free to deploy the same systems for compatibility,
    education, standardization, testing, staging, and on and on. In some cases, proprietary
    licensing doesn't even allow for desired scenarios or, when it does, can be cumbersome
    or onerous. Not in all cases, of course, but in most of the key real-world scenarios
    this is the case. With the notable exception of the **BSD** family of operating
    systems which are also open source and generally free (e.g., **FreeBSD**, **NetBSD**,
    **OpenBSD**, and **Dragonfly BSD**) no other market competitor of the Linux distributions
    is available in a form that allows it to be easily used in home labs, testing,
    or partner environments nor on a range of varying hardware platforms. macOS, for
    example, is only available on the very limited range of *Apple Mac* end user hardware.
    Windows is limited to *AMD64 architecture hardware* in any meaningful way and
    licensing for it is complex, confusing, and expensive. *AIX* and *Solaris* are
    limited to extremely niche, high end server hardware from only a tiny selection
    of vendors and require expensive licensing. Linux and BSD families are unique
    in their ability to be deployed, potentially for free, in essentially any conceivable
    scenario.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 免费还意味着员工、子公司、员工候选人、合作伙伴公司、客户，甚至任何人，都可以自由部署相同的系统，用于兼容性、教育、标准化、测试、预演等各种目的。在某些情况下，专有许可甚至不允许实现所需的场景，或者在允许时，也可能是繁琐且负担重的。当然并非所有情况都如此，但在大多数关键的实际场景中，确实如此。值得注意的是，**BSD**
    系列操作系统也是开源且通常免费的（例如，**FreeBSD**、**NetBSD**、**OpenBSD** 和 **Dragonfly BSD**），除了它们之外，Linux
    发行版的其他市场竞争者并没有以一种能够轻松用于家庭实验室、测试、合作伙伴环境，或是在多种硬件平台上的形式存在。比如，macOS 只限于*Apple Mac*终端硬件，而
    Windows 只在*AMD64架构硬件*上有意义，并且它的许可复杂、令人困惑且昂贵。*AIX*和*Solaris*仅限于来自少数供应商的极为小众的高端服务器硬件，并需要昂贵的许可。Linux
    和 BSD 系列操作系统在可以几乎在任何可想象的场景中免费部署这一点上是独一无二的。
- en: And there we go, Linux licensing in a nutshell. At this point you should have
    the confidence to be able to deploy Linux solutions in your business and understand
    how licensing affects you, when you need to pay, and for what it is that you might
    decide to pay. You are prepared to separate concepts like licensing and support
    and invest where it makes sense for you.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样，Linux 许可的要点总结完毕。到目前为止，你应该已经有信心能够在你的企业中部署 Linux 解决方案，并理解许可证如何影响你，何时需要付费，以及你可能会为哪些内容支付。你已经准备好将许可和支持等概念区分开来，并在合理的地方进行投资。
- en: Tip
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: If you find this topic to be really interesting, I recommend some classic books
    that delve into the topic of open-source licensing more thoroughly such as *Free
    as in Freedom* by Sam Williams (2002) and *The Cathedral & the Bazaar* by Eric
    S. Raymond (2001). These titles were key tomes from the height of the open-source
    revolution and are considered nearly canon in the Linux Administration space.
    Well worth reading to gain better insight into the club to which Linux Administrators
    belong.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现这个话题非常有趣，我推荐一些经典书籍，它们更深入地探讨了开源许可的话题，比如 Sam Williams（2002）的《*自由即自由*》以及 Eric
    S. Raymond（2001）的《*教堂与集市*》。这些书籍是开源革命巅峰时期的关键著作，并且在 Linux 管理领域被认为是几乎接近经典的必读书目。阅读它们能帮助你更好地了解
    Linux 管理员所属于的“圈子”。
- en: Now that we have gone over concepts at the Linux level itself, we need to start
    coming down for the fifty thousand foot view to a closer ten thousand foot view
    and start talking about real world vendors and tangible products in the Linux
    space.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论完了Linux层面的概念，我们需要从五万英尺的高度转向更接近一万英尺的视角，开始谈论Linux领域中的真实厂商和具体产品。
- en: Key vendors and products
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键厂商和产品
- en: 'Unlike key competitors to Linux, such as Windows by *Microsoft*, macOS by *Apple*,
    Solaris by *Oracle*, or AIX by *IBM*, Linux has no single vendor representing
    it, but rather has quite a few vendors each providing their own products, support,
    and approach to Linux. This, of course, makes discussing Linux exceedingly difficult
    because Linux isn''t a single thing, but more of a concept: *a family of related
    things that often share many commonalities, but don''t necessarily have to*.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 与Linux的主要竞争对手（如*微软*的Windows、*苹果*的macOS、*甲骨文*的Solaris或*IBM*的AIX）不同，Linux没有单一的厂商代表它，而是有很多厂商各自提供产品、支持和Linux的不同方式。这当然使得讨论Linux变得非常困难，因为Linux不是一个单一的事物，而更像是一个概念：*一系列相关的事物，通常有许多共同点，但不一定都相同*。
- en: Describing the Linux family of operating systems is a rather daunting task as
    it is far more complex than just half a dozen sibling operating systems. In reality,
    Linux is a complex tree of root and derivative distributions with derivatives
    of derivatives and operating systems from all levels of the tree gaining and losing
    prominence over time. Thankfully, we can ignore the far more confusing and convoluted
    UNIX family tree of which Linux is just one branch! Analyzing the entire UNIX
    pedigree would require an entire book of its own and quite honestly a lot more
    research than I think would be prudent. Suffice it to say that UNIX is a huge
    topic and primarily historical interest that would not provide us with a lot of
    value to get too deeply into.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 描述Linux家族操作系统是一项相当艰巨的任务，因为它比仅仅几个兄弟操作系统要复杂得多。实际上，Linux是一个复杂的树形结构，包括根和衍生发行版，衍生版的衍生版，以及来自树上各个层级的操作系统，随着时间的推移，它们的影响力不断变化。幸运的是，我们可以忽略Linux仅是UNIX家族树中的一个分支这一事实！分析整个UNIX谱系将需要一本专门的书，坦率来说，这需要的研究量超出了我认为合适的范围。可以说，UNIX是一个庞大的话题，主要是历史上的兴趣，对于我们来说，深入探讨并不会带来太多价值。
- en: What about BSD?
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 那BSD呢？
- en: 'Any mention of the Linux family of operating systems in the context of system
    administration will also require us to address the spiritual sibling family of
    operations systems: BSD. BSD is like Linux in many ways. Like Linux, BSD is open
    source. Like Linux, BSD represents a family of similar and closely related, but
    ultimately unique, operating systems. Like Linux, BSD is nearly always free. And
    like Linux, at least one member of the BSD family has been fully certified as
    a UNIX, while all members are UNIX in any meaningful way.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统管理的背景下提到Linux家族操作系统时，我们也需要讨论其精神上的兄弟家族——BSD。BSD在很多方面与Linux相似。像Linux一样，BSD是开源的；像Linux一样，BSD代表着一个相似且密切相关但最终独特的操作系统家族；像Linux一样，BSD几乎总是免费的；并且像Linux一样，至少有一个BSD家族成员已完全认证为UNIX，而所有成员在任何有意义的方式上都是UNIX。
- en: Almost everything that we will be covering in this book is equally applicable
    to both Linux and BSD families, and in many cases even more broadly than that.
    BSD is not exactly the same as Linux and does have its differences, as would any
    other operating system. Some key differences at a high level include licensing
    with BSD being licensed under the BSD license instead of under the GPL like Linux,
    and BSD referring to the *ecosystem around the kernel* rather than the kernel
    itself, and Linux referring to the kernel regardless of the ecosystem around it.
    So truly opposite terms in that regard. BSD is actually analogous to the term
    GNU rather than to Linux.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中我们将要讨论的几乎所有内容都同样适用于Linux和BSD家族，在很多情况下，甚至适用范围更广。BSD与Linux并不完全相同，它确实有一些差异，就像其他任何操作系统一样。从高层次来看，一些关键的差异包括BSD使用BSD许可证，而Linux使用GPL许可证，另外，BSD指的是*围绕内核的生态系统*，而不是内核本身，Linux则指的是内核，无论其周围的生态系统如何。因此，在这方面，它们是完全相反的术语。实际上，BSD更像是GNU这个术语，而不是Linux。
- en: BSD truly represents a Linux alternative that shares no code and no licensing,
    yet is spiritually related in nearly every sense. Both were started from around
    the same time period, both to replicate UNIX at a time when UNIX was dominant,
    but expensive and very difficult to obtain access to without either academic access
    or large corporate access. And today both run nearly all the same applications,
    in extremely similar ways, and are often seen as direct alternatives to each other
    in nearly all arenas included cloud, servers, virtualization, desktops, laptops,
    mobile devices, and even IoT!
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: BSD真正代表了一种Linux替代品，既不共享代码，也没有共同的许可协议，但在几乎所有方面，它们在精神上是紧密相关的。两者几乎在相同的时间段开始，都是为了在UNIX占主导地位但又昂贵且难以获得访问权限的时期，试图复制UNIX。今天，两者几乎运行相同的应用程序，方式也非常相似，通常被视为彼此在几乎所有领域的直接替代品，包括云计算、服务器、虚拟化、桌面、笔记本、移动设备，甚至是物联网！
- en: 'Also, like Linux, BSD splintered or *forked* into many products. Four key BSD
    family members exist in the server world: FreeBSD, OpenBSD, NetBSD, and DragonFly
    BSD with FreeBSD being by far the most dominant. In the desktop and mobile world
    BSD looks very different from Linux with the key products being non-free and almost
    entirely from a single vendor, Apple. Apple''s macOS, iOS, iPadOS, and others
    are all derived from FreeBSD and remain commercial members of the BSD family giving
    BSD far more visibility and utility than people realize.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，像Linux一样，BSD也发生了分裂或*分叉*，形成了许多不同的产品。在服务器领域有四个关键的BSD家族成员：FreeBSD、OpenBSD、NetBSD和DragonFly
    BSD，其中FreeBSD是最具主导地位的。在桌面和移动端，BSD与Linux有很大不同，主要产品几乎都是非免费的，且几乎完全来自单一供应商——苹果公司。苹果的macOS、iOS、iPadOS等都源自FreeBSD，并且仍然是BSD家族中的商业成员，这使得BSD的可见度和实用性远远超出了人们的认知。
- en: While tracking and understanding market dominance for any operating system is
    extremely difficult as there is no certain means of knowing what operating systems
    are truly deployed in the wild, let alone which ones are getting use or how new
    deployments compare to old ones, how to count primary devices against shelved
    tertiary devices and so forth, it is generally considered that Linux is the overall
    dominant operating system family today, and likely, but less broadly accepted,
    that BSD is in second place mostly because of mobile end user devices, but with
    a very strong server presence as well and macOS suddenly representing a major
    desktop presence as well. At this point, Microsoft's Windows NT family is the
    only serious competitor with Linux and BSD overall in the market, although it
    is still very much dominant on the desktop and laptop.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管追踪和理解市场上任何操作系统的主导地位非常困难，因为没有确凿的手段来了解哪些操作系统在实际使用中，更别提哪些操作系统正在被使用或新部署与旧部署的比较，如何计算主要设备与闲置的辅助设备等，一般来说，人们普遍认为Linux是今天最具主导地位的操作系统家族，而且可能，虽然这一观点不那么广泛接受，BSD排在第二位，主要是因为移动终端用户设备，但它在服务器领域也有着非常强的存在，并且macOS突然也成为了桌面领域的重要力量。此时，微软的Windows
    NT家族是与Linux和BSD在市场上最为严肃的竞争者，尽管它在桌面和笔记本电脑上仍占有主导地位。
- en: At the base of the **Linux family tree** there are several roots. These are
    operating system distributions built with a Linux kernel and all of the accouterments
    surrounding it to be assembled into a full operating system. There are probably
    hundreds of distributions at this level, but only a few that truly matter and
    that we will mention. These are **Debian**, **Red Hat**, and **Slackware**. Each
    of these represents its own base level operating system that you can deploy, each
    also represents a family of hundreds, or thousands of operating system derivatives
    based on the core work of the initial operating system.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**Linux家族树**的根基上有几个根。这些是基于Linux内核构建的操作系统发行版，配备了所有相关的工具和组件，以组装成一个完整的操作系统。在这个层级上可能有数百个发行版，但真正重要的只有几个，我们会提到的有**Debian**、**Red
    Hat**和**Slackware**。这些都代表着各自的基础操作系统，你可以部署它们，每一个也代表着基于初始操作系统核心工作所派生出的数百个甚至数千个操作系统。'
- en: We are only going to dig into server operating system choices. If we began listing
    important desktop Linux distributions our list would more than triple, and it
    would move from a stable list of **vendors** and **products** that changes very
    slowly over the years to a list that is disrupted every year or two with key products
    entering and exiting the market. Selecting an appropriate desktop operating system
    is a far more personal choice compared to the *purely business-focused decision
    process* of server selection. What looks and feels good to the end users or management
    is what often matters most, because it's an end user interface system. Servers,
    however, have no user interfaces so our decisions are very different.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这里只讨论服务器操作系统的选择。如果我们开始列举重要的桌面 Linux 发行版，列表将会是原来的三倍以上，而且它将从一个多年来变化极少的 **厂商**
    和 **产品** 的稳定列表，变成一个每年或两年都会发生巨大变化、关键产品进出市场的列表。选择一个合适的桌面操作系统相比于服务器选择的 *纯粹以业务为导向的决策过程*，是一个更具个人色彩的选择。最终用户或管理层看起来好、用起来顺手的东西，往往才是最重要的，因为它是终端用户的界面系统。然而，服务器没有用户界面，因此我们的决策方式截然不同。
- en: Debian
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Debian
- en: Let us look first at Debian. This is the largest and most interesting family
    of **Linux distributions**, as well as one of the oldest having first released
    in 1993\. Debian is very well known on its own and a great number of IT departments
    use Debian as their primary server distribution and many applications are developed
    with it as their primary target. Debian is famous for its openness and lack of
    commercial oversight. It is often considered the *most free* of the large distributions.
    Because of this, Debian has found a place less as a distribution to be deployed
    in its own right, but more so as a distribution used as a starting point for building
    other distributions. More of the Linux world is built from a starting point of
    Debian than from any other source.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们首先来看 Debian。它是 **Linux 发行版**中最大且最具趣味性的家族之一，也是最古老的之一，1993 年首次发布。Debian 本身就非常知名，许多
    IT 部门将 Debian 作为其主要的服务器发行版，很多应用也以它为主要开发目标。Debian 以其开放性和缺乏商业监督而著称，通常被认为是大型发行版中
    *最自由* 的。正因为如此，Debian 更多地作为其他发行版的基础，而非作为独立部署的发行版。Linux 世界中有更多的部分是基于 Debian 构建的，而非其他任何来源。
- en: Debian is completely free, to the point that they do not even offer any paid
    services, nor do they include any proprietary components or drivers. This makes
    it an ideal base or *seed* system for building another distribution, but often
    means that companies are wary of choosing Debian as their directly installed operating
    system of choice as original vendor support options do not exist. So, gauging
    the popularity of Debian is convoluted because as a base it is nearly everywhere,
    but installed natively it is rare.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 完全免费，甚至不提供任何付费服务，也不包含任何专有组件或驱动程序。这使得它成为构建其他发行版的理想基础或 *种子* 系统，但也常常意味着公司在选择
    Debian 作为直接安装的操作系统时会有所顾虑，因为没有原厂支持选项。因此，评估 Debian 的流行度有些复杂，因为作为基础系统，它几乎无处不在，但原生安装的情况却很少。
- en: Debian is famously light, stable, and conservative. It is not the most popular
    system to deploy but is a solid choice to consider.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 以其轻量、稳定和保守著称。它不是最受欢迎的部署系统，但作为一个选择，它是一个可靠的选择。
- en: Ubuntu
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Ubuntu
- en: Debian's best known derivative distribution, and the single most deployed Linux
    based distribution on servers, is **Ubuntu**. Ubuntu could be described as little
    less than an industry juggernaut having come to the Linux world late in the game,
    first providing a release in 2004 long after nearly everyone else on this list
    was well established. Ubuntu moved to desktop dominance, practically defining
    what Linux on the desktop looked like, in just a few years and today has sat for
    some time as the most popular, most broadly deployed flavour of Linux with no
    signs of slowly down. If anything, Ubuntu adoption rates continue to increase
    both as Linux itself continues to grow in absolute terms and as Ubuntu continues
    to grow inside of the Linux space in relation to other Linux distributions.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 最著名的衍生版发行版，也是基于 Linux 的服务器上部署最多的发行版，便是 **Ubuntu**。Ubuntu 可以说几乎是一个行业巨头，尽管它在
    Linux 世界中进入较晚，2004 年才首次发布，而当时几乎所有其他发行版都已经建立多年。Ubuntu 在桌面领域迅速崛起，几乎定义了 Linux 桌面的面貌，短短几年内就成为最受欢迎、应用最广泛的
    Linux 发行版之一，并且至今保持着领先地位，且没有任何放缓的迹象。如果有的话，Ubuntu 的采用率还在不断增加，既因为 Linux 本身的普及，也因为
    Ubuntu 在 Linux 领域内的份额相较于其他 Linux 发行版继续增长。
- en: 'Ubuntu is built from Debian, but extended with more features and polish and,
    most importantly, it has a commercial vendor backing it: **Canonical**. With Canonical
    you have options of getting primary vendor support for Ubuntu which means that
    many organizations requiring primary vendor support are able to choose Ubuntu
    where Debian was not an option for them. Ubuntu most certainly has many differences
    from Debian itself including some additions of non-open-source packages, but for
    many it is through of basically being a vendor supported, business ready version
    of Debian.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu 是基于 Debian 构建的，但增加了更多功能和优化，最重要的是，它有一个商业供应商支持：**Canonical**。通过 Canonical，您可以选择为
    Ubuntu 获得主要供应商支持，这意味着许多需要主要供应商支持的组织可以选择 Ubuntu，而在 Debian 不适用于他们的情况下。Ubuntu 与 Debian
    本身有许多不同之处，包括一些非开源软件包的添加，但对许多人来说，它基本上是一个由供应商支持的、业务就绪的 Debian 版本。
- en: Ubuntu leads, at this current time, across deployment types. They lead in desktops,
    traditional servers, cloud servers, and more. To a limited extent, you can even
    find Ubuntu on some phones, tablets, single board computers like the *Raspberry
    Pi*, and IoT devices! Ubuntu is everywhere. Ubuntu is pretty much on everyone's
    short list.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，Ubuntu 在各种部署类型上领先。它在桌面、传统服务器、云服务器等领域都占据领先地位。在有限的范围内，甚至可以在一些手机、平板电脑、像 *Raspberry
    Pi* 这样的单板计算机和物联网设备上找到 Ubuntu 的身影！Ubuntu 无处不在，几乎每个人都在考虑 Ubuntu。
- en: In its early days, Ubuntu focused very hard on desktop features and on marketing
    themselves as being easier for people new to Linux. Whether or not this was true,
    this benefitted Ubuntu in getting a lot of developer and other non-IT adoption
    and in getting many IT professionals from the Windows world to be willing to test
    the Linux waters. It also gave Ubuntu a stigma that took some time to overcome.
    Today this is purely historical and discussions of easy to use or being desktop
    focused are long gone.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在早期，Ubuntu 非常注重桌面功能，并将自己营销为对 Linux 新手更加友好。无论这是否属实，这使得 Ubuntu 在获得许多开发人员和其他非 IT
    采纳以及使得许多 IT 专业人士愿意尝试 Linux 方面受益匪浅。这也给 Ubuntu 带来了一些时间上的负面印象，需要一些时间来克服。如今，这些都已成为历史，关于易于使用或专注于桌面的讨论早已不复存在。
- en: IBM Red Hat Enterprise Linux (RHEL)
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IBM Red Hat Enterprise Linux (RHEL)
- en: Another early **Linux vendor**, Red Hat also, like Debian, entered the market
    in 1993 and has remained one of the largest and most influential vendors for its
    entire history. In 2019 Red Hat was purchased by IBM. Since 2002, Red Hat's flagship
    Linux distribution has gone by the moniker **Red Hat Enterprise Linux**, but as
    this name is too long the industry refers to it as **RHEL**.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个早期的**Linux 供应商**，Red Hat 也像 Debian 一样，在 1993 年进入市场，并在其整个历史中一直是最大和最有影响力的供应商之一。2019
    年，IBM 收购了 Red Hat。自 2002 年起，Red Hat 的旗舰 Linux 发行版被称为**Red Hat Enterprise Linux**，但由于名称过长，业界称其为**RHEL**。
- en: RHEL is nearly unique in the Linux space as one of the rare distributions that
    is not free. Of course, being built from GPL-licensed Linux and other components
    requires that Red Hat make the source code of their operating system be open and
    free, but the GPL puts no such conditions on the compiled final product. This
    makes RHEL a much more limited use product on its own. It is one that always comes
    bundled with vendor support.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 领域，RHEL 几乎是独一无二的一个不免费的发行版。当然，由于其基于 GPL 许可的 Linux 和其他组件构建，Red Hat 要求其操作系统的源代码是开放和免费的，但
    GPL 对编译后的最终产品没有此类限制。这使得 RHEL 作为单独使用的产品受到了很大的限制。它始终与供应商支持捆绑在一起。
- en: Because of this, RHEL is seen as the big business solution for Linux and for
    a long time was one of only two big vendors making products with an enterprise
    focus, the other being *SUSE*. For most of its history, Red Hat was the market
    leader with SUSE trailing behind. But in recent years, Ubuntu has pulled ahead
    in market terms, even if it hasn't in profit terms.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，RHEL 被视为 Linux 的大型商业解决方案，长期以来一直是仅有的两家专注企业产品的大厂之一，另一家是*SUSE*。在大部分历史中，Red Hat
    一直是市场领导者，而 SUSE 则紧随其后。但近年来，Ubuntu 在市场份额上取得了领先地位，尽管在盈利方面并非如此。
- en: RHEL is seen as an extremely conservative distribution that is slightly heavier
    in standard installs compared to most of its competitors. RHEL often gets the
    most security focus and review and has the biggest support vendor behind it.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: RHEL 被视为极为保守的发行版，在标准安装中比大多数竞争对手稍微重一些。RHEL 经常受到最多的安全关注和审查，并且拥有最强大的支持供应商支持。
- en: RHEL alternatives
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: RHEL 的替代品
- en: As this book goes to press a lot is changing in the Red Hat world. For many
    years, CentOS was a Linux distribution built to be a RHEL-clone as closely as
    possible, made by recompiling the RHEL source code, while removing any trademarked
    names, logos, and so forth, and making a binary compatible distribution for free
    that was RHEL in all but name. Red Hat eventually bought CentOS but operated it
    for some time exactly as it had always been. But just before this book was written,
    Red Hat discontinued CentOS leaving the market in disarray. Until that point,
    CentOS was the primary product in the Red Hat ecosystem and most companies using
    RHEL in some fashion were actually doing so using CentOS which was free and came
    without support. The sudden cancelation has left that portion of the market in
    disarray.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当本书出版时，Red Hat 的世界正在发生巨大的变化。多年以来，CentOS 是一款尽可能接近 RHEL 的 Linux 发行版，它是通过重新编译 RHEL
    的源代码制作的，同时去除了任何商标名称、徽标等内容，制作出一个与 RHEL 完全兼容的免费二进制发行版，几乎等同于 RHEL，仅仅在名称上有所不同。Red
    Hat 最终收购了 CentOS，但在一段时间内仍按原样运营。然而，就在本书写作之前，Red Hat 宣布停止了 CentOS，使市场陷入混乱。直到那时，CentOS
    是 Red Hat 生态系统中的主要产品，许多以某种方式使用 RHEL 的公司实际上是在使用 CentOS，这是一款免费的、没有支持的版本。突然取消这一产品，使得该市场的部分领域陷入了混乱。
- en: A few other immediate options have presented themselves in the aftermath of
    this announcement. One is Rocky Linux which is essentially the CentOS project
    recreated by its original founder with the same mission. Another is Oracle Linux
    which was built the same was that CentOS was, by taking the RHEL source code and
    recompiling it, but by Oracle a major industry vendor (and the creator of the
    Solaris operating system) and offering it still for free, but also with optional
    Oracle vendor support and with a few extra features that RHEL itself did not have.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一公告发布后，出现了其他一些即时的选择。其中之一是 Rocky Linux，它本质上是 CentOS 项目的重新创建，由其原始创始人主导，使命保持不变。另一个选择是
    Oracle Linux，它的构建方式与 CentOS 相同，采用 RHEL 的源代码重新编译而成，由 Oracle（一个主要的行业供应商，也是 Solaris
    操作系统的创建者）提供，并且仍然免费提供，但也提供可选的 Oracle 供应商支持，并且具有一些 RHEL 本身没有的额外功能。
- en: In reaction to the market furor over the sudden death of CentOS and the obvious
    market move to take their business to other non-IBM vendors, Red Hat has announced
    programs to provide a limited number of RHEL licenses for free for small businesses
    or IT professionals needing access to learn the operating system.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 由于市场对 CentOS 突然停产的强烈反应，以及显而易见的市场趋势转向其他非 IBM 供应商，Red Hat 宣布了一项计划，向小型企业或需要学习操作系统的
    IT 专业人士免费提供有限数量的 RHEL 许可证。
- en: How this will play out in the next few years will be interesting and is difficult
    to predict. But needless to say the strong market position and longevity of RHEL,
    are not the near certainties that we would have thought that they were just a
    few months ago.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 未来几年这一局面如何发展将会非常有趣，但也很难预测。但无需多言，RHEL 强大的市场地位和长期存在的可能性，已不像几个月前我们曾认为的那样是接近确定的。
- en: 'This also highlights a general rule of business: products from large proprietary
    vendors are often the riskiest, contrary to most emotional responses from business
    owners, because their direction is set by boards, investors, and market opportunity
    making it surprisingly easy for large products to be suddenly abandoned or discontinued
    even if they are doing well in the market. Often smaller vendors that are more
    focused can actually be more stable in the ways that most affect their customers.
    They simply have far more riding on keeping their existing products viable and
    cannot afford to gamble on killing off major product lines or alienating their
    user base.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这也突显了一个商业中的普遍规则：来自大型专有供应商的产品通常是最具风险的，这与大多数商业所有者的情感反应相反，因为这些产品的方向由董事会、投资者和市场机会决定，使得即使产品在市场上表现良好，也很容易被突然抛弃或停止。通常，专注于某一领域的小型供应商实际上在稳定性方面能更好地满足客户需求。它们依赖于保持现有产品的生命力，无法承担停产主要产品线或疏远用户基础的风险。
- en: Fedora
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Fedora
- en: '**Fedora** is an interesting player in the business Linux space. Technically
    Fedora is part of Red Hat, which is in turn a part of IBM. Fedora operates much
    like an independent nonprofit but is not a legal entity on its own. So many people
    believe it to be its own company but it is not. Fedora was originally its own
    project before it was merged with an early Red Hat Linux product in 2002\.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**Fedora** 是商业 Linux 领域中的一个有趣的参与者。从技术上讲，Fedora 是 Red Hat 的一部分，而 Red Hat 又是
    IBM 的一部分。Fedora 的运作方式类似于一个独立的非营利组织，但它本身并不是一个法律实体。因此，许多人认为它是一个独立的公司，实际上并非如此。Fedora
    最初是一个独立的项目，直到2002年与早期的 Red Hat Linux 产品合并。'
- en: Fedora, as a product serves two key purposes in which we are interested in the
    aim of this book. The first is that it produces one of the best completely free
    Linux distributions, simply called Fedora, which is designed to be able to be
    used well as both a desktop and a server distribution. The second is that Fedora
    is focused on innovation and their work is used as the foundation for what becomes
    both CentOS Stream and RHEL.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个产品，Fedora 在本书的目标中扮演着两个关键角色。首先，它生产了一个完全免费的 Linux 发行版，简单地称为 Fedora，旨在既能作为桌面发行版，也能作为服务器发行版使用。其次，Fedora
    专注于创新，他们的工作成为了 CentOS Stream 和 RHEL 的基础。
- en: Originally, Red Hat was the seeding distribution and Fedora worked from their
    code and extended it. But over the years, Fedora is now the base seed distribution
    from which RHEL is derived. In that regard, Fedora is a bit similar to Debian
    in Debian's relationship with Ubuntu, but with RHEL instead. Like Debian, Fedora
    does not offer vendor support. And also, like Debian, Fedora's downstream child
    product is far better known than the parent is – that is that RHEL and CentOS
    are better known than Fedora on which they are based.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，Red Hat 是种子发行版，Fedora 从其代码中开发并进行了扩展。但经过多年发展，Fedora 现在已经成为基础种子发行版，RHEL 就是从其中派生出来的。从这个角度来看，Fedora
    在某种程度上类似于 Debian 与 Ubuntu 之间的关系，不过这里是 RHEL 而非 Ubuntu。像 Debian 一样，Fedora 不提供供应商支持。而且，同样像
    Debian，Fedora 的下游子产品（RHEL 和 CentOS）比其母体（Fedora）更为人熟知。
- en: In other ways, however, we find in practice Fedora and Ubuntu are more alike
    overall both with similar foci broadly on many different use cases, both being
    used as the base for many other products, both sharing similar design strategies.
    There are no exact analogues, unfortunately.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在其他方面，我们发现在实践中，Fedora 和 Ubuntu 在总体上更为相似，两者在多个不同的使用场景上有着类似的关注点，都是许多其他产品的基础，并且共享相似的设计策略。遗憾的是，没有完全对应的类比。
- en: Fedora's biggest challenges come from its lack of primary vendor support options.
    It also suffers from not being seen as a top tier distribution by many software
    makers. These vendors tend to then target Ubuntu and RHEL while Fedora often only
    gets support as an afterthought or because of its naturally high compatibility
    with RHEL.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Fedora 面临的最大挑战来自于其缺乏主要供应商的支持选项。它还受到许多软件厂商未将其视为顶级发行版的困扰。这些厂商通常将目标定在 Ubuntu 和
    RHEL 上，而 Fedora 经常只是作为一种附带考虑或因为其与 RHEL 高度兼容而获得支持。
- en: OpenSUSE and SLES
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OpenSUSE 和 SLES
- en: The last of the big three *old guard* Linux vendors, **SUSE** products its first
    product release in 1994, but was a support vendor for older distributions like
    SLS and Slackware, which didn't have a support vendor of their own, as far back
    as 1992\. Linux itself dates only back to 1991 and SUSE is often believed to be
    the first commercial support vendor for Linux. SUSE originally used other distributions
    as the basis for **Suse Linux**, but its underlying projects all faded away during
    the 1990s and since about 2000 SUSE Linux has been its own root distribution seeding
    others from itself.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一大“老牌”Linux供应商，**SUSE** 于1994年发布了其第一个产品，但早在1992年，它就作为 SLS 和 Slackware 等较老发行版的支持商提供支持，而这些发行版当时并没有自己的支持供应商。Linux
    本身可以追溯到1991年，SUSE 通常被认为是 Linux 的第一个商业支持供应商。SUSE 最初以其他发行版为基础开发 **Suse Linux**，但其底层项目在1990年代逐渐消失，自2000年以来，SUSE
    Linux 一直是独立的根发行版，并且从自身中衍生出其他发行版。
- en: SUSE has always made for confusing product and company names. SUSE makes its
    primary products under the **OpenSuse** name. These products are free and quite
    popular. Additionally, SUSE Linux **Enterprise Server** is a commercially supported
    copy of one version of OpenSUSE. There is no direct comparison to either the Red
    Hat/Fedora ecosystem nor the Debian/Ubuntu ecosystem. All three primary ecosystems
    operate rather differently.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: SUSE的产品和公司名称一直让人感到困惑。SUSE主要以**OpenSUSE**这个名称推出其核心产品。这些产品是免费的，而且非常受欢迎。此外，SUSE
    Linux **Enterprise Server** 是OpenSUSE某个版本的商业支持副本。它与Red Hat/Fedora生态系统或Debian/Ubuntu生态系统并没有直接的对比。三大主要生态系统的运作方式各不相同。
- en: OpenSUSE's Linux distributions are very popular in Europe, especially in Germany
    where they are headquartered. In North American markets they are far less prevalent.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSUSE的Linux发行版在欧洲非常受欢迎，尤其是在其总部所在地德国。在北美市场，它们的普及程度远低于欧洲。
- en: Digging into distribution history
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 深入挖掘发行版历史
- en: It is easy, and interesting, to get lost trying to track down the real history
    not only of Linux as a kernel, but also of all of the distributions that have
    been created from it over the years and how they relate to one another. So many
    distributions have come and gone. So many foundations and guiding organizations
    have attempted to control or oversee different aspects of Linux or Linux distributions,
    but most have faded into obscurity.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 追溯Linux作为内核的真正历史，并试图追踪它多年来衍生出来的所有发行版及它们之间的关系，既容易又有趣。许多发行版已经出现并消失，许多基金会和指导组织曾试图控制或监管Linux或Linux发行版的不同方面，但大多数都已逐渐消失在历史的尘埃中。
- en: For even more fun, go back and try to track UNIX history starting in the 1960s
    and try to understand where the products on the market today have come from! At
    this point, UNIX is well over fifty years old and Linux turns thirty years old
    this year, in 2021! These are old systems with a lot of history and both UNIX
    and Linux being rooted at least partially in open source has made for so many
    different *stories* all stemming from one beginning. Unlike a product like Windows,
    which is complex enough as it is, UNIX isn't the product of a single vendor and
    is not really a product on its own. So, the story of what we have today is complex.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想更有趣一点，可以回过头来，尝试追溯1960年代开始的UNIX历史，看看如今市场上的产品从哪里来！到现在，UNIX已经超过五十年历史，而Linux今年满三十岁，2021年！这些都是拥有丰富历史的老系统，而且由于UNIX和Linux至少部分根植于开源，它们衍生出了许多不同的*故事*，这些故事都源自一个起点。与像Windows这样的产品相比，UNIX并不是单一供应商的产品，它本身也并不算是一个单一的产品。因此，我们今天所拥有的故事非常复杂。
- en: While this history is interesting, it is hard to say how much of it would have
    real value today. With the amount of history behind us and the rather extensive
    disassociation that we have between products today and vendors of the past, knowing
    the story of how that we got where we are is more of a party trick than useful
    IT knowledge. Knowing the basics of current vendors and distributions is very
    important, but knowing who came first, who is older, from whose work they built
    and so forth is banal. All of today's key vendors are nearing twenty years old
    or older and so all of the people involved in the early days are all gone. Even
    the vendors themselves would struggle to track down their products' own histories
    at this point.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这一历史很有趣，但很难说它今天还有多大的实际价值。随着历史的积累和今天的产品与过去的供应商之间的广泛脱节，了解我们如何走到今天更像是一个派对技巧，而不是实用的IT知识。了解当前供应商和发行版的基础知识非常重要，但了解谁先出现，谁更老，谁的工作是基础等等，则显得平淡无奇。今天所有的主要供应商都已接近二十岁或更长时间，因此所有参与早期的人都已经不在了。即使是这些供应商
    themselves，现在也很难追溯到他们产品的历史了。
- en: Other Linux distributions
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他Linux发行版
- en: There are so many potential **Linux distributions** that you could consider,
    and if you are working on desktops you might reasonably go with any number of
    niche or unproven systems because the ability to deal with instability or support
    issues on desktops is generally pretty flexible. In the desktop Linux world, many
    the most popular alternative desktops are built on top of one of the major distributions
    such as **ElementaryOS**, **Zorin OS**, and **Linux Mint** which are all additional
    layers on top of Ubuntu (which is already built on top of Debian.) A few such
    as Solus start from scratch and use no one else as a seed distribution.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多潜在的**Linux发行版**可供选择，如果你在桌面环境下工作，完全可以选择许多小众或未经验证的系统，因为在桌面上处理不稳定性或支持问题的能力通常是相当灵活的。在桌面Linux的世界里，许多最流行的替代桌面环境都是建立在主要发行版的基础上，例如**ElementaryOS**、**Zorin
    OS**和**Linux Mint**，它们都是基于Ubuntu（而Ubuntu又建立在Debian之上）之上的额外层。一些发行版如Solus则从零开始，没有借用任何其他的种子发行版。
- en: If we are looking at servers, we are going to struggle to justify using any
    distribution outside of the extreme mainstream. Mainstream distributions get more
    vendor support, more testing, broader third-party support for both software and
    hardware compatibility, and so on. But beyond the obvious, big distributions also
    have better community documentation, more how-tos and guides, and more professionals
    in the wild with specific experience on your exact operating system. Part of deciding
    what operating system should be installed required considering all of the possibilities
    and that includes finding additional system administration resources or replacement
    ones. If we had the ability to hire proactively with adequate time to train any
    good system administrator could get up to speed on even a completely obscure and
    unusual operating system easily as the basic concepts always remain constant.
    However, being able to find someone that is knowledgeable, comfortable, and available
    in a time of crisis means we must stick to distributions that are broadly known.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在看服务器，我们将难以为任何非主流发行版辩护。主流发行版会获得更多的厂商支持、更多的测试、更广泛的第三方支持，涵盖软件和硬件兼容性等等。但除此之外，较大的发行版也有更好的社区文档、更多的操作指南以及更多具备特定操作系统经验的专业人士。在决定安装哪个操作系统时，我们必须考虑所有可能性，这包括寻找额外的系统管理资源或替代资源。如果我们有能力提前雇佣，并有足够的时间进行培训，那么任何优秀的系统管理员都可以轻松上手，即使是完全冷门和不常见的操作系统，因为基本概念始终保持不变。然而，能够在危机时刻找到一个有经验、熟悉并且可以随时支援的人，这意味着我们必须坚持使用那些广为人知的发行版。
- en: Over time, new distributions will rise, and old ones will fall. Change happens.
    The best practice in this case is to evaluate the industry and determine based
    on current factors if the advice in this book is current and still relevant, or
    if perhaps a distro here has lost popularity or run into support issues or if
    a new distribution with great features and amazing industry support has arisen
    and requires consideration. Nothing is static, especially not in IT. I do my best
    here to give you a good starting point on choosing your distribution(s), but never
    make the mistake of thinking that this list is gospel or unchanging. IT always
    requires us to take all of the factors that we can, apply what we know, and make
    the best determination based on current factors as they are applicable to us.
    My guide here hopefully helps you see how I look at these distributions and why
    these are the ones that I single out for key consideration at the time of this
    writing.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，新的发行版将会崛起，而旧的发行版会逐渐消失。变化是不可避免的。在这种情况下，最佳实践是评估行业现状，并根据当前的因素来判断本书中的建议是否仍然适用，或者是否某个发行版已经失去人气、遇到支持问题，或者是否有一个具备出色功能和强大行业支持的新发行版崛起，需要考虑。没有什么是静止不变的，尤其是在IT领域。我在这里尽力为你提供一个选择发行版的良好起点，但永远不要犯认为这份列表是神圣不可更改的错误。IT要求我们必须考虑所有相关因素，应用我们所知道的，并根据当前的实际情况做出最好的判断。我希望我的指南能帮助你理解我如何看待这些发行版，以及为什么在写作时我特别关注这些发行版。
- en: The myth of popularity
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 流行度的迷思
- en: We must balance the idea of believing that just because something is popular
    that it will have a lot of support available in the market with the idea of practical
    support. Just because a product is popular or has many people offering support
    for it does not mean that support is better or easier to obtain in a practical
    sense.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须平衡这种想法：即仅仅因为某个东西很流行，就认为市场上会有大量的支持资源可用，与此同时，我们也要考虑实际支持的概念。仅仅因为某个产品很流行或有很多人提供支持，并不意味着这些支持在实际操作中更好或更容易获得。
- en: For years, this is something that we have discussed about Windows and Linux
    operating systems. There were, and remain, far more Windows system administrators
    marketing themselves on the market than there are Linux administrators. But experience
    tells us that when hiring an administrator in the Linux world it is relatively
    easy to find at least reasonably qualified candidates. Run a series of interviews
    and almost every candidate will be able to do the job, even if not well. But run
    a similar interview looking for the exact same position but for Windows instead
    of for Linux and you will likely get twice or thrice the candidates to wade through
    with only a very small number able to do the tasks at the same level as the Linux
    candidates.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，我们一直在讨论Windows和Linux操作系统的问题。市场上有更多的Windows系统管理员在营销自己，而Linux管理员则相对较少。但经验告诉我们，当招聘Linux管理员时，至少能找到一些相对合格的候选人。进行一系列面试，几乎每个候选人都能完成工作，尽管可能做得不好。但是，如果你进行类似的面试，寻找的是Windows管理员而不是Linux管理员，那么你可能会收到两倍或三倍数量的候选人，但能做到与Linux候选人同等水平工作的，只有极少数。
- en: Why is this? Many reasons, we assume. For one, the majority of Windows shops
    allow or require work to be done from a GUI, rather than from a command line.
    This means that most people who have never done a task before can simply poke
    around, apply some basic common sense, read what is on the screen and appear to
    a casual observer to be able to do system administration duties, even if they
    have never seen a server before in their lives. But nearly all Linux shops allow
    no GUIs on servers and when they do have no administration tools in the GUI forcing
    all work to be done at the command line where it is far harder to simply look
    around and hope for the best. Familiarity with the commands and outcomes is very
    much needed. Basically, bluffing is much harder. This isn't because Linux is harder,
    at all. Not in the least.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么会这样呢？我们可以假设有许多原因。首先，大多数Windows系统允许或要求通过图形用户界面（GUI）完成工作，而不是通过命令行。这意味着，大多数从未做过某项任务的人，只需随便摸索一下，运用一些基本常识，阅读屏幕上的内容，便能在表面上看起来像是在做系统管理工作，尽管他们可能从未见过服务器。但是，几乎所有Linux系统都不允许在服务器上使用GUI，当有时确实有GUI时，管理工具通常也不在GUI中，所有工作都必须通过命令行完成，这使得单纯的“瞎摸索”变得更加困难。熟悉命令和结果非常重要。基本上，虚张声势是非常困难的。这并不是说Linux更难，根本不是。
- en: This is because of a culture in the Linux world of GUIs being unacceptable on
    servers and the opposite culture in the Windows world. In the early days, in the
    early 1990s, Linux had no GUI, and everything was done at the command line and
    at the same time Windows was GUI only and the full command line capability wasn't
    added until decades later. This started a trend that has remained to this day.
    If you talk to someone who works on Linux as an administrator, they will simply
    assume that everything is command line only and have the same conversation with
    a Windows admin and while they will be familiar with the command line, they will
    almost universally assume that it is a partial tool used in conjunction with the
    GUI. Of course, if you wanted to administer Windows completely from PowerShell
    today, you can and you can do so very well. And likewise, if you really wanted
    to, Linux can be administrated from a GUI. No one does because that's a bad idea,
    but it is possible.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这种情况源于Linux世界中，服务器上不接受GUI的文化，而Windows世界则有完全相反的文化。在早期的1990年代，Linux没有GUI，所有操作都必须通过命令行完成，而同时Windows则是完全基于GUI的，直到几十年后才增加了完整的命令行能力。这种情况开始形成了一种趋势，至今依然存在。如果你和一个Linux管理员交流，他们通常会认为所有操作只能通过命令行完成；而与Windows管理员交流时，他们虽然也熟悉命令行，但几乎所有人都会认为命令行只是与GUI配合使用的一个部分工具。当然，如果你今天想完全通过PowerShell来管理Windows，是完全可以做到的，而且效果非常好。同样，如果你真的想的话，Linux也可以通过GUI进行管理。虽然没人这么做，因为那是一个糟糕的主意，但确实是可能的。
- en: Another factor is that small Windows shops abound and tend to throw around the
    title of system administrator where little, if any, administration work has really
    happened. In the late 1990s and early 2000s we had a problem that Microsoft and
    other certification vendors were handing out certifications like candy on Halloween
    with many, possibly most, people obtaining certifications doing so through brain
    dumps or boot camps and having no experience and potentially even no knowledge
    of Windows or system administration. The use of these *paper administrators*,
    as they came to be known, threatened to break many IT shops that thought that
    they had an easy way to hire without doing any validation of their own and ended
    up with the industry developing a culture of IT often having no knowledge or training
    which, given the critical position that IT staff is in, putting companies at severe
    risk, but because IT is so complicated, companies often failed to identify the
    failings of the process, even after the fact as few companies do *post mortems*
    on things like hiring processes. Most companies would not even know how or where
    to begin to evaluate the efficacy of decision processes in that way, so they simple
    ignore it.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个因素是小型Windows商店随处可见，并倾向于在几乎没有或没有真正进行过管理工作的情况下授予系统管理员的头衔。在上世纪90年代末和21世纪初，我们面临一个问题，即微软和其他认证供应商像万圣节一样发放认证，许多人（可能大多数人）通过脑筋急转弯或速成班获得认证，而且对Windows或系统管理可能没有经验，甚至没有知识。这些所谓的*纸管理员*的使用，威胁到许多认为他们可以轻易雇用却没有进行任何验证的IT商店，并最终导致产业发展出一种IT通常缺乏知识或培训的文化，鉴于IT人员处于关键位置，这给公司带来了严重风险，但由于IT非常复杂，公司通常无法识别过程的失败，甚至事后很少有公司对招聘过程进行*事后剖析*。大多数公司甚至不知道如何或从何处开始评估决策过程的效力，因此他们只能忽视它。
- en: For whatever reason, finding someone claiming to be a Windows administrator
    is easy, but finding one with any real level of knowledge is quite difficult.
    Linux, with a much smaller pool of claimed administrators, the ability to hire
    one that can provide you with good results is decently easy. This is just an example
    case and is not caused by anything intrinsic to Windows or Linux, it is just resulting
    artefacts of many historical factors coming together, so do not attempt to read
    into it anything that isn't there. The only point of this example is to show that
    popularity or abundance of a resource on the market is not the same as having
    useful support.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 无论出于何种原因，找到自称是Windows管理员的人很容易，但找到真正有实际知识水平的人却相当困难。Linux的情况稍有不同，声称自己是管理员的人数较少，能够雇佣能够为您提供良好结果的人相对容易。这只是一个例子，并不是由Windows或Linux固有的任何原因引起的，只是许多历史因素的结果，因此不要试图在其中读出任何不存在的东西。这个例子的唯一目的是表明，市场上资源的普及或丰富并不等同于具有有用的支持。
- en: Using multiple distributions
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用多个发行版
- en: New system administrators often believe that they need to pick a single distribution
    for their entire organization and stick to it through thick and thin. This is
    called a **homogeneous environment** and has many obvious advantages. It is easier
    to learn, easier to automate, easier to test, easier to monitor and stay on top
    of the latest news and changes. Certainly, consider that a homogeneous environment
    might be right for your organization.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 新系统管理员通常认为他们需要为整个组织选择一个单一的发行版，并在各种情况下坚持使用它。这被称为**同质环境**，具有许多明显的优势。它更容易学习，更容易自动化，更容易测试，更容易监视并保持对最新新闻和变化的了解。当然，要考虑同质环境可能适合您的组织。
- en: There are many reasons why we might need to consider a heterogeneous environment,
    that is one in which there are multiple Linux distributions (and more broadly
    speaking, perhaps other operating systems entirely like Solaris, AIX, macOS, FreeBSD,
    or even Windows!) Not many companies of any size are truly able to be homogeneous
    regardless of if they prefer Windows, Linux, or *other*. This goes for both the
    server world and the end user device space. These days most IT shops are forced
    to content with a mixture of systems on servers, desktops, laptops, and even cellular
    phones.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多原因我们可能需要考虑异构环境，即存在多个Linux发行版（更广义地说，可能还有其他操作系统，如Solaris、AIX、macOS、FreeBSD，甚至Windows！）。无论他们偏爱Windows、Linux还是*其他*，几乎没有任何规模的公司能够真正实现同质化。如今，大多数IT商店被迫在服务器、桌面、笔记本电脑甚至手机等设备上使用各种系统。
- en: This variety is spreading rapidly not just in software but in hardware as well.
    In the last few years alternative CPU architectures have started to gain a foothold.
    This is how the industry was for its first several decades until a little less
    than fifteen years ago. In the mid-2000s the industry broadly consolidated around
    the AMD64 architecture (there were always niches of alternative architectures
    out there, but they were truly niche for many years) with all other major contenders
    failing completely or being relegated to very specialty roles. But around 2020
    there was such a leap forward in non-AMD64 architecture popularity that we now
    have to consider heterogeneous hardware environments again, as well.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这种多样性不仅在软件中迅速传播，在硬件中也同样如此。在过去的几年里，替代CPU架构开始逐渐占据一席之地。这种情况其实在行业的前几十年一直存在，直到大约十五年前。在2000年代中期，行业大规模地统一在了AMD64架构上（虽然一直存在一些替代架构的小众市场，但它们在很多年里确实是小众的），所有其他主要竞争者要么完全失败，要么被
    relegated 到非常专业的角色。然而到了2020年左右，非AMD64架构的受欢迎程度迎来了如此大的跃升，以至于我们不得不重新考虑异构硬件环境。
- en: Hardware architecture may seem like an aside, but it is not. Every operating
    system and each Linux distro are made for only a limited number of hardware architectures.
    This means that your choice of operating system will determine your hardware options,
    or that your choice of hardware will determine your operating system options.
    Ideally decisions around this will be made holistically considering all of the
    needs of both software and hardware and coming to a design decision that creates
    the best resultant package rather than looking at the two in isolation and hoping
    to come to a working compromise that doesn't account for the results.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件架构看似无关紧要，但其实并非如此。每个操作系统和每个Linux发行版仅针对有限数量的硬件架构进行开发。这意味着你选择的操作系统将决定你的硬件选项，或者你选择的硬件将决定你能使用的操作系统选项。理想情况下，关于这个问题的决策应该是全面考虑所有软件和硬件需求，做出一个能够产生最佳结果的设计决策，而不是将两者割裂开来，单纯希望达成一个不考虑实际结果的工作妥协。
- en: In general, my advice is to avoid unnecessary *operating system sprawl* in your
    organization. It is all too easy to end up with a dozen different operating systems,
    each doing a niche task, and each requiring a bit of special care and feeding
    different from all of the others. But don't take that as saying that you should
    be homogeneous unless you have no choice. There is a balance that will make sense
    for you. Attempting to be homogeneous will almost certainly be a fruitless effort
    that will result in unnecessary struggles. And allowing unchecked sprawl will
    almost certainly result in an unnecessarily complicated environment. Be thoughtful
    in your choice to deploy something new and different, but do not fear it.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，我的建议是避免在组织内出现不必要的*操作系统蔓延*。很容易就会出现多个不同的操作系统，每个系统都执行一个特定的任务，每个系统都需要一些与其他系统不同的特殊维护。然而，这并不是说你应该追求完全的统一，除非你没有选择。对于你来说，总会有一种合理的平衡方式。试图保持完全统一几乎肯定会是一项无果的努力，最终只会带来不必要的困扰。而放任不管地扩展操作系统则几乎肯定会导致环境过于复杂。对于新事物的选择要慎重，但不要畏惧它。
- en: Making the choice
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 做出选择
- en: Knowing the likely range of Linux distributions, and understanding our design
    to avoid operating system sprawl within reason, how should we approach our final
    operating system selection decision?
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 了解可能的Linux发行版范围，并理解我们的设计原则，以合理的方式避免操作系统蔓延，我们应该如何做出最终的操作系统选择决策？
- en: The simple answer is *take everything into account*. That is easier said than
    done. For me when I am looking to deploy a new workload my first question is about
    the workload itself. *On what distribution does its vendor support running it*?
    *On what distribution does its vendor recommend running it?* *What is the current
    support path and the future support paths by distribution?*
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 简单的答案是*考虑所有因素*。说起来容易做起来难。对我来说，当我准备部署一个新的工作负载时，我的第一个问题是关于工作负载本身的。*其供应商支持在哪些发行版上运行*？*其供应商推荐在哪些发行版上运行*？*当前的支持路径和未来的支持路径分别是哪些发行版？*
- en: Working with, rather than against, the workload application vendor can be a
    big deal. Choosing the wrong distribution can result in poor performance or installation
    problems or even stability problems long term. It is common for vendors to officially
    support more operating systems than they regularly test against. For example,
    perhaps a vendor uses Debian in their development lab and tests every release
    against it, but only tests Fedora once a year or so, even though Fedora is on
    their support list. If you choose Fedora thinking that the vendor supports it,
    you might find deployment or stability problems with the application on Fedora
    long before the vendor does, and you might find them ill prepared to support something
    outside of their ken. This is the fault of the vendor for not making it clear
    enough that all of their support is not equal, but it is a very common scenario.
    Even a vendor who does an excellent job of supporting and testing many release
    targets still has one or two that they test more frequently or heavily. Generally,
    this is the operating system in use by their developers.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 与其对抗，不如与工作负载应用程序供应商合作，这可能非常重要。选择错误的发行版可能会导致性能不佳、安装问题，甚至长期的稳定性问题。供应商通常会官方支持更多的操作系统，而不仅仅是他们定期进行测试的操作系统。例如，供应商可能在他们的开发实验室中使用Debian，并对每个版本进行测试，但可能每年只测试一次Fedora，即使Fedora在他们的支持列表上。如果你选择了Fedora，认为供应商支持它，可能会在供应商发现之前就遇到Fedora上的部署或稳定性问题，而供应商可能没有准备好支持他们不了解的内容。这是供应商的错误，他们没有明确说明他们的支持并非全部平等，但这是一个非常常见的情况。即使是那些在支持和测试多个发布目标方面做得非常出色的供应商，也通常会有一两个他们测试得更频繁或更深入的目标。通常来说，这就是他们开发人员使用的操作系统。
- en: Different operating systems will have different performance characteristics
    as well. Generally, between different Linux distributions this difference is nominal.
    There can be large differences, even for very simple applications, between Linux
    and Windows, for example. Between Linux distributions we are most likely to see
    performance differences less from core features like the kernel configuration
    or system libraries, but much more likely to see differences caused by things
    like different programming language versions which can often vary widely between
    distributions based on several factors behind the scenes that are determined by
    the distribution's governance.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的操作系统也会有不同的性能特征。通常，在不同的Linux发行版之间，这种差异是微不足道的。例如，Linux和Windows之间，即使是非常简单的应用程序，也可能会有很大的差异。在Linux发行版之间，我们最可能看到的性能差异并非来自核心特性，如内核配置或系统库，而是更多来自于编程语言版本的不同，这些差异通常会因发行版的治理方式而在后台产生多种变化，导致不同发行版之间存在较大差异。
- en: Once we know how our distribution will impact our workload we can work with
    other factors, like which distributions are already in our organization or part
    of our future planning, cost, current knowledge, support options, and so forth
    to determine what is the right distribution for us. In an ideal world, operating
    system and hardware considerations would also play a part in the selection of
    workloads in the first place, but in reality, it is shockingly rare for organizations
    to take a holistic view of their entire business and instead often make decisions,
    such as which applications to deploy, in isolation without considering how that
    will impact the business across the board. As system administrators we often have
    little say as to which workloads we will be supporting and so we must therefore
    react as best as we can to accommodate them.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们了解了我们的发行版将如何影响我们的工作负载，我们就可以与其他因素一起考虑，比如哪些发行版已经在我们的组织中使用或是未来规划的一部分、成本、现有知识、支持选项等等，从而确定适合我们的发行版。在理想的世界里，操作系统和硬件的考虑应该在最初选择工作负载时就起到作用，但现实中，组织很少会全面考虑整个业务，通常会孤立地做出决定，比如选择部署哪些应用程序，而不考虑这些决定会如何影响整体业务。作为系统管理员，我们往往对将要支持的工作负载没有太多发言权，因此我们必须尽可能地做出反应以适应它们。
- en: And there we have it, a survey of popular Linux vendors and products. I know,
    it is a lot to take in. Working with Linux tends to result in getting to know
    many vendors and distributions and often just taking different ones out for a
    test drive on a regular basis. From a career perspective having many of these
    in your knowledge arsenal is important. The more you know the more value you have
    to an employer and the more career doors will be open to you.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 好了，这就是我们对流行Linux厂商和产品的调查。我知道，这些信息有点多。使用Linux通常意味着你需要了解许多厂商和发行版，通常会定期试用不同的版本。从职业发展的角度来看，掌握这些知识非常重要。你知道的越多，雇主就越看重你，职业机会也会更多。
- en: In our next section we are going to look at support and release models commonly
    found for Linux and look at real world examples available for the vendors and
    distributions that we just learned about.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将看看Linux常见的支持和发行模型，并观察我们刚才学习的厂商和发行版的实际示例。
- en: 'Releases and support: LTS, current, and rolling'
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发行版和支持：LTS、当前版和滚动版
- en: Picking your vendor might seem like it gets you everything that you need to
    get started on your Linux deployment, but it does not. We still have to consider
    release management as part of our distribution decision plan.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 选择厂商可能看起来能帮助你完成Linux部署的所有准备工作，但并非如此。我们仍然需要将发行管理作为我们选择发行版计划的一部分来考虑。
- en: A release model or release regime is an approach to how the distribution will
    update itself. There are three standard models followed by essentially all vendors.
    These are **rolling releases**, **short term releases**, and **long-term releases**.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 发行模型或发行制度是一种更新发行版的方法。几乎所有厂商都遵循三种标准模型：**滚动发行版**、**短期发行版**和**长期发行版**。
- en: Not all vendors provide all the different models. And each vendor approaches
    support differently. We will do our best to make useful generalizations, but when
    you make your decision you will need to consider the current strategies available
    from your prospective vendors as well as considering the quality of the support
    that they provide.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 不是所有厂商都提供所有不同的模型，每个厂商的支持方式也不同。我们会尽力做出有用的一般性总结，但当你做出决定时，你需要考虑潜在厂商当前提供的策略，并且要考虑它们提供的支持质量。
- en: There is a second factor that is often confused with the release model, and
    that is the support period. The two are roughly related, but a vendor can make
    updates and support closely tied together, or potentially not at all. In the real
    world, almost all vendors seem to stick to just a few common models and vendors
    who traditionally did not follow these models, like Microsoft, have changed to
    match the models of the big Linux distributions.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个常常与发行模型混淆的因素，那就是支持周期。两者有一定关系，但厂商可以将更新和支持紧密结合，或者可能完全没有关系。在现实世界中，几乎所有厂商都倾向于遵循几个常见模型，像微软这样的厂商，传统上并不遵循这些模型，但它们已经改变，开始与大型Linux发行版的模型相匹配。
- en: To make things more complicated, each vendor provides different models under
    totally different naming conventions so that once you learn how one vendor does
    it, you will have no better understanding of what the next vendor might be doing.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 更复杂的是，每个厂商提供的不同模型采用完全不同的命名规范，因此一旦你了解了一个厂商的做法，你就无法更好地理解下一个厂商可能采用的方式。
- en: We will start by exploring each release model before we try to decipher which
    vendors provide for each model. We should also talk about the differences between
    a patch and a release.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先探讨每种发行模型，然后再尝试解读每个厂商为这些模型提供的支持。我们还应该讨论补丁和发行版之间的区别。
- en: A release is a new version of an operating system. We often talk about major
    and minor releases. But like anything else in this topic this is all by convention.
    If you are familiar with the Windows world, major releases would be analogous
    to Windows 2000, XP, Vista and so forth. Minor releases were called **Service
    Packs**. So, *Windows XP* was a major release coming between Windows 2000 and
    Windows Vista, while *Windows XP SP2* was a minor release coming between *Windows
    XP SP1* and *Windows XP SP3*. Red Hat follows a similar and easy to understand
    model with major releases looking like **RHEL 7** and **RHEL 8**. Minor releases
    would be in format of **RHEL 7.2** and **RHEL 7.3**.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 发布是操作系统的新版本。我们经常谈论主要版本和次要版本。但和这个话题中的其他内容一样，这一切都是约定俗成的。如果你熟悉 Windows 世界，主要版本可以类比为
    Windows 2000、XP、Vista 等。次要版本被称为**服务包**。因此，*Windows XP* 是一个主要版本，介于 Windows 2000
    和 Windows Vista 之间，而 *Windows XP SP2* 是一个次要版本，介于 *Windows XP SP1* 和 *Windows XP
    SP3* 之间。Red Hat 遵循了一个类似且易于理解的模型，主要版本如 **RHEL 7** 和 **RHEL 8**，次要版本则是 **RHEL 7.2**
    和 **RHEL 7.3**。
- en: The idea behind a major release is that software in one major release may not
    be backward compatible with previous major releases. A major release is meant
    to provide a stable target for software vendors or projects to be able to write
    for and test against and feel confident that the software that they make will
    continue to work on a major release for its entire lifecycle. Therefore most software
    designates major releases against which it is known to work such as *Compatible
    with RHEL 8* or *Built for Windows 7*.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 主要版本发布的理念是，某一主要版本的软件可能与之前的主要版本不兼容。主要版本旨在为软件供应商或项目提供一个稳定的目标，供其编写和测试，以确保他们开发的软件在整个生命周期内都能在某一主要版本上正常运行。因此，大多数软件会指定与其已知兼容的主要版本，例如*兼容
    RHEL 8*或*为 Windows 7 构建*。
- en: Minor releases are intended to be significant changes that maintain backwards
    compatibility. In theory you should be able to update a system from its initial
    minor release all the way until its final minor release without any compatibility
    issues with software as long as your major release does not change. Of course,
    in practice there is always a risk anytime that there is a change, no matter how
    minor it is supposed to be, that some compatibility will change. The purpose of
    minor releases is to be able to provide new functionality and bigger updates that
    might affect training, end users, performance, and other factors, but not stop
    software from working properly and not to require extra testing.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 次要版本发布旨在进行重要的更改，同时保持向后兼容。理论上，只要主要版本没有变化，你应该能够将系统从其初始的次要版本更新到最终的次要版本，而不会出现软件兼容性问题。当然，在实际操作中，每当发生任何变化时，无论多么微小，总是存在某些兼容性发生变化的风险。次要版本发布的目的是提供新的功能和更大的更新，这些更新可能会影响培训、最终用户、性能和其他因素，但不会阻止软件正常运行，也不需要额外的测试。
- en: The major/minor release system is not adhered to be all vendors. In the Linux
    world's big commercial vendors, Red Hat and Suse, use the major/minor system,
    but Canonical (who makes Ubuntu) does not. Traditionally, Microsoft use a major/minor
    system, but this ended with the release of Windows 10\. It should be noted that
    Red Hat uses the major/minor system with RHEL but does not do so with Fedora.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有供应商都遵循主要/次要版本发布系统。在 Linux 世界中，主要的商业供应商 Red Hat 和 Suse 使用主要/次要版本系统，但 Canonical（Ubuntu
    的开发商）则不使用。传统上，微软采用了主要/次要版本系统，但这一做法随着 Windows 10 的发布而结束。需要注意的是，Red Hat 在 RHEL 中使用了主要/次要版本系统，但在
    Fedora 中并没有这样做。
- en: Canonical pioneered a now standard date-based naming convention with Ubuntu
    that approaches versioning completely different. Ubuntu releases are numbers by
    the year and month in which they release and also with a somewhat whimsical name
    to make them easier to remember (or something like that, honestly the numbers
    are really easy to remember and the animal-based names are not at all.) Microsoft
    copied this when they moved to Windows 10\. Fedora does something similar but
    with a simple incrementing number that is not based on a date (nor on an animal.)
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Canonical 开创了现在标准的基于日期的命名约定，Ubuntu 采用了完全不同的版本命名方式。Ubuntu 的发布按年份和月份编号，并且通常有一个稍显随意的名字，方便记忆（或者说，老实讲，数字真的很容易记，而基于动物的名字一点也不容易记）。微软在推出
    Windows 10 时复制了这一做法。Fedora 做了类似的事情，但采用简单的递增数字，既不基于日期，也不基于动物。
- en: The extreme differences in underlying approach combined with the differences
    in naming conventions can make it tricky to understand the cycles from one vendor
    or product to another. We will cover some in this book, but of course they are
    subject to change and all three major vendors have changed these in the past (as
    has Microsoft) and are likely to change again in the future. The only large vendor
    that has remained steadfast with the same naming convention for decades is Apple
    with their macOS and iOS products and even those have had some marketing changes
    here and there to keep us on our toes.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 基于底层方法的极端差异，再加上命名约定的不同，使得理解不同供应商或产品的更新周期变得棘手。我们将在本书中讨论一些，但这些内容当然是会发生变化的，所有三大供应商过去都有改变过这些（微软也是如此），并且未来可能会再次发生变化。唯一一个几十年来始终坚持相同命名约定的大型供应商是苹果公司，他们的macOS和iOS产品，尽管如此，这些产品仍然在某些地方有一些营销上的变化，让我们保持警觉。
- en: Best practice here is to take some time and learn the current release patterns,
    conventions, names, and versions of the vendor(s) that you are working with and
    keep yourself current with them. This is something everyone working with software
    needs to know and understand.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践是花一些时间学习你所使用的供应商的当前发布模式、约定、名称和版本，并保持与这些内容的同步更新。这是每个使用软件的人都需要了解和掌握的知识。
- en: Patches can have schedules too
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 补丁也可以有发布计划
- en: It might seem crazy to talk about having patch schedules. If software is vulnerable
    and a patch is available, surely, we need access to that right away and there
    should be no intentional waiting or schedule for patch releases. For the most
    part, that is how vendors work. Patches come out continuously when they are available,
    and releases work on whatever scheduling regime is in place for the product.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 讨论补丁发布计划可能看起来很疯狂。如果软件存在漏洞且补丁已经发布，显然我们需要立刻获得该补丁，应该没有故意的等待或发布计划安排。大多数情况下，供应商确实是如此运作的，补丁会在可用时持续发布，版本更新会按照产品的发布计划进行。
- en: Famously Microsoft has not followed this strategy and their Patch Tuesday is
    well known. Except for the most critical patches Microsoft has long held to a
    scheduled patch release of just one time per month!
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 众所周知，微软并没有遵循这一策略，他们的“补丁星期二”非常有名。除了最关键的补丁，微软长期坚持每月只发布一次预定的补丁更新！
- en: What does support mean?
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 支持到底是什么意思？
- en: If you say that your software has **available support** or is *supported*, we
    pretty much all immediately think of the same things. However, the term support
    means completely different things in different situations and never is simply
    saying that something is supported enough to actually mean anything.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你说你的软件有**可用支持**或者是*受支持的*，我们几乎都会立刻想到相同的事情。然而，“支持”这个术语在不同的情境下意味着完全不同的东西，仅仅说某个东西“受支持”并不足以让它真正有意义。
- en: On its own the term support means literally nothing, but it conjures up assurances
    in the minds of those who hear it which makes it a powerful marketing term. Both
    the offer of included support puts our minds at ease while something lacking support
    causes us to panic. No company in their right mind would ever use software without
    support, right? Well, yes and no. What does that even mean? Everything has and
    does not have support depending on what you mean at the time.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 单独来看，“支持”这个术语字面上毫无意义，但它在听到的人脑海中引发了保障的联想，这使得它成为一个强有力的营销术语。提供的支持让我们安心，而缺乏支持则让我们感到恐慌。没有哪个公司会在没有支持的情况下使用软件，对吧？嗯，既对也不对。这到底意味着什么？一切都取决于你当时的具体意思，支持有时存在，有时又不存在。
- en: What often matters when discussing support, or what managers mean most, when
    it comes to operating systems is whether the primary vendor is continuing to supply
    security patches or stability patches when problems are discovered. Software is
    a living thing and regular patching is one of the most important things that we
    need our vendors to provide. This kind of support is where we absolutely must
    rely on our software vendor. There is no reasonable possibility that we can handle
    this through any other channel, and it is essentially the purpose of having an
    operating system distribution in the first place.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在讨论支持时，或者说管理者最关注的点，通常是操作系统的主要供应商是否继续提供安全补丁或稳定性补丁，以修复发现的问题。软件是一个动态的存在，定期修补是我们最需要供应商提供的服务之一。这种支持是我们绝对必须依赖软件供应商的地方。没有其他渠道能合理地处理这个问题，而这正是操作系统发布的根本目的。
- en: After patching, we tend to assume that a vendor saying that a product is supported
    will mean that they provide updates and consulting support should anything with
    the operating system fail. This is not a given in any sense and some of the biggest
    vendors, like Microsoft, do not actually include this when they refer to a system
    as being supported. In the Linux world, most major vendors do provide some level
    of support for users who run into problems or need help, and this can be very
    valuable. But this is actually an area where Linux tends to have something above
    and beyond other arenas and it can represent a significant selling point, but
    of course is only available in situations where support is paid for and so many
    companies opt not to have this kind of support.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在打补丁之后，我们往往认为供应商声称产品得到支持意味着他们会提供更新和咨询支持，以应对操作系统出现的任何问题。实际上，这并不是铁板一块，在某些方面，像微软这样的大供应商实际上并未在所谓的支持中包括这一点。在
    Linux 世界中，大多数主要供应商确实为遇到问题或需要帮助的用户提供了某种程度的支持，这可能非常有价值。但实际上，这是 Linux 在某些方面超越其他领域的地方，它可以代表一个显著的卖点，当然前提是在付费支持的情况下，因此许多公司选择不采用这种支持方式。
- en: We tend to refer to this top level of support where we have the right to submit
    a ticket for assistance to the operating system vendor and expect a quick response
    to help us with nearly anything from actual problems with the operating system
    itself to simple configuration or use issues or possibly even training as paid
    vendor support. Some companies completely depend on this type of support while
    some others have never used it, and some are even unaware that it exists.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常将这种顶级支持称为可以向操作系统供应商提交支持票证并期望获得快速响应以帮助我们解决几乎任何实际问题，从操作系统本身的问题到简单的配置或使用问题，甚至可能是培训的问题，作为有偿供应商支持。有些公司完全依赖这种类型的支持，而有些公司从未使用过，甚至有些公司对其存在并不了解。
- en: Support can also mean third-party support. This can come from big vendors such
    as Oracle (who offers third-party vendor support for RHEL) or from small consulting
    firms such as Managed Service Providers (MSPs). Nearly any product can get some
    level of support via third parties, which can lead to an unclear support situation
    as some products expect support to be via a third party and others expect it to
    be first party.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 支持也可以意味着第三方支持。这可以来自大供应商，如提供 RHEL 的 Oracle 的第三方供应商支持，或者来自小型咨询公司，如托管服务提供商（MSPs）。几乎任何产品都可以通过第三方获得某种程度的支持，这可能会导致支持情况不明朗，因为有些产品期望支持来自第三方，而其他产品则期望支持来自第一方。
- en: 'And then there comes Community Support, a term used for any support from places
    like online forums and communities. This has a tendency to get a lot of focus
    in the Linux world and very little in other realms. All operating systems or IT
    products really have this kind of assistance. Linux gets more attention, most
    likely, because there tends to be more knowledge in the field and very little
    is secreted by the vendor, as is the nature of open source. Closed source software
    gets less benefit from community support because details must be either discovered
    through luck or released by the vendor. Community support often gets a lack of
    respect from management, but it is actually an important sign of what makes the
    Linux ecosystem strong: vendors that make everything public and communities of
    professionals looking to support one another. In many cases community support
    is so significant that it can completely change how we approach a product and
    can actually be better than vendor support.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是社区支持，这个术语用于描述来自在线论坛和社区等地方的任何支持。这在 Linux 领域往往受到很多关注，而在其他领域则很少。所有操作系统或 IT 产品都确实有这种类型的支持。Linux
    得到更多关注，很可能是因为该领域的知识更为丰富，而且开源的性质使得很少有东西被供应商隐瞒。封闭源软件得到的社区支持较少，因为细节必须要么靠运气发现，要么由供应商发布。社区支持往往会被管理层低估，但实际上它是
    Linux 生态系统强大的重要标志之一：供应商将所有信息公开，并有专业社区成员互相支持。在许多情况下，社区支持非常重要，它完全可以改变我们对产品的看法，实际上可能比供应商支持还要好。
- en: Basically, support means many different things, and everyone has their own definition.
    We need to think broadly about what support needs our organization has and how
    different approaches will impact us. Many large organizations require primary
    vendor support with a service level agreement for internal political reasons.
    Just keeping a system running in a healthy way often requires nothing more than
    basic security patches and moderate community support. Evaluate your own needs,
    remove emotions, and do not assume that the term support implies more than it
    does.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，“支持”意味着许多不同的事情，每个人对它的定义也各不相同。我们需要广泛考虑我们组织的支持需求，以及不同的方式会对我们产生什么影响。许多大型组织由于内部政治原因，需要主要供应商支持并签订服务水平协议。仅仅让系统保持健康运行，通常只需要基本的安全补丁和适度的社区支持。评估你自己的需求，摒弃情感，别以为“支持”意味着更多的东西。
- en: We have now established what these terms mean and how releases and support and
    tied together and how they are provided. This gives us a framework for exploring
    real world models from actual products and vendors.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经明确了这些术语的含义，以及发布和支持是如何相互关联并提供的。这为我们提供了一个框架，用来探索来自实际产品和供应商的真实世界模型。
- en: 'Release model: rapid release'
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布模型：快速发布
- en: The best known and arguably most important release model has no official or
    standard name. You will hear names like Rapid Release, Short Term Support, Current,
    and similar applied to it, but generally it is seen simply as the standard against
    which other models are measured against. Kind of the *happy medium* of models.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 最为人所知且 arguably 最重要的发布模型没有官方或标准的名称。你会听到像“快速发布”、“短期支持”、“当前版本”以及类似的名称，但通常它被视为一种标准，用来衡量其他模型的优劣。它是各类模型中的*中庸之道*。
- en: 'The key products are:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 主要产品包括：
- en: Fedora
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fedora
- en: Ubuntu
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu
- en: We start our discussion with **Rapid Release** models because this is what most
    people perceive as being the standard or baseline approach to releases. These
    are the most well-known and understood releases even if not the most commonly
    used in practice. They are quickly becoming more popular in recent years.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从**快速发布**模型开始讨论，因为这是大多数人认为的发布标准或基准方法。即使它不是最常用的发布方式，这也是最为人所知和理解的发布方式。近年来，它们变得越来越受欢迎。
- en: Rapid release (which could also be called *Standard* or *Common Release*) models
    have a convention of releasing new versions roughly every six months, but of course
    every vendor is free to use whatever time frame that they want. We would generally
    consider something to fall into this category if the release was at least two
    months apart, but no more than a year apart.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 快速发布（也可以称为*标准*或*常规发布*）模型的惯例是大约每六个月发布一个新版本，但当然，每个供应商可以自由选择他们想要的时间框架。我们通常会认为，如果一个版本的发布间隔至少为两个月，但不超过一年，那么它就属于这个类别。
- en: The best known and easiest to explain product in this category is Fedora, which
    is made by the Red Hat division of IBM. Fedora releases a new major version roughly
    every six months and has no minor versions. Fedora numbers each release sequentially
    to make tracking changes as easy as possible. There are no weird numbers to remember,
    no point releases, no skipping around. Just Fedora 1, 2, 3... 30, 31, 32, 33,
    and so forth. Support for each Fedora release is roughly thirteen months. So,
    at any given time at least the two latest, if not the three latest, releases are
    all under support.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 最为人所知且最容易解释的产品是 Fedora，它由 IBM 的 Red Hat 部门开发。Fedora 每大约六个月发布一个新的主版本，并且没有次要版本。Fedora
    对每个版本进行顺序编号，以便尽可能简化变更跟踪。没有复杂的数字需要记住，没有小版本发布，也没有跳跃的版本号。只是 Fedora 1、2、3... 30、31、32、33
    等等。每个 Fedora 版本的支持期大约为十三个月。所以，在任何给定时间，至少最新的两个版本（如果不是三个版本）都会处于支持状态。
- en: We have to mention that Fedora does not have any paid primary vendor support.
    Support in Fedora terms refers to Red Hat's support for updates and security patches.
    Third party support for Fedora is, of course, extensive.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须提到，Fedora 没有任何付费的主要供应商支持。Fedora 中的“支持”指的是 Red Hat 对更新和安全补丁的支持。当然，Fedora
    的第三方支持非常广泛。
- en: The mainline Ubuntu product is rapid release as well but with a much more confusing
    naming convention than Fedora uses. Like Red Hat's Fedora, Ubuntu is released
    every six months. Ubuntu's support is for nine months from initial release giving
    just three months of overlap from the subsequent version's release date until
    the end of Ubuntu's support commitment to the previous release.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 主流的 Ubuntu 产品同样采用快速发布模式，但其命名约定比 Fedora 更加复杂。像 Red Hat 的 Fedora 一样，Ubuntu 每六个月发布一次。Ubuntu
    的支持期限为从初始发布起九个月，这意味着新版本发布日期到 Ubuntu 对旧版支持承诺结束之间仅有三个月的重叠期。
- en: Unlike Fedora which has only software level support, Canonical offers full primary
    vendor paid support options for Ubuntu's rapid release option.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 不同于仅提供软件层面支持的 Fedora，Canonical 为 Ubuntu 的快速发布选项提供了完整的首要厂商付费支持。
- en: These short support time frames may feel problematic and it is because of the
    emotional feeling of needing to find a new solution every nine to thirteen months
    to avoid the *end of support* that is always looming when choosing a rapid release
    product that so many companies jump to other models to avoid having to find a
    new solution on a regular basis. This is illogical because this is based on believing
    that updating the system in question is not an option.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这些较短的支持时间框架可能会给人带来困扰，正是由于在选择快速发布产品时，总会有一种情感上的压力，认为每九到十三个月就需要找到一个新解决方案来避免 *支持结束*
    的局面。这也是为什么许多公司会选择其他模式，避免需要定期寻找新解决方案的原因。这种做法不合逻辑，因为它基于一个错误的假设——认为更新系统是不可选的。
- en: Rapid release support may be *short term* in most cases, but this is just one
    perspective. In both example cases here (and all cases of which I am aware) getting
    *eternal support* is as simple as keeping your systems up to date within a reasonable
    time frame. With Ubuntu this means updating to the current release at least every
    nine months and with Fedora at least every thirteen months. In both of these cases,
    and in most normal cases, these are in place updates done with just a command
    or two not situations that involve replacing one solution with another. So, while
    we may call these short term support approaches, in practice they are quite the
    opposite. This is the industry standard approach to having a continuously supported
    system that always stays reasonably up to date.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 快速发布支持在大多数情况下可能是 *短期* 的，但这只是其中一种看法。在这里提到的两个例子（以及我所知的所有其他案例）中，获得 *永久支持* 很简单，只要在合理的时间范围内保持系统更新。对于
    Ubuntu 来说，这意味着至少每九个月更新到当前版本，而对于 Fedora 来说，则是每十三个月更新一次。在这两种情况下，以及大多数正常情况下，更新是通过几个简单的命令来完成的，而不是替换一个解决方案。虽然我们可能称这些为短期支持方式，但实际上它们恰恰相反。这是行业标准的做法，通过这种方式，系统始终保持合理的最新状态并且持续得到支持。
- en: 'Release model: LTS'
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布模型：LTS
- en: 'The key LTS products are:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的 LTS 产品包括：
- en: Red Hat Enterprise Linux (RHEL)
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Red Hat 企业版 Linux（RHEL）
- en: OpenSuse Leap
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSuse Leap
- en: Ubuntu LTS
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu LTS
- en: Debian
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian
- en: '**LTS** might be standard for long term support, but most people think of LTS
    in terms of the associated release schedule. While there is no hard and fast rule
    for what constitutes an LTS outside of a vendor designating it as such we typically
    assume that LTS releases will be at least two years apart. Ideally vendors would
    separate the naming conventions of releases and support models to make it clearer,
    but few major vendors do.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**LTS** 可能是长期支持的标准，但大多数人理解 LTS 更多的是与其发布计划相关。虽然没有硬性规定什么算作 LTS，除了厂商指定外，我们通常认为
    LTS 版本之间的间隔至少为两年。理想情况下，厂商应该将发布命名规则与支持模式分开，以便让这一点更加清晰，但很少有厂商这样做。'
- en: Technically an LTS release means that that release will be supported for a *long
    time*, which what that exactly means being unique to each vendor. LTS is a marketing
    term, more than anything, but one that tends to inspire instant confidence in
    many customers and so is often used for that purpose.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，LTS 版本意味着该版本将获得 *长期* 支持，但具体含义因厂商而异。LTS 是一个营销术语，更多的是为了激发客户的即时信心，因此经常被用作这一目的。
- en: The underlying theoretical goal of an LTS release is to provide a *stable* product
    that remains *supported* for a *long time* (we must use a lot of quotes when doing
    this) to make it easier for software vendors to make products that will work on
    that product and not have to continuously maintain updates. This makes them popular
    with software vendors because they require less work to support. They tend to
    be popular with IT departments because the primary risks of LTS releases can be
    many years or even decades down the road and so most negative ramifications of
    choosing an LTS release tend to end up being someone else's problem.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: LTS发布的基础理论目标是提供一个*稳定*的产品，能够在*长期*内*得到支持*（我们在这里必须多加一些引号），从而使软件供应商能够轻松地开发在该产品上运行的应用，而无需持续维护更新。这使得它们在软件供应商中非常受欢迎，因为它们需要更少的工作来进行支持。它们通常也受到IT部门的青睐，因为LTS发布的主要风险可能在数年甚至数十年后才会显现，因此选择LTS发布的负面后果往往最终会成为别人的问题。
- en: Speaking in generalities can only get us so far. Be cognizant that vendors can
    use any model that they want and may change at any time and can use the term LTS
    without any underlying change to their support. Do not let the emotional reaction
    to the term cause you to favor an LTS release if the overall support does not
    best meet your needs.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅用一般性说法是远远不够的。请注意，供应商可以采用任何他们想要的模型，并且随时可能改变，同时可以在没有任何实质性支持变化的情况下使用LTS这个术语。如果整体支持不符合你的需求，请不要因为LTS这个术语而情绪化地偏向某个LTS发布。
- en: Red Hat's LTS product is RHEL. All versions of RHEL are LTS. Major Versions
    of RHEL release on a somewhat unpredictable schedule that started roughly every
    two years and has slowly increased to be closer to five years between releases
    and, we would guess, will continue to slowly expand in time between releases in
    the future.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Red Hat的LTS产品是RHEL。所有版本的RHEL都是LTS。RHEL的主要版本发布周期比较不固定，最初大约每两年发布一次，随着时间的推移，发布间隔逐渐变长，现在大约是五年一次，我们猜测未来的发布间隔可能会继续缓慢增长。
- en: Red Hat provides support for each release for approximately ten years. As you
    can easily see, the support cycle and the release cycle are both *long term* in
    terms of time but are not directly related to one another. The support timeline
    is two to five times the length of the release cycle, in this case. So, it is
    a long-term release (aka **slow release**) as well as a long-term support, model.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: Red Hat为每个版本提供大约十年的支持。如你所见，支持周期和发布周期都是*长期*的，但它们并不直接相关。支持周期是发布周期的两到五倍，因此，它既是一个长期发布（也叫**慢节奏发布**），又是一个长期支持的模型。
- en: RHEL itself is not free except under special circumstances. A number of RHEL
    clones exist, most of which are free and have no official vendor support but do
    receive patches making them *supported* in a similar way. Traditionally CentOS
    was the main, free LTS release mirroring RHEL. As CentOS was discontinued projects
    following in its footsteps like *RockyLinux*, *Oracle Linux* and *AlmaLinux* cover
    the same territory. We can completely legitimately call them LTS releases because
    they keep patch level and update support for a long time.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: RHEL本身除非在特定情况下是免费的。许多RHEL的克隆版本存在，其中大多数是免费的，并且没有官方供应商支持，但会接收补丁更新，因此在某种程度上也是*得到支持*的。传统上，CentOS是主要的免费LTS版本，镜像RHEL的功能。随着CentOS的停用，像*RockyLinux*、*Oracle
    Linux*和*AlmaLinux*等项目接替了它们，覆盖了相同的领域。我们完全可以合法地称它们为LTS版本，因为它们会长时间保持补丁级别和更新支持。
- en: Suse's LTS product is SUSE Linux Enterprise Server or **SLES**. This product
    uses a nearly identical major/minor and support model to Red Hat's and has always
    been considered the most direct competitor. SLES releases new major versions every
    three to five years on a rather irregular schedule as they feel that they are
    ready. Like Red Hat, official support for each major release is approximately
    ten years. So like RHEL, SLES is a slow release with a long term support model.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Suse的LTS产品是SUSE Linux Enterprise Server，或称**SLES**。该产品采用与Red Hat几乎相同的主/次版本和支持模型，并且一直被视为最直接的竞争对手。SLES每三到五年发布一次新的主要版本，发布周期比较不规则，通常是根据他们认为自己已经准备好发布的时机。像Red
    Hat一样，每个主要版本的官方支持期大约为十年。所以，像RHEL一样，SLES也是一个慢节奏的发布，并且有长期支持的模型。
- en: Like RHEL, SLES is not free on its own... *well not exactly*. Under the SLES
    brand name, SLES is not free. But SUSE makes a free version of SLES called **OpenSuse
    Leap**. This can be a bit confusing because Leap is the free version of SLES,
    but it causes the linguistic and logical challenge of having to say that SLES
    is not free, but Leap is the free version of SLES. Basically, SLES is not free
    when using the SLES name, but it is free when using the Leap name. Confusing?
    You had better believe it.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 和 RHEL 一样，SLES 本身并不是免费的……*嗯，不能完全这么说*。在 SLES 品牌下，SLES 并不免费。但是 SUSE 提供了一个免费的 SLES
    版本，叫做 **OpenSuse Leap**。这可能有点让人困惑，因为 Leap 是 SLES 的免费版本，但它带来了语言和逻辑上的挑战，因为我们必须说
    SLES 不是免费的，而 Leap 是 SLES 的免费版本。基本上，当使用 SLES 名称时，它不是免费的，但使用 Leap 名称时，它是免费的。困惑吗？你最好相信，这的确让人困惑。
- en: Both SLES and OpenSUSE Leap are slow releases and LTS. Both have support for
    the same length of time, but SLES has much more intensive support.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: SLES 和 OpenSUSE Leap 都是慢速发布和 LTS 版本。两者的支持时长相同，但 SLES 提供的支持更加深入。
- en: 'Canonical takes a very different approach with Ubuntu. Unlike Red Hat and SUSE
    which each make multiple products, Canonical makes only one: Ubuntu. Ubuntu releases
    like clockwork every six months as we mentioned above. Instead of making a separate
    product for its LTS release, Canonical simply designates every fourth release
    of its rapid release product as its LTS release. So, every two years a *special*
    Ubuntu release happens that gets approximately eight years of support. So, Ubuntu
    has only one product, and only one release cycle (every six months) but two support
    cycles. While the most complex to explain, this results in the most flexible and
    straight forward product development, testing, and use.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Canonical 在 Ubuntu 上采用了非常不同的方法。与 Red Hat 和 SUSE 每个都推出多个产品不同，Canonical 只推出一个产品：Ubuntu。如上所述，Ubuntu
    每六个月定期发布一次。Canonical 并没有为其 LTS 版本单独推出一个产品，而是将其快速发布产品中的每第四个版本指定为 LTS 版本。因此，每两年就会发布一个*特别的*
    Ubuntu 版本，获得大约八年的支持。所以，Ubuntu 只有一个产品，且仅有一个发布周期（每六个月一次），但有两个支持周期。虽然这种方式最难解释，但它带来了最灵活、最直接的产品开发、测试和使用方式。
- en: Debian takes yet another approach. Remember that Debian never offers paid vendor
    support options, but only security and software support. This influences their
    support model. Debian performs releases roughly every two years making it a slow-release
    product. However officially they only fully support the current release at any
    given time. Unofficially they often continue to support the previous version in
    many cases. This creates an odd situation where the release cycle is relatively
    slow, but the support mechanism is very aggressive expecting everyone using Debian
    to almost immediately update to the latest version which undermines the reasons
    that most companies want to work with a slow-release product in the first place.
    So, Debian is slow on release, but has anything but long-term support.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: Debian 采取了另一种方法。记住，Debian 从不提供付费的厂商支持选项，仅提供安全性和软件支持。这影响了它的支持模型。Debian 大约每两年发布一次新版本，因此它是一个慢速发布的产品。然而，官方仅完全支持当前版本。非官方情况下，他们通常会继续支持之前的版本。这就造成了一个奇怪的情况，发布周期相对较慢，但支持机制却非常激进，期望所有使用
    Debian 的人几乎立即更新到最新版本，这实际上削弱了大多数公司选择慢速发布产品的初衷。所以，Debian 发布缓慢，但其支持却远非长期支持。
- en: 'Release and support schedule interplay: The overlap'
  id: totrans-164
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布与支持计划的相互关系：重叠
- en: Release and support schedules on their own provide a limited picture. It is
    in putting the two together that we really see how we must view a distribution.
    With Ubuntu LTS, for example, a release cycle of two years means that we have
    the option to update our platform at one pace, and their long-term support cycle
    of eight years means that we have the option of not updating if we do not want
    to for several cycles without losing vendor support. Most people expect this behavior
    when talking about LTS models, but such behavior is not implied.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 单独的发布和支持计划提供了有限的信息。真正能让我们理解如何看待一个发行版的是将两者结合起来看。例如，Ubuntu LTS 的发布周期为两年，这意味着我们可以以一种速度更新平台，而它的长期支持周期为八年，意味着我们可以选择不更新，甚至可以有好几个周期不更新而不失去厂商支持。大多数人提到
    LTS 模式时，都期望这种行为，但实际上这种行为并不意味着所有 LTS 版本都表现如此。
- en: Debian's two-year release schedule is nearly identical to Ubuntu LTS' but with
    official support ending upon release of the latest version the guaranteed support
    is actually less than from even the Ubuntu interim release cycle which provides
    a three month overlap between the time that a new release comes out and when the
    support for the previous release ends.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Debian的两年发布周期几乎与Ubuntu LTS相同，但由于官方支持在最新版本发布时结束，实际上的支持保障低于Ubuntu过渡版本周期的支持，后者在新版本发布和旧版本支持结束之间提供三个月的重叠。
- en: This overlap, a number that no one ever talks about, is easily the most important
    factor to be discussed - if we were to believe that we could single out any one
    factor on its own in a meaningful way. The overlap tells us our window of opportunity
    not only for we as system administrators to update our systems, but also how long
    our third-party software vendors will have to test and release their new products
    while maintaining support from the operating system vendor. This overlap number
    varies from a low of 0 to a high of over 10 years. No one number is better or
    worse. Too large of an overlap encourages big problems. Too small can make maintaining
    systems difficult.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这种重叠，尽管几乎没人提及，却是最重要的因素之一，值得讨论——如果我们真的相信可以单独从某个方面有意义地分析某个因素的话。重叠告诉我们，不仅是作为系统管理员，我们更新系统的机会窗口，还包括我们的第三方软件供应商有多长时间进行测试并发布他们的新产品，同时保持与操作系统供应商的支持。这个重叠数字从最低的0年到最高的10多年不等。没有哪个数字是更好或更差的。重叠过大可能会引发严重问题，重叠过小则可能使得系统维护变得困难。
- en: To make matters more confusing, there is a volunteer team of developers that
    work with Debian to provide unofficial long-term support for every Debian release.
    So, while officially the Debian team provides extremely limited support, in practice
    and unofficially the support for previous versions is extensive and may easily
    challenge any other support vendor. This has created the situation where Debian
    is seen as stable, conservative, well supports, and rock solid while also lacking
    any paid primary vendor support or official LTS options!
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 更复杂的是，有一个志愿者开发团队与Debian合作，为每个Debian发布提供非官方的长期支持。因此，虽然Debian团队的官方支持极为有限，但在实践中和非官方上，对旧版本的支持非常广泛，甚至可能超越任何其他支持供应商。这种情况导致Debian被视为稳定、保守、得到良好支持且非常稳固，但同时缺乏任何付费的主要供应商支持或官方LTS选项！
- en: 'Release model: Rolling'
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布模型：滚动发布
- en: 'The key Rolling products are:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 关键的滚动产品包括：
- en: Fedora Rawhide
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fedora Rawhide
- en: OpenSUSE Tumbleweed
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSUSE Tumbleweed
- en: A **rolling release** means that system updates are made available immediately.
    We typically assume that this means that they will release *as available* which
    could mean that they release at any time, day or night, and potentially multiple
    times per day. Updates are not released on a pre-determined schedule. As soon
    as they are ready, they release. Of course, as the system administrator it is
    up to you to control when they are applied. Just because they release does not
    mean that they apply automatically.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '**滚动发布**意味着系统更新会立即提供。我们通常认为这意味着它们会*按可用性发布*，这可能意味着它们随时会发布，无论白天还是晚上，甚至可能一天发布多次。更新不会按照预定的时间表发布。一旦准备好，便会发布。当然，作为系统管理员，你可以控制它们何时应用。仅仅因为发布了更新，并不意味着它们会自动应用。'
- en: Rolling releases are the rarest and as you can imagine, can have a bit of difficulty
    coordinating with application vendors. The product is a constantly moving target
    and there is little, if any, ability to designate compatibility.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动发布是最为罕见的，正如你能想象的那样，它在与应用供应商的协调方面可能会遇到一些困难。该产品是一个不断变化的目标，几乎没有任何能力来指定兼容性。
- en: Rolling releases have some interesting artefacts to consider. First, they are
    great because you get absolutely all the latest features as quickly as possible.
    No waiting for a release cycle to come around. If a new feature that you want
    from a component product in the operating system releases the day after your rapid
    release prepares to go to market, you will have to wait at least six months for
    any major product to get that through to you. And if you are dealing with a slow-release
    distribution you have to wait two to five years! That can be quite a long wait
    if it is an important feature for you.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动发布有一些有趣的现象需要考虑。首先，它们非常棒，因为你可以尽快获得所有最新的特性。无需等待发布周期的到来。如果操作系统中的一个组件产品的新特性发布就在你的快速发布准备上市的第二天，你将至少要等六个月才能通过任何主要产品将其引入。如果你使用的是慢速发布版本，可能要等两到五年！如果这是一个对你来说重要的特性，这可能是相当长的等待。
- en: A famous example of waiting on features happened when *PHP 7* released and promised
    to completely revitalize the PHP landscape with far better performance and features.
    Companies stuck on slow-release products were waiting years to get the performance
    upgrade while rapid and rolling release distributions were running circles around
    them in benchmarks. In a world where features often include improved security
    capabilities waiting on new features can include security risks, as well.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 一个著名的等待新特性发布的例子发生在*PHP 7*发布时，它承诺通过更好的性能和特性彻底振兴PHP生态。坚持使用慢速发布产品的公司等待了多年才获得性能升级，而快速和滚动发布的分发在基准测试中已经超越了他们。在一个特性往往包括改进的安全功能的世界里，等待新特性可能也意味着安全风险。
- en: Why not just update the packages manually
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么不手动更新包呢？
- en: Proponents of long-term support and slow-release distributions will often make
    the claim that to solve the obvious short comings of the LTS ecosystem that we
    can just acquire the packages that we need in some other way and keep them up
    to date individually. A great example is the PHP case that I mentioned.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 支持长期支持和慢速发布的分发者通常会声称，为了解决LTS生态系统显而易见的不足，我们可以以某种方式获取所需的包，并单独更新它们。一个很好的例子就是我提到的PHP案例。
- en: This is entirely possible, and people do this all of the time. But just because
    it can be done, does not mean that it makes logical sense. The point, literally
    the entire point, of getting a slow release, long term support operating system
    is that you want there to be a predictable, supported target on which to run applications.
    Outside of that, everything about an LTS release is a negative to the customer
    organization.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这完全是可能的，而且人们经常这样做。但仅仅因为它可以做到，并不意味着它在逻辑上有意义。获取一个慢速发布、长期支持的操作系统的目的，字面上的整个目的，就是你希望有一个可以预测且得到支持的目标平台来运行应用程序。除此之外，LTS版本的所有内容对客户组织来说都是负面的。
- en: If we approach an LTS release with the assumption or willingness to simply start
    pulling apart the operating system and modifying pieces of it to get newer features,
    we undermine its function. The operating system vendor will no longer provide
    support, or have insight, into the full stack that they did before, and the application
    vendor will have an unknown target product. At this point we effectively take
    on all of the complications, overhead, and risk of a slow-release distribution
    while also taking on the problems and risks of a fast or rolling release distribution
    while additionally adding some overhead and risk of doing it ourselves outside
    of the purview of the vendor.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们以一个假设的前提或者愿意的态度来对待LTS发布，简单地拆解操作系统并修改其中的部分以获取更新的特性，我们就在破坏它的功能。操作系统供应商将不再提供支持，或无法像以前那样了解完整的技术栈，应用程序供应商也将面对一个未知的目标平台。在这种情况下，我们实际上承担了慢速发布分发的所有复杂性、开销和风险，同时还承担了快速或滚动发布分发的问题和风险，并且额外增加了我们自己在供应商视野之外操作所带来的额外开销和风险。
- en: All totally doable and it will easily work. But that it can work should never
    cause us to perceive this as being a good idea. Instead, it should expose how
    fundamentally foolish the idea of clinging to LTS distributions is if we do not
    actually believe in their value!
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切都是完全可行的，并且会顺利运行。但它能够工作并不应该让我们认为这是一个好主意。相反，它应该暴露出，如果我们并不真正相信LTS版本的价值，固守LTS版本的想法是多么根本上的愚蠢！
- en: A better approach would be to select a faster release distribution that properly
    meets our needs while also providing whatever level of support we require and
    getting a more complete support and update experience, less work on our end to
    recreate work that the vendor has already done, and not leaving the world of tested
    application targets to build something ourselves for no reason.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 更好的方法是选择一个更快的发布发行版，它能够恰当地满足我们的需求，同时提供我们所需的支持级别，并获得更完整的支持和更新体验，减少我们重建厂商已经完成的工作的负担，同时避免离开经过测试的应用目标，自己去无缘无故地构建一些东西。
- en: 'Best Practice: Use the tools as they are designed, do not try to work around
    the design to satisfy an emotional or political desire to use a long-term support
    distribution when it is not able to meet the needs.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践：按工具的设计使用，不要试图绕过设计来满足情感或政治上的需求，比如在工具不能满足需求时坚持使用长期支持版本。
- en: The underlying mistake we normally see here is losing sight of the goal. Presumably,
    the goal in a business is always to maximize profits. For practical reasons we
    often have to use intermediary goals to refine achieving our primary goal. In
    doing so we might distill part of our goal down to maximizing vendor support,
    which is already a dangerous intermediary goal. What is then happening in many
    organizations is taking that questionable intermediary goal and attempting to
    make a yet more intermediary goal of using LTS releases to meet the first intermediary
    goal and forgetting that just because a release is designated LTS does not mean
    that it provides better support necessarily or meets our needs and totally misses
    the point that if we do not use it as designed it is not really an LTS release
    any longer. At least not in practical terms.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通常看到的根本错误是失去了目标的方向。假设一个企业的目标始终是最大化利润。出于实际原因，我们常常需要使用中介目标来精细化实现我们的主要目标。这样一来，我们可能将目标的一部分提炼为最大化厂商支持，这本身就是一个危险的中介目标。那么，许多组织在此过程中所做的，就是拿着这个值得怀疑的中介目标，尝试通过使用
    LTS 版本来实现第一个中介目标，却忽略了一个事实：仅仅因为一个版本被指定为 LTS，并不意味着它一定提供更好的支持，或者满足我们的需求，完全错过了一个关键点——如果我们不按设计使用它，它就不再是真正的
    LTS 版本，至少在实际意义上是这样的。
- en: Rolling releases are less common than other types both in that fewer vendors
    make them and that fewer companies deploy them. The best-known rolling release
    is OpenSUSE Tumbleweed. Tumbleweed is given so much attention that OpenSUSE actually
    promotes it most of the time as their primary product. It is anything but a second-class
    citizen. Red Hat's rolling release is Fedora Rawhide.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动发布比其他类型的发布更少见，既因为较少的厂商生产它们，又因为较少的公司部署它们。最著名的滚动发布是 OpenSUSE Tumbleweed。Tumbleweed
    得到了如此多的关注，以至于 OpenSUSE 实际上大多数时候将其作为他们的主要产品进行推广。它绝不是二等公民。Red Hat 的滚动发布是 Fedora
    Rawhide。
- en: Support of rolling releases creates interesting conversation because with other
    releases we think of support and support time frames in relation to *time since
    the initial release*. But with a rolling release there are no release versions
    and so in some ways support is generally considered to only be for one day, or
    it is for forever, all depending on how you look at it.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动发布的支持引发了有趣的讨论，因为在其他发布中，我们会根据*自初始发布以来的时间*来考虑支持和支持时长。但对于滚动发布来说，并没有发布版本，因此在某种程度上，支持通常被认为只有一天，或者永远有效，这取决于你如何看待它。
- en: 'The reason that it is hard to understand or express how support works with
    rolling releases is not because rolling releases are complex, but rather because
    they are so simple that they do not hide the real problems that we are attempting
    to address with other release models: the desire to maintain vendor support while
    avoiding updating.'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 很难理解或表达滚动发布如何提供支持的原因，不是因为滚动发布很复杂，而是因为它们非常简单，以至于没有掩盖我们尝试通过其他发布模型解决的真正问题：希望在避免更新的同时保持厂商支持。
- en: With any release model if we keep our system continuously up to date, we are
    always covered by vendor support. What changes is not whether support is available,
    but what we are required to do to qualify for said support. With LTS releases
    we accept that we have to update (or just replace) our systems every five to ten
    years. With rapid release we accept that we have to update our systems every six
    to thirteen months. And with rolling releases we just have to accept that updating
    is a daily process. As long as we accept these things, all approaches have *eternal
    support* as long as the vendor supports the products in any capacity.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 无论采用哪种发布模型，如果我们保持系统持续更新，我们始终能够得到厂商的支持。改变的不是是否能够获得支持，而是为了获得支持，我们需要做什么。对于LTS发布版本，我们接受每五到十年就必须更新（或直接替换）系统。而对于快速发布，我们接受每六到十三个月就必须更新一次系统。至于滚动发布，我们只需要接受更新是一个日常的过程。只要我们接受这些要求，所有的方式都能在厂商支持产品的任何形式下提供*永久支持*。
- en: Choosing the release model for our workloads
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择适合我们工作负载的发布模型
- en: Now that we understand the release and support models, we need to think about
    applying them to our own decision making. Primarily our needs are going to be
    defined by our workload, as is always the case. But when we have options we need
    to be prepared to make well thought out and strategic decisions.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经理解了发布和支持模型，我们就需要思考如何将它们应用到我们自己的决策中。我们主要的需求将由我们的工作负载来定义，这一点一直如此。但当我们有选择时，我们需要做好准备，做出深思熟虑和战略性的决策。
- en: In general, most people lean heavily towards LTS releases, often irrationally
    so unable to state any benefit to the approach. Much of this emotional baggage
    likely stems from earlier days of IT when operating systems only had long term
    releases and updates were problematic and fragile often causing breaks. This was
    so significant that we often think of updating an operating system as something
    we assume cannot be done. This was (and still is) heavily prevalent in the Windows
    world were updates between operating system major releases truly did cause breaks
    of great significance with nearly every update and rarely was able to safely update
    a system *in situ*. The assumption became, and remains, that to upgrade the operating
    system under a workload that a new system will need to be deployed and the workload
    migrated over to it.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，大多数人倾向于选择LTS发布版本，往往是出于不理性的选择，无法指出这种方式的任何实际好处。这种情感负担很可能源于早期IT时代，当时操作系统只有长期发布版本，而更新常常出现问题，且不稳定，往往导致系统崩溃。这个问题非常严重，以至于我们通常认为更新操作系统是无法完成的任务。这种情形（并且至今仍然存在）在Windows世界尤为显著，因为操作系统的主版本更新之间，确实经常发生大范围的系统崩溃，每次更新几乎都带来不可忽视的后果，而很少能安全地*就地*更新系统。这个假设已经成为了普遍观念，并且持续至今：升级操作系统时，我们需要部署新的系统，并将工作负载迁移过去。
- en: This was mostly true in the UNIX world in the 1990s and earlier as well, but
    never to the same degree due to the prevalence of interface standards and the
    lack of GUI-based applications. The types of workloads typical on UNIX systems
    were generally able to work across many disparate systems already so version differences
    of a single operating system were trivialized by comparison. This fear of older
    systems, and especially Windows systems, not handling updates gracefully has unfortunately
    infected many managers and Linux decisions are often made on misinformation because
    of it.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这在1990年代及更早的UNIX世界中也大体成立，但由于接口标准的普及和缺乏基于GUI的应用程序，情况从未像现在这样严重。UNIX系统上的工作负载类型通常能够在多个不同的系统上运行，因此相比之下，单一操作系统的版本差异显得微不足道。这种对旧系统，特别是Windows系统，无法优雅地处理更新的恐惧，不幸地影响了许多管理者，Linux的决策常常因为这一点而建立在错误信息上。
- en: The problem is exacerbated by two key things as well. One is that slow-release
    systems such as RHEL and Ubuntu LTS go years between updates during which time
    many individual changes accumulate in the underlying components. So LTS updates
    often do present some complications because of this. Add to this the general trend
    of IT departments that choose LTS releases to also avoid other forms of updates
    or to not update LTS versions promptly (sometimes resulting in updates of more
    than one version at once) and updates can often truly become quite scary.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题还由于两个关键因素而加剧。首先，像RHEL和Ubuntu LTS这样慢发布的系统，更新周期很长，通常需要几年才会进行一次更新，在这段时间里，许多组件会发生变化。因此，LTS更新通常会因为这个原因而带来一些复杂性。此外，许多选择LTS发布的IT部门还倾向于避免其他形式的更新，或者不及时更新LTS版本（有时导致一次更新多个版本），这样更新就会变得非常可怕。
- en: Of course, we can tackle some of this by treating LTS releases properly and
    updating them as quickly as is appropriate, but we can never eliminate the additional
    overhead that they create entirely. By comparison we should look at a rapid release
    product like Fedora or Ubuntu that releases something like four to six times during
    the time that its associated LTS release updates once. On the surface, if you
    fear *updating* as a singular terrifying experience then doing so several times
    instead of once sounds downright dreadful. This is a misapplication of the concept,
    however.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们可以通过正确对待 LTS 版本并尽可能快速地更新它们来解决一些问题，但我们永远无法完全消除它们所带来的额外开销。相比之下，我们应该看看像 Fedora
    或 Ubuntu 这样的快速发布产品，它们在其关联的 LTS 发布更新一次期间，发布大约四到六次。从表面上看，如果你害怕将*更新*视为一次可怕的经历，那么多次更新而不是一次更新听起来简直让人畏惧。然而，这其实是对概念的误用。
- en: For the most part, interim releases like Ubuntu happening in between LTS releases
    are essentially incremental releases. The LTS release will get all of the same
    changes, but it will get many all at once. This makes updates much scarier and
    more complicated. Splitting up those same changes into four smaller releases generally
    makes it far easier to deal with any breaking compatibility issues sooner and
    more gracefully.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，像 Ubuntu 这样介于 LTS 发布之间的中间版本本质上是增量发布。LTS 发布会获得所有相同的更改，但它会一次性获得许多更改。这使得更新变得更加可怕和复杂。将这些相同的更改拆分成四个较小的发布通常能让我们更早、更优雅地处理任何兼容性破坏问题。
- en: Rolling releases, logically, extend these benefits even further and reduce system
    changes to the smallest possible amount per update. They do create a new problem
    in doing so which is that we lose the ability to identify a specific target release
    for testing. We then run the risk that when a vendor is testing in software will
    never exist on our own systems and we lose a bit of predictability. In practice
    rolling releases tend to work quite well and are completely valid in production,
    but they do add some risk through a loss of predictability and focused testing
    of third-party products.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动发布从逻辑上讲，进一步扩展了这些好处，并将每次更新的系统更改减少到最小的可能量。然而，这样做会产生一个新问题，那就是我们失去了为测试确定一个特定目标版本的能力。我们因此面临的风险是，当供应商在软件中进行测试时，它可能永远不会出现在我们的系统上，我们也会失去一些可预测性。实际上，滚动发布通常运行得相当顺利，并且在生产环境中完全有效，但它们确实通过失去可预测性和对第三方产品的集中测试增加了一些风险。
- en: If what we need is a system essentially only comprised of operating system components
    then a rolling release easily can pull into the lead in terms of the best support,
    security, and features. If we need to support third party applications on top
    of the operating system then we will mostly favor rapid releases, instead.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要的系统本质上只由操作系统组件构成，那么滚动发布在支持、安全性和功能方面很容易处于领先地位。如果我们需要在操作系统之上支持第三方应用程序，那么我们大多数情况下会倾向于快速发布。
- en: Nothing but the operating system
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 只有操作系统
- en: It was not so long ago that we would laugh at the idea that we could deploy
    an operating system for a desktop or a server, and never deploy another application
    on top of it but run the system only for components that are included in the operating
    system itself. If you come from the Windows world this is likely extra strange
    to contemplate as the operating system itself is so devoid of extra components.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 不久前，我们还会笑话那个想法：我们可以部署一个桌面或服务器操作系统，然后不再在其上部署其他应用程序，只运行操作系统本身包含的组件。如果你来自 Windows
    世界，那么考虑这个概念可能特别奇怪，因为操作系统本身几乎不包含额外的组件。
- en: In the Linux world operating systems tend to be rather full of additional components.
    On my desktop devices nearly every tool that I use comes included with my operating
    system. In fact, the Chromebook ecosystem is designed completely around this concept.
    In Linux servers we see this happen a lot as well with many components from web
    servers to databases all included in the operating system.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 世界中，操作系统往往包含了很多附加组件。在我的桌面设备上，几乎每一个我使用的工具都包含在我的操作系统中。实际上，Chromebook 生态系统完全围绕这个概念设计。在
    Linux 服务器中，我们也经常看到这种情况，许多组件，从 web 服务器到数据库，都包含在操作系统中。
- en: The overall amount and general fragility of third-party applications being run
    today is very different than it was just ten, let alone twenty, years ago. Another
    factor lessening the benefits of slow-release distributions.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 当前运行的第三方应用程序的总体数量和脆弱性与十年前，甚至二十年前大不相同。另一个减少慢速发布发行版好处的因素。
- en: Understanding support and release models is not a trivial task and surprisingly
    few system administrators ever take the time to really understand what it means.
    Now that you understand what each model means you will be able to apply future
    offerings from potentially new vendors and use that to make decisions for your
    organization. You already have a jump on many in the industry who tend to gloss
    over or ignore these types of decisions as if they are trivial when they can result
    in significant implications if chosen incorrectly.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 理解支持和发布模型并非一项琐事，令人惊讶的是，几乎没有系统管理员真正花时间去了解它意味着什么。现在你已经了解了每种模型的含义，你将能够应用来自潜在新供应商的未来产品，并用它来为你的组织做出决策。你已经领先于行业中许多人，这些人往往忽视或忽略这些决策，仿佛它们微不足道，而实际上如果选择错误，它们可能带来重要的影响。
- en: Now that we have gone into so many different types of details about Linux distributions
    we are going to take all of these different aspects and concerns and attempt to
    combine them into a holistic decision-making strategy to help us pick our distribution
    for deployment for any workload that we may be considering.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们已经深入探讨了许多关于 Linux 发行版的不同细节，接下来我们将把所有这些不同的方面和关注点结合起来，尝试制定一个全面的决策策略，以帮助我们为任何可能考虑的工作负载选择合适的发行版。
- en: Choosing your distribution
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择你的发行版
- en: Surprisingly, picking which **distribution**, or **distro** as it is commonly
    called in the Linux world, can be far more of a challenge than it seems like it
    should be. You might be *lucky* and work for a company that has a pre-determined
    Linux distro standard that you have to follow, and this question is already answered
    for you. This is becoming an increasingly rare scenario, though, as companies
    begin to realize the benefits of using the right distro for the right use case,
    and as it becomes better known that the idea that skills standardization just
    doesn't benefit from keeping systems identical as much as it was commonly assumed.
    But the practice still exists.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 出人意料的是，选择哪个**发行版**，或者在 Linux 世界中通常所说的**distro**，可能比看起来要更具挑战性。你可能会是*幸运*的，所在公司已经有了预先确定的
    Linux 发行版标准，且你只需遵循，这个问题对你来说早已解决。然而，随着公司逐渐意识到根据实际使用场景选择正确的发行版所带来的好处，以及意识到系统标准化并不像以前认为的那样能从保持系统一致性中受益，这种情况变得越来越少见。尽管如此，这种做法依然存在。
- en: At the end of the day, it is essentially nonsensical to lead with operating
    system over workload choices. There is relatively little value in forcing a specific
    operating system choice and making application choices based on that. Of course,
    in an ideal world, all factors are considered and weighed and licensing, support
    knowledge, standardization and other factors heavily impacting operating system
    choice will play a role, they tend to be pretty small in comparison to application
    choice factors. And that's assuming that we are considering Windows, macOS, and
    some *Linux variant*; if the decision is just about one Linux option or another
    then the differences between distributions drops considerably.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 归根结底，优先考虑操作系统而非工作负载的选择基本上是没有意义的。强迫选择特定操作系统并基于此做出应用选择的价值相对较小。当然，在理想的世界里，各种因素都会被考虑和权衡，许可、支持知识、标准化及其他对操作系统选择有重大影响的因素将起作用，但与应用选择因素相比，它们通常显得较为微不足道。而且，假设我们正在考虑
    Windows、macOS 和某些*Linux 变种*；如果仅仅是关于一个 Linux 选项与另一个的选择，那么各个发行版之间的差异就会大大减少。
- en: Of course, if you are in an environment with thousands of **RHEL servers** and
    are tempted to install a single Ubuntu server for a specific workload, the value
    of figuring out how to get that workload working on RHEL or considering another
    workload might be reasonable given the scale of standardization that we are talking
    about. But it's very rare that an IT shop will ever be in a position to have hundreds
    or thousands of operating system images that are homogenous. Very much an edge
    case scenario.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果你处在一个拥有成千上万**RHEL 服务器**的环境中，并且有冲动为特定工作负载安装一个单独的 Ubuntu 服务器，那么根据我们所谈论的标准化规模，想方设法让工作负载在
    RHEL 上运行，或者考虑其他工作负载可能是合理的。然而，IT 部门通常很少能处于拥有成百上千个同质操作系统镜像的情况。这是一个非常边缘的案例。
- en: Using our workload to tell us what distributions realistic options are, and
    then applying any homogeneity factors, we then can factor in release and support
    models that best suit the needs of the application and the business. Risk aversion
    and affinity is, of course, a major factor.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们的工作负载来告诉我们现实选项的分布情况，然后应用任何同质性因素，我们可以考虑最适合应用和业务需求的发布和支持模型。当然，风险规避和偏好是一个重要因素。
- en: Do not fear risk
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 不要害怕风险
- en: Every business, every decision has risks. In IT one of our most important jobs
    is evaluating risks and balancing those risks against opportunity and reward.
    Reducing risk factors to pure math can be difficult to do, often impossible, but
    even if we cannot simply create numbers to show us what risk and reward levels
    are in any given decision this should not change the fundamental fact that our
    goal is to apply math and logic to a situation to decide the best course of action.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 每个业务，每个决策都有风险。在信息技术领域，我们最重要的工作之一就是评估风险，并将这些风险与机会和回报进行平衡。将风险因素简化为纯数学可能很难，甚至是不可能的，但即使我们不能简单地通过数字来显示任何给定决策中的风险和回报水平，这也不应改变我们目标的根本事实——那就是运用数学和逻辑来判断最佳的行动方案。
- en: A real threat to businesses and one that causes businesses to fail with great
    frequency is risk aversion. This might sound counter intuitive, but it is not.
    If risk aversion, or truly conservative business practices, are based in reason
    and logic then this should increase a business' chances of survival. Rarely is
    this the case, however. Most risk aversion is emotional and illogical and emotional
    decisions, especially when made around risk, almost always result in more risk
    rather than less, regardless of what the intended outcome was to be. Much as how
    a panic response will rarely save you in a dangerous situation, an emotional panic-like
    response to business decisions will almost entirely remove your ability to make
    good decisions.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 一个真正威胁到企业的因素，并且经常导致企业失败的，是风险规避。听起来似乎有些违背直觉，但其实并不然。如果风险规避或真正保守的商业实践是基于理性和逻辑的，那么这应当增加企业存活的机会。然而，情况通常并非如此。大多数风险规避是情绪化且不合逻辑的，而情绪化的决策，尤其是在面对风险时，几乎总是会导致更多的风险，而非减少，无论预期结果如何。就像在危险情况下恐慌反应很少能救你一样，情绪化的恐慌式商业决策几乎完全剥夺了你做出正确决策的能力。
- en: As IT professionals, working with our businesses to understand risk assessments,
    factors, and affinity levels is a large part of our value to the organization.
    Choosing an operating system might be a tiny individual component taken on its
    own, but it is a common view into the workings of a business' decision-making
    machinery. If a business requires expensive vendor support or risk slow-release
    cycles out of fear rather than out of calculated risk assessment, this tells us
    a lot about how decision making is viewed as a process.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 作为IT专业人员，与企业合作，了解风险评估、因素和偏好水平，是我们为组织创造价值的重要部分。选择操作系统可能是一个单独的小组件，但它却是了解企业决策过程的常见途径。如果一个企业需要昂贵的供应商支持，或者因为害怕风险而延迟发布周期，而不是基于经过计算的风险评估，这就能告诉我们很多关于企业如何看待决策过程的信息。
- en: 'Best Practice: A business should hold their staff responsible not for the outcome
    of decisions, but rather for the quality of the decision-making process.'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳实践：企业应该让员工对决策过程的质量负责，而非决策结果。
- en: This best practice applies to absolutely every facet of an organization and
    is in no way specific to choosing a Linux distribution or workload. That is how
    best practices really are, very general and widely applicable.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 这一最佳实践适用于组织的各个方面，绝不局限于选择Linux发行版或工作负载。这正是最佳实践的特点——非常普遍且广泛适用。
- en: Summary
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We covered a lot in this chapter and a lot of seemingly unimportant factors
    that, I believe, tend to actually be pretty important in our roles in system administration.
    We learned how Linux fits into modern organizations and where it comes from historically
    which might give us some view into where it is going, as well. We dove into open-source
    licensing and how software licensing plays a role in how we work with our operating
    systems.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章节中，我们涵盖了很多内容，包括一些看似不重要的因素，而我相信，这些因素实际上在系统管理中往往是非常重要的。我们了解了Linux如何融入现代组织以及它的历史来源，这也许能帮助我们了解它未来的发展趋势。我们还深入探讨了开源许可协议以及软件许可如何影响我们与操作系统的工作方式。
- en: We took a look at who the big vendors are today and what key products they have
    on the market. Then we investigated release and support patterns both in general
    and specifically from the major vendors on the market today. And then we looked
    at putting all of those factors together to try to make a decision process for
    picking the best distribution for our workload.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了今天市场上的主要供应商以及他们的核心产品。接着，我们调查了发布和支持模式，既包括一般性的模式，也特别分析了今天市场上主要供应商的情况。然后，我们尝试将所有这些因素结合起来，形成一个决策过程，帮助我们选择适合工作负载的最佳发行版。
- en: In our next chapter we are going to be leaving behind the ten-thousand-foot
    views and we will be digging into the very technical world of *System Storage
    Best Practices*. This is one of my favorite areas of system **administration**!
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的下一章中，我们将告别那种万尺高空的视角，深入探讨非常技术性的*系统存储最佳实践*领域。这是我最喜欢的系统**管理**领域之一！
