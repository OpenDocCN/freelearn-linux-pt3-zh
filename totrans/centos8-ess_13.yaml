- en: 15\. CentOS 8 Remote Desktop Access with VNC
  prefs: []
  type: TYPE_NORMAL
- en: CentOS 8 can be configured to provide remote access to the graphical desktop
    environment over a network or internet connection. Although not enabled by default,
    it is relatively straightforward to display and access a CentOS 8 desktop from
    a system anywhere else on a network or the internet. This can be achieved regardless
    of whether that system is running Linux, Windows or macOS. In fact, there are
    even apps available for Android and iOS that will allow you to access your CentOS
    8 desktop from just about anywhere that a data signal is available.
  prefs: []
  type: TYPE_NORMAL
- en: Remote desktop access can be useful in a number of scenarios. It enables you
    or another person, for example, to view and interact with your CentOS 8 desktop
    environment from another computer system either on the same network or over the
    internet. This is useful if you need to work on your computer when you are away
    from your desk such as while traveling. It is also useful in situations where
    a co-worker or IT support technician needs access to your desktop to resolve a
    problem.
  prefs: []
  type: TYPE_NORMAL
- en: In situations where the CentOS 8 system is running on a cloud-based server,
    it also allows access to the desktop environment as an alternative to performing
    administrative tasks using the command-line prompt or Cockpit web console.
  prefs: []
  type: TYPE_NORMAL
- en: The CentOS 8 remote desktop functionality is based on technology known as Virtual
    Network Computing (VNC) and in this chapter we will cover the key aspects of configuring
    and using remote desktops within CentOS 8\.
  prefs: []
  type: TYPE_NORMAL
- en: 15.1 Secure and Insecure Remote Desktop Access
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter we will cover both secure and insecure remote desktop access
    methods. Assuming that you are accessing one system from another within the context
    of a secure internal network then it is generally safe to use the insecure access
    method. If, on the other hand, you plan to access your desktop remotely over any
    kind of public network you must use the secure method of access to avoid your
    system and data being compromised.
  prefs: []
  type: TYPE_NORMAL
- en: 15.2 Installing the GNOME Desktop Environment
  prefs: []
  type: TYPE_NORMAL
- en: 'It is, of course, only possible to access the desktop environment if the desktop
    itself has been installed. If, for example, the system was initially configured
    as a server it is unlikely that the desktop packages were installed. The easiest
    way to install the packages necessary to run the GNOME desktop is to perform a
    group install. The key to installing groups of packages to enable a specific feature
    is knowing the name of the group. At the time of writing, the group for installing
    the desktop environment on CentOS 8 is named “Workstation”. As the group names
    have a tendency to change from one CentOS release to another, it is useful to
    know that the list of groups that are either installed or available to be installed
    can be obtained using the dnf utility as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: dnf grouplist
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Available Environment Groups:'
  prefs: []
  type: TYPE_NORMAL
- en: Workstation
  prefs: []
  type: TYPE_NORMAL
- en: Minimal Install
  prefs: []
  type: TYPE_NORMAL
- en: Custom Operating System
  prefs: []
  type: TYPE_NORMAL
- en: 'Installed Environment Groups:'
  prefs: []
  type: TYPE_NORMAL
- en: Server with GUI
  prefs: []
  type: TYPE_NORMAL
- en: 'Installed Groups:'
  prefs: []
  type: TYPE_NORMAL
- en: Container Management
  prefs: []
  type: TYPE_NORMAL
- en: 'Available Groups:'
  prefs: []
  type: TYPE_NORMAL
- en: .NET Core Development
  prefs: []
  type: TYPE_NORMAL
- en: RPM Development Tools
  prefs: []
  type: TYPE_NORMAL
- en: Smart Card Support
  prefs: []
  type: TYPE_NORMAL
- en: Scientific Support
  prefs: []
  type: TYPE_NORMAL
- en: Security Tools
  prefs: []
  type: TYPE_NORMAL
- en: Development Tools
  prefs: []
  type: TYPE_NORMAL
- en: System Tools
  prefs: []
  type: TYPE_NORMAL
- en: Headless Management
  prefs: []
  type: TYPE_NORMAL
- en: Network Servers
  prefs: []
  type: TYPE_NORMAL
- en: Legacy UNIX Compatibility
  prefs: []
  type: TYPE_NORMAL
- en: Graphical Administration Tools
  prefs: []
  type: TYPE_NORMAL
- en: 'In the above example, the Workstation environment group is listed as being
    available (and therefore not already installed). To find out more information
    about the contents of a group prior to installation, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: dnf groupinfo workstation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Environment Group: Workstation'
  prefs: []
  type: TYPE_NORMAL
- en: 'Description: Workstation is a user friendly desktop system for laptops and
    PCs.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Mandatory Groups:'
  prefs: []
  type: TYPE_NORMAL
- en: Common NetworkManager submodules
  prefs: []
  type: TYPE_NORMAL
- en: Core
  prefs: []
  type: TYPE_NORMAL
- en: Fonts
  prefs: []
  type: TYPE_NORMAL
- en: GNOME
  prefs: []
  type: TYPE_NORMAL
- en: Guest Desktop Agents
  prefs: []
  type: TYPE_NORMAL
- en: Internet Browser
  prefs: []
  type: TYPE_NORMAL
- en: Multimedia
  prefs: []
  type: TYPE_NORMAL
- en: Standard
  prefs: []
  type: TYPE_NORMAL
- en: Workstation product core
  prefs: []
  type: TYPE_NORMAL
- en: base-x
  prefs: []
  type: TYPE_NORMAL
- en: 'Having confirmed that this is the correct group, it can be installed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: dnf groupinstall workstation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once installed, and assuming that the system has a display added, the desktop
    can be launched using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: $ startx
  prefs: []
  type: TYPE_NORMAL
- en: If, on the other hand, the system is a server with no directly connected display,
    the only way to run and access the desktop will be to configure VNC support on
    the system.
  prefs: []
  type: TYPE_NORMAL
- en: 15.3 Installing VNC on CentOS 8
  prefs: []
  type: TYPE_NORMAL
- en: Access to a remote desktop requires a VNC server installed on the remote system,
    a VNC viewer on the system from which access is being established and, optionally,
    a secure SSH connection. While a number of VNC server and viewer implementations
    are available, CentOS has standardized on TigerVNC which provides both server
    and viewer components for Linux-based operating systems. VNC viewer clients for
    non-Linux platforms include RealVNC and TightVNC.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install the TigerVNC server package on CentOS 8, simply run the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: dnf install tigervnc-server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If required, the TigerVNC viewer may also be installed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: dnf install tigervnc
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once the server has been installed the system will need to be configured to
    run one or more VNC services and to open the appropriate ports on the firewall.
  prefs: []
  type: TYPE_NORMAL
- en: 15.4 Configuring the VNC Server
  prefs: []
  type: TYPE_NORMAL
- en: 'With the VNC server packages installed, the next step is to configure the server.
    The first step is to specify a password for the user that will be accessing the
    remote desktop environment. While logged in as root, execute the following command
    (where the user name is assumed to be demo):'
  prefs: []
  type: TYPE_NORMAL
- en: su - demo
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[demo@demoserver ~]$ vncpasswd'
  prefs: []
  type: TYPE_NORMAL
- en: 'Password:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Verify:'
  prefs: []
  type: TYPE_NORMAL
- en: Would you like to enter a view-only password (y/n)? n
  prefs: []
  type: TYPE_NORMAL
- en: A view-only password is not used
  prefs: []
  type: TYPE_NORMAL
- en: '[demo@demoserver ~]$ exit'
  prefs: []
  type: TYPE_NORMAL
- en: '#'
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, a VNC server configuration file named vncserver@.service needs to be
    created in the /etc/systemd/system directory. The content of this file should
    read as follows, where all instances of <USER> are replaced with the username
    referenced when the VNC password was set:'
  prefs: []
  type: TYPE_NORMAL
- en: '[Unit]'
  prefs: []
  type: TYPE_NORMAL
- en: escription=Remote desktop service (VNC)
  prefs: []
  type: TYPE_NORMAL
- en: After=syslog.target network.target
  prefs: []
  type: TYPE_NORMAL
- en: '[Service]'
  prefs: []
  type: TYPE_NORMAL
- en: Type=forking
  prefs: []
  type: TYPE_NORMAL
- en: WorkingDirectory=/home/<USER>
  prefs: []
  type: TYPE_NORMAL
- en: User=<USER>
  prefs: []
  type: TYPE_NORMAL
- en: Group=<USER>
  prefs: []
  type: TYPE_NORMAL
- en: ExecStartPre=/bin/sh -c '/usr/bin/vncserver -kill %i > /dev/null 2>&1 || :'
  prefs: []
  type: TYPE_NORMAL
- en: ExecStart=/usr/bin/vncserver -autokill %i
  prefs: []
  type: TYPE_NORMAL
- en: ExecStop=/usr/bin/vncserver -kill %i
  prefs: []
  type: TYPE_NORMAL
- en: Restart=on-success
  prefs: []
  type: TYPE_NORMAL
- en: RestartSec=15
  prefs: []
  type: TYPE_NORMAL
- en: '[Install]'
  prefs: []
  type: TYPE_NORMAL
- en: WantedBy=multi-user.target
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the firewall needs to be configured to provide external access to the
    VNC server for remote VNC viewer instances, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: firewall-cmd --permanent --zone=public --add-port=5901/tcp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: firewall-cmd --reload
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'With the service configuration file created, the service needs to be enabled
    and started as follow:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl daemon-reload
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: systemctl start vncserver@:1.service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: systemctl enable vncserver@:1.service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Note that :1 is included in the service name to indicate that this is the service
    for VNC server display number 1\. This matches port 5901 which was previously
    opened in the firewall.
  prefs: []
  type: TYPE_NORMAL
- en: 'Check that the service has started successfully as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl status vncserver@:1.service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If the service fails to start, run the following command to check for error
    messages:'
  prefs: []
  type: TYPE_NORMAL
- en: journalctl -xe
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Also try again after rebooting the system. If the service continues to fail,
    the VNC server can be started manually by logging in as the designated user and
    running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: $ vncserver :1
  prefs: []
  type: TYPE_NORMAL
- en: 15.5 Connecting to a VNC Server
  prefs: []
  type: TYPE_NORMAL
- en: VNC viewer implementations are available for a wide range of operating systems
    and a quick internet search will likely provide numerous links containing details
    on how to obtain and install this tool on your chosen platform.
  prefs: []
  type: TYPE_NORMAL
- en: 'From the desktop of a Linux system on which a VNC viewer such as TigerVNC is
    installed, a remote desktop connection can be established as follows from a Terminal
    window:'
  prefs: []
  type: TYPE_NORMAL
- en: $ vncviewer <hostname>:<display number>
  prefs: []
  type: TYPE_NORMAL
- en: 'In the above example, <hostname> is either the hostname or IP address of the
    remote system and <display number> is the display number of the VNC server desktop,
    for example:'
  prefs: []
  type: TYPE_NORMAL
- en: $ vncviewer 192.168.1.115:1
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, run the command without any options to be prompted for the details
    of the remote server:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_vnc_viewer.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-1
  prefs: []
  type: TYPE_NORMAL
- en: Enter the hostname or IP address followed by the display number (for example
    192.168.1.115:1) into the VNC server field and click on the Connect button. The
    viewer will prompt for the user’s VNC password to complete the connection, at
    which point a new window containing the remote desktop will appear.
  prefs: []
  type: TYPE_NORMAL
- en: This section assumed that the remote desktop was being accessed from a Linux
    or UNIX system, the same steps apply for most other operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting to a remote VNC server using the steps in this section results in
    an insecure, unencrypted connection between the client and server. This means
    that the data transmitted during the remote session is vulnerable to interception.
    To establish a secure and encrypted connection a few extra steps are necessary.
  prefs: []
  type: TYPE_NORMAL
- en: 15.6 Establishing a Secure Remote Desktop Session
  prefs: []
  type: TYPE_NORMAL
- en: The remote desktop configurations we have explored so far in this chapter are
    considered to be insecure because no encryption is used. This is acceptable when
    the remote connection does not extend outside of an internal network protected
    by a firewall. When a remote session is required over an internet connection,
    however, a more secure option is needed. This is achieved by tunneling the remote
    desktop through a secure shell (SSH) connection. This section will cover how to
    do this on Linux, UNIX and macOS client systems.
  prefs: []
  type: TYPE_NORMAL
- en: The SSH server is typically installed and activated by default on CentOS 8 systems.
    If this is not the case on your system, refer to the chapter entitled [“Configuring
    SSH Key-based Authentication on CentOS 8”](../Text/SSH_Authentication.xhtml#_idTextAnchor181).
  prefs: []
  type: TYPE_NORMAL
- en: 'Assuming the SSH server is installed and active it is time to move to the other
    system. At the other system, log in to the remote system using the following command,
    which will establish the secure tunnel between the two systems:'
  prefs: []
  type: TYPE_NORMAL
- en: $ ssh -l <username> -L 5901:localhost:5901 <remotehost>
  prefs: []
  type: TYPE_NORMAL
- en: 'In the above example, <username> references the user account on the remote
    system for which VNC access has been configured, and <remotehost> is either the
    host name or IP address of the remote system, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: $ ssh -l neilsmyth -L 5901:localhost:5901 192.168.1.115
  prefs: []
  type: TYPE_NORMAL
- en: 'When prompted, log in using the account password. With the secure connection
    established it is time to launch vncviewer so that it uses the secure tunnel.
    Leaving the SSH session running in the other terminal window, launch another terminal
    and enter the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: $ vncviewer localhost:5901
  prefs: []
  type: TYPE_NORMAL
- en: The vncviewer session will prompt for a password if one is required, and then
    launch the VNC viewer providing secure access to your desktop environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Although the connection is now secure and encrypted, the VNC viewer will most
    likely still report that the connection is insecure. [Figure 15-2](../Text/Remote_Desktop_Access.xhtml#_idTextAnchor206),
    for example, shows the warning dialog displayed by the RealVNC viewer running
    on a macOS system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_vnc_viewer_not_encrypted.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-2
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, although the connection is now secure, the VNC viewer software
    has no way of knowing this and consequently continues to issue warnings. Rest
    assured that as long as the SSH tunnel is being used, the connection is indeed
    secure.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the above example we left the SSH tunnel session running in a terminal window.
    If you would prefer to run the session in the background, this can be achieved
    by using the –f and –N flags when initiating the connection:'
  prefs: []
  type: TYPE_NORMAL
- en: $ ssh -l <username> -f -N -L 5901:localhost:5901 <remotehost>
  prefs: []
  type: TYPE_NORMAL
- en: The above command will prompt for a password for the remote server and then
    establish the connection in the background, leaving the terminal window available
    for other tasks.
  prefs: []
  type: TYPE_NORMAL
- en: If you are connecting to the remote desktop from outside the firewall keep in
    mind that the IP address for the SSH connection will be the external IP address
    provided by your ISP or cloud hosting provider, not the LAN IP address of the
    remote system (since this IP address is not visible to those outside the firewall).
    You will also need to configure your firewall to forward port 22 (for the SSH
    connection) to the IP address of the system running the desktop. It is not necessary
    to forward port 5900\. Steps to perform port forwarding differ between firewalls,
    so refer to the documentation for your firewall, router or wireless base station
    for details specific to your configuration.
  prefs: []
  type: TYPE_NORMAL
- en: 15.7 Establishing a Secure Tunnel on Windows using PuTTY
  prefs: []
  type: TYPE_NORMAL
- en: A similar approach is taken to establishing a secure desktop session from a
    Windows system to a CentOS 8 server. Assuming that you already have a VNC client
    such as TightVNC installed, the one remaining requirement is a Windows SSH client
    (in this case PuTTY).
  prefs: []
  type: TYPE_NORMAL
- en: 'Once PuTTY is downloaded and installed, the first step is to establish a secure
    connection between the Windows system and the remote CentOS 8 system with appropriate
    tunneling configured. When launched, PuTTY displays the following screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_vnc_putty_main.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-3
  prefs: []
  type: TYPE_NORMAL
- en: 'Enter the IP address or host name of the remote host (or the external IP address
    of the gateway if you are connecting from outside the firewall). The next step
    is to set up the tunnel. Click on the + next to SSH in the Category tree on the
    left-hand side of the dialog and click on Tunnels. The screen should subsequently
    appear as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_vnc_putty_tunnels.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15-4
  prefs: []
  type: TYPE_NORMAL
- en: Enter 5901 as the Source port and localhost:5901 as the Destination and click
    on the Add button. Finally return to the main screen by clicking on the Session
    category. Enter a name for the session in the Saved Sessions text field and press
    Save. Click on Open to establish the connection. A terminal window will appear
    with the login prompt from the remote system. Enter the appropriate user login
    and password credentials.
  prefs: []
  type: TYPE_NORMAL
- en: The SSH connection is now established. Launch the TightVNC viewer and enter
    localhost:5901 in the VNC Server text field and click on Connect. The viewer will
    establish the connection, prompt for the password and then display the desktop.
    You are now accessing the remote desktop of a Linux system from Windows over a
    secure SSH tunnel connection.
  prefs: []
  type: TYPE_NORMAL
- en: 15.8 Shutting Down a Desktop Session
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to shut down a VNC Server hosted desktop session, use the –kill command-line
    option together with the number of the desktop to be terminated. For example,
    to kill desktop :1:'
  prefs: []
  type: TYPE_NORMAL
- en: vncserver –kill :1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 15.9 Troubleshooting a VNC Connection
  prefs: []
  type: TYPE_NORMAL
- en: 'With so much happening in the background, VNC can sometimes seem opaque, particularly
    when problems arise and the server either fails to start, or attempts to connect
    remotely result in error messages. There are, however, a number of techniques
    for tracking down and resolving VNC problems:'
  prefs: []
  type: TYPE_NORMAL
- en: 'If the VNC service fails to start, check the systemctl status of the service
    and check for error messages:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl status vncserver@:1.service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For more detailed information, check the systemd journal by running the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: journalctl -xe
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Additional information may be available in the log file located at:'
  prefs: []
  type: TYPE_NORMAL
- en: /home/<username>/.vnc/<hostname>.<domain>:<display number>.log
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: /home/neilsmyth/.vnc/server01.localdomain:1.log
  prefs: []
  type: TYPE_NORMAL
- en: 'If the systemd VNC service is still unable to start the VNC server, try starting
    it manually using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: vncserver :<display number>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For example:'
  prefs: []
  type: TYPE_NORMAL
- en: vncserver :1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Check the output and log file for any errors that may help identify the problem.
    If the server starts successfully, try connecting again with a VNC viewer.
  prefs: []
  type: TYPE_NORMAL
- en: 'If the VNC server appears to be running but attempts to connect from a viewer
    fail, it may be worth checking that the correct firewall ports are open. Begin
    by identifying the default zone as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: firewall-cmd --get-default-zone
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: public
  prefs: []
  type: TYPE_NORMAL
- en: 'Having obtained the default zone, check that the necessary ports are open:'
  prefs: []
  type: TYPE_NORMAL
- en: firewall-cmd --permanent --zone=public --list-ports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 5901/tcp 5900/tcp
  prefs: []
  type: TYPE_NORMAL
- en: 'If a port used by VNC is not open, add the port as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: firewall-cmd --permanent --zone=public --add-port=<port number>/tcp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 15.10 Summary
  prefs: []
  type: TYPE_NORMAL
- en: Remote access to the GNOME desktop environment of a CentOS 8 system can be enabled
    by making use of Virtual Network Computing (VNC). Comprising the VNC server running
    on the remote server and a corresponding client on the local host, VNC allows
    remote access to multiple desktop instances running on the server.
  prefs: []
  type: TYPE_NORMAL
- en: When the VNC connection is being used over a public connection, the use of SSH
    tunneling is recommended to ensure that the communication between client and server
    is encrypted and secure.
  prefs: []
  type: TYPE_NORMAL
