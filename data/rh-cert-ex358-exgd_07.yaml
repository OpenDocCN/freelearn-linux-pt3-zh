- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: Databases – Setting Up and Working with MariaDB SQL Databases
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据库 – 设置和使用 MariaDB SQL 数据库
- en: In this chapter, we will be discussing databases. In our case, this will involve
    going into detail about the operation of MariaDB. This is a powerful tool that
    allows us to store and access data for use by applications, as well as web servers.
    With the power of a fully functional database behind your project, you will be
    able to increase the functionality of your application or web server by adding
    a multitude of items that can be saved and accessed by these products. Things
    from shopping carts to member information can all be saved using MariaDB. Let’s
    get started with learning more about databases and MariaDB for Red Hat Enterprise
    Linux 8.1.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将讨论数据库。在我们的案例中，这将详细介绍 MariaDB 的操作。MariaDB 是一个强大的工具，允许我们存储和访问应用程序以及 Web 服务器使用的数据。有了一个功能完善的数据库支撑你的项目，你将能够通过添加多种可以被这些产品保存和访问的项目，来增强应用程序或
    Web 服务器的功能。从购物车到会员信息，所有这些都可以使用 MariaDB 保存。让我们开始了解更多关于数据库和 MariaDB 的内容，特别是针对 Red
    Hat Enterprise Linux 8.1 的使用。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涉及以下主要内容：
- en: Getting started with MariaDB for data collection storage
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用 MariaDB 进行数据收集存储
- en: Installing and configuring MariaDB on RHEL 8 manually
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 RHEL 8 上手动安装和配置 MariaDB
- en: Installing and configuring MariaDB on RHEL 8 using Ansible Automation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Ansible 自动化在 RHEL 8 上安装和配置 MariaDB
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The technical requirements for this chapter are covered in the following subsection.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的技术要求将在以下子节中介绍。
- en: Setting up GitHub access
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 GitHub 访问
- en: 'Please refer to the instructions found in [*Chapter 1*](B18607_01.xhtml#_idTextAnchor016),
    *Block Storage – Learning How to Provision Block Storage on Red Hat Enterprise
    Linux*, to gain access to GitHub. You will find the Ansible Automation playbooks
    for this chapter at the following link: [https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter07](https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter07).
    Remember these are suggested playbooks and are not the only way you can write
    them – you can make the playbooks work for you.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考 [*第 1 章*](B18607_01.xhtml#_idTextAnchor016)《块存储 – 学习如何在 Red Hat Enterprise
    Linux 上配置块存储》中的说明，以访问 GitHub。你可以在以下链接找到本章的 Ansible 自动化 playbook：[https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter07](https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter07)。记住，这些是建议的
    playbook，并不是你编写它们的唯一方式——你可以根据需要调整 playbook。
- en: You can always change them up using `raw`, `shell`, or `cmd` to achieve the
    same results but we are demonstrating the best way to accomplish the goals. Also,
    keep in mind that we are not using the FCQN, which is needed in future versions
    of Ansible, as that will not be supported in the exam, which covers Ansible 2.9.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以始终使用 `raw`、`shell` 或 `cmd` 来实现相同的结果，但我们展示的是完成目标的最佳方式。同时请记住，我们没有使用 FCQN，这是
    Ansible 的未来版本所需的，因为该版本将在考试中不被支持，考试内容基于 Ansible 2.9。
- en: Getting started with MariaDB for data collection storage
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 MariaDB 进行数据收集存储
- en: MariaDB is a database that allows for the relational storage of objects. This
    allows for key-value pairs to be stored and accessed using MySQL commands. The
    ability to save and access this information is paramount for platforms such as
    forums where usernames and passwords need to be correlated together for authentication,
    for example. We also use this for inventory tracking in many instances, for businesses
    both big and small. The power of these databases is a necessity that every company
    relies upon.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: MariaDB 是一个允许对象关系存储的数据库。这使得可以使用 MySQL 命令存储和访问键值对。保存和访问这些信息的能力对于像论坛这样的平台至关重要，在这些平台上，用户名和密码需要关联在一起进行身份验证。例如，我们还在许多场景中使用
    MariaDB 进行库存跟踪，适用于大大小小的企业。这些数据库的强大功能是每个公司都依赖的必要条件。
- en: '**Structured Query Language** (**SQL**) is what is normally used by a **relational
    database management system** (**RDBMS**) in order to control how a database is
    configured and accessed. This system provides the means to configure your database
    in the manner that is needed to function properly, whether it is used by an application
    or a web server. The more you use relational databases, the more you will understand
    their significance when it comes to business strategies.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**结构化查询语言** (**SQL**) 是**关系型数据库管理系统** (**RDBMS**) 通常使用的语言，用于控制数据库的配置和访问方式。该系统提供了配置数据库所需的手段，以确保其正常运行，无论是供应用程序还是
    Web 服务器使用。你使用关系型数据库的时间越长，你就越能理解它们在商业策略中的重要性。'
- en: First, we are going to look at manually installing MariaDB and then we'll move
    on to the automated installation and manipulation of these databases.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将查看如何手动安装 MariaDB，然后再介绍自动安装和管理这些数据库的方法。
- en: Installing and configuring MariaDB on RHEL 8 manually
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动在 RHEL 8 上安装和配置 MariaDB
- en: 'First, we are going to start the MariaDB installation in order to get started
    with using this powerful package of tools. We will look up the MariaDB package
    to get the default version and the profiles available using the command in the
    following screenshot:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将开始安装 MariaDB，以便开始使用这个强大的工具包。我们将通过以下截图中的命令查找 MariaDB 包，以获取默认版本和可用的配置文件：
- en: '![Figure 7.1 – Module list of the server package instead of the client package](img/Figure_7.01_B18607.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.1 – 服务器包的模块列表，而不是客户端包](img/Figure_7.01_B18607.jpg)'
- en: Figure 7.1 – Module list of the server package instead of the client package
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1 – 服务器包的模块列表，而不是客户端包
- en: 'As shown in the preceding screenshot, we can see that MariaDB 10.3 is the default,
    and we can see the profile of the server, which is what we want to install. We
    will install the MariaDB server as seen in the following screenshot:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，我们可以看到 MariaDB 10.3 是默认版本，我们还可以看到服务器配置文件，这是我们要安装的内容。我们将按照以下截图安装 MariaDB
    服务器：
- en: '![Figure 7.2 – Installing the MariaDB server](img/Figure_7.02_B18607.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.2 – 安装 MariaDB 服务器](img/Figure_7.02_B18607.jpg)'
- en: Figure 7.2 – Installing the MariaDB server
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2 – 安装 MariaDB 服务器
- en: 'We will then start and enable the MariaDB service as shown in the following
    screenshot:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将启动并启用 MariaDB 服务，如下图所示：
- en: '![Figure 7.3 – Starting and enabling the MariaDB service](img/Figure_7.03_B18607.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.3 – 启动并启用 MariaDB 服务](img/Figure_7.03_B18607.jpg)'
- en: Figure 7.3 – Starting and enabling the MariaDB service
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3 – 启动并启用 MariaDB 服务
- en: 'We will then open the ports for MySQL, which, as discussed earlier, is how
    we interact with MariaDB. Opening the firewall rules can be seen in the following
    screenshot:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将打开 MySQL 的端口，如前所述，这是我们与 MariaDB 交互的方式。可以通过以下截图查看打开防火墙规则的过程：
- en: '![Figure 7.4 – Opening the firewall rules for MariaDB](img/Figure_7.04_B18607.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.4 – 打开 MariaDB 的防火墙规则](img/Figure_7.04_B18607.jpg)'
- en: Figure 7.4 – Opening the firewall rules for MariaDB
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.4 – 打开 MariaDB 的防火墙规则
- en: Once we have the package enabled and started and the firewall open, we can begin
    to use our database server for data collection or application backing.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们启用了包并启动了 MariaDB 服务，并且防火墙规则已打开，我们就可以开始使用数据库服务器进行数据收集或应用程序备份。
- en: 'Next, let’s look at the options in the configuration file for controlling network
    connectivity. We have learned in the previous chapters that controlling network
    connectivity is key for many purposes. We will look at `/etc/my.cnf.d/mariadb-server.cnf`
    and pay close attention to a few items to go over, but first, a sample of this
    file can be seen in the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们来看一下配置文件中控制网络连接的选项。我们在前几章中已经了解到，控制网络连接对于许多目的来说至关重要。我们将查看 `/etc/my.cnf.d/mariadb-server.cnf`
    文件，并特别注意其中的一些项目，首先可以看到该文件的一个示例，见下图：
- en: '![Figure 7.5 – The truncated mariadb-server.cnf file](img/Figure_7.05_B18607.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.5 – 截断的 mariadb-server.cnf 文件](img/Figure_7.05_B18607.jpg)'
- en: Figure 7.5 – The truncated mariadb-server.cnf file
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.5 – 截断的 mariadb-server.cnf 文件
- en: 'If you look at the Galera-related settings, you will see an example of some
    of the items we want to pay attention to, as shown in the following screenshot:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看与 Galera 相关的设置，你将看到我们需要关注的一些项目，如下图所示：
- en: "![Figure 7.6 – The \uFEFFmariadb-server.cnf file (continued)](img/Figure_7.06_B18607.jpg)"
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.6 – mariadb-server.cnf 文件（续）](img/Figure_7.06_B18607.jpg)'
- en: Figure 7.6 – The mariadb-server.cnf file (continued)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.6 – mariadb-server.cnf 文件（续）
- en: Here, we can see `bind-address`, which we want to move up to the `[mysqld]`
    section. Next, we want to add `skip-networking=1` so that connections are only
    allowed on the server. If `skip-networking` is set to `0`, it will listen for
    connections outside of `localhost`.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们可以看到 `bind-address`，我们希望将其移动到 `[mysqld]` 部分。接下来，我们希望添加 `skip-networking=1`，使得仅允许在服务器上进行连接。如果将
    `skip-networking` 设置为 `0`，则会监听来自 `localhost` 以外的连接。
- en: 'For our use, we are going to limit the bind address to IPv4 and we are going
    to set `skip-networking=1` by adding a line of code to lock out all connections
    started from outside of the server. These settings configured within the file
    can be seen in the following screenshot:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的使用，我们将把绑定地址限制为 IPv4，并通过添加一行代码设置 `skip-networking=1`，以便锁定所有来自服务器外部的连接。这些配置项可以在以下截图中看到：
- en: '![Figure 7.7 – The updated mariadb-server.cnf file with skip-networking](img/Figure_7.07_B18607.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.7 – 更新后的 mariadb-server.cnf 文件，包含 skip-networking](img/Figure_7.07_B18607.jpg)'
- en: Figure 7.7 – The updated mariadb-server.cnf file with skip-networking
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.7 – 更新后的 mariadb-server.cnf 文件，包含 skip-networking
- en: 'Once the settings have been added, ensure that you restart the MariaDB service
    using the following command:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 添加设置后，确保通过以下命令重启 MariaDB 服务：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, we are going to work on manipulating data in the database. We will use
    MySQL tools to perform these actions. We will start by logging in to the database
    using the command shown in the following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将处理数据库中的数据操作。我们将使用 MySQL 工具执行这些操作。首先，我们将通过以下截图所示的命令登录到数据库：
- en: "![Figure 7.8 – Logging \uFEFFin to the mysql database for the first time](img/Figure_7.08_B18607.jpg)"
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.8 – 第一次登录 mysql 数据库](img/Figure_7.08_B18607.jpg)'
- en: Figure 7.8 – Logging in to the mysql database for the first time
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.8 – 第一次登录 mysql 数据库
- en: 'We are now going to secure the database by running the following command to
    secure the MySQL database installation:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将通过运行以下命令来确保 MySQL 数据库的安全：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This command removes things such as the test database and the anonymous user
    and sets a password for root accounts, among others. We can see the setup in action
    in the following screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令移除一些内容，例如测试数据库和匿名用户，并为 root 账户设置密码等。我们可以通过以下截图看到设置的实际操作：
- en: '![Figure 7.9 – Securing the MariaDB installation](img/Figure_7.09_B18607.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.9 – 安全化 MariaDB 安装](img/Figure_7.09_B18607.jpg)'
- en: Figure 7.9 – Securing the MariaDB installation
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.9 – 安全化 MariaDB 安装
- en: 'Next, we are going to look at the databases and you will notice there are some
    default databases. These are used to handle how MySQL works within MariaDB, as
    shown in the following screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看数据库，您会注意到有一些默认的数据库。这些数据库用于处理 MySQL 在 MariaDB 中的运行方式，如下图所示：
- en: '![Figure 7.10 – Logging in using the newly set password and showing the databases](img/Figure_7.10_B18607.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.10 – 使用新设置的密码登录并显示数据库](img/Figure_7.10_B18607.jpg)'
- en: Figure 7.10 – Logging in using the newly set password and showing the databases
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.10 – 使用新设置的密码登录并显示数据库
- en: 'In order to use a database, we will use the `USE` command, such as `USE information_schema;`,
    in order to access and manipulate that database. Next, we will use the database
    creation command and then use that database to manipulate data. We will create
    this new personnel database and make it ready for use as shown in the following
    screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用数据库，我们将使用 `USE` 命令，例如 `USE information_schema;`，以访问和操作该数据库。接下来，我们将使用数据库创建命令，并使用该数据库进行数据操作。我们将创建一个新的人员数据库，并准备好如下面截图所示进行使用：
- en: '![Figure 7.11 – Using the personnel database](img/Figure_7.11_B18607.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.11 – 使用人员数据库](img/Figure_7.11_B18607.jpg)'
- en: Figure 7.11 – Using the personnel database
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.11 – 使用人员数据库
- en: 'After that, we will want to inspect the database and see whether anything is
    in it. For this, we will switch to the personnel database. We can identify that
    the database is currently empty in the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将检查数据库，看看其中是否有内容。为此，我们将切换到人员数据库。从以下截图中可以看到该数据库当前为空：
- en: '![Figure 7.12 – Showing the tables are empty within the personnel database](img/Figure_7.12_B18607.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.12 – 显示人员数据库中的表为空](img/Figure_7.12_B18607.jpg)'
- en: Figure 7.12 – Showing the tables are empty within the personnel database
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.12 – 显示人员数据库中的表为空
- en: 'After we have created the database, we are going to create a table for the
    database using the command shown in the following screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们创建了数据库之后，我们将使用以下截图中的命令为数据库创建一个表：
- en: '![Figure 7.13 – Creating tables in the personnel database](img/Figure_7.13_B18607.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.13 – 在人员数据库中创建表](img/Figure_7.13_B18607.jpg)'
- en: Figure 7.13 – Creating tables in the personnel database
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.13 – 在人员数据库中创建表
- en: 'Next, we will be adding information to the name and phone number columns so
    that we have something to search through. We can see the commands to add to the
    database table in the following screenshot:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将向姓名和电话号码列中添加信息，以便我们有内容可以进行搜索。我们可以在下图中看到添加到数据库表的命令：
- en: '![Figure 7.14 – Creating data within the table of the personnel database](img/Figure_7.14_B18607.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.14 – 在人员数据库的表中创建数据](img/Figure_7.14_B18607.jpg)'
- en: Figure 7.14 – Creating data within the table of the personnel database
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.14 – 在人员数据库的表中创建数据
- en: 'You can also search for items within tables using the command shown in the
    following screenshot:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用以下截图中的命令在表中搜索项目：
- en: '![Figure 7.15 – Searching the database using known information](img/Figure_7.15_B18607.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.15 – 使用已知信息搜索数据库](img/Figure_7.15_B18607.jpg)'
- en: Figure 7.15 – Searching the database using known information
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.15 – 使用已知信息搜索数据库
- en: 'The `SELECT` command can be used with the `WHERE` variable, as in the following
    command, to look for a specific column within a database:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`SELECT` 命令可以与 `WHERE` 变量一起使用，如以下命令所示，以在数据库中查找特定列：'
- en: '[PRE2]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, we are going to talk about taking a backup of your database. This will
    allow you to restore information that you have backed up recently using the `mysqldump`
    command. More about the `mysqldump` command can be found in the man page for it,
    as shown in the following screenshot:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论如何备份数据库。这将允许你恢复最近通过 `mysqldump` 命令备份的信息。更多关于 `mysqldump` 命令的信息可以在手册页中找到，如下图所示：
- en: '![Figure 7.16 – mysqldump man page](img/Figure_7.16_B18607.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.16 – mysqldump 手册页](img/Figure_7.16_B18607.jpg)'
- en: Figure 7.16 – mysqldump man page
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.16 – mysqldump 手册页
- en: 'We will use the following command to back up the database:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下命令来备份数据库：
- en: '[PRE3]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This command execution can be seen in the following screenshot:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令执行过程可以在下图中看到：
- en: '![Figure 7.17 – Creating a backup of the personnel database](img/Figure_7.17_B18607.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.17 – 创建人员数据库的备份](img/Figure_7.17_B18607.jpg)'
- en: Figure 7.17 – Creating a backup of the personnel database
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.17 – 创建人员数据库的备份
- en: 'Next, we are going to restore from the backup. We will use the following command
    to choose the backup file we want to restore and restore it to our database:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将从备份中恢复。我们将使用以下命令选择要恢复的备份文件，并将其恢复到我们的数据库：
- en: '[PRE4]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let’s test this by dropping the `users` table as shown in the following screenshot
    and then restoring the database:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过删除 `users` 表来测试此操作，如下图所示，然后恢复数据库：
- en: '![Figure 7.18 – Removing tables and checking that they are missing before restoring
    them](img/Figure_7.18_B18607.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.18 – 删除表并在恢复之前检查它们是否丢失](img/Figure_7.18_B18607.jpg)'
- en: Figure 7.18 – Removing tables and checking that they are missing before restoring
    them
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.18 – 删除表并在恢复之前检查它们是否丢失
- en: 'Now, we are going to restore the database and show that the table has been
    recreated, as shown in the following screenshot:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将恢复数据库并显示表已重新创建，如下图所示：
- en: '![Figure 7.19 – Restoring the database and showing that the tables are now
    back](img/Figure_7.19_B18607.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.19 – 恢复数据库并显示表格已恢复](img/Figure_7.19_B18607.jpg)'
- en: Figure 7.19 – Restoring the database and showing that the tables are now back
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.19 – 恢复数据库并显示表格已恢复
- en: Once you load this information back into your database, you can use `show` commands
    to gather information for anything needed.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你将这些信息重新加载到数据库中，你可以使用 `show` 命令来收集所需的任何信息。
- en: 'Finally, we are going to show how to control user access to your systems. We
    are going to add users with different rights to the databases. Adding these users
    can be done with the following command in this screenshot:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将展示如何控制用户对系统的访问。我们将向数据库中添加具有不同权限的用户。可以使用以下命令来添加这些用户，如下图所示：
- en: '![Figure 7.20 – Creating users for the databases](img/Figure_7.20_B18607.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.20 – 为数据库创建用户](img/Figure_7.20_B18607.jpg)'
- en: Figure 7.20 – Creating users for the databases
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.20 – 为数据库创建用户
- en: 'In the preceding screenshot, you can see we created `danny@localhost`, specifying
    that this is a local user and that it is `identified by`, referring to the password
    for the user, `redhat`, in our case. Next, we are going to add privileges to `danny`
    so that he can make changes to the personnel database. The commands for adding
    privileges can be seen in the following commands within the screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的截图中，您可以看到我们创建了`danny@localhost`，指定这是一个本地用户，并且使用`identified by`，指的是用户的密码，在我们的案例中是`redhat`。接下来，我们将为`danny`添加权限，以便他可以对人员数据库进行更改。添加权限的命令可以在下面截图中的命令中看到：
- en: '![Figure 7.21 – Setting privileges for a new user created](img/Figure_7.21_B18607.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.21 – 为新创建的用户设置权限](img/Figure_7.21_B18607.jpg)'
- en: Figure 7.21 – Setting privileges for a new user created
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.21 – 为新创建的用户设置权限
- en: We have also created `jennifer` as a user and provided her with privileges to
    alter the database. This allows `jennifer` to insert, delete, and select items
    within the personnel database. Now, we can use `jennifer` to add items to the
    database.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还创建了`jennifer`作为一个用户，并为她提供了修改数据库的权限。这使得`jennifer`能够在人员数据库中插入、删除和选择条目。现在，我们可以使用`jennifer`向数据库中添加条目。
- en: Installing and configuring MariaDB on RHEL 8 using Ansible Automation
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Ansible自动化在RHEL 8上安装和配置MariaDB
- en: We will start with the inventory file to set up the MariaDB servers and configure
    them with users. We will then go into manipulating data within the created MariaDB
    system using loops to add things such as tables and database entries. We will
    then use Ansible Automation to show how to retrieve information from the MariaDB
    database so that you can provide information from your database to end users.
    Please ensure that the server you are running this playbook against has not had
    MariaDB installed previously, or you will receive errors when trying to set the
    root password.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从库存文件开始，设置MariaDB服务器并配置用户。然后，我们将进入使用循环操作在创建的MariaDB系统中添加数据，例如表格和数据库条目。接着，我们将使用Ansible自动化展示如何从MariaDB数据库中获取信息，以便您可以将数据库中的信息提供给最终用户。请确保运行此剧本的服务器之前未安装过MariaDB，否则在设置root密码时会收到错误信息。
- en: 'First, we are going to start with an inventory file, which can be seen in the
    following screenshot:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将从一个库存文件开始，可以在以下截图中看到：
- en: '![Figure 7.22 – Ansible Automation inventory file](img/Figure_7.22_B18607.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.22 – Ansible 自动化库存文件](img/Figure_7.22_B18607.jpg)'
- en: Figure 7.22 – Ansible Automation inventory file
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.22 – Ansible 自动化库存文件
- en: 'From there, we are going to create the `ansible.cfg` file within our directory
    so that we can skip `host_key_checking`, as it causes issues with connectivity.
    We can see the Ansible file in the following screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里开始，我们将创建`ansible.cfg`文件，放置在我们的目录中，以便跳过`host_key_checking`，因为它会导致连接问题。我们可以在以下截图中看到Ansible文件：
- en: '![Figure 7.23 – Ansible Automation ansible.cfg file](img/Figure_7.23_B18607.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.23 – Ansible 自动化 ansible.cfg 文件](img/Figure_7.23_B18607.jpg)'
- en: Figure 7.23 – Ansible Automation ansible.cfg file
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.23 – Ansible 自动化 ansible.cfg 文件
- en: 'After we have those files, we will create the playbook file of `mariadb_server.yml`
    and start it as normal, as shown in the following code:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们有了这些文件后，我们将创建`mariadb_server.yml`的剧本文件并正常启动，代码如下所示：
- en: '[PRE5]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, we are going to install MariaDB and set up the firewall rules as well.
    Installing the package and starting and enabling the service, as well as setting
    the firewall rules, can be seen in the following code:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将安装MariaDB并设置防火墙规则。安装软件包、启动并启用服务，以及设置防火墙规则的过程可以在以下代码中看到：
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'After we have the code for installing the server, we will move on to securing
    the MariaDB installation to enable it and open up the firewall rules. We will
    start by configuring the root password. We can see that we have configured that
    in the following code and marked it with `no_log: true` in order to keep the system
    from outputting this in the log files:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '在我们拥有了安装服务器的代码之后，我们将继续对MariaDB安装进行安全配置，启用它并开放防火墙规则。我们将从配置root密码开始。我们可以看到我们在以下代码中已配置此密码，并使用`no_log:
    true`标记它，以防止系统在日志文件中输出该信息：'
- en: '[PRE7]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Next, we are going to copy a configuration file to `root` so that we can log
    in and make changes to the database without having to show the user and password.
    We can also vault this file, but for our purposes, we are simply going to copy
    it. The file can be seen in the following screenshot:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将把一个配置文件复制到 `root`，以便我们可以登录并进行数据库更改，而无需显示用户和密码。我们也可以将这个文件加密，但在我们的案例中，我们只是简单地复制它。该文件可以在以下截图中看到：
- en: '![Figure 7.24 – The my.cnf file to provide access for configuring databases](img/Figure_7.24_B18607.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.24 – my.cnf 文件提供数据库配置访问权限](img/Figure_7.24_B18607.jpg)'
- en: Figure 7.24 – The my.cnf file to provide access for configuring databases
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.24 – my.cnf 文件提供数据库配置访问权限
- en: 'The following code will be used to move the file to the needed location on
    the server for use later on with the modules to add and change things on the system:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将用于将文件移动到服务器上的需要位置，以便后续与模块一起使用，进行系统的添加和更改：
- en: '[PRE8]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'After that, we will remove the anonymous user so that only authenticated users
    can access the databases. We can see this removal of the anonymous user in the
    following code:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将删除匿名用户，以便只有经过认证的用户才能访问数据库。我们可以在以下代码中看到删除匿名用户的过程：
- en: '[PRE9]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Next, we are going to create a database called `employees`. We will update
    this database using a loop so that it is configured with multiple employees within
    the database. We can see how to create the database and tables and fill in the
    data in the following code:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个名为 `employees` 的数据库。我们将使用循环更新该数据库，以便在数据库中配置多个员工。我们可以在以下代码中看到如何创建数据库和表格，并填充数据：
- en: '[PRE10]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Next, we will create the `insert.sql` file in order to import the needed database
    items. This can be seen in the following screenshot:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建 `insert.sql` 文件，用于导入所需的数据库项。这可以在以下截图中看到：
- en: '![Figure 7.25 – The insert.sql file to import data into the employee database](img/Figure_7.25_B18607.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.25 – insert.sql 文件将数据导入到员工数据库](img/Figure_7.25_B18607.jpg)'
- en: Figure 7.25 – The insert.sql file to import data into the employee database
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.25 – insert.sql 文件将数据导入到员工数据库
- en: 'After creating the database, we will now create a table within the database
    with the name of people, as shown in the following code, using the `insert.sql`
    file to provide the information for the table and data:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 创建数据库后，我们将会在数据库中创建一个名为 people 的表格，如以下代码所示，使用 `insert.sql` 文件提供表格和数据的相关信息：
- en: '[PRE11]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Next, we are going to create a user for the databases and provide them with
    permissions to the newly created database. We can see how we create users with
    set privileges in the following code:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将为数据库创建一个用户，并为他们提供对新创建数据库的权限。我们可以在以下代码中看到如何创建带有权限的用户：
- en: '[PRE12]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now that we have all of this set, we are going to run the playbook. We will
    use the following command to run the playbook again, assuming you do not have
    keys set up:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置好了所有内容，接下来我们将运行 playbook。假设你没有设置密钥，我们将使用以下命令再次运行 playbook：
- en: '[PRE13]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following screenshot shows a successful Ansible Automation playbook run:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了成功运行的 Ansible Automation playbook：
- en: '![Figure 7.26 – Successful playbook run](img/Figure_7.26_B18607.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.26 – playbook 成功运行](img/Figure_7.26_B18607.jpg)'
- en: Figure 7.26 – Successful playbook run
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.26 – playbook 成功运行
- en: 'After a successful playbook run, you can see the information has been added,
    as shown in the following screenshot:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在 playbook 成功运行后，你可以看到信息已经添加，如以下截图所示：
- en: '![Figure 7.27 – Data is now populated within the system](img/Figure_7.27_B18607.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.27 – 数据现已填充到系统中](img/Figure_7.27_B18607.jpg)'
- en: Figure 7.27 – Data is now populated within the system
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.27 – 数据现已填充到系统中
- en: In this section, we learned how to automate the installation and configuration
    of MariaDB. With this information, you can successfully deploy databases quickly
    and more confidently. The lower threshold for human error allows for greater confidence
    in the deployment and it can be done in seconds instead of hours, which is how
    long it would take somebody to do so with a keyboard for multiple databases. This
    is an advantage of using Ansible Automation.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分中，我们学习了如何自动化安装和配置 MariaDB。有了这些信息，你可以更快速、更自信地成功部署数据库。较低的人为错误门槛使得部署时更加可靠，这个过程可以在几秒钟内完成，而不像手动操作多个数据库那样需要几个小时。这就是使用
    Ansible Automation 的一个优势。
- en: Summary
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about the MariaDB SQL database and how it can be
    configured and updated. We learned how to automate it so that it can be easily
    deployed with the information we need it to have. This allows us to deploy a database
    quickly without the need for much human intervention. We also were able to back
    up the database and restore it, which is a crucial thing to be able to do when
    working with databases. In our next chapter, we will be talking about web servers,
    which use databases as their backends in some cases. We will go into installing
    and setting up these databases both manually and with Ansible Automation. I look
    forward to seeing you in the next chapter on our journey through the preparation
    for the EX358 exam.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们学习了MariaDB SQL数据库，以及如何配置和更新它。我们学习了如何自动化数据库，使其能够根据我们需要的信息轻松部署。这使我们能够快速部署数据库，而无需太多人工干预。我们还能够备份数据库并恢复它，这是处理数据库时必须具备的一项重要技能。在下一章中，我们将讨论Web服务器，它们在某些情况下使用数据库作为后台。我们将深入讲解如何手动和通过Ansible自动化安装和设置这些数据库。期待在下一章与大家一起继续我们的EX358考试准备之旅。
