- en: '12'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '12'
- en: Untangling Security with SELinux
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用SELinux解开安全难题
- en: '*Security*, *Hardening*, *Compliance*, and *Policy*: these are the four horsemen
    of the SysAdmin apocalypse. One of the big battles is maintaining the security
    of the systems. Besides the daily tasks, the security of the systems is part of
    the job, even those systems where the third-party provider asks us to deactivate
    the *enhanced security*. In most of these cases, an analysis is enough to find
    the right troubleshooting method or a workaround.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*安全性*、*加固*、*合规性*和*策略*：这四者是系统管理员末日审判中的四骑士。一个重要的战斗是维护系统的安全性。除了日常任务，系统的安全性也是工作的一部分，即使是那些第三方提供商要求我们停用*增强安全性*的系统。在大多数情况下，通过分析就足以找到正确的故障排除方法或解决方法。'
- en: '**Security-Enhanced Linux** (**SELinux**) is a code that runs in the user space,
    leveraging kernel code (**Linux Security Modules**) to provide **mandatory access
    control** (**MAC**) over system resources. The access to system objects and features
    takes place on a per-domain basis following the principle of *least privilege*.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**增强安全Linux**（**SELinux**）是一种运行在用户空间的代码，通过利用内核代码（**Linux安全模块**）提供对系统资源的**强制访问控制**（**MAC**）。对系统对象和特性进行的访问基于每个域，并遵循*最小特权*原则。'
- en: 'In this chapter, we are going to learn how to take advantage of the benefits
    of SELinux to secure managed systems, covering the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何利用SELinux的优势来保护管理系统，主要涵盖以下内容：
- en: Learning about mandatory access control
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习强制访问控制
- en: Labeling and type enforcement
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签和类型强制
- en: How to troubleshoot SELinux issues
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何故障排除SELinux问题
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For the development of the topics in this chapter, it is necessary to install
    the packages indicated in each section. In each section, you will find the instructions
    for the different types of installation of each package as required.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 为了发展本章的主题，需要安装每个部分中所指定的包。在每个部分，你会找到关于如何安装每种包的不同类型的说明。
- en: Learning about mandatory access control
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 学习强制访问控制
- en: Linux file permissions control which users or groups of users access specific
    files. But a user with read or write access to a specific file could use that
    file in any way desired, even if that use is not what the file should be used
    for.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Linux文件权限控制哪些用户或用户组可以访问特定的文件。但是，一个具有读或写访问权限的用户可以以任何方式使用该文件，即使这种使用方式并不是该文件应该被使用的方式。
- en: Linux *standard file permissions* succeed when files get used by a single owner
    and a single designated group of people.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Linux的*标准文件权限*在文件由单一所有者和单一指定用户组使用时成功。
- en: File permissions fail to prevent some forms of unwanted access. They were not
    designed to control how a file gets used, but only who to allow to read, write,
    or run a file.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 文件权限未能防止某些形式的不必要访问。它们的设计初衷并不是控制文件的使用方式，而是控制谁可以读取、写入或执行文件。
- en: Linux standard file permissions are ownership-based, also known as **discretionary
    access** **control** (**DAC**).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Linux标准文件权限是基于所有权的，也称为**自由访问控制**（**DAC**）。
- en: The MAC rules are *policy* based, not by ownership.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: MAC规则是基于*策略*，而非所有权。
- en: 'There are two types of MAC:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: MAC有两种类型：
- en: '**Multi-level security systems**: The original and simplest form of MAC consists
    of a vertical structure of protection and security levels. Information only flows
    within this area. A level of protection is also assigned to users, who can thus
    only access the same or lower levels.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多级安全系统**：MAC的原始和最简单形式由垂直的保护和安全级别结构组成。信息仅在该区域内流动。每个用户也被分配一个保护级别，这样他们只能访问相同或较低级别的资源。'
- en: '**Multi-lateral security systems**: These systems are more complex and assign
    access based on segments. Those segments form associations, which in turn consist
    of protection levels and code words. This results in a horizontal security system
    that also includes vertical levels of protection.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多边安全系统**：这些系统更加复杂，并根据不同的区段分配访问权限。这些区段形成关联，进而由保护级别和密码组成。这形成了一个水平的安全系统，同时也包括垂直的保护级别。'
- en: SELinux is an example of a MAC application on Linux.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux是Linux上MAC应用的一个例子。
- en: SELinux offers a special security architecture based on the principles of MAC.
    SELinux *minimizes access* to operating system processes and files through strict
    access control methods and corresponding security measures. The module aims to
    ensure data confidentiality and integrity. Furthermore, with SELinux, the operating
    system and user programs remain delimited.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 提供了一种基于 MAC 原则的特殊安全架构。SELinux 通过严格的访问控制方法和相应的安全措施来 *最小化访问* 操作系统进程和文件。该模块旨在确保数据的机密性和完整性。此外，通过
    SELinux，操作系统和用户程序保持相互隔离。
- en: 'SELinux also relies on two other implementations: **type enforcement** (**TE**)
    and **role-based access control** (**RBAC**). With RBAC, access rights map according
    to a defined role model. The defined user roles abstract the work processes of
    an organization. On a MAC model, TE is the notion that access gets governed through
    clearance based on a *subject-access-object set* *of rules*.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 还依赖于另外两个实现：**类型强制**（**TE**）和 **基于角色的访问控制**（**RBAC**）。通过 RBAC，访问权限根据定义的角色模型映射。定义的用户角色抽象了组织的工作流程。在
    MAC 模型中，TE 是通过基于 *主体-访问-对象集* 的 *规则* 来管理访问的概念。
- en: SELinux defines security measures and sets extra attributes that state under
    what conditions and in what situations a rights holder could access certain operating
    system processes or files. If these conditions or relationships (i.e., attributes)
    are not met, access is denied.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 定义了安全措施，并设置了额外的属性，说明在什么条件和什么情况下，权利持有者可以访问某些操作系统进程或文件。如果这些条件或关系（即属性）没有得到满足，访问将被拒绝。
- en: SELinux consists of sets of policies that declare exactly what *actions and
    accesses* are allowed for each object used by an application. It is also known
    as a *targeted policy* since the policy covers the activities of a single application.
    Policies declare predefined labels that apply to individual programs, files, and
    network ports.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 由一组策略组成，声明了每个应用程序使用的对象所允许的 *操作和访问*。它也被称为 *定向策略*，因为该策略仅涵盖单个应用程序的活动。策略声明了适用于单个程序、文件和网络端口的预定义标签。
- en: SELinux enforces a set of access rules that prevent a security flaw in one application
    from affecting other applications or the system itself. SELinux provides an extra
    layer of security, but it also adds a level of complexity that might seem confusing
    to those unfamiliar with it.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 强制执行一套访问规则，防止一个应用程序中的安全漏洞影响到其他应用程序或系统本身。SELinux 提供了额外的安全层，但它也增加了一个复杂度，可能让那些不熟悉的人感到困惑。
- en: To better understand how it works, let’s walk through the basic concepts that
    SELinux works with.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解它是如何工作的，我们来了解 SELinux 的基本概念。
- en: Labeling and type enforcement
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标签和类型强制
- en: SELinux is a *labeling system*, which tells us that each file, directory, or
    object in the system has a corresponding label. Each file, process, directory,
    and port has a *special security label* called an SELinux context. A **context**
    is a tag name used by the SELinux policy to determine whether a process can access
    a file, directory, or port. Policies control the interaction between these elements.
    By default, the policy does not allow any interaction unless an explicit rule
    grants access. If no permission rule exists, access is not allowed. The Linux
    kernel enforces these rules.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 是一个 *标签系统*，这意味着系统中每个文件、目录或对象都有一个相应的标签。每个文件、进程、目录和端口都有一个 *特殊的安全标签*，称为
    SELinux 上下文。**上下文**是 SELinux 策略使用的标签名称，用来判断一个进程是否可以访问文件、目录或端口。策略控制这些元素之间的交互。默认情况下，策略不允许任何交互，除非显式的规则授权访问。如果没有权限规则，访问将被拒绝。Linux
    内核强制执行这些规则。
- en: 'SELinux contexts have different labels in their format, separated by colons:
    *user*, *role*, *type*, and *sensitivity level*. They are formed as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 上下文的格式中有不同的标签，以冒号分隔：*用户*、*角色*、*类型* 和 *敏感级别*。它们的构成方式如下：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The *sensitivity level* is the part that is optional.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*敏感级别*是可选部分。'
- en: 'The targeted policy bases its rules on the third context component: the *type*
    context. Type context names usually end with `_t`.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 定向策略基于第三个上下文组件：*类型*上下文。类型上下文名称通常以 `_t` 结尾。
- en: 'Let’s look at the following example:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看以下示例：
- en: '![Figure 12.1 – SELinux label example](img/12.1.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.1 – SELinux 标签示例](img/12.1.jpg)'
- en: Figure 12.1 – SELinux label example
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.1 – SELinux 标签示例
- en: 'In the preceding example, the `/var/www/html/file` file has the following context
    components: `unconfined_u` is the SELinux user, the role is `object_r`, the type
    is `httpd_sys_content_t`, and the sensitivity level is `s0`. So, the context on
    which the access of this file depends is `httpd_sys_content_t`.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，`/var/www/html/file` 文件具有以下上下文组件：`unconfined_u` 是 SELinux 用户，角色是 `object_r`，类型是
    `httpd_sys_content_t`，敏感级别是 `s0`。因此，访问该文件的上下文依赖于 `httpd_sys_content_t`。
- en: Let’s use a demo example with this file to learn how the SELinux policy works.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过一个示范例子来学习 SELinux 策略是如何工作的。
- en: How SELinux works
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SELinux 的工作原理
- en: Before analyzing the operation of SELinux, let’s determine how SELinux is running
    on the system.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在分析 SELinux 的运行情况之前，首先要确定 SELinux 在系统上的运行模式。
- en: 'SELinux runs in three modes:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 有三种模式：
- en: '**Enforcing**: SELinux enforces access control rules. This is the Fedora Linux
    default enabled mode.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**强制模式**：SELinux 强制执行访问控制规则。这是 Fedora Linux 默认启用的模式。'
- en: '**Permissive**: SELinux is active but instead of enforcing access control rules,
    it *logs warnings* of rules violated. This mode gets used for testing and troubleshooting.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**宽容模式**：SELinux 虽然启用，但不会强制执行访问控制规则，而是*记录违反规则的警告*。此模式用于测试和故障排除。'
- en: '**Disabled**: SELinux is completely *disabled*; no SELinux violations are denied
    or even logged. *This is not recommended under* *any circumstances*.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**禁用**：SELinux 完全*禁用*；没有任何 SELinux 违规行为会被拒绝或记录。*在任何情况下都不推荐使用此模式*。'
- en: 'To find out how SELinux is running, use the `sestatus` command:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解 SELinux 的运行状态，可以使用 `sestatus` 命令：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The SELinux running mode gets configured in the `/``etc/selinux/config` file:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 运行模式在 `/etc/selinux/config` 文件中配置：
- en: '![Figure 12.2 – SELinux config file](img/12.2.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.2 – SELinux 配置文件](img/12.2.jpg)'
- en: Figure 12.2 – SELinux config file
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.2 – SELinux 配置文件
- en: 'During execution, for testing, the SELinux mode could change. But upon *rebooting*
    the system, it will again take the mode configured in the configuration file to
    set it. Use the `getenforce` command to find out the mode SELinux is running in
    and the `setenforce` command to change the mode, as the `root` user:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行过程中，测试时 SELinux 模式可能会发生变化。但在*重启*系统后，它将再次使用配置文件中设置的模式。使用 `getenforce` 命令查看
    SELinux 正在运行的模式，并使用 `setenforce` 命令更改模式，前提是以 `root` 用户身份执行：
- en: '![Figure 12.3 – Changing the SELinux run mode](img/12.3.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.3 – 更改 SELinux 运行模式](img/12.3.jpg)'
- en: Figure 12.3 – Changing the SELinux run mode
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.3 – 更改 SELinux 运行模式
- en: Now, let us see how SELinux works.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来看一下 SELinux 是如何工作的。
- en: So, how does SELinux work?
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 那么，SELinux 是如何工作的呢？
- en: Linux was born in the early days of the operating system’s usefulness. It’s
    used as the main operating system running a web server.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 在操作系统早期阶段诞生。它作为运行 web 服务器的主要操作系统。
- en: The Apache web server (`httpd`) is not insecure, but its *access range* is very
    wide so it is very important to secure it.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Apache web 服务器（`httpd`）本身并不不安全，但其*访问范围*非常广泛，因此非常重要的是要对其进行安全保护。
- en: 'So, let’s start with this example to understand how SELinux works. Follow the
    subsequent steps:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们通过这个示例来理解 SELinux 是如何工作的。按照以下步骤操作：
- en: 'Verify that the **httpd** service is installed and active on the system:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证 **httpd** 服务是否已安装并在系统中处于活动状态：
- en: '![Figure 12.4 – Status of the httpd service](img/12.4.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.4 – httpd 服务状态](img/12.4.jpg)'
- en: Figure 12.4 – Status of the httpd service
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.4 – httpd 服务状态
- en: 'If not, use the **dnf** and **systemctl** commands to perform this:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果没有，使用 **dnf** 和 **systemctl** 命令来执行此操作：
- en: '[PRE2]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The Linux kernel integrates an option, in most commands, to know the SELinux
    context type. Use the **ls** command with the **-Z** (or **–context**) option
    to identify the SELinux context type of the binary file:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Linux 内核在大多数命令中集成了一个选项，可以查看 SELinux 上下文类型。使用 **ls** 命令和 **-Z**（或 **–context**）选项来识别二进制文件的
    SELinux 上下文类型：
- en: '[PRE3]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The configuration files for the **httpd** service are found in **/etc/httpd**.
    Let’s see what context type they have:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**httpd** 服务的配置文件位于 **/etc/httpd**。我们来看一下它们的上下文类型：'
- en: '[PRE4]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The logs of the **httpd** service are found in **/var/log/httpd**. Find their
    context type using the following:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**httpd** 服务的日志位于 **/var/log/httpd**。使用以下命令查找其上下文类型：'
- en: '[PRE5]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The content type directory of the **httpd** service is found in **/var/www/html**.
    Find their context using the following:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**httpd** 服务的内容类型目录位于 **/var/www/html**。使用以下命令查找它们的上下文：'
- en: '[PRE6]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The unit file for the **httpd** service startup is found in **/usr/lib/systemd/system/**.
    Find its context type using the following:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**httpd** 服务启动的单元文件位于 **/usr/lib/systemd/system/**。使用以下命令查找其上下文类型：'
- en: '[PRE7]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Use the **ps** command to find the context type of the **httpd** service daemon
    while it is running:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**ps**命令来查找正在运行的**httpd**服务守护进程的上下文类型：
- en: '[PRE8]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Figure 12.5 – Finding the context of the httpd daemon](img/12.5.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图12.5 – 查找httpd守护进程的上下文](img/12.5.jpg)'
- en: Figure 12.5 – Finding the context of the httpd daemon
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.5 – 查找httpd守护进程的上下文
- en: The context type of the service daemon is `httpd_t`.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 服务守护进程的上下文类型是`httpd_t`。
- en: 'Use the **netstat** command to find the context type of the **httpd** service
    port while it is running:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**netstat**命令来查找正在运行的**httpd**服务端口的上下文类型：
- en: '[PRE9]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Figure 12.6 – Finding the context of the httpd port](img/12.6.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图12.6 – 查找httpd端口的上下文](img/12.6.jpg)'
- en: Figure 12.6 – Finding the context of the httpd port
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.6 – 查找httpd端口的上下文
- en: The context type of the service port is `httpd_t`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 服务端口的上下文类型是`httpd_t`。
- en: 'The preceding example can be summarized in the following table:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例可以总结为以下表格：
- en: '| **Type** | **Context type** |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| **类型** | **上下文类型** |'
- en: '| Binary file | `httpd_exec_t` |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 二进制文件 | `httpd_exec_t` |'
- en: '| Config files | `httpd_config_t` |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 配置文件 | `httpd_config_t` |'
- en: '| Logs | `httpd_log_t` |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 日志 | `httpd_log_t` |'
- en: '| Content directory | `httpd_sys_content_t` |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 内容目录 | `httpd_sys_content_t` |'
- en: '| Unit file | `httpd_unit_file_t` |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 单元文件 | `httpd_unit_file_t` |'
- en: '| Process | `httpd_t` |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 进程 | `httpd_t` |'
- en: '| Port | `httpd_t` `or http_port_t` |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 端口 | `httpd_t` 或 `http_port_t` |'
- en: Table 12.1 – The httpd service contexts
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 表12.1 – httpd服务上下文
- en: Note the relation of contexts; all belong to the `httpd_t` domain.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 注意上下文的关系；所有都属于`httpd_t`域。
- en: Thus, type enforcement is the concept under which it makes sense for a process
    running in the `httpd_t` context to interact with a file labeled as `httpd_sys_content_t`.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，类型强制是一个概念，按照这个概念，在`httpd_t`上下文中运行的进程与标记为`httpd_sys_content_t`的文件进行交互是有意义的。
- en: 'Let’s see what context the `/etc/shadow` file has, where user passwords are
    stored:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看`/etc/shadow`文件的上下文，用户密码存储的位置：
- en: '[PRE10]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: touch myfile
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: touch myfile
- en: '[PRE11]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: mv myfile /var/www/html/
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: mv myfile /var/www/html/
- en: '[PRE12]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: curl http://localhost/myfile
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: curl http://localhost/myfile
- en: '[PRE13]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: grep myfile /var/log/audit/audit.log
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: grep myfile /var/log/audit/audit.log
- en: '...'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '...'
- en: 'type=AVC msg=audit(1689045662.823:264): avc:  denied  { getattr } for  pid=1035
    comm="httpd" path="/var/www/html/myfile" dev="vda3" ino=769948 scontext=system_u:system_r:httpd_t:s0
    tcontext=unconfined_u:object_r:admin_home_t:s0 tclass=file permissive=0'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'type=AVC msg=audit(1689045662.823:264): avc:  denied  { getattr } for  pid=1035
    comm="httpd" path="/var/www/html/myfile" dev="vda3" ino=769948 scontext=system_u:system_r:httpd_t:s0
    tcontext=unconfined_u:object_r:admin_home_t:s0 tclass=file permissive=0'
- en: '[PRE14]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: date -d @1689045662.823
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: date -d @1689045662.823
- en: Mon Jul 10 09:21:02 PM CST 2023
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 2023年7月10日，晚上09:21:02 CST
- en: '[PRE15]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: semanage command applies the httpd_sys_content_t label to the entire contents
    of the /srv/myweb directory and inherits it to the new files created in it. This
    means the (/.*)? characters appear at the end of the command.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: semanage命令将`httpd_sys_content_t`标签应用于/srv/myweb目录的整个内容，并将其继承到其中创建的新文件。这意味着命令末尾会出现`(/.*)?`字符。
- en: '[PRE16]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: -e option of the semanage command, assign the label with reference to another
    known file with the correct label.
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`semanage`命令的-e选项，将标签分配给参考另一个已知文件并具有正确标签的文件。'
- en: '[PRE17]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: restorecon -vR /srv/myweb
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: restorecon -vR /srv/myweb
- en: '[PRE18]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: chcon -t httpd_system_content_t /var/www/html/myfile
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: chcon -t httpd_system_content_t /var/www/html/myfile
- en: '[PRE19]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: chcon --reference /var/www/html/ /var/www/html/myfile
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: chcon --reference /var/www/html/ /var/www/html/myfile
- en: '[PRE20]'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: chcon command. This is the easiest way to fix it.
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: chcon命令。这是解决问题的最简单方法。
- en: If there is a custom path, it is necessary to inform SELinux that an alternate
    directory to the policy is going to be used. To change the policy, use the `semanage`
    command.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有自定义路径，需要通知SELinux将使用与策略不同的目录。要更改策略，请使用`semanage`命令。
- en: To save context changes in the policy, use the `restorecon` command.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 要将上下文更改保存到策略中，请使用`restorecon`命令。
- en: When there is a customization that modifies the policy, this falls into the
    second case of SELinux failures. If the standard usage of a task changes, then
    SELinux must be informed.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 当有自定义更改策略时，这属于SELinux故障的第二种情况。如果任务的标准使用发生变化，则必须通知SELinux。
- en: Let’s look at these cases.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下这些情况。
- en: SELinux needs to know
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux需要知道
- en: 'Following the web server configuration, in the case of using a port other than
    the standard port (`80`) – for example, `8585` – let’s start by finding out the
    *port label*. Use the `semanage` command to ask the policy about the configured
    label:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 根据Web服务器的配置，如果使用不同于标准端口（`80`）的端口——例如，`8585`——让我们首先找出*端口标签*。使用`semanage`命令查询策略中配置的标签：
- en: '[PRE21]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: semanage port -a -t http_port_t -p tcp 8585
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: semanage port -a -t http_port_t -p tcp 8585
- en: '[PRE22]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: -P option, the Boolean change persists on system restart.
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 -P 选项时，布尔值更改会在系统重启时持续生效。
- en: 'To see all Booleans, use the `getsebool` command with the `-``a` option:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看所有布尔值，请使用`getsebool`命令，并带上`-a`选项：
- en: '[PRE23]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Figure 12.8 – SELinux Booleans](img/12.8.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.8 – SELinux 布尔值](img/12.8.jpg)'
- en: Figure 12.8 – SELinux Booleans
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.8 – SELinux 布尔值
- en: 'To review the Boolean description, use the `semanage boolean` command with
    the `-``l` option:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要审查布尔描述，可以使用`semanage boolean`命令，并带上`-l`选项：
- en: '[PRE24]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![Figure 12.9 – Reviewing the Boolean description](img/12.9.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.9 – 审查布尔描述](img/12.9.jpg)'
- en: Figure 12.9 – Reviewing the Boolean description
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.9 – 审查布尔描述
- en: These two cases, incorrect labeling and custom configuration, are the most common
    causes of errors with SELinux.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种情况，错误标签和自定义配置，是SELinux错误最常见的原因。
- en: There are two other cases that, although not as common, could happen.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他两种情况，虽然不常见，但有可能发生。
- en: Let’s look at the first one.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来看第一个案例。
- en: Policy bugs
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 策略bug
- en: 'In some events, the policy might not work when the behavior fails to meet expectations,
    as in the following cases:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，当行为未能达到预期时，策略可能不起作用，如以下几种情况：
- en: Configurations
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置
- en: Redirection of stdout
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准输出重定向
- en: Filtered file descriptors
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 过滤的文件描述符
- en: Executable memory
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可执行内存
- en: Libraries built wrongly
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误构建的库
- en: Unusual paths in the code
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码中的不寻常路径
- en: There is a high likelihood that the policy or application has bugs. These bugs
    or behavioral flaws should be reported to the developers to get them fixed.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 策略或应用程序很可能存在bug。这些bug或行为缺陷应报告给开发人员以修复。
- en: This is an unusual situation as developers pay close attention to SELinux policies
    , but do not rule out the possibility of it happening.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个不寻常的情况，因为开发人员会密切关注SELinux策略，但也不能排除发生这种情况的可能性。
- en: A less common situation is that the system might be *compromised*, and the behavior
    of the policies changes to grant the escape of information or an intrusion.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 一个不太常见的情况是系统可能已经*被攻破*，并且策略的行为发生变化，允许信息泄露或入侵。
- en: Let’s look at this last case of failure with SELinux.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 我们来看最后一种SELinux失败的情况。
- en: Hack attack
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客攻击
- en: 'There is a risk of a hack attack if the current tools *don’t do a good job*
    of differentiating contexts, or if you detect the case where *confined domains*
    attempt to do the following:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果当前工具*不能有效区分*上下文，或者如果您发现*受限域*尝试执行以下操作，则存在黑客攻击的风险：
- en: Load kernel modules
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载内核模块
- en: Turn off SELinux enforcing mode
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关闭SELinux强制模式
- en: Write to **etc_t**/**shadow_t**
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写入**etc_t**/**shadow_t**
- en: Change firewall rules
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改防火墙规则
- en: If this happens, then be careful, because the system could become compromised
    and your information could be in danger.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生这种情况，请小心，因为系统可能已经被攻破，您的信息可能处于危险之中。
- en: Hacker attacks are not that common, but rest assured that hackers know how to
    use SELinux. Don’t trust, and follow your instinct. If you notice *unexpected
    behavior* and it is not related to the other SELinux failures, there is a possibility
    that your system might be hacked.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 黑客攻击并不常见，但可以放心的是，黑客知道如何使用SELinux。不要轻信，跟随直觉。如果你发现*意外的行为*，并且与其他SELinux失败无关，那么你的系统可能已被黑客入侵。
- en: Take it *seriously*, and *thoroughly* inspect your system.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '*认真*对待，并*彻底*检查您的系统。'
- en: You never know when you might be a target for security attacks.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 你永远不知道何时可能成为安全攻击的目标。
- en: Summary
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this chapter, we gave an overview of the use of SELinux and differentiated
    the types of access control: *discretionary* and *mandatory*. SELinux, as a mandatory
    access control could help us to harden the security of our systems.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们概述了SELinux的使用，并区分了两种访问控制类型：*自主*和*强制*。作为强制访问控制，SELinux可以帮助我们增强系统的安全性。
- en: The use of SELinux is considered very complex, but we gave several examples
    that simplify how it works. SELinux is a *labeling system*.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux的使用被认为非常复杂，但我们提供了几个简化其工作原理的示例。SELinux是一个*标签系统*。
- en: We learned how to read the error logs with SELinux and found that there are
    only *four* scenarios where SELinux could fail, as looked at their solutions.
    The most common failures are with labels or when using custom configurations for
    services.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了如何使用SELinux查看错误日志，并发现SELinux失败的情况只有*四种*，并查看了它们的解决方案。最常见的失败情况是标签问题或使用了自定义配置的服务。
- en: Also, policies could have errors and they should be reported to their developers.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，策略可能存在错误，应该报告给开发人员。
- en: In a less common case, we analyzed that the change of behavior of the policies
    could be due to an *attack* on our system.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个较为罕见的案例中，我们分析了策略行为的变化可能是由于对我们系统的*攻击*。
- en: In the next chapter, we will take an in-depth look at how to virtualize complete
    systems or take them to their smallest expression using containers.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将深入探讨如何虚拟化完整系统，或通过容器将它们缩小到最小的表达形式。
- en: Further reading
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'To learn more about the topics covered in this chapter, you can visit the following
    links:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解本章涉及的更多内容，您可以访问以下链接：
- en: '*A sysadmin’s guide to SELinux: 42 answers to the big* *questions*: [https://opensource.com/article/18/7/sysadmin-guide-selinux](https://opensource.com/article/18/7/sysadmin-guide-selinux)'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*系统管理员指南：42个关于SELinux的重大* *问题的答案*：[https://opensource.com/article/18/7/sysadmin-guide-selinux](https://opensource.com/article/18/7/sysadmin-guide-selinux)'
- en: '*A sysadmin’s handy cheat sheet for* *SELinux*: [https://opensource.com/article/18/8/cheat-sheet-selinux](https://opensource.com/article/18/8/cheat-sheet-selinux)'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*系统管理员的实用备忘单* *关于SELinux*：[https://opensource.com/article/18/8/cheat-sheet-selinux](https://opensource.com/article/18/8/cheat-sheet-selinux)'
- en: '*SELinux troubleshooting and* *pitfalls*: [https://www.redhat.com/sysadmin/selinux-troubleshooting](https://www.redhat.com/sysadmin/selinux-troubleshooting)'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*SELinux故障排除与* *常见陷阱*：[https://www.redhat.com/sysadmin/selinux-troubleshooting](https://www.redhat.com/sysadmin/selinux-troubleshooting)'
- en: '[PRE25]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
