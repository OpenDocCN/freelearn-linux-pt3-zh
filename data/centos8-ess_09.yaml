- en: 11\. Configuring CentOS 8 systemd Units
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 11. 配置 CentOS 8 systemd 单元
- en: In order to gain proficiency in CentOS 8 system administration it is important
    to understand the concepts of systemd units with a particular emphasis on two
    specific types known as targets and services. The goal of this chapter, therefore,
    is to provide a basic overview of the different systemd units supported by CentOS
    8 combined with an overview of how to configure the many services that run in
    the background of a running Linux system.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 为了熟练掌握 CentOS 8 系统管理，了解 systemd 单元的概念非常重要，特别是要重点了解两种特定类型的单元：目标和服务。因此，本章的目标是提供一个关于
    CentOS 8 支持的不同 systemd 单元的基本概述，并介绍如何配置运行中的 Linux 系统后台运行的多个服务。
- en: 11.1 Understanding CentOS 8 systemd Targets
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 11.1 理解 CentOS 8 systemd 目标
- en: CentOS 8 can be configured to boot into one of a number of states (referred
    to as targets), each of which is designed to provide a specific level of operating
    system functionality. The target to which a system will boot by default is configured
    by the system administrator based on the purpose for which the system is being
    used. A desktop system, for example, will most likely be configured to boot using
    the graphical user interface target, while a cloud-based server system would be
    more likely to boot to the multi-user target level.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS 8 可以配置为启动到多个状态（称为目标），每个目标旨在提供特定级别的操作系统功能。系统默认启动的目标由系统管理员根据系统用途配置。例如，桌面系统通常会配置为使用图形用户界面目标启动，而基于云的服务器系统更可能启动到多用户目标级别。
- en: During the boot sequence, a process named systemd looks in the /etc/systemd/system
    folder to find the default target setting. Having identified the default target,
    it proceeds to start the systemd units associated with that target so that the
    system boots with all the necessary processes running.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动过程中，一个名为 systemd 的进程会查看 /etc/systemd/system 文件夹，查找默认的目标设置。在确定默认目标后，它会启动与该目标相关联的
    systemd 单元，以便系统启动时所有必要的进程都能运行。
- en: For those familiar with previous CentOS versions, systemd targets are the replacement
    for the older runlevel system.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于熟悉旧版 CentOS 的用户来说，systemd 目标是对旧有运行级别系统的替代。
- en: 11.2 Understanding CentOS 8 systemd Services
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 11.2 理解 CentOS 8 systemd 服务
- en: A service is essentially a process, typically running in the background, that
    provides specific functionality. The sshd service, for example, is the background
    process (also referred to as a daemon) that provides secure shell access to the
    system. Different systemd targets are configured to automatically launch different
    collections of services, depending on the functionality that is to be provided
    by that target.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 服务本质上是一个进程，通常在后台运行，提供特定的功能。例如，sshd 服务是一个后台进程（也称为守护进程），提供系统的安全 shell 访问。不同的 systemd
    目标会自动启动不同的服务集合，具体取决于该目标提供的功能。
- en: Targets and services are types of systemd unit, a topic which will be covered
    later in this chapter.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 目标和服务是 systemd 单元的类型，本章稍后将详细讲解这一主题。
- en: 11.3 CentOS 8 systemd Target Descriptions
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 11.3 CentOS 8 systemd 目标描述
- en: 'As previously outlined, CentOS 8 can be booted into one of a number of target
    levels. The default target to which the system is configured to boot will, in
    turn, dictate which systemd units are started. The targets that relate specifically
    to system startup and shutdown can be summarized as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，CentOS 8 可以启动到多个目标级别之一。系统默认配置的启动目标将决定启动哪些 systemd 单元。与系统启动和关闭相关的目标可以总结如下：
- en: • poweroff.target - This is the target in which the system shuts down. For obvious
    reasons it is unlikely you would want this as your default target.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: • poweroff.target - 这是系统关闭时的目标。出于显而易见的原因，这不太可能成为默认目标。
- en: • rescue.target – Causes the system to start up in a single user mode under
    which only the root user can log in. In this mode the system does not start any
    networking, graphical user interface or multi-user services. This run level is
    ideal for system administrators to perform system maintenance or repair activities.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: • rescue.target – 使系统在单用户模式下启动，此模式下只有 root 用户可以登录。在此模式下，系统不会启动任何网络、图形用户界面或多用户服务。此运行级别非常适合系统管理员执行系统维护或修复工作。
- en: • multi-user.target - Boots the system into a multi-user mode with text based
    console login capability.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: • multi-user.target - 将系统启动到多用户模式，并提供基于文本的控制台登录功能。
- en: • graphical.target - Boots the system into a networked, multi-user state with
    X Window System capability. By default the graphical desktop environment will
    start at the end of the boot process. This is the most common run level for desktop
    or workstation use.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: • graphical.target - 将系统启动到带有X Window系统功能的网络多用户状态。默认情况下，图形桌面环境将在引导过程结束时启动。这是桌面或工作站使用最常见的运行级别。
- en: • reboot.target - Reboots the system. Another target that, for obvious reasons,
    you are unlikely to want as your default.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: • reboot.target - 重启系统。由于显而易见的原因，你不太可能将其设置为默认目标。
- en: In addition to the above targets, the system also includes about 70 other targets,
    many of which are essentially sub-targets used by the above main targets. Behind
    the scenes, for example, multi-user.target will also start a target named basic.target
    which will, in turn, start the sockets.target unit which is required for communication
    between different processes. This ensures that all of the services on which the
    multi-user target is dependent are also started during the boot process.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 除上述目标外，系统还包括大约70个其他目标，其中许多实际上是由上述主要目标使用的子目标。例如，后台，multi-user.target还将启动一个名为basic.target的目标，它将启动sockets.target单元，该单元是不同进程之间通信所必需的。这确保了multi-user.target依赖的所有服务在引导过程中也会启动。
- en: 'A list of the targets and services on which a specified target is dependent
    can be viewed by running the following command in a terminal window:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过在终端窗口中运行以下命令来查看指定目标所依赖的目标和服务的列表：
- en: systemctl list-dependencies <target>
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl list-dependencies <target>
- en: '[Figure 11-1](../Text/Systemd_Targets_and_States.xhtml#_idTextAnchor140), for
    example, shows a partial listing of the systemd unit dependencies for the multi-user
    target (the full listing contains over 120 targets and services required for a
    fully functional multi-user system):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[图11-1](../Text/Systemd_Targets_and_States.xhtml#_idTextAnchor140)，例如，显示了multi-user目标的部分systemd单元依赖项列表（完整列表包含超过120个目标和服务，必要时用于完全功能的多用户系统）：'
- en: '![](img/rhel_8_target_dependencies.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/rhel_8_target_dependencies.png)'
- en: Figure 11-1
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-1
- en: 'The listing is presented as a hierarchical tree illustrating how some dependencies
    have sub-dependencies of their own. Scrolling to the bottom of the list, for example,
    would reveal that the multi-user target depends on two network filesystem related
    targets (namely nfs-client.target and remote-fs.target), each with its own service
    and target sub-dependencies:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 列表以层级树的形式呈现，说明某些依赖项有其自己的子依赖项。例如，滚动到列表底部，可以看到多用户目标依赖于两个与网络文件系统相关的目标（即nfs-client.target和remote-fs.target），每个目标都有自己的服务和目标子依赖项：
- en: '![](img/rhel_8_target_sub_dependencies.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/rhel_8_target_sub_dependencies.png)'
- en: Figure 11-2
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-2
- en: 'The colored dots to the left of each entry in the list indicate the current
    status of that service or target as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中每个条目左侧的彩色点表示该服务或目标的当前状态，具体如下：
- en: •Green - The service or target is active and running.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: •绿色 - 服务或目标处于活动状态并正在运行。
- en: •White - The service or target is inactive (dead). Typically because the service
    or target has not yet been enabled, has been stopped for some reason, or a condition
    on which the service or target depends has not been met.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: •白色 - 服务或目标处于非活动状态（死状态）。通常是因为该服务或目标尚未启用，已因某种原因停止，或服务或目标依赖的条件未满足。
- en: •Red - The service or target failed to start due to a fatal error.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: •红色 - 服务或目标因致命错误未能启动。
- en: 'To find out more details about the status of a systemd unit, use the systemctl
    command followed by the unit name as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解系统d单元的更多详细信息，可以使用systemctl命令，后跟单元名称，如下所示：
- en: systemctl status systemd-machine-id-commit.service
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl status systemd-machine-id-commit.service
- en: ◉ systemd-machine-id-commit.service - Commit a transient machine-id on disk
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: ◉ systemd-machine-id-commit.service - 提交一个暂时的machine-id到磁盘
- en: 'Loaded: loaded (/usr/lib/systemd/system/systemd-machine-id-commit.service;
    static; vendor preset: disabled)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 'Loaded: loaded (/usr/lib/systemd/system/systemd-machine-id-commit.service;
    static; vendor preset: disabled)'
- en: 'Active: inactive (dead)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 'Active: inactive (dead)'
- en: 'Condition: start condition failed at Thu 2019-02-14 15:27:47 EST; 1h 14min
    ago'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 'Condition: 启动条件在2019年2月14日星期四 15:27:47 EST失败；1小时14分钟之前'
- en: ConditionPathIsMountPoint=/etc/machine-id was not met
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: ConditionPathIsMountPoint=/etc/machine-id 未满足
- en: 'Docs: man:systemd-machine-id-commit.service(8)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 'Docs: man:systemd-machine-id-commit.service(8)'
- en: 11.4 Identifying and Configuring the Default Target
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 11.4 确定和配置默认目标
- en: 'The current default target for a CentOS 8 system can be identified using the
    systemctl command as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS 8系统的当前默认目标可以使用systemctl命令识别，如下所示：
- en: systemctl get-default
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl get-default
- en: multi-user.target
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: multi-user.target
- en: 'In the above case, the system is configured to boot using the multi-user target
    by default. The default setting can be changed at any time using the systemctl
    command with the set-default option. The following example changes the default
    target to start the graphical user interface the next time the system boots:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述情况下，系统被配置为默认使用 multi-user 目标启动。可以随时使用带有 set-default 选项的 systemctl 命令更改默认设置。以下示例将默认目标更改为在下次系统启动时启动图形用户界面：
- en: systemctl set-default graphical.target
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl set-default graphical.target
- en: Removed /etc/systemd/system/default.target.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 已移除 /etc/systemd/system/default.target。
- en: Created symlink /etc/systemd/system/default.target → /usr/lib/systemd/system/graphical.target.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 已创建符号链接 /etc/systemd/system/default.target → /usr/lib/systemd/system/graphical.target。
- en: The output from the default change operation reveals the steps performed in
    the background by the systemctl command to implement the change. The current default
    is configured by establishing a symbolic link from the default.target file located
    in /etc/systemd/system to point to the corresponding target file located in the
    /usr/lib/systemd/system folder (in this case the graphical.target file).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 默认更改操作的输出显示了系统ctl 命令在后台执行的步骤，以实现更改。当前默认配置通过在 /etc/systemd/system 中建立指向 /usr/lib/systemd/system
    文件夹中相应目标文件的符号链接来实现（在本例中是 graphical.target 文件）。
- en: 11.5 Understanding systemd Units and Unit Types
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 11.5 理解 systemd 单元及单元类型
- en: As previously mentioned, targets and services are both types of systemd unit.
    All of the files within the /usr/lib/systemd/system folder are referred to as
    systemd unit configuration files, each of which represents a systemd unit. Each
    unit is, in turn, categorized as being of a particular unit type. CentOS 8 supports
    12 different unit types including the target and service unit types already covered
    in this chapter.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，目标和服务都是 systemd 单元类型。/usr/lib/systemd/system 文件夹中的所有文件都被称为 systemd 单元配置文件，每个文件代表一个
    systemd 单元。每个单元又被分类为特定类型的单元。CentOS 8 支持 12 种不同的单元类型，包括本章已涉及的目标和服务单元类型。
- en: 'The type of a unit file is represented by the filename extension as outlined
    in [Table 11-1](../Text/Systemd_Targets_and_States.xhtml#_idTextAnchor143) below:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 单元文件的类型由文件名扩展名表示，详细信息见下表 [Table 11-1](../Text/Systemd_Targets_and_States.xhtml#_idTextAnchor143)：
- en: '| Unit Type | Filename Extension | Type Description |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| Unit Type | Filename Extension | 类型描述 |'
- en: '| Service | .service | System service. |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| Service | .service | 系统服务。 |'
- en: '| Target | .target | Group of systemd units. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| Target | .target | systemd 单元组。 |'
- en: '| Automount | .automount | File system auto-mount point. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| Automount | .automount | 文件系统自动挂载点。 |'
- en: '| Device | .device | Device file recognized by the kernel. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| Device | .device | 内核识别的设备文件。 |'
- en: '| Mount | .mount | File system mount point. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| Mount | .mount | 文件系统挂载点。 |'
- en: '| Path | .path | File or directory in a file system. |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| Path | .path | 文件系统中的文件或目录。 |'
- en: '| Scope | .scope | Externally created process. |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| Scope | .scope | 外部创建的进程。 |'
- en: '| Slice | .slice | Group of hierarchically organized units that manage system
    processes. |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| Slice | .slice | 层次结构组织的单元组，管理系统进程。 |'
- en: '| Snapshot | .snapshot | Saved state of the systemd manager. |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| Snapshot | .snapshot | systemd 管理器的保存状态。 |'
- en: '| Socket | .socket | Inter-process communication socket. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| Socket | .socket | 进程间通信套接字。 |'
- en: '| Swap | .swap | Swap device or a swap file. |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| Swap | .swap | 交换设备或交换文件。 |'
- en: '| Timer | .timer | Systemd timer. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| Timer | .timer | systemd 定时器。 |'
- en: Table 11-1
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Table 11-1
- en: Note that the target unit type differs from other types in that it is essentially
    comprised of a group of systemd units such as services or other targets.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，目标单元类型与其他类型不同，它本质上由一组 systemd 单元（如服务或其他目标）组成。
- en: 11.6 Dynamically Changing the Current Target
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 11.6 动态更改当前目标
- en: 'The above step specifies the target that will be used the next time the system
    starts, but does not change the state of the currently running system. To change
    to a different target dynamically, use the systemctl command once again, this
    time using the isolate option followed by the destination target. To switch the
    current system to the graphical target without rebooting, for example, the following
    command would be used:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 上述步骤指定了下次系统启动时将使用的目标，但不会改变当前运行的系统状态。要动态切换到不同的目标，请再次使用 systemctl 命令，这次使用 isolate
    选项，后跟目标。举例来说，如果要在不重启的情况下将当前系统切换到图形目标，可以使用以下命令：
- en: systemctl isolate graphical.target
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl isolate graphical.target
- en: Once executed, the system will start the graphical desktop environment.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '执行后，系统将启动图形桌面环境。  '
- en: 11.7 Enabling, Disabling and Masking systemd Units
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '11.7 启用、禁用和屏蔽 systemd 单元  '
- en: A newly installed CentOS 8 system will include the base systemd service units
    but is unlikely to include all of the services that will eventually be needed
    by the system once it goes into a production environment. A basic CentOS 8 installation,
    for example, will typically not include the packages necessary to run an Apache
    web server, a key element of which is the httpd.service unit.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '新安装的 CentOS 8 系统将包括基础 systemd 服务单元，但在系统进入生产环境后，可能不会包含系统最终需要的所有服务。例如，基本的 CentOS
    8 安装通常不包括运行 Apache Web 服务器所需的包，其中一个关键元素是 httpd.service 单元。  '
- en: 'The system administrator will resolve this problem by installing the necessary
    httpd packages using the following command:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '系统管理员将通过以下命令安装必要的 httpd 包来解决此问题：  '
- en: dnf install httpd
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'dnf install httpd  '
- en: 'Having configured the web server, the next task will be to check the status
    of the httpd service unit to identify whether it was activated as part of the
    installation process:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '配置完 Web 服务器后，接下来的任务是检查 httpd 服务单元的状态，以确认它是否在安装过程中被激活：  '
- en: systemctl status httpd.service
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'systemctl status httpd.service  '
- en: httpd.service - The Apache HTTP Server
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 'httpd.service - Apache HTTP 服务器  '
- en: 'Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset:
    disabled)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '已加载：已加载（/usr/lib/systemd/system/httpd.service；禁用；供应商预设：禁用）  '
- en: 'Active: inactive (dead)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '活跃：非活动（已停止）  '
- en: 'Docs: man:httpd.service(8)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '文档：man:httpd.service(8)  '
- en: 'Note that the service has loaded but is inactive because it is preset by the
    vendor to be disabled when first installed. To start the service, the following
    command can be used:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '请注意，服务已加载，但处于非活动状态，因为供应商预设首次安装时禁用该服务。要启动该服务，可以使用以下命令：  '
- en: systemctl start httpd.service
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'systemctl start httpd.service  '
- en: 'A status check will now indicate that the service is active:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '状态检查现在会显示服务处于活动状态：  '
- en: httpd.service - The Apache HTTP Server
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 'httpd.service - Apache HTTP 服务器  '
- en: 'Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; vendor preset:
    disabled)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '已加载：已加载（/usr/lib/systemd/system/httpd.service；禁用；供应商预设：禁用）  '
- en: 'Active: active (running) since Fri 2019-02-15 11:13:26 EST; 8s ago'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '活跃：活动（运行中），自 2019-02-15 11:13:26 EST 起；8 秒前  '
- en: 'Docs: man:httpd.service(8)'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '文档：man:httpd.service(8)  '
- en: 'Main PID: 10721 (httpd)'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '主 PID：10721（httpd）  '
- en: 'Status: "Started, listening on: port 80"'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '状态：“已启动，正在监听：端口 80”  '
- en: 'Tasks: 213 (limit: 13923)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 任务：213（限制：13923）
- en: 'Memory: 24.1M'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '内存：24.1M  '
- en: .
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '。  '
- en: .
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '。  '
- en: .
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '。  '
- en: Note, however that the status indicates that the service is still disabled.
    This means that next time the system reboots, the httpd service will not start
    automatically and will need to be started manually by the system administrator.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '然而请注意，状态表明该服务仍处于禁用状态。这意味着下次系统重启时，httpd 服务不会自动启动，系统管理员需要手动启动该服务。  '
- en: 'To configure the httpd service to start automatically each time the system
    starts, it must be enabled as follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '若要配置 httpd 服务在每次系统启动时自动启动，必须按如下方式启用：  '
- en: systemctl enable httpd.service
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'systemctl enable httpd.service  '
- en: 'Once the service has been enabled, the Loaded section of the status output
    will read as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '一旦启用服务，状态输出的已加载部分将显示如下：  '
- en: 'Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset:
    disabled)'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '已加载：已加载（/usr/lib/systemd/system/httpd.service；已启用；供应商预设：禁用）  '
- en: Now that it has been enabled, the next time the system reboots to the current
    target, the httpd service will start automatically. Assuming, for example, that
    the service was enabled while the system was running the multi-user target, the
    httpd service will have been added as another dependency to the multi-user.target
    systemd unit.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '既然已启用，下次系统重启到当前目标时，httpd 服务将自动启动。例如，假设在系统运行多用户目标时启用了该服务，那么 httpd 服务将作为另一个依赖项添加到
    multi-user.target systemd 单元中。  '
- en: Behind the scenes, systemctl adds dependencies to targets by creating symbolic
    links in the .wants folder for the target within the /etc/systemd/system folder.
    The multi-user.target unit, for example, has a folder named multi-user.target.wants
    in /etc/systemd/system containing symbolic links to all of the systemd units located
    in /usr/lib/systemd/system on which it is dependent. A review of this folder will
    show a correlation with the dependencies listed by the systemctl list-dependencies
    command outlined earlier in the chapter.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在后台，systemctl通过在/etc/systemd/system文件夹内为目标创建符号链接，将依赖项添加到目标的.wants文件夹中。例如，multi-user.target单元在/etc/systemd/system中有一个名为multi-user.target.wants的文件夹，里面包含指向位于/usr/lib/systemd/system中的所有系统d单元的符号链接，这些单元是它的依赖项。查看该文件夹将显示与本章前面介绍的systemctl
    list-dependencies命令列出的依赖项的关联。
- en: 'To disable a service so that it no longer starts automatically as a target
    dependency, simply disable it as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 要禁用一个服务，使其不再作为目标依赖项自动启动，只需按如下方式禁用它：
- en: systemctl disable httpd.service
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl disable httpd.service
- en: This command will remove the symbolic link to the httpd.service unit file from
    the .wants directory so that it is no longer a dependency and, as such, will not
    be started the next time the system boots.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将从.wants目录中删除指向httpd.service单元文件的符号链接，使其不再是依赖项，因此在下一次系统启动时不会启动。
- en: The .wants folder contains dependencies which, if not available, will not prevent
    the unit from starting and functioning. Mandatory dependencies (in other words
    dependencies that will cause the unit to fail if not available) should be placed
    in the .requires folder (for example multi-user.target.requires).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: .wants文件夹包含的依赖项，如果不可用，将不会阻止单元启动和运行。必须的依赖项（换句话说，若不可用会导致单元失败的依赖项）应放置在.requires文件夹中（例如multi-user.target.requires）。
- en: 'In addition to enabling and disabling, it is also possible to mask a systemd
    unit as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 除了启用和禁用之外，还可以按如下方式屏蔽systemd单元：
- en: systemctl mask httpd.service
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl mask httpd.service
- en: 'A masked systemd unit cannot be enabled, disabled or started under any circumstances
    even if it is listed as a dependency for another unit. In fact, as far has the
    system is concerned, it is as though a masked systemd unit no longer exists. This
    can be useful for ensuring that a unit is never started regardless of the system
    conditions. The only way to regain access to the service is to unmask it:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 被屏蔽的systemd单元在任何情况下都无法启用、禁用或启动，即使它被列为其他单元的依赖项。实际上，就系统而言，屏蔽的systemd单元就像是不存在一样。这在确保无论系统条件如何都永远不会启动该单元时非常有用。恢复对该服务的访问的唯一方法是取消屏蔽它：
- en: systemctl unmask httpd.service
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl unmask httpd.service
- en: 11.8 Working with systemd Units in Cockpit
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 11.8 在Cockpit中操作systemd单元
- en: 'In addition to the command-line techniques outlined so far in this chapter,
    it is also possible to review and manage systemd units from within the Cockpit
    web-based interface. Assuming that Cockpit has been installed and set up as outlined
    in the chapter entitled [“An Overview of the CentOS 8 Cockpit Web Interface”](../Text/Cockpit_Overview.xhtml#_idTextAnchor081),
    access to the list of systemd units on the system can be accessed by logging into
    Cockpit and selecting the Services option in the left-hand navigation panel marked
    A in [Figure 11-3](../Text/Systemd_Targets_and_States.xhtml#_idTextAnchor147):'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 除了本章概述的命令行技巧外，还可以通过Cockpit的基于Web的界面来查看和管理systemd单元。假设Cockpit已按照[“CentOS 8 Cockpit
    Web界面概述”](../Text/Cockpit_Overview.xhtml#_idTextAnchor081)一章中的说明安装和设置，通过登录Cockpit并在[图11-3](../Text/Systemd_Targets_and_States.xhtml#_idTextAnchor147)中选择左侧导航面板中的“服务”选项A，可以访问系统上的systemd单元列表：
- en: '![](img/centos_8_cockpit_services_screen.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_cockpit_services_screen.png)'
- en: Figure 11-3
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图11-3
- en: The button marked B displays units of specific types in the main area marked
    C where the current status of each unit is listed in the State column.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 标记为B的按钮将在标记为C的主区域显示特定类型的单元，其中每个单元的当前状态列将在状态列中列出。
- en: Selecting a unit from the list will display detailed information. [Figure 11-4](../Text/Systemd_Targets_and_States.xhtml#_idTextAnchor148),
    for example, shows the detail screen for an httpd.service instance including service
    logs (A) and menu options (B) for performing tasks such as starting, stopping,
    enabling/disabling and masking/unmasking the unit.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 从列表中选择一个单元将显示详细信息。例如，[图11-4](../Text/Systemd_Targets_and_States.xhtml#_idTextAnchor148)展示了httpd.service实例的详细信息，包括服务日志(A)和菜单选项(B)，用于执行任务，如启动、停止、启用/禁用以及屏蔽/取消屏蔽单元。
- en: '![](img/rhel_8_cockpit_service_details.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/rhel_8_cockpit_service_details.png)'
- en: Figure 11-4
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11-4
- en: 11.9 Summary
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 11.9 总结
- en: A newly installed CentOS 8 system includes a base set of systemd units many
    of which run in the background to provide much of the functionality of the system.
    These units are categorized by type, the most common of which being targets and
    services. A target unit is simply a group of other units that are to be started
    collectively. The system has a default target unit which defines the other units
    which are to be started up each time the system boots. The most common targets
    are those which boot the system to either multi-user or graphical mode. The systemctl
    command-line tool provides a range of options for performing systemd unit configuration
    tasks, many of which are also available through the Cockpit web-based interface.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 新安装的 CentOS 8 系统包含一组基础的 systemd 单元，其中许多在后台运行，为系统提供大部分功能。这些单元按类型分类，其中最常见的是目标和服务。目标单元只是一些其他单元的组合，它们需要一起启动。系统有一个默认的目标单元，定义了每次系统启动时需要启动的其他单元。最常见的目标是将系统引导到多用户模式或图形模式。systemctl
    命令行工具提供了一系列选项，用于执行 systemd 单元配置任务，许多选项也可以通过 Cockpit 基于 Web 的界面进行操作。
