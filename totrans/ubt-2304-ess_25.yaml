- en: 26\. Creating KVM Virtual Machines with virt-install and virsh
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 26. 使用virt-install和virsh创建KVM虚拟机
- en: In the previous chapters, we explored the creation of KVM guest operating systems
    on an Ubuntu host using Cockpit and the virt-manager graphical tool. This chapter
    will focus on creating KVM-based virtual machines using the virt-install and virsh
    command-line tools. These tools provide all the capabilities of the virt-manager
    and Cockpit options with the added advantage of being used within scripts to automate
    virtual machine creation. In addition, the virsh command allows virtual machines
    to be created based on a specification contained within a configuration file.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的章节中，我们探讨了如何在Ubuntu主机上使用Cockpit和virt-manager图形工具创建KVM客操作系统。本章将重点介绍如何使用virt-install和virsh命令行工具创建基于KVM的虚拟机。这些工具提供了与virt-manager和Cockpit选项相同的所有功能，并具有可在脚本中使用的额外优势，从而实现虚拟机创建的自动化。此外，virsh命令允许根据包含在配置文件中的规范创建虚拟机。
- en: The virt-install tool is supplied to allow new virtual machines to be created
    by providing a list of command-line options. This chapter assumes that the necessary
    KVM tools are installed. Read the chapter [“Installing KVM Virtualization on Ubuntu
    23.04”](KVM_Installation.xhtml#_idTextAnchor369) for details on these requirements.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 提供virt-install工具是为了通过提供一组命令行选项来创建新的虚拟机。本章假设已经安装了必要的KVM工具。有关这些要求的详细信息，请阅读[“在Ubuntu
    23.04上安装KVM虚拟化”](KVM_Installation.xhtml#_idTextAnchor369)一章。
- en: 26.1 Running virt-install to build a KVM Guest System
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 26.1 运行virt-install来构建KVM客操作系统
- en: The virt-install utility accepts a wide range of command-line arguments that
    provide configuration information related to the virtual machine being created.
    Some command-line options are mandatory (expressly, name, memory, and disk storage
    must be provided), while others are optional.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: virt-install工具接受一系列命令行参数，这些参数提供与正在创建的虚拟机相关的配置信息。一些命令行选项是必需的（明确要求提供名称、内存和磁盘存储），而其他选项则是可选的。
- en: 'At a minimum, a virt-install command will typically need the following arguments:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 至少，virt-install命令通常需要以下参数：
- en: •--name - The name to be assigned to the virtual machine.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: •--name - 分配给虚拟机的名称。
- en: •--memory - The amount of memory allocated to the virtual machine.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: •--memory - 分配给虚拟机的内存量。
- en: •--disk - The name and location of an image file for storage for the virtual
    machine. This file will be created by virt-install during the virtual machine
    creation unless the --import option is specified to indicate an existing image
    file is to be used.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: •--disk - 用于虚拟机存储的镜像文件的名称和位置。如果没有指定--import选项以指示使用现有镜像文件，则此文件将在虚拟机创建过程中由virt-install创建。
- en: •--cdrom or --location - Specifies the local path or the URL of a remote ISO
    image containing the installation media for the guest operating system.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: •--cdrom 或 --location - 指定包含客操作系统安装介质的本地路径或远程ISO镜像的URL。
- en: 'A summary of all the arguments available for use when using virt-install can
    be found in the man page:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 使用virt-install时可用的所有参数的摘要可以在man页中找到：
- en: $ man virt-install
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: $ man virt-install
- en: 26.2 An Example Ubuntu virt-install Command
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 26.2 一个Ubuntu virt-install命令示例
- en: With reference to the above command-line argument list, we can now look at an
    example command-line construct using the virt-install tool.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以上命令行参数列表，现在我们可以查看一个使用virt-install工具的命令行示例。
- en: Note that to display the virtual machine and complete the installation, a virt-viewer
    instance must be connected to the virtual machine after the virt-install utility
    starts it. By default, virt-install will attempt to launch virt-viewer automatically
    once the virtual machine starts running. However, if virt-viewer is unavailable,
    virt-install will wait until a virt-viewer connection is established. For example,
    the virt-viewer session may be running locally on the host system if it has a
    graphical desktop, or a connection may be established from a remote client as
    outlined in the chapter entitled [“Creating KVM Virtual Machines on Ubuntu 23.04
    using virt-manager”](KVM_virt-manager.xhtml#_idTextAnchor389).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，为了显示虚拟机并完成安装，virt-install工具启动虚拟机后，必须连接virt-viewer实例到虚拟机。默认情况下，virt-install会尝试在虚拟机启动后自动启动virt-viewer。然而，如果virt-viewer不可用，virt-install将等待直到建立virt-viewer连接。例如，virt-viewer会话可能在主机系统的图形桌面上本地运行，或者可能从远程客户端建立连接，正如[“在Ubuntu
    23.04上使用virt-manager创建KVM虚拟机”](KVM_virt-manager.xhtml#_idTextAnchor389)一章中所述。
- en: 'The following command creates a new KVM virtual machine configured to run a
    Ubuntu guest using KVM para-virtualization. It creates a new 10GB disk image,
    assigns 2048MB of RAM to the virtual machine, and configures a virtual CD device
    for the installation media ISO image:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令创建一个新的 KVM 虚拟机，配置为使用 KVM para-virtualization 运行 Ubuntu 来宾操作系统。它创建一个新的 10GB
    磁盘映像，分配 2048MB 的内存给虚拟机，并为安装媒体 ISO 镜像配置一个虚拟 CD 设备：
- en: virt-install --name demo_vm_guest --memory 2048 --disk path=/tmp/demo_vm_guest.img,size=10
    --network network=default --cdrom /home/demo/iso/ubuntu-23.04-desktop-amd64.iso
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: virt-install --name demo_vm_guest --memory 2048 --disk path=/tmp/demo_vm_guest.img,size=10
    --network network=default --cdrom /home/demo/iso/ubuntu-23.04-desktop-amd64.iso
- en: 'As the creation process runs, the virt-install command will display status
    updates of the creation progress:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建过程中，virt-install 命令会显示创建进度的状态更新：
- en: Starting install...
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 启动安装...
- en: Allocating 'demo_vm_guest.img' | 10 GB 00:00:01
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 分配 'demo_vm_guest.img' | 10 GB 00:00:01
- en: 'Running graphical console command: virt-viewer --connect qemu:///system --wait
    demo_vm_guest'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 运行图形控制台命令：virt-viewer --connect qemu:///system --wait demo_vm_guest
- en: 'Once the guest system has been created, the virt-viewer screen will appear
    containing the guest operating system installer loaded from the specified installation
    media:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦来宾系统创建完成，virt-viewer 屏幕将显示加载自指定安装媒体的来宾操作系统安装程序：
- en: '![](img/ubuntu_virt-install_running.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ubuntu_virt-install_running.jpg)'
- en: Figure 26-1
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图 26-1
- en: From this point, follow the standard installation procedure for the guest operating
    system.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 从此处开始，按照来宾操作系统的标准安装程序进行操作。
- en: 26.3 Starting and Stopping a Virtual Machine from the Command-Line
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 26.3 从命令行启动和停止虚拟机
- en: 'Having created the virtual machine from the command line, it stands to reason
    that you may also need to start it from the command line in the future. This can
    be achieved using the virsh command-line utility, referencing the name assigned
    to the virtual machine during creation. For example:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 既然已经从命令行创建了虚拟机，理应在未来你也可能需要从命令行启动它。这可以通过 virsh 命令行工具实现，引用在创建时分配给虚拟机的名称。例如：
- en: virsh start demo_vm_guest
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: virsh start demo_vm_guest
- en: 'Similarly, the virtual machine may be sent a shutdown signal as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，虚拟机也可以通过以下方式发送关机信号：
- en: virsh shutdown demo_vm_guest
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: virsh shutdown demo_vm_guest
- en: 'Suppose the virtual machine fails to respond to the shutdown signal and does
    not begin a graceful shutdown. In that case, the virtual machine may be destroyed
    (with the attendant risks of data loss) using the destroy directive:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 假设虚拟机未响应关机信号，并且没有开始进行优雅关机，则可以使用 destroy 指令销毁虚拟机（伴随数据丢失的风险）：
- en: virsh destroy demo_vm_guest
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: virsh destroy demo_vm_guest
- en: 26.4 Creating a Virtual Machine from a Configuration File
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 26.4 从配置文件创建虚拟机
- en: 'The virsh create command can take as an argument the name of a configuration
    file on which to base the creation of a new virtual machine. The configuration
    file uses XML format. The easiest way to create a configuration file is to dump
    out the configuration of an existing virtual machine and modify it for the new
    one. This can be achieved using the virsh dumpxml command. For example, the following
    command outputs the configuration data for a virtual machine domain named demo_vm_guest
    to a file named demo_vm_guest.xml:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: virsh create 命令可以以配置文件的名称作为参数，用于基于该配置文件创建新的虚拟机。配置文件采用 XML 格式。创建配置文件的最简单方法是导出现有虚拟机的配置并对其进行修改以适应新虚拟机。这可以通过
    virsh dumpxml 命令实现。例如，以下命令将虚拟机域名为 demo_vm_guest 的配置数据输出到名为 demo_vm_guest.xml 的文件中：
- en: virsh dumpxml demo_vm_guest > demo_vm_guest.xml
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: virsh dumpxml demo_vm_guest > demo_vm_guest.xml
- en: Once the file has been generated, load it into an editor to review and change
    the settings for the new virtual machine.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 文件生成后，加载到编辑器中以查看并更改新虚拟机的设置。
- en: At the very least, the <name>, <uuid>, and image file path <source file> must
    be changed to avoid conflict with the virtual machine from which the configuration
    was taken. In the case of the UUID, this line can be deleted from the file.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 至少必须更改 <name>、<uuid> 和镜像文件路径 <source file>，以避免与配置文件来源的虚拟机发生冲突。对于 UUID，可以删除文件中的这一行。
- en: 'The virtualization type, memory allocation, and number of CPUs, to name but
    a few options, may also be changed if required. Once the file has been modified,
    the new virtual machine may be created as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要，虚拟化类型、内存分配和 CPU 数量等选项也可以进行更改。修改文件后，可以按照以下方式创建新的虚拟机：
- en: virsh create demo_vm_guest.xml
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: virsh create demo_vm_guest.xml
- en: 26.5 Summary
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 26.5 总结
- en: KVM provides the virt-install and virsh command-line tools as a quick and efficient
    alternative to using the Cockpit and virt-manager tools to create and manage virtual
    machine instances. These tools have the advantage that they can be used from within
    scripts to automate the creation and management of virtual machines. The virsh
    command also includes the option to create VM instances from XML-based configuration
    files.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: KVM 提供了 `virt-install` 和 `virsh` 命令行工具，作为使用 Cockpit 和 virt-manager 工具创建和管理虚拟机实例的快速高效替代方案。这些工具的优势在于可以在脚本中使用，自动化创建和管理虚拟机。`virsh`
    命令还包括从基于 XML 的配置文件创建虚拟机实例的选项。
