- en: '*Chapter 9*: Setting System Parameters'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第9章*：设置系统参数'
- en: In this chapter, we'll look at how to use `systemd` utilities to set certain
    parameters that you used to have to set by either editing configuration files
    or creating symbolic links. We'll also look at the services that get involved
    when you use these utilities.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍如何使用`systemd`实用程序设置某些以前必须通过编辑配置文件或创建符号链接来设置的参数。我们还将查看在使用这些实用程序时涉及的服务。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Setting the locale parameter
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置地区设置参数
- en: Setting time and time zone parameters
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置时间和时区参数
- en: Setting the hostname and machine information
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置主机名和机器信息
- en: If you're ready, let's jump in!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您准备好了，让我们开始吧！
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The technical requirements are the same as in the previous chapters. So, fire
    up your Ubuntu server and AlmaLinux virtual machines and follow along.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 技术要求与前几章相同。因此，启动您的Ubuntu服务器和AlmaLinux虚拟机，并跟随进行操作。
- en: 'Check out the following link to see the Code in Action video: [https://bit.ly/3xKA7K0](https://bit.ly/3xKA7K0)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下链接以查看代码演示视频：[https://bit.ly/3xKA7K0](https://bit.ly/3xKA7K0)
- en: Setting the locale parameter
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置地区设置参数
- en: Computers are used all over the world, by people of many different cultures
    and languages. (I know that you already knew that, but I'm telling you anyway.)
    Fortunately, all major operating systems have ways to accommodate users of almost
    all languages on Earth. On Unix and Linux systems, the `locale` set of parameters
    helps us out with that. Let's start by taking a closer look at it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机被全世界的人们使用，他们来自许多不同的文化和语言背景。（我知道你已经知道这一点，但我还是要告诉你。）幸运的是，所有主要的操作系统都有方法来适应几乎地球上所有语言的用户。在Unix和Linux系统上，`locale`参数集帮助我们处理这个问题。让我们开始仔细看一看。
- en: Understanding the locale
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解地区设置
- en: '`locale` is a set of parameters that define lots of things that could be important
    to a user. There are parameters for the user''s preferred language, character
    encoding, currency formats, and several other things.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`locale`是一组定义了对用户可能重要的许多内容的参数。这些参数包括用户的首选语言、字符编码、货币格式以及其他几个内容。'
- en: Normally, `locale` is set when you install the operating system, and you won't
    have to mess around with it afterward. Linux installers don't have a screen that
    specifically says *Choose your locale*, but they do have a screen for you to choose
    a keyboard layout and another for you to choose your time zone. In my case, I
    would choose the US English keyboard layout and the US Eastern time zone. From
    that, the installer can figure out that I want to use a locale with settings for
    the United States.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 通常在安装操作系统时设置`locale`，之后就不必再操作它了。Linux安装程序没有一个专门的屏幕显示“选择您的locale”，但它们有一个供您选择键盘布局和另一个供您选择时区的屏幕。在我的情况下，我会选择美国英语键盘布局和美国东部时区。通过这些信息，安装程序可以确定我想要使用一个设置为美国的locale。
- en: 'There are a few differences in how `locale` is implemented on Debian/Ubuntu
    and Red Hat systems. One difference is in where `locale` is defined. On Red Hat-type
    systems, such as my Alma virtual machine, and on the openSUSE host machine that
    I''m using to write this, it''s set in the `/etc/locale.conf` file, as we see
    here:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian/Ubuntu和Red Hat系统上实现`locale`时存在一些差异。一个差异在于`locale`的定义位置。在Red Hat类型的系统上，例如我的Alma虚拟机，以及我用来撰写本文的openSUSE主机，`locale`设置在`/etc/locale.conf`文件中，正如我们在这里看到的：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Inside the `locale.conf` file, we only see this one line:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在`locale.conf`文件中，我们只看到这一行：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: So, `locale` is set by the `LANG=` parameter, which consists of two parts. The
    first part (`en_US`) defines the language and region that I want to use, while
    the second part (`UTF-8`) defines the character set that I want to use.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，`locale`由`LANG=`参数设置，由两部分组成。第一部分（`en_US`）定义了我想使用的语言和地区，而第二部分（`UTF-8`）定义了我想使用的字符集。
- en: Okay, the language and region part are self-explanatory. But what's a character
    set? Well, it's just the set of characters that the operating system can display.
    A character set consists of alphanumeric characters, punctuation characters, and
    other miscellaneous special characters. Just like everything else on a computer,
    a character – also known as a *code point* – consists of a combination of ones
    and zeros. A character set defines the combinations of ones and zeros that make
    up each character. Early characters sets, such as the old EBCDIC and ASCII sets,
    were limited in the number of characters that they could display. Making things
    worse is that the design of the EBCDIC set contains flaws that make it hard for
    programmers to use. UTF-8 was designed to address these shortcomings.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，语言和地区部分是显而易见的。那么，字符集是什么呢？它其实就是操作系统能够显示的字符集合。字符集包括字母数字字符、标点符号和其他各种特殊字符。就像计算机上的其他一切一样，字符——也叫做*码点*——由一串0和1组成。字符集定义了这些0和1的组合，从而构成每个字符。早期的字符集，比如旧的EBCDIC和ASCII集，在它们能够显示的字符数量上是有限的。更糟糕的是，EBCDIC集的设计有缺陷，导致程序员难以使用。UTF-8就是为了弥补这些不足而设计的。
- en: 'On Ubuntu Server, `locale` is set in the `/etc/default/locale` file. *If* the
    Ubuntu installer worked correctly – I''ll comment more about that in a few moments
    – the file should look something like this:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu Server中，`locale`设置保存在`/etc/default/locale`文件中。*如果*Ubuntu安装程序工作正常——稍后我会详细说明——那么该文件应该看起来像这样：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The only difference is that in the Ubuntu file, the `locale` specification isn't
    surrounded by double quotes as it is on the Alma machine.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的区别是，在Ubuntu的文件中，`locale`的规范没有像Alma机器中那样被双引号括起来。
- en: 'Next, let''s take a look at what''s in the `locale` setting. We''ll do that
    with the `locale` utility, like this:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看`locale`设置中包含了什么。我们可以使用`locale`工具来查看，方法如下：
- en: '[PRE3]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To see what these settings are all about, you''ll need to consult a `locale`
    man page. The only catch is that there are several `locale` man pages, as you
    can see here:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解这些设置的具体内容，你需要查阅`locale`的手册页面。唯一的难点是，实际上有多个`locale`手册页面，正如你在这里看到的：
- en: '[PRE4]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We want the number `5` man page in this case. Open it by doing:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们需要的是数字`5`的手册页面。可以通过以下方式打开：
- en: '[PRE5]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Only because I can read your mind, I already know what your next question is.
    *Exactly what do these locale settings affect?* Ah, I'm glad you asked. (And I
    hope it doesn't seem too creepy that I can read your mind.)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅因为我能读懂你的想法，我已经知道你接下来的问题是什么了。*这些locale设置究竟影响什么呢？* 啊，很高兴你问了。（希望我能读懂你心思的事不会让你觉得太诡异。）
- en: The various `locale` settings affect how utilities such as `awk`, `grep`, and
    `sort` display their output. On desktop machines, they might be used by the display
    manager for login purposes. Finally, as I'm about to demonstrate, they're also
    used by certain shell programming functions. I'll demonstrate this on the Alma
    machine since it already has several different locales available for use. The
    Bash shell's `printf` function provides us with the perfect demo. (Note that you
    might have to modify this demo a bit for your particular locale.)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 各种`locale`设置会影响`awk`、`grep`和`sort`等工具如何显示它们的输出。在桌面计算机上，它们可能会被显示管理器用于登录目的。最后，正如我将要演示的，它们还被某些Shell编程函数所使用。我将在Alma机器上演示，因为它已经有多个不同的locale可供使用。Bash
    shell的`printf`函数为我们提供了一个完美的演示。（注意，你可能需要根据你自己的locale对这个演示做一些修改。）
- en: 'On the command line of the Alma machine, let''s see how `printf` works with
    the default `en_US.UTF-8` locale set by trying to print out a decimal number:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在Alma机器的命令行上，我们来看看默认的`en_US.UTF-8` locale是如何与`printf`一起工作的，试着打印一个十进制数字：
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This works because in the US, the period (`.`) is the decimal point symbol.
    In most of Europe, though, the comma (`,`) is the decimal point symbol. We can
    change just one individual `locale` setting, so let''s temporarily change the
    `LC_NUMERIC` setting to a European one, just to see what happens:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 之所以有效，是因为在美国，句点（`.`）是小数点符号。而在大多数欧洲国家，逗号（`,`）则是小数点符号。我们可以仅更改一个单独的`locale`设置，所以我们暂时将`LC_NUMERIC`设置改为欧洲格式，看看会发生什么：
- en: '[PRE7]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This time, `printf` gives us an invalid number error. That''s because it''s
    now expecting to see a European number format. If we try this again with a comma,
    it should work. Let''s see if it does:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，`printf`给出了一个无效数字的错误。这是因为它现在期待看到欧洲的数字格式。如果我们再次尝试使用逗号，它应该能正常工作。我们来看看结果：
- en: '[PRE8]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Yeah, it works like a champ. And don't worry about that `LC_NUMERIC` setting
    – it will go away as soon as you log out of the terminal window.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，它像冠军一样工作。别担心那个`LC_NUMERIC`设置——它会在你退出终端窗口后消失。
- en: 'So far, we''ve only used the legacy `locale` utility, which has been around
    forever. To bring this back to the `systemd` topic, let''s use `localectl` to
    see what the default `locale` setting is:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只使用了传统的`locale`工具，它已经存在很久了。为了将这个话题与`systemd`相关联，让我们使用`localectl`来查看默认的`locale`设置：
- en: '[PRE9]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: It works, but it doesn't give us as much information as the legacy `locale`
    tool.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 它是有效的，但没有提供像传统的`locale`工具那样多的信息。
- en: Next, let's learn how to change the default locale.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们学习如何更改默认的区域设置。
- en: Changing the default locale on the Alma machine
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改 Alma 机器上的默认区域设置
- en: We'll continue using the Alma machine for this since it already has several
    locales installed.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将继续使用 Alma 机器进行操作，因为它已经安装了多个区域设置。
- en: 'Before you change the default locale, you need to see whether the locale you
    want is installed on your system. You can do that with either the `locale -a`
    command or with the `localectl list-locales` command. Either way, you''ll get
    the same output, which will look something like this:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在你更改默认区域设置之前，你需要检查你想要的区域设置是否已安装在系统中。你可以通过`locale -a`命令或者`localectl list-locales`命令来查看。无论哪种方式，你都会得到相同的输出，内容大致如下：
- en: '[PRE10]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'There are two ways to change the `locale` setting. You could just open the
    `/etc/locale.conf` file in your text editor and change the setting, but where''s
    the fun in that? Instead, let''s use our handy-dandy `localectl` tool to do this,
    like so:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方法可以更改`locale`设置。你可以直接打开`/etc/locale.conf`文件并修改设置，但那样太无趣了，不是吗？相反，让我们用便捷的`localectl`工具来完成这项工作，像这样：
- en: '[PRE11]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: So, I've set the machine to Canadian English.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我已经将机器设置为加拿大英语。
- en: 'Curiously, the double quotes that were there are now gone. So, I''m guessing
    that they aren''t really needed. Also, note that this setting won''t take effect
    until we log out of the machine and then log back in. Once we do, we''ll see that
    the locale setting has changed, but that the keymap setting hasn''t:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 奇怪的是，之前存在的双引号现在消失了。所以，我猜它们其实并不需要。另外，请注意，直到我们退出机器并重新登录后，这个设置才会生效。一旦重新登录，我们会看到区域设置已改变，但键盘映射设置并没有变化：
- en: '[PRE12]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The `localectl list-keymaps` command shows us what keymap settings are available.
    Let''s say that I want to change the keymap to Canadian, to match my locale. I''ll
    do it like this:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`localectl list-keymaps`命令可以显示可用的键盘映射设置。假设我想将键盘映射更改为加拿大的，以匹配我的区域设置。我会像这样操作：'
- en: '[PRE13]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'After logging out and logging back in again, the `localectl` status will look
    something like this:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 退出并重新登录后，`localectl`的状态将如下所示：
- en: '[PRE14]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Whenever you use `localectl` to change any settings, it''s `systemd-localed.service`
    that does the work. I can''t show you the entire `systemd-localed.service` file
    due to formatting reasons, so I''ll just show you the relevant part:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你使用`localectl`更改任何设置时，执行操作的是`systemd-localed.service`。由于格式问题，我无法展示完整的`systemd-localed.service`文件，所以我只会展示相关部分：
- en: '[PRE15]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: I'd like for you to note two things here. First, in the `[Service]` section,
    note the `BusName=org.freedesktop.locale1` line. There's no `Type=dbus` line,
    but that's okay. Just having a `BusName=` line automatically makes this a `dbus`
    type of service. Also, note that there's no `[Install]` section, which makes this
    a static type of service that we can't enable. Instead, any time that you use
    `localectl` to change a setting, `localectl` will start the service by sending
    it a `dbus` message.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望你注意到这里的两点。首先，在`[Service]`部分，注意到`BusName=org.freedesktop.locale1`这一行。没有`Type=dbus`这一行，但没关系。只要有`BusName=`这一行，它就自动成为一种`dbus`类型的服务。另外，请注意没有`[Install]`部分，这使得它成为一个静态类型的服务，我们无法启用它。相反，每当你使用`localectl`更改设置时，`localectl`会通过发送`dbus`消息来启动该服务。
- en: Once you've seen what you want to see, feel free to go back to your normal settings.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你看到你想看的内容，就可以随时返回到正常设置。
- en: Next, let's look at how the process is different on Ubuntu.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看在 Ubuntu 上，这个过程是如何不同的。
- en: Changing the default locale on Ubuntu
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改 Ubuntu 上的默认区域设置
- en: 'Ubuntu comes with a variety of `locale` definitions, but you have to build
    them before you can use them. In the `/etc/locale.gen` file, you''ll see a list
    of locales that you can build. Here''s what the top part of the file looks like:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu 提供了多种`locale`定义，但你必须先构建它们才能使用。在`/etc/locale.gen`文件中，你会看到一个可以构建的区域设置列表。以下是文件顶部的内容：
- en: '[PRE16]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '*If* the Ubuntu installer worked correctly, you should see that all but one
    of the `locale` listings in the file have been commented out. The one that isn''t
    commented out is the one that was built on your system. On the Ubuntu machine
    that I showed you previously, the `en_US.UTF-8` locale is the only one that isn''t
    commented out, as we see here:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果*Ubuntu安装程序正常工作，你应该看到文件中的所有`locale`列表都被注释掉了，只有一个没有被注释，它就是在你的系统上构建的那个。在我之前展示的Ubuntu机器上，`en_US.UTF-8`是唯一一个没有被注释掉的，如我们在这里看到的：'
- en: '[PRE17]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: So, this locale is the only one that was built.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，只有这个语言环境被构建出来。
- en: 'Now, remember, I said that this would be the case *if* the Ubuntu installer
    worked properly. This virtual machine is the second Ubuntu machine that I set
    up for this chapter, and the installer did work properly in this instance. When
    I set up the first Ubuntu virtual machine, the installer did *not* work properly,
    and no locales were built. When I look at the `/etc/default/locale` file on it,
    I see this:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，记住，我说过这将是*如果*Ubuntu安装程序正常工作的情况。这台虚拟机是我为本章设置的第二台Ubuntu机器，这次安装程序确实正常工作。当我设置第一台Ubuntu虚拟机时，安装程序*没有*正常工作，且没有构建任何语言环境。当我查看`/etc/default/locale`文件时，我看到的是：
- en: '[PRE18]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In this `/etc/locale.gen` file, all the locale listings are commented out,
    which tells me that no locales were built. So, this Ubuntu machine defaults to
    the generic `C` locale, which may or may not work in all situations. To change
    that, I''ll open the `/etc/locale.gen` file in my text editor and remove the comment
    symbol at the front of the `en_US.UTF-8 UTF-8` line. Next, I''ll generate the
    locale, like this:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个`/etc/locale.gen`文件中，所有的语言环境列表都被注释掉了，这告诉我没有构建任何语言环境。所以，这台Ubuntu机器默认使用的是通用的`C`语言环境，这可能在所有情况下都不适用。为了更改它，我将打开`/etc/locale.gen`文件，在文本编辑器中删除`en_US.UTF-8
    UTF-8`行前面的注释符号。接下来，我将生成语言环境，像这样：
- en: '[PRE19]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Finally, I''ll set the default locale and keymap settings the same way that
    I did on the Alma machine:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我将像在Alma机器上做的那样设置默认的语言环境和键盘映射设置：
- en: '[PRE20]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'After I logged out and logged back in, everything was as it should be, as we
    see here:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在我登出并重新登录后，一切恢复正常，就像我们在这里看到的：
- en: '[PRE21]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Now, I have to say that I have no idea why the Ubuntu installer didn't set the
    locale correctly for this machine. All I know is that with Ubuntu, I've come to
    expect an occasional bit of weirdness.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我得说，我完全不知道为什么Ubuntu安装程序没有为这台机器正确设置语言环境。我只知道，使用Ubuntu时，我已经习惯了偶尔会遇到一些奇怪的问题。
- en: Okay, I think that that about covers it for `locale`. Now, let's talk about
    setting time and timezone information.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，我认为`locale`部分大致讲完了。现在，让我们来谈谈设置时间和时区信息。
- en: Setting time and timezone parameters
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置时间和时区参数
- en: Back in the Stone Age of computing, maintaining accurate time on a computer
    wasn't all that important. To set the time on my old 8088-powered Sanyo PC clone,
    I just typed in whatever my watch said. That wasn't the most accurate way of doing
    things, but it didn't matter. The only real reason to set the computer time at
    all was to have somewhat accurate timestamps on the files that I created.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机的石器时代，保持计算机的准确时间并不是那么重要。为了设置我那台老旧的8088处理器驱动的三洋PC克隆机的时间，我只是输入手表上的时间。那并不是最准确的方式，但也没关系。设置计算机时间的唯一真正理由就是为了给我创建的文件加上相对准确的时间戳。
- en: Nowadays, accurate timekeeping on computers is vitally important for a lot of
    reasons. Fortunately, we now have the `systemd` suite comes with the `timedatectl`
    utility and `systemd-timedated.service` to help us out. In this chapter, we'll
    talk about `timedatectl`, but we'll save discussing `systemd-timedated.service`
    until [*Chapter 17*](B17491_17_Final_NM_ePub.xhtml#_idTextAnchor253), *Understanding
    systemd and Bootloaders*.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，计算机上的准确时间保持对许多原因来说至关重要。幸运的是，我们现在有了`systemd`套件，它包括了`timedatectl`工具和`systemd-timedated.service`来帮助我们。在这一章中，我们将讨论`timedatectl`，但我们会将`systemd-timedated.service`的讨论留到[*第17章*](B17491_17_Final_NM_ePub.xhtml#_idTextAnchor253)，*理解systemd和引导加载程序*。
- en: 'To see the status of your machine''s timekeeping, just use `timedatectl`, as
    I show you here:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看你机器的时间保持状态，只需使用`timedatectl`，正如我在这里展示的那样：
- en: '[PRE22]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '`Local time` is the time for my timezone, which is **Eastern Daylight Time**
    (**EDT**). This is the time that''s set in the operating system.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`Local time`是我所在时区的时间，即**东部夏令时**（**EDT**）。这是操作系统中设置的时间。'
- en: '`Universal time` (**UTC**) is the time in Greenwich, England, which is the
    timezone that''s used as a worldwide reference. (UTC used to be known as **Greenwich
    Mean Time**, or **GMT**.)'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '`Universal time`（**UTC**）是格林威治（英国）的时间，这是作为全球参考的时区。（UTC以前被称为**格林威治标准时间**，或**GMT**。）'
- en: '`RTC`, which stands for Real-Time Clock, is the time that''s set in the computer''s
    hardware clock. You can see that the RTC time nearly matches the UTC time. Of
    the two, UTC will normally be more accurate, because it periodically fetches the
    current time from time servers that are either on the Internet or the local network.
    Somewhat less periodically, the operating system updates the RTC time from UTC.
    It is possible to configure the RTC time to update from local time, but that will
    cause problems with setting timezones and knowing when to switch to and from Daylight
    Savings Time.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`RTC`，即实时时钟，是设置在计算机硬件时钟中的时间。你可以看到RTC时间与UTC时间几乎一致。两者中，UTC通常更为准确，因为它会定期从互联网上或本地网络上的时间服务器获取当前时间。操作系统会在较少的时间间隔内从UTC更新时间RTC。虽然可以将RTC时间配置为从本地时间更新，但这样会导致设置时区和判断何时切换夏令时出现问题。'
- en: We can also see that the system clock is synchronized, that the **NTP service**
    is active, and that RTC has *not* been set to local time.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到系统时钟已同步，**NTP服务**处于活动状态，并且RTC*未*设置为本地时间。
- en: In the `timedatectl` man page, you'll find directions on how to manually change
    the system's time. Years ago, when I first got into Linux, I used to have to do
    this all the time, because the older NTP services wouldn't automatically set the
    time if the machine's clock was more than a few minutes off. The modern NTP services
    work much better. Now, as long as an NTP server is available when you boot the
    machine, the NTP service will set the time properly, regardless of how far off
    the machine's clock is. So, there's a good chance that you'll never need to set
    the time manually.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在`timedatectl`的手册页中，你会找到如何手动更改系统时间的说明。多年前，当我刚接触Linux时，我曾经需要经常手动设置时间，因为当机器的时钟偏差超过几分钟时，旧版的NTP服务不会自动设置时间。现代的NTP服务运行得要好得多。现在，只要启动机器时有可用的NTP服务器，NTP服务就会正确地设置时间，无论机器时钟有多偏差。因此，你很可能永远不需要手动设置时间。
- en: 'You also might not ever need to set the timezone manually, because that''s
    normally set up when you install the operating system. However, there might be
    times when you will, such as if you ever have to move a server from one timezone
    to another. To do this, you''ll have to look at the list of available timezones,
    like this:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可能永远不需要手动设置时区，因为这通常是在安装操作系统时自动设置的。然而，可能会有一些情况需要手动设置时区，比如如果你需要将服务器从一个时区迁移到另一个时区。为此，你需要查看可用时区的列表，如下所示：
- en: '[PRE23]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'That''s a very long list, so let''s use our good friend `grep` to narrow it
    down. Let''s say that I''m only interested in US timezones. My `grep` filter will
    look like this:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一长串列表，所以让我们使用好朋友`grep`来缩小范围。假设我只对美国的时区感兴趣。那么我的`grep`过滤器会是这样：
- en: '[PRE24]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Okay; that doesn''t narrow things down as much as I''d like since `America`
    covers timezones in both North and South America. Also, instead of choosing the
    actual name of a timezone, we have to choose a city that''s in the desired timezone.
    In my case, even though I''m down in the southeast corner of Georgia, USA, I have
    to choose `America/New_York` for my zone because New York just happens to be here
    in the Eastern timezone. Let''s say that for some crazy reason, I''ve decided
    to move to the west coast. To change the timezone on my computer, I would do:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这样的描述并没有像我想的那样缩小范围，因为`America`包含了北美和南美的多个时区。而且，我们不仅要选择具体的时区名称，还必须选择一个位于目标时区的城市。在我的情况下，尽管我位于美国乔治亚州的东南角，但我必须选择`America/New_York`作为我的时区，因为纽约恰好处于东部时区。假设出于某种疯狂的原因，我决定搬到西海岸。要更改我计算机的时区，我需要做如下操作：
- en: '[PRE25]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'The status would now look like this:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 状态现在将显示如下：
- en: '[PRE26]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: So, I'm now set up for Pacific Daylight Savings Time.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，我现在已经设置为太平洋夏令时。
- en: 'In the `timedatectl` man page, you''ll see a couple of commands that work on
    Ubuntu but don''t work on Alma. That''s because Ubuntu is configured to use `systemd-timesyncd.service`
    as its timekeeping service, and Alma is configured to use `chronyd`. On an Ubuntu
    machine, you can view the status of the timekeeping service like this:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在`timedatectl`的手册页中，你会看到一些命令在Ubuntu上有效，但在Alma上不起作用。这是因为Ubuntu被配置为使用`systemd-timesyncd.service`作为其时间同步服务，而Alma被配置为使用`chronyd`。在Ubuntu机器上，你可以像这样查看时间同步服务的状态：
- en: '[PRE27]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: That pretty much covers it for timekeeping. Let's move on to setting `hostname`
    and machine information.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本涵盖了时间同步的内容。接下来我们来设置`hostname`和机器信息。
- en: Setting the hostname and machine information
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置主机名和机器信息
- en: Setting a proper hostname on a computer is very useful in the business world.
    It allows the computer to be registered in a `IPv6` address?) Before we look at
    how to set this information, let's learn how to view it. (Note that this hostname
    can be automatically registered either by using **Dynamic Domain Name Service**
    (**DDNS**) or by using orchestration tools such as Puppet, Chef, or Ansible.)
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机上设置一个合适的主机名在商业世界中非常有用。它允许计算机在`IPv6`地址中注册。) 在我们了解如何设置这些信息之前，先来看看如何查看这些信息。（注意，这个主机名可以通过使用**动态域名服务**（**DDNS**）或使用像Puppet、Chef或Ansible这样的编排工具自动注册。）
- en: Viewing the information
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查看信息
- en: 'A computer''s hostname is set in the `/etc/hostname` file, as we see here on
    my Alma machine:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机的主机名设置在`/etc/hostname`文件中，正如我们在我的Alma机器上看到的那样：
- en: '[PRE28]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The installers for most Linux operating systems allow you to set your own custom
    hostname during system installation. I didn't do that for this virtual machine,
    so it just uses the default `localhost.localdomain`. In this case, we're using
    a `localhost` part is the actual hostname, while the `localdomain` part is the
    network domain to which the computer belongs. On a for-real network, the domain
    part would be the same for every computer on the network, and the `hostname` part
    would be unique for each computer. On a home network, or any other time that a
    whole FQDN isn't required, you could just have a hostname without a domain name.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数Linux操作系统的安装程序允许你在系统安装过程中设置自定义的主机名。我在这台虚拟机上没有这么做，所以它使用了默认的`localhost.localdomain`。在这种情况下，`localhost`部分是实际的主机名，而`localdomain`部分是计算机所属的网络域名。在实际网络中，域名部分对每台计算机来说是相同的，而`主机名`部分对于每台计算机来说是唯一的。在家庭网络或任何不需要完整FQDN的情况下，你可以只使用一个没有域名的主机名。
- en: 'On an old SysV machine, all you have is just the hostname or FQDN that''s been
    set in the `/etc/hostname` file. With `systemd`, there''s a whole lot more. On
    the Alma machine, let''s look at the extra information that the `hostnamectl`
    command gives us:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在一台旧的SysV机器上，你所拥有的只是设置在`/etc/hostname`文件中的主机名或FQDN。而在`systemd`中，事情要复杂得多。在Alma机器上，让我们看看`hostnamectl`命令给我们提供的额外信息：
- en: '[PRE29]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Here''s the breakdown:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是详细信息：
- en: '`Static hostname`: This is the hostname or FQDN that''s set in the `/etc/hostname`
    file.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`静态主机名`：这是设置在`/etc/hostname`文件中的主机名或FQDN。'
- en: '`Icon name`: Certain graphical applications will represent a computer as an
    icon. `Icon name` is the name that will show up with the icon for this computer.
    I haven''t set `Icon name` on this virtual machine, so it just defaults to `computer-vm`.
    (The system automatically detected that this is a virtual machine, which explains
    the `vm` part.)'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`图标名称`：某些图形应用程序会将计算机表示为图标。`图标名称`是显示在此计算机图标上的名称。我没有在这台虚拟机上设置`图标名称`，所以它默认为`computer-vm`。（系统自动检测到这是虚拟机，这也解释了`vm`部分的含义。）'
- en: '`Chassis`: This denotes the type of computing device that we''re using. I didn''t
    set this one either, so it just defaults to `vm`, for *virtual machine*. (Most
    of the time, `systemd` can automatically detect the correct `Chassis` type.)'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`机箱`：这表示我们使用的计算设备类型。我也没有设置这个，所以它默认为`vm`，即*虚拟机*。（大多数时候，`systemd`可以自动检测正确的`机箱`类型。）'
- en: '`Machine ID`: This hexadecimal number is a unique number that gets assigned
    to the computer either during system installation or the first bootup. According
    to the `machine-id` man page, this ID number should be treated as confidential
    information, and should never be exposed to an untrusted network. This ID number
    is stored in the `/etc/machine-id` file.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`机器ID`：这个十六进制数字是一个唯一的数字，它在系统安装或第一次启动时分配给计算机。根据`machine-id`手册页，这个ID号应该视为机密信息，不应暴露给不受信任的网络。这个ID号存储在`/etc/machine-id`文件中。'
- en: '`Boot ID`: This number changes every time you boot the machine. The `hostnamectl`
    command pulls this number from the `/proc/sys/kernel/random/boot_id` file.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`启动ID`：这个数字每次启动计算机时都会变化。`hostnamectl`命令从`/proc/sys/kernel/random/boot_id`文件中提取这个数字。'
- en: '`Virtualization`: This line only shows up for virtual machines. I''m running
    this virtual machine under Oracle VirtualBox, so the parameter shows up here as
    `oracle`.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`虚拟化`：这一行只会出现在虚拟机中。我在Oracle VirtualBox下运行这台虚拟机，所以此参数显示为`oracle`。'
- en: '`Operating System`: Information about the operating system comes from the `/etc/os-release`
    file.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`操作系统`：操作系统信息来自`/etc/os-release`文件。'
- en: '`CPE OS Name`: This is the name of the operating system in **Common Platform
    Enumeration** (**CPE**) format. (I won''t go into the details about CPE here,
    but you can read about it by following the link in the *Further reading* section,
    at the end of this chapter.)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CPE OS Name`：这是操作系统的名称，采用**通用平台枚举**（**CPE**）格式。（我在这里不会深入讲解CPE的细节，但你可以通过在*进一步阅读*部分中点击链接来了解相关信息，这个链接位于本章的末尾。）'
- en: '`Kernel`: This is the version of the running Linux kernel. You can see the
    same information by using the `uname -r` command.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Kernel`：这是正在运行的Linux内核的版本。你可以使用`uname -r`命令查看相同的信息。'
- en: '`Architecture`: This shows the type of CPU that''s in the computer. You can
    see the same information by using the `uname -m` command.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Architecture`：这显示了计算机中的CPU类型。你可以使用`uname -m`命令查看相同的信息。'
- en: 'Just for fun, let''s look at the `hostnamectl` output from my host machine,
    which is running openSUSE 15.2:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 只是为了好玩，让我们看看我主机的`hostnamectl`输出，这台主机运行的是openSUSE 15.2：
- en: '[PRE30]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'There are a few differences here that I want you to note. First, there''s no
    `Static hostname` value. Unlike the AlmaLinux installer, the openSUSE installer
    doesn''t put anything into the `/etc/hostname` file if you don''t assign a hostname
    during installation. The file is there, but there''s nothing in it, as you can
    see here:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些差异，我希望你注意。首先，没有`Static hostname`值。与AlmaLinux安装程序不同，如果在安装过程中没有分配主机名，openSUSE安装程序不会将任何内容写入`/etc/hostname`文件。文件存在，但里面什么也没有，正如你在这里看到的：
- en: '[PRE31]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Instead of a `Static hostname` value, we have a `Transient hostname` value.
    This `Transient hostname` value is a dynamic hostname that's maintained by the
    Linux kernel. It's normally pulled in from the `Static hostname` property that's
    set in the `/etc/hostname` file. If nothing is in the `hostname` file, `Transient
    hostname` will default to `localhost.localdomain`, unless a hostname is assigned
    by either a DHCP or mDNS server.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 我们没有`Static hostname`值，而是有一个`Transient hostname`值。这个`Transient hostname`值是由Linux内核维护的动态主机名。它通常从`/etc/hostname`文件中设置的`Static
    hostname`属性中提取。如果`hostname`文件中没有内容，`Transient hostname`将默认为`localhost.localdomain`，除非由DHCP或mDNS服务器分配主机名。
- en: Finally, `Icon name` and `Chassis` reflect the fact that this is a desktop machine,
    running on bare metal. (Today, that bare metal is a 2009 vintage Hewlett-Packard
    workstation, running with a pair of AMD Opteron quad-core processors. It's old,
    but it still gets the job done.) Again, the system automatically detected the
    correct `Chassis` value, just as it did with the virtual machine.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，`Icon name`和`Chassis`反映了这是一台桌面计算机，运行在裸机上。（今天，这台裸机是一台2009年款的惠普工作站，配有一对AMD
    Opteron四核处理器。虽然它已经很旧，但仍然能够完成任务。）同样，系统自动检测到了正确的`Chassis`值，正如它在虚拟机中所做的那样。
- en: Note
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To see the other available `Chassis` types, look at the `machine-info` man page.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看其他可用的`Chassis`类型，请查看`machine-info`手册页面。
- en: Now that we've *viewed* how to view the hostname and machine information, let's
    learn how to set it.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经*查看*了如何查看主机名和机器信息，接下来让我们学习如何设置它。
- en: Setting the information
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置信息
- en: There are three types of hostnames on `systemd` machines, and you've already
    seen two of them. In addition to `Static hostname` and `Transient hostname`, there's
    also `Pretty hostname`. To explain the *pretty* concept, let's look at the criteria
    for `Static hostname` and `Transient hostname`.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`systemd`机器上有三种类型的主机名，你已经看到其中的两种。除了`Static hostname`和`Transient hostname`，还有`Pretty
    hostname`。为了说明*pretty*概念，让我们看看`Static hostname`和`Transient hostname`的标准。'
- en: 'In the man page for the `hostname` file, which you can access with the `man
    5 hostname` command, you''ll see the criteria for creating hostnames. Here''s
    a breakdown of what it says:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在`hostname`文件的手册页中，你可以通过`man 5 hostname`命令访问，里面会列出创建主机名的标准。以下是其中的详细内容：
- en: '**Requirement**: The hostname cannot be more than 64 characters in length.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**要求**：主机名不能超过64个字符。'
- en: '**Recommendations**:'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**建议**：'
- en: Only use characters from the old 7-bit ASCII character set. (See the link in
    the *Further reading* section to see which characters belong to this set.)
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 只使用来自旧的7位ASCII字符集的字符。（请参阅*进一步阅读*部分中的链接，查看哪些字符属于该字符集。）
- en: All letters should be in lowercase.
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有字母应为小写。
- en: Do not have spaces or dots in the hostname. (The only dots should be between
    the name of the host and the domain name, and between the two parts of the domain
    name.)
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主机名中不能包含空格或点（唯一的点应该位于主机名和域名之间，以及域名的两个部分之间）。
- en: Use a format that's compatible with DNS domain name labels.
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用与DNS域名标签兼容的格式。
- en: So, you're somewhat limited with how you create traditional hostnames. Now,
    with `Pretty hostname`, you can create a hostname that's more human-friendly,
    such as `Donnie's Computer`. (Okay, I didn't use a lot of imagination with that
    one, but you get the point.)
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在创建传统主机名时，你有一些限制。现在，借助`Pretty hostname`，你可以创建一个更加人性化的主机名，比如`Donnie's Computer`。（好吧，我没有发挥太多想象力，但你明白我的意思。）
- en: 'When you use `hostnamectl` to set a hostname, the default is to set all three
    `hostname` types at once. For example, let''s say that I want my computer to be
    `Donnie''s Computer`. Here''s the command that I would use:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用`hostnamectl`设置主机名时，默认情况下会同时设置所有三种`hostname`类型。例如，假设我想让我的电脑命名为`Donnie's
    Computer`。我会使用如下命令：
- en: '[PRE32]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now, let''s view the `hostnamectl` information:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们查看`hostnamectl`的信息：
- en: '[PRE33]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Here, you can see that `hostnamectl` automatically converted `Pretty hostname`
    into the proper format for `Static hostname`, except that it still allows uppercase
    letters. After I log out and log back in, the new `Static hostname` value will
    show up in the command prompt, which will look like this:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到`hostnamectl`自动将`Pretty hostname`转换成了适用于`Static hostname`的格式，只是它仍然允许使用大写字母。登出并重新登录后，新的`Static
    hostname`值将在命令提示符中显示，效果如下：
- en: '[PRE34]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Okay, that''s great for a home computer, but it''s not so good for a business
    network. This time, let''s create an FQDN that''s suitable for use with DNS. Let''s
    say that my local network has been set up as the `tevault.com` domain and that
    I want to name this computer `development-1`. My command to create the FQDN would
    look like this:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，这对于家用电脑来说很棒，但对于企业网络来说就不太适用了。这次，我们来创建一个适合DNS使用的FQDN。假设我的本地网络已经设置为`tevault.com`域，并且我想将这台电脑命名为`development-1`。我用来创建FQDN的命令如下所示：
- en: '[PRE35]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Use `hostnamectl` again, and you''ll see that `Pretty hostname` is now gone:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用`hostnamectl`，你会看到`Pretty hostname`现在已经消失：
- en: '[PRE36]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'After I log out and log back in again, I''ll see the proper DNS-friendly hostname
    in the command prompt:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 登出并重新登录后，我将在命令提示符中看到正确的DNS友好型主机名：
- en: '[PRE37]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'If I just want to set a `Pretty hostname` value, I can do it like this:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我只想设置一个`Pretty hostname`值，我可以这样做：
- en: '[PRE38]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'There are several other things that you can set with `hostnamectl`, which you
    can see on the `machine-info` man page. The `hostnamectl` man page shows you the
    commands for setting these extra parameters. For example, let''s set the location
    of this virtual machine to my current location, which is the teeming metropolis
    of Saint Marys, Georgia:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用`hostnamectl`设置其他几个选项，具体内容可以查看`machine-info`的手册页。`hostnamectl`的手册页向你展示了设置这些附加参数的命令。例如，让我们将这个虚拟机的位置设置为我现在的位置，也就是人声鼎沸的乔治亚州圣玛丽斯：
- en: '[PRE39]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The location will now show up in the output of `hostnamectl`. Also, the first
    time you use `hostnamectl` to add any of these additional parameters, it will
    create the `/etc/machine-info` file, which wasn''t there previously. Here''s what
    mine looks like now that I''ve added a `Pretty hostname` value and location:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，`hostnamectl`的输出中将显示位置。此外，当你第一次使用`hostnamectl`添加这些附加参数时，它会创建一个`/etc/machine-info`文件，该文件之前并不存在。以下是我添加了`Pretty
    hostname`值和位置后文件的样子：
- en: '[PRE40]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Cool. Saint Marys, Georgia, is now world-famous.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 很酷。乔治亚州圣玛丽斯现在已经是世界闻名了。
- en: 'As we''ve already seen with `localectl`, using `hostnamectl` to change a parameter
    invokes a dbus-type service. In this case, it''s `systemd-hostnamed.service`.
    Here''s what it looks like:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前在`localectl`中看到的，使用`hostnamectl`更改参数时，会调用一个dbus类型的服务。在这种情况下，是`systemd-hostnamed.service`。它的样子如下：
- en: '![](img/Figure_9.1_B17491.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_9.1_B17491.jpg)'
- en: Figure 9.1 – The systemd-hostnamed.service file
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.1 - `systemd-hostnamed.service`文件
- en: Note that a lot of security-related parameters have been set, which gives this
    service pretty much the same protection as a good mandatory access control system
    such as SELinux. The `ProtectHome=yes` line and the `ProtectSystem=strict` line
    make most of this machine's filesystem inaccessible to this service, but the `ReadWritePaths=/etc`
    line at the bottom provides an exception. The `ReadWritePaths=/etc` line allows
    the service to read from or write to files in the `/etc/` directory. (`systemd-localed.service`,
    which we looked at in the *Changing the default locale on the Alma machine* section,
    is set up the same way, but I neglected to point that out at the time.)
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，许多与安全相关的参数已经设置，这使得此服务几乎获得了与优秀的强制访问控制系统（如 SELinux）相同的保护。`ProtectHome=yes`
    行和 `ProtectSystem=strict` 行使得大部分机器的文件系统对该服务不可访问，但底部的 `ReadWritePaths=/etc` 行提供了一个例外。`ReadWritePaths=/etc`
    允许该服务读取或写入 `/etc/` 目录中的文件。（我们在 *更改 Alma 机器的默认区域设置* 部分中查看过的 `systemd-localed.service`
    就是这样设置的，但当时我没有指出这一点。）
- en: Okay, I think that pretty much wraps it up for this chapter. Let's summarize
    and then move on.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，我想这章差不多到此为止了。我们总结一下，然后继续前进。
- en: Summary
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: As always, we've seen some cool stuff in this chapter. We started by looking
    at what locales are and how to set the default locale on a `systemd` system. Then,
    we saw how to set the time and timezones, and finished up by setting hostnames
    and machine information. In the next chapter, we'll give your brain a bit of a
    rest by looking at something a bit easier – that is, we'll look at the various
    ways to shut down or reboot your system. I'll see you there!
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所看到的，在本章中有一些很酷的内容。我们首先了解了什么是区域设置，以及如何在 `systemd` 系统中设置默认区域设置。接着，我们学习了如何设置时间和时区，并最终通过设置主机名和机器信息来结束这一部分。下一章，我们将给大脑稍作休息，讨论一些更简单的内容——即我们将探讨关机或重启系统的各种方法。我们下章见！
- en: Questions
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which of the following commands shows you what locales are installed on your
    system?
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪条命令可以显示系统上安装了哪些区域设置？
- en: '`systemctl list-locales`'
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`systemctl list-locales`'
- en: '`locale list-locales`'
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`locale list-locales`'
- en: '`localectl list-locales`'
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`localectl list-locales`'
- en: '`localectl -a`'
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`localectl -a`'
- en: What type of service gets invoked when you use either `localectl` or `hostnamectl`
    to set a parameter?
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你使用 `localectl` 或 `hostnamectl` 设置参数时，调用的是哪种服务？
- en: '`dbus`'
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`dbus`'
- en: '`oneshot`'
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`oneshot`'
- en: '`notify`'
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`notify`'
- en: '`forking`'
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`forking`'
- en: What happens if your computer has nothing in its `hostname` file?
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果计算机的 `hostname` 文件中没有任何内容，会发生什么？
- en: It sets the default `Static hostname` value to `localhost.localdomain` or to
    whatever it might get from a local DHCP or mDNS server.
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将默认的 `Static hostname` 值设置为 `localhost.localdomain` 或从本地 DHCP 或 mDNS 服务器获得的任何值。
- en: The computer will have no hostname.
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算机将没有主机名。
- en: It sets `Pretty hostname` to `localhost.localdomain`.
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将 `Pretty hostname` 设置为 `localhost.localdomain`。
- en: It sets the default `Transient hostname` value to `localhost.localdomain` or
    to whatever it might get from a local DHCP or mDNS server.
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将默认的 `Transient hostname` 值设置为 `localhost.localdomain` 或从本地 DHCP 或 mDNS 服务器获得的任何值。
- en: What time does the computer's hardware clock normally show?
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算机的硬件时钟通常显示什么时间？
- en: Local time
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 本地时间
- en: UTC time
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: UTC 时间
- en: Answers
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 答案
- en: C
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: C
- en: A
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: A
- en: D
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: D
- en: B
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: B
- en: Further reading
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'To learn more about the topics that were covered in this chapter, take a look
    at the following resources:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解本章所涉及的主题，请查看以下资源：
- en: 'Setting the locale:'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置区域设置：
- en: '[https://www.tecmint.com/set-system-locales-in-linux/](https://www.tecmint.com/set-system-locales-in-linux/)'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://www.tecmint.com/set-system-locales-in-linux/](https://www.tecmint.com/set-system-locales-in-linux/)'
- en: 'Defining the locale and language settings:'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义区域和语言设置：
- en: '[https://www.shellhacks.com/linux-define-locale-language-settings/](https://www.shellhacks.com/linux-define-locale-language-settings/)'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://www.shellhacks.com/linux-define-locale-language-settings/](https://www.shellhacks.com/linux-define-locale-language-settings/)'
- en: 'Eric S. Raymond''s Jargon File entry for EBCDIC:'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eric S. Raymond 的 Jargon 文件中关于 EBCDIC 的条目：
- en: '[http://www.catb.org/jargon/html/E/EBCDIC.html](http://www.catb.org/jargon/html/E/EBCDIC.html)'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://www.catb.org/jargon/html/E/EBCDIC.html](http://www.catb.org/jargon/html/E/EBCDIC.html)'
- en: 'The ASCII character set:'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ASCII 字符集：
- en: '[http://www.asciitable.com/](http://www.asciitable.com/)'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://www.asciitable.com/](http://www.asciitable.com/)'
- en: '**Common Platform Enumeration** (**CPE**):'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用平台枚举**（**CPE**）：'
- en: '[https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/cpe](https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/cpe)'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/cpe](https://csrc.nist.gov/projects/security-content-automation-protocol/specifications/cpe)'
- en: 'Configuring hostnames:'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置主机名：
- en: '[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/ch-configure_host_names#sec-Recommended_Naming_Practices](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/ch-configure_host_names#sec-Recommended_Naming_Practices)'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/ch-configure_host_names#sec-Recommended_Naming_Practices](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/networking_guide/ch-configure_host_names#sec-Recommended_Naming_Practices)'
