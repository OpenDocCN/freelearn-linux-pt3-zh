- en: '14'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '14'
- en: Achieving GPL Compliance
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现 GPL 合规性
- en: In this chapter, we will see how we can ensure open source license compliance
    and use Poky to provide the artifacts needed, such as the source code, licensing
    text, and the list of derivative work. This is critical for most products introduced
    into the market nowadays, as open source code needs to live alongside proprietary
    code.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看到如何确保开源许可证合规性，并使用 Poky 提供所需的工件，如源代码、许可文本和衍生作品列表。这对大多数如今推出的市场产品至关重要，因为开源代码需要与专有代码共同存在。
- en: Understanding copyleft
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 copyleft
- en: '**Copyleft** is a legal way to use copyright law to maximize rights and express
    freedom. However, it impacts our products. We must meet all obligations of open
    source and free software licenses.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**Copyleft** 是一种利用版权法最大化权利并表达自由的合法方式。然而，它会影响我们的产品。我们必须满足所有开源和自由软件许可证的义务。'
- en: 'When building a Linux distribution, at least two projects are used: the Linux
    kernel and a compiler. The **GNU Compiler Collection** (**GCC**) is still the
    most commonly used compiler. The Linux kernel uses the **General Public License**
    (**GPL**) **v2** license, and the GCC uses the **GPLv2**, **GPLv2.1**, and **GPLv3**
    licenses, depending on the project used.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建 Linux 发行版时，至少使用了两个项目：Linux 内核和编译器。**GNU 编译器集合** (**GCC**) 仍然是最常用的编译器。Linux
    内核使用 **通用公共许可证** (**GPL**) **v2** 许可证，而 GCC 根据所使用的项目不同，使用 **GPLv2**、**GPLv2.1**
    和 **GPLv3** 许可证。
- en: However, a Linux-based system can include virtually all projects available worldwide,
    in addition to all applications made by the company for its product. So how do
    we know the number of projects and licenses included, and how do we fulfill copyleft
    compliance requirements?
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，一个基于 Linux 的系统可以包含全球几乎所有的项目，此外还包括公司为其产品开发的所有应用程序。那么，我们如何知道包含了多少项目和许可证，并且如何满足
    copyleft 合规性要求呢？
- en: Note
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This chapter describes how the Yocto Project can help you in this task but be
    aware that you must know exactly what you need to provide and the possible license
    incompatibilities. Please consult your legal department or a copyright lawyer
    if you have any doubts.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章描述了 Yocto 项目如何帮助你完成此任务，但请注意，你必须清楚地知道你需要提供的内容以及可能的许可证不兼容问题。如果有任何疑问，请咨询你的法律部门或版权律师。
- en: In the next section, we will look at how the Yocto Project can help us with
    the most common tasks required for copyleft compliance.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将探讨 Yocto 项目如何帮助我们完成实现 copyleft 合规性所需的常见任务。
- en: Understanding copyleft compliance versus proprietary code
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 copyleft 合规性与专有代码的区别
- en: Understanding that proprietary and copyleft-covered codes can coexist in the
    same product is essential. Although this is the standard for most products available
    nowadays, we must be careful about the libraries we link the code to because some
    may have license compatibility issues.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 理解专有代码和 copyleft 覆盖代码能够共存于同一产品中是非常重要的。虽然这是如今大多数产品的标准，但我们必须小心我们链接到代码的库，因为有些库可能存在许可证兼容性问题。
- en: 'One Linux-based system is a set of several projects, each one under a different
    license. The Yocto Project helps developers understand that most copyleft projects
    have the following obligations:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一个基于 Linux 的系统由多个项目组成，每个项目都有不同的许可证。Yocto 项目帮助开发者理解，大多数 copyleft 项目有以下义务：
- en: The source code of the project
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目的源代码
- en: The license for the project
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目的许可证
- en: Any modification to the project
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对项目的任何修改
- en: Any script that is required to configure and build
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置和构建所需的任何脚本
- en: If one project under copyleft is modified, the license text, the base source
    code, and any modification must be included in the final deliverable.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果某个 copyleft 项目被修改，许可证文本、基础源代码以及任何修改都必须包含在最终交付物中。
- en: The assumptions cover most rights guaranteed by copyleft licenses. These are
    the parts where the Yocto Project can help us. However, before releasing anything,
    it is recommended that we audit all the materials to be released to make sure
    they’re complete.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些假设涵盖了 copyleft 许可证所保障的大多数权利。这些是 Yocto 项目可以帮助我们的部分。然而，在发布任何内容之前，建议我们审计所有待发布的材料，以确保它们的完整性。
- en: Managing software licensing with Poky
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Poky 管理软件许可
- en: One important Poky feature is the ability to manage licenses. Most of the time,
    we only care about our bugs. However, managing licenses and the kinds of licenses
    used is crucial when creating a product.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的 Poky 特性是能够管理许可证。大多数时候，我们只关心我们的 bug。然而，管理许可证和所使用的许可证类型对于创建产品至关重要。
- en: Poky keeps track of licenses in every recipe. In addition, it has a strategy
    to work with proprietary applications during the development cycle.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Poky 会跟踪每个配方中的许可证。此外，它在开发周期中有一个与专有应用程序协作的策略。
- en: Note
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: An important thing to know is that a recipe is released under a specific license
    and represents a project released under a different license. Therefore, the recipe
    and the project are two separate entities with specific licenses, so the two licenses
    must be considered part of the product.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 需要了解的一件重要事情是，配方是根据特定许可证发布的，并且代表一个在不同许可证下发布的项目。因此，配方和项目是两个独立的实体，各自有具体的许可证，因此必须将这两个许可证视为产品的一部分。
- en: 'In most recipes, information is a comment containing the copyright, license,
    and author name; this information pertains to the recipe itself. Then, there is
    a set of variables to describe the package license, and they are as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数配方中，信息通常是一个包含版权、许可证和作者姓名的注释，这些信息与配方本身相关。然后，有一组变量用于描述包的许可证，它们如下所示：
- en: '`LICENSE`: This describes the license under which the package was released.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LICENSE`：它描述了包发布所依据的许可证。'
- en: '`LIC_FILES_CHKSUM`: This may not seem very useful at first sight. It describes
    the license file and checksum for a particular package, and we may find much variation
    in how a project describes its license. The most common license files are stored
    in `meta/files/common-licenses/`.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LIC_FILES_CHKSUM`：乍一看，这可能看起来没有什么用处。它描述了特定包的许可证文件和校验和，我们可能会发现一个项目在描述其许可证时有很多不同的方式。最常见的许可证文件存储在`meta/files/common-licenses/`中。'
- en: Some projects include a file, such as `COPYING` or `LICENSE`, which specifies
    the license for the source code. Others use a header note in each file or the
    main file. The `LIC_FILES_CHKSUM` variable has the checksum for the license text
    of a project; if any letters are changed, the checksum is changed as well. This
    ensures that any change is noted and consciously accepted by the developer. A
    license change may be a typo fix; however, it may also be a change in legal obligations,
    so the developer needs to review and understand the difference.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一些项目包含诸如 `COPYING` 或 `LICENSE` 等文件，指定源代码的许可证。其他项目则在每个文件或主文件中使用头部注释。`LIC_FILES_CHKSUM`
    变量包含项目许可证文本的校验和；如果任何字母发生变化，校验和也会变化。这确保了任何更改都被记录下来，并且开发人员有意识地接受了这些更改。许可证的变化可能只是修复了一个拼写错误；然而，它也可能是法律义务的变化，因此开发人员需要审查并理解这种差异。
- en: When a different license checksum is detected, BitBake launches a build error
    and points to the project that had its license changed. You must be careful when
    this happens, as the license change may impact the use of this software. To be
    able to build anything again, you must change the `LIC_FILE_CHKSUM` value accordingly
    and update the `LICENSE` field to match the license change. Your legal department
    should be consulted if the license terms have changed. It is also good practice
    to record the reason for the change in a commit message for future reference.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 当检测到不同的许可证校验和时，BitBake 会触发构建错误，并指向许可证发生更改的项目。发生这种情况时，必须小心，因为许可证的变化可能会影响软件的使用。为了能够重新构建任何东西，必须相应地更改`LIC_FILE_CHKSUM`值，并更新`LICENSE`字段以匹配许可证的变化。如果许可证条款发生了变化，应咨询你的法务部门。如果许可证有变动，最好在提交信息中记录更改的原因，以便将来参考。
- en: Understanding commercial licenses
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解商业许可证
- en: 'By default, Poky does not use any recipe with a commercial license restriction.
    In the recipe file, the `LICENSE_FLAGS` variable is used to identify which license
    restriction that recipe has. For the `gstreamer1.0-plugins-ugly` recipe, the license-related
    variables are from *line 5* to *line 10*, as in *Figure 14**.1*:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Poky 不使用任何具有商业许可证限制的配方。在配方文件中，`LICENSE_FLAGS` 变量用于标识该配方具有的许可证限制。对于 `gstreamer1.0-plugins-ugly`
    配方，许可证相关的变量从 *第 5 行* 到 *第 10 行*，如 *图 14.1* 所示：
- en: '![Figure 14.1 – The license-related variables for the gstreamer1.0-plugins-ugly
    recipe](img/Figure_14.1_B19361.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.1 – gstreamer1.0-plugins-ugly 配方的许可证相关变量](img/Figure_14.1_B19361.jpg)'
- en: Figure 14.1 – The license-related variables for the gstreamer1.0-plugins-ugly
    recipe
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.1 – gstreamer1.0-plugins-ugly 配方的许可证相关变量
- en: '*Line 10* indicates to Poky that this recipe requires the `commercial` license
    flag to be explicitly accepted for the recipe to be used. To allow the use of
    the `gstreamer1.0-plugins-ugly` recipe, we can use the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*第 10 行* 表示该配方需要明确接受 `commercial` 许可证标志才能使用该配方。为了允许使用 `gstreamer1.0-plugins-ugly`
    配方，我们可以使用以下方法：'
- en: '![Figure 14.2 – How to accept to install the recipes with commercial license
    restrictions](img/Figure_14.2_B19361.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.2 – 如何接受安装带有商业许可证限制的食谱](img/Figure_14.2_B19361.jpg)'
- en: Figure 14.2 – How to accept to install the recipes with commercial license restrictions
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.2 – 如何接受安装带有商业许可证限制的食谱
- en: 'We can add `LICENSE_FLAGS_ACCEPTED` in our custom distribution (e.g., `<my-layer>/conf/distro/my-distro.conf`)
    or inside `build/conf/local.conf` during the initial development stages. Using
    the `commercial` flag accepts the installation of every recipe that requires this
    flag. Still, sometimes we want to manage the recipes we use, demanding specific
    license terms. We can use the following form:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在自定义发行版（例如 `<my-layer>/conf/distro/my-distro.conf`）中，或在 `build/conf/local.conf`
    中配置 `LICENSE_FLAGS_ACCEPTED`，以便在开发初期接受安装每个需要此标志的食谱。使用 `commercial` 标志可以接受安装每个需要此标志的食谱。但有时我们希望管理所使用的食谱，并要求特定的许可证条款。在这种情况下，我们可以使用以下格式：
- en: "![Figure 14.3 \uFEFF– How to accept to only install gstreamer1.0-plugins-ugly](img/Figure_14.3_B19361.jpg)"
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.3 – 如何只接受安装 gstreamer1.0-plugins-ugly](img/Figure_14.3_B19361.jpg)'
- en: Figure 14.3 – How to accept to only install gstreamer1.0-plugins-ugly
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.3 – 如何只接受安装 gstreamer1.0-plugins-ugly
- en: With the code from *Figure 14**.3* we accept only the `commercial` license flag
    from `gstreamer1.0-plugins-ugly`, which is the recipe name. It is good practice
    to ensure this flag is enabled for a set of recipes that you have permission to
    use in a commercial setting. Please consult your legal department to ensure this.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 *图 14.3* 中的代码，我们仅接受 `gstreamer1.0-plugins-ugly`（这是食谱名称）上的 `commercial` 许可证标志。确保启用此标志对于一组已获商业使用许可的食谱是一个良好的实践。请咨询您的法务部门以确保这一点。
- en: Using Poky to achieve copyleft compliance
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Poky 实现 copyleft 合规
- en: At this point, we know how to use Poky and understand its main goal. It is time
    to understand the legal aspects of producing a Linux-based system that uses packages
    under different licenses.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 到这一步，我们已经了解了如何使用 Poky，并理解了它的主要目标。接下来是时候了解在构建基于 Linux 的系统时，如何处理使用不同许可证下的软件包的法律问题了。
- en: We can configure Poky to generate the artifacts that should be shared as part
    of the copyleft compliance process.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以配置 Poky 生成应作为 copyleft 合规过程一部分共享的工件。
- en: Understanding license auditing
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解许可证审计
- en: To help us achieve copyleft compliance, Poky generates a license manifest during
    the image build, located at `build/tmp/deploy/licenses/<image_name-machine_name>-<datastamp>/`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助我们实现 copyleft 合规，Poky 在镜像构建过程中生成一个许可证清单，位于 `build/tmp/deploy/licenses/<image_name-machine_name>-<datastamp>/`。
- en: 'To demonstrate this process, we will use the `core-image-full-cmdline` image
    for the `qemux86-64` machine. To start with our example, look at the files under
    `build/tmp/deploy/licenses/core-image-full-cmdline-qemux86-64-<datastamp>`, which
    are as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示这个过程，我们将使用 `qemux86-64` 机器的 `core-image-full-cmdline` 镜像。首先查看位于 `build/tmp/deploy/licenses/core-image-full-cmdline-qemux86-64-<datastamp>`
    下的文件，内容如下：
- en: '`image_license.manifest`: This lists the recipe names, versions, licenses,
    and the packages files available in `build/tmp/deploy/image/<machine>` but not
    installed inside the **root filesystem** (**rootfs**). The most common examples
    are the bootloader, the Linux kernel image, and DTB files.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image_license.manifest`：该文件列出了食谱名称、版本、许可证和在 `build/tmp/deploy/image/<machine>`
    中可用但未安装到 **根文件系统**（**rootfs**）中的软件包文件。最常见的例子是引导加载程序、Linux 内核镜像和 DTB 文件。'
- en: '`package.manifest`: This lists all the packages in the image.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`package.manifest`：该文件列出了镜像中的所有软件包。'
- en: '`license.manifest`: This lists the names, versions, recipe names, and licenses
    for all the installed packages. This manifest may be used for copyleft compliance
    auditing.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`license.manifest`：该文件列出了所有已安装软件包的名称、版本、食谱名称和许可证。此清单可用于 copyleft 合规性审计。'
- en: '![Figure 14.4 – The directory layout for the license manifests under build/tmp/deploy](img/Figure_14.4_B19361.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.4 – build/tmp/deploy 下许可证清单的目录布局](img/Figure_14.4_B19361.jpg)'
- en: Figure 14.4 – The directory layout for the license manifests under build/tmp/deploy
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.4 – build/tmp/deploy 下许可证清单的目录布局
- en: The license manifest for each recipe is under `build/tmp/deploy/licenses/<package-name>`.
    *Figure 14**.4* shows the directory layout for some packages.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 每个食谱的许可证清单位于 `build/tmp/deploy/licenses/<package-name>` 下。*图 14.4* 显示了一些软件包的目录布局。
- en: Providing the source code
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提供源代码
- en: The most apparent way Poky can help us to provide the source code of every project
    used in our image is by sharing the `DL_DIR` content. However, this approach has
    one crucial pitfall – any proprietary source code will be shared within `DL_DIR`
    if it is shared as is. In addition, this approach will share any source code,
    including parts not required by copyleft compliance.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Poky 帮助我们提供每个项目源代码的最直接方式是共享 `DL_DIR` 的内容。然而，这种方法有一个关键的陷阱——任何专有源代码如果直接共享，将会被放入
    `DL_DIR` 中。此外，这种方法还会共享任何源代码，包括那些不需要 copyleft 合规性的部分。
- en: 'Poky must be configured to archive the source code before the final image is
    created. To have it, we can add the following variables into `build/conf/local.conf`,
    as in *Figure 14**.5*:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 必须在创建最终镜像之前配置 Poky 以归档源代码。为了实现这一点，我们可以像 *图 14.5* 所示，将以下变量添加到 `build/conf/local.conf`
    中：
- en: '![Figure 14.5 – Configuring Poky to provide the source code of packages under
    copyleft](img/Figure_14.5_B19361.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.5 – 配置 Poky 以提供 copyleft 下的软件包源代码](img/Figure_14.5_B19361.jpg)'
- en: Figure 14.5 – Configuring Poky to provide the source code of packages under
    copyleft
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.5 – 配置 Poky 以提供 copyleft 下的软件包源代码
- en: 'The `archiver` class copies the source code, patches, and scripts for the filtered
    license set. The default configuration is to have `COPYLEFT_LICENSE_INCLUDE` set
    to `"GPL* LGPL* AGPL*"` so the recipes that use source code licensed on those
    licenses are copied under the `build/tmp/deploy/sources/<architecture>` folders:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '`archiver` 类会复制源代码、补丁和过滤后的许可证集合的脚本。默认配置是将 `COPYLEFT_LICENSE_INCLUDE` 设置为 `"GPL*
    LGPL* AGPL*"`，因此使用这些许可证的源代码将被复制到 `build/tmp/deploy/sources/<architecture>` 文件夹中：'
- en: '![Figure 14.6 – The build/tmp/deploy/sources directory layout](img/Figure_14.6_B19361.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.6 – build/tmp/deploy/sources 目录布局](img/Figure_14.6_B19361.jpg)'
- en: Figure 14.6 – The build/tmp/deploy/sources directory layout
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.6 – build/tmp/deploy/sources 目录布局
- en: The class also supports the `COPYLEFT_LICENSE_EXCLUDE` variable to ensure packages
    that use source code licensed on some specific licenses never go into the `sources`
    directory. By default, it is set to `"CLOSED Proprietary"`. *Figure 14**.6* shows
    some recipe examples after baking `core-image-full-cmdline`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 该类还支持 `COPYLEFT_LICENSE_EXCLUDE` 变量，以确保使用特定许可证源代码的软件包永远不会进入 `sources` 目录。默认情况下，它设置为
    `"CLOSED Proprietary"`。*图 14.6* 显示了在 `core-image-full-cmdline` 构建后的一些食谱示例。
- en: Providing compilation scripts and source code modifications
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提供编译脚本和源代码修改
- en: With the configuration provided in the previous section, Poky will package the
    original source code for each project. If we want to include the patched source
    code, we will only use `ARCHIVER_MODE[src] = "patched"`; this way, Poky will wrap
    the project source code after the `do_patch` task. It includes modifications from
    recipes or the `.``bbappend` file.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面章节中提供的配置，Poky 会为每个项目打包原始源代码。如果我们想要包括经过修改的源代码，只需使用 `ARCHIVER_MODE[src] =
    "patched"`；这样，Poky 会在 `do_patch` 任务后将项目源代码打包。这包括了来自食谱或 `.bbappend` 文件的修改。
- en: 'This way, the source code and any modifications can be shared easily. However,
    one kind of information still needs to be created: the procedure used to configure
    and build the project.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，源代码和任何修改都可以轻松共享。然而，仍然有一种信息需要被创建：用于配置和构建项目的过程。
- en: To have a reproducible build environment, we can share the configured project,
    in other words, the project after the `do_configure` task. We can add `ARCHIVER_MODE[src]
    = "configured"` to `build/conf/local.conf` for this.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 为了拥有可重复的构建环境，我们可以共享配置后的项目，换句话说，就是 `do_configure` 任务之后的项目。我们可以将 `ARCHIVER_MODE[src]
    = "configured"` 添加到 `build/conf/local.conf` 来实现这一点。
- en: 'It is important to remember that we must consider that the person on the other
    side may not use the Yocto Project for copyleft compliance; alternatively, if
    they are using it, they must know that the modification made to the original source
    code and configuration procedure is not available. This is why we share the configured
    project: it allows anyone to reproduce our build environment.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 需要记住的是，我们必须考虑到对方可能并没有使用 Yocto 项目来确保 copyleft 合规；或者，如果他们使用了 Yocto 项目，他们必须知道原始源代码和配置过程的修改是不可用的。这就是为什么我们共享配置后的项目：它允许任何人重现我们的构建环境。
- en: For all flavors of source code, the default resulting file is a tarball; other
    options will add `ARCHIVER_MODE[srpm] = "1"` to `build/conf/local.conf`, and the
    resulting file will be an **SRPM** package.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有种类的源代码，默认生成的文件是一个 tarball；其他选项会将 `ARCHIVER_MODE[srpm] = "1"` 添加到 `build/conf/local.conf`，生成的文件将是一个
    **SRPM** 包。
- en: Providing license text
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提供许可证文本
- en: 'When providing the source code, the license text is shared inside it. If we
    want the license text inside our final image, we can add the following to `build/conf/local.conf`:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在提供源代码时，许可文本会与其一起共享。如果我们希望将许可文本包含在最终镜像中，可以将以下内容添加到 `build/conf/local.conf` 中：
- en: '![Figure 14.7 – How to configure Poky to deploy license text inside the final
    image](img/Figure_14.7_B19361.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图 14.7 – 如何配置 Poky 将许可文本部署到最终镜像中](img/Figure_14.7_B19361.jpg)'
- en: Figure 14.7 – How to configure Poky to deploy license text inside the final
    image
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 14.7 – 如何配置 Poky 将许可文本部署到最终镜像中
- en: This way, the license files will be placed inside the `rootfs`, under `/usr/share/common-licenses/`.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，许可证文件将被放置在 `rootfs` 内的 `/usr/share/common-licenses/` 目录下。
- en: Summary
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how Poky can help with copyleft license compliance
    and why it should not be used as a legal resource. Poky enables us to generate
    source code, reproduction scripts, and license text for packages used in our distribution.
    In addition, we learned that the license manifest generated within the image might
    be used to audit the image.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们了解了 Poky 如何帮助遵守 copyleft 许可证以及为什么它不应该作为法律资源使用。Poky 使我们能够为我们分发的包生成源代码、复制作业脚本和许可文本。此外，我们还了解了生成的镜像中的许可证清单可以用于审核镜像。
- en: In the next chapter, we will learn how to use the Yocto Project’s tools with
    real hardware. Then, we will use the Yocto Project to generate images for a few
    real boards.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何在实际硬件上使用 Yocto 项目的工具。然后，我们将使用 Yocto 项目为几个实际的开发板生成镜像。
