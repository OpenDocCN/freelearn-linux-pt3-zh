- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Sandbox Applications
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 沙箱应用程序
- en: To provide children with a safe place to play, you create a walled area and
    store their toys inside a small box (or *container*). When this idea moves to
    the playground, we refer to it as a **sandbox**. The term sandbox in application
    development comes from this same idea.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为了为孩子们提供一个安全的游玩场所，您会创建一个围墙区域，并将他们的玩具存放在一个小盒子（或*容器*）里。当这个概念应用到游乐场时，我们称之为**沙箱**。在应用程序开发中，沙箱这个术语来源于这个概念。
- en: In the *sandboxing* approach, each application resides in a sandbox, a controlled
    and restricted environment for running its code. This environment helps developers
    isolate and protect system resources.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在*沙箱化*方法中，每个应用程序都驻留在一个沙箱中，这是一个受控和限制的环境，用于运行其代码。这个环境帮助开发者隔离和保护系统资源。
- en: Developers also use *sandboxed environments* to identify an application’s behavior
    and to detect bugs or other undesirable elements of its behavior.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者还使用*沙箱化环境*来识别应用程序的行为，并检测其行为中的错误或其他不良元素。
- en: There are several methods of sandboxing applications for Linux environments.
    In this book, we focus on some of them, including those considered the *least
    intrusive* (**Applmage**) and those developed and supported by the **Fedora**
    **Project** (**Flatpak**).
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Linux 环境，有几种方法可以沙箱化应用程序。在本书中，我们专注于其中的一些方法，包括被认为是*最不具侵入性*的（**AppImage**）以及由
    **Fedora** **Project** 开发和支持的（**Flatpak**）。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Inspecting sandbox applications
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查沙箱应用程序
- en: Diving deep into AppImage apps
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入研究 AppImage 应用程序
- en: Examining Flatpak applications
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查 Flatpak 应用程序
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For sandboxing or development of sandbox applications, you will need to install
    some packages. Most of them are included in Fedora’s official repositories.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于沙箱化或沙箱应用程序的开发，您需要安装一些软件包。大部分软件包都包含在 Fedora 的官方仓库中。
- en: In each section, you will see the required packages and how to install each
    one of them.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在每一节中，您将看到所需的软件包以及如何安装每个软件包。
- en: If we use any package or code that’s not included in the official Fedora repositories,
    we will include the link to get it and the instructions to install it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用任何未包含在官方 Fedora 仓库中的软件包或代码，我们将提供获取链接并给出安装说明。
- en: 'The examples created in this chapter can be found in the book’s GitHub repository
    that you can find at the following URL: [https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter6](https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter6).'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中创建的示例可以在本书的 GitHub 仓库中找到，您可以通过以下 URL 访问：[https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter6](https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter6)。
- en: Inspecting sandbox applications
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查沙箱应用程序
- en: Before we begin, we must make a distinction. Application isolation has always
    been sought as a *security* or *restriction measure*, either in case of intrusions
    or excessive use of resources.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我们必须做出一个区分。应用程序隔离一直被视为*安全*或*限制措施*，无论是在发生入侵还是资源使用过度的情况下。
- en: With this, we can distinguish the development of applications according to the
    relationship between their use of resources and their interaction with privileged
    files of the host system.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这一点，我们可以根据应用程序对资源的使用及其与主机系统的特权文件的互动关系来区分应用程序的开发。
- en: 'Then, based on the aforementioned abstraction required to host code in a system,
    we could typify an application as follows:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，基于上述所需的抽象来托管系统中的代码，我们可以将应用程序类型化如下：
- en: '**Native** or **compiled**: It runs on the system with all system restrictions
    and privileges.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地**或**编译**：它在系统上运行，具有所有系统限制和特权。'
- en: '**Interpret**: Interpreters walk through an application’s code line by line
    and run each instruction into the system. In the past, applications created with
    interpreted languages were much slower than applications created with compiled
    languages. But, with the development of *just-in-time compilation*, this difference
    is reduced.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**解释**：解释器逐行执行应用程序的代码，并将每条指令运行到系统中。过去，使用解释性语言创建的应用程序比使用编译性语言创建的应用程序要慢得多。但随着*即时编译*的发展，这一差距得到了缩小。'
- en: '**Jailed**: It allows application code to run on the system but from a *restricted
    location*. This restriction could include system resources or even system files.
    The structure of the jail could look like the system, but the changes or alterations
    to the files inside the jail do not affect the behavior of the host system.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Jailed**：它允许应用程序代码在系统上运行，但在一个*受限位置*。这种限制可能包括系统资源或甚至系统文件。监禁的结构可能看起来像系统，但对监禁内文件的更改或修改不会影响主机系统的行为。'
- en: '**Sandbox**: This is a more *restrictive* environment than a jail. The sandbox
    includes *only* the files required to run the application and interact with the
    system. This feature allows the portability of the application in an efficient
    way. The distribution of the host system does not affect the runtime of the sandbox
    application. It only requires that the distribution supports the sandbox type.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Sandbox**：这是一种比监禁更*受限*的环境。沙箱只包括运行应用程序和与系统交互所需的*文件*。此特性使得应用程序的移植变得更加高效。主机系统的发行版不会影响沙箱应用程序的运行时，只要求发行版支持该沙箱类型。'
- en: The development of a sandbox application could be very simple, from opening
    an application installed on the system in a controlled environment to porting
    applications from other distributions, without all the development involved in
    making it run on each distribution.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 沙箱应用程序的开发可以非常简单，从在受控环境中打开系统上安装的应用程序，到从其他发行版移植应用程序，而不需要进行所有涉及使其在每个发行版上运行的开发工作。
- en: Let’s see how to create a simple sandbox application. Then, let’s learn about
    the common packaging methods for sandbox applications in Fedora.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何创建一个简单的沙箱应用程序。然后，了解Fedora中常见的沙箱应用程序打包方式。
- en: SELinux sandbox
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SELinux沙箱
- en: '**SELinux** is a set of policies that allow us to add a *security layer* to
    our system environment. Based on these policies, we could set up a sandbox for
    applications.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**SELinux**是一组允许我们为系统环境添加*安全层*的策略。基于这些策略，我们可以为应用程序设置沙箱。'
- en: Note
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: SELinux will be covered in detail in [*Chapter 12*](B19121_12.xhtml#_idTextAnchor240)
    of this book.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux将在本书的[*第12章*](B19121_12.xhtml#_idTextAnchor240)中详细介绍。
- en: 'For example, let’s run the **Firefox** browser inside a sandbox isolated from
    the system environment. To do this, follow the subsequent steps:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们在与系统环境隔离的沙箱中运行**Firefox**浏览器。为此，请按照以下步骤操作：
- en: 'As a **root** user, install the SELinux sandbox utilities. Install the **policycoreutils-sandbox**
    package with the **dnf** command:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为**root**用户，安装SELinux沙箱工具。使用**dnf**命令安装**policycoreutils-sandbox**包：
- en: '[PRE0]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Configure SELinux in the **Permissive** mode to allow SELinux sandboxing. Use
    the **setenforce** and **getenforce** commands to verify the change:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将SELinux配置为**Permissive**模式以允许SELinux沙箱。使用**setenforce**和**getenforce**命令验证更改：
- en: '[PRE1]'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As a *non-privileged user*, open a terminal and, inside the SELinux sandbox,
    run **firefox** in a *1280x1024* window. Use the **sandbox** command:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为一个*非特权用户*，打开终端并在SELinux沙箱内，以*1280x1024*的窗口运行**firefox**。使用**sandbox**命令：
- en: '[PRE2]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![Figure 6.1 – Firefox on SELinux sandbox](img/6.1.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图6.1 – Firefox在SELinux沙箱中的运行](img/6.1.jpg)'
- en: Figure 6.1 – Firefox on SELinux sandbox
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 – Firefox在SELinux沙箱中的运行
- en: Let’s find out how to *monitor the performance* of the sandbox.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们了解如何*监控沙箱的性能*。
- en: 'Use the **ps** command to find the sandbox’s PID:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**ps**命令查找沙箱的PID：
- en: '[PRE3]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![Figure 6.2 – Finding the sandbox pid](img/B19121_06_2.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图6.2 – 查找沙箱的pid](img/B19121_06_2.jpg)'
- en: Figure 6.2 – Finding the sandbox pid
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2 – 查找沙箱的pid
- en: 'Use the **top** command to monitor the performance of the found **PID**:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**top**命令监控找到的**PID**的性能：
- en: '[PRE4]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure 6.3 – Monitoring sandbox performance](img/B19121_06_3.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图6.3 – 监控沙箱性能](img/B19121_06_3.jpg)'
- en: Figure 6.3 – Monitoring sandbox performance
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.3 – 监控沙箱性能
- en: The web browser is isolated, so its behavior does not affect the rest of the
    system. Let’s see how to verify it.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 网络浏览器被隔离，因此它的行为不会影响系统的其他部分。让我们看看如何验证这一点。
- en: 'On Firefox sandboxing, open the Fedora Project home page ([https://start.fedoraproject.org/](https://start.fedoraproject.org/)):'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Firefox沙箱中，打开Fedora项目主页（[https://start.fedoraproject.org/](https://start.fedoraproject.org/)）：
- en: '![Figure 6.4 – Browsing with Firefox sandboxing](img/6.4.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图6.4 – 使用Firefox沙箱进行浏览](img/6.4.jpg)'
- en: Figure 6.4 – Browsing with Firefox sandboxing
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4 – 使用Firefox沙箱进行浏览
- en: Close Firefox sandboxing by clicking the **X** button in the upper-right corner
    of the Firefox window.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击Firefox窗口右上角的**X**按钮来关闭Firefox沙箱。
- en: 'Run Firefox in the sandbox again:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次在沙箱中运行Firefox：
- en: '[PRE5]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Use *Ctrl* + *H* to open the browsing history:'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用 *Ctrl* + *H* 打开浏览历史：
- en: '![Figure 6.5 – Checking browsing history](img/6.5.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 6.5 – 检查浏览历史](img/6.5.jpg)'
- en: Figure 6.5 – Checking browsing history
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 6.5 – 检查浏览历史
- en: Close the Firefox sandboxing window again.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次关闭 Firefox 沙箱窗口。
- en: Observe that no information about the website visited was saved. This information
    gets saved in a system file. Firefox runs in isolation and the information is
    stored inside the sandbox. When the sandbox is closed, the information stored
    in it is deleted.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，没有关于访问过的网站的信息被保存。这些信息会保存在一个系统文件中。Firefox 在隔离模式下运行，这些信息存储在沙箱中。当沙箱关闭时，存储在其中的信息会被删除。
- en: The SELinux sandbox has many practical uses, for example, if an *untrusted file*
    needs to be opened.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 沙箱有许多实际应用，例如，当一个 *不可信的文件* 需要被打开时。
- en: 'With a `pdf` file, as an example, run `evince` in a sandbox to read it. Use
    the `sandbox` command:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个 `pdf` 文件，作为示例，在沙箱中运行 `evince` 来阅读它。使用 `sandbox` 命令：
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: $ chmod +x firefox-nightly-113.0.r20230321213816-x86_64.AppImage
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ chmod +x firefox-nightly-113.0.r20230321213816-x86_64.AppImage
- en: '[PRE7]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: $ wget \
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ wget \
- en: https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
- en: '[PRE8]'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: $ chmod a+x appimagetool-x86_64.AppImage
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ chmod a+x appimagetool-x86_64.AppImage
- en: '[PRE9]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: $ ./appimagetool-x86_64.AppImage some.AppDir
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ./appimagetool-x86_64.AppImage some.AppDir
- en: '[PRE10]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[root@workstation ~]# ps axf | egrep "krita|xdg-dbus-proxy"'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# ps axf | egrep "krita|xdg-dbus-proxy"'
- en: 13340 ?  S   0:00  |   \_ bwrap --args 42 krita
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 13340 ?  S   0:00  |   \_ bwrap --args 42 krita
- en: 13359 ?  S   0:00  |       \_ bwrap --args 42 krita
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 13359 ?  S   0:00  |       \_ bwrap --args 42 krita
- en: 13360 ?  Sl  0:04 |           \_ krita
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 13360 ?  Sl  0:04 |           \_ krita
- en: 13353 ?  S   0:00 \_ bwrap --args 42 xdg-dbus-proxy --args=44
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 13353 ?  S   0:00 \_ bwrap --args 42 xdg-dbus-proxy --args=44
- en: xdg-dbus-proxy is a filtering proxy for *D-Bus* connections. It is the portal
    through which the krita application interacts with the system.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: xdg-dbus-proxy 是一个用于 *D-Bus* 连接的过滤代理。它是 Krita 应用程序与系统交互的门户。
- en: '[PRE11]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[root@workstation ~]# top -p 13353,13360'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# top -p 13353,13360'
- en: '[PRE12]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[root@workstation ~]# flatpak list --app'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# flatpak list --app'
- en: '[PRE13]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[root@workstation ~]# flatpak history'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# flatpak history'
- en: '[PRE14]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[root@workstation ~]# flatpak info org.kde.krita'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# flatpak info org.kde.krita'
- en: '[PRE15]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[root@workstation ~]# flatpak ps'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# flatpak ps'
- en: '[PRE16]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[root@workstation ~]# flatpak remotes'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# flatpak remotes'
- en: '[PRE17]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[root@workstation ~]# flatpak remote-ls flathub --app'
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# flatpak remote-ls flathub --app'
- en: '[PRE18]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: flatpak remote-add --if-not-exists flathub \
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: flatpak remote-add --if-not-exists flathub \
- en: .org/repo/flathub.flatpakrepo
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: .org/repo/flathub.flatpakrepo
- en: '[PRE19]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[root@workstation ~]# flatpak remotes'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# flatpak remotes'
- en: '[PRE20]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: flatpak remote-ls flathub --app | wc -l
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: flatpak remote-ls flathub --app | wc -l
- en: '[PRE21]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: $ flatpak remote-ls flathub --app | grep "Telegram Desktop"
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ flatpak remote-ls flathub --app | grep "Telegram Desktop"
- en: '[PRE22]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: $ flatpak remote-info flathub org.telegram.desktop
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ flatpak remote-info flathub org.telegram.desktop
- en: '[PRE23]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: $ flatpak install flathub org.telegram.desktop
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ flatpak install flathub org.telegram.desktop
- en: '[PRE24]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Looking for matches…
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 正在寻找匹配项…
- en: Required runtime for org.telegram.desktop/x86_64/stable (runtime/org.freedesktop.Platform/x86_64/22.08)
    found in remote flathub
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: org.telegram.desktop/x86_64/stable 所需的运行时 (runtime/org.freedesktop.Platform/x86_64/22.08)
    已在远程 flathub 中找到
- en: 'Do you want to install it? [Y/n]: Y to install.Wait for the installation to
    finish:'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您想要安装它吗？[Y/n]：Y 来安装。等待安装完成：
- en: '[PRE25]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: $ flatpak run org.telegram.desktop
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ flatpak run org.telegram.desktop
- en: '[PRE26]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: flatpak remote-ls flathub -a | grep -i \
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: flatpak remote-ls flathub -a | grep -i \
- en: '"freedesktop platform" | grep -v translations'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"freedesktop platform" | grep -v translations'
- en: '[PRE27]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: flatpak remote-ls flathub -a | grep -i \
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: flatpak remote-ls flathub -a | grep -i \
- en: '"freedesktop SDK" | grep 22.08'
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '"freedesktop SDK" | grep 22.08'
- en: '[PRE28]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: flatpak install flathub \
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: flatpak install flathub \
- en: org.freedesktop.Platform//22.08 \
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: org.freedesktop.Platform//22.08 \
- en: org.freedesktop.Sdk//22.08
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: org.freedesktop.Sdk//22.08
- en: '[PRE29]'
  id: totrans-120
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Skipping: org.telegram.desktop/x86_64/22.08 is already installed'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 跳过：org.telegram.desktop/x86_64/22.08 已安装
- en: '[PRE30]'
  id: totrans-122
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Do you want to install it? [Y/n]: Y'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您想要安装它吗？[Y/n]：Y
- en: '[PRE31]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '#!/bin/sh'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '#!/bin/sh'
- en: echo "Hello world, I'm a flatpak application"
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: echo "Hello world, I'm a flatpak application"
- en: '[PRE32]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'app-id: org.flatpak.script'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'app-id: org.flatpak.script'
- en: 'runtime: org.freedesktop.Platform'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'runtime: org.freedesktop.Platform'
- en: 'runtime-version: ''22.08'''
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'runtime-version: ''22.08'''
- en: 'sdk: org.freedesktop.Sdk'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sdk: org.freedesktop.Sdk'
- en: 'command: script.sh'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'command: script.sh'
- en: 'modules:'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'modules:'
- en: '- name: script'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- name: script'
- en: 'buildsystem: simple'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'buildsystem: simple'
- en: 'build-commands:'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'build-commands:'
- en: '- install -D script.sh /app/bin/script.sh'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- install -D script.sh /app/bin/script.sh'
- en: 'sources:'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'sources:'
- en: '- type: file'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- type: file'
- en: 'path: script.sh'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'path: script.sh'
- en: '[PRE33]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: $ flatpak-builder build-dir org.flatpak.script.yml
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ flatpak-builder build-dir org.flatpak.script.yml
- en: '[PRE34]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: $ flatpak-builder --user --install --force-clean \
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ flatpak-builder --user --install --force-clean \
- en: build-dir org.flatpak.script.yml
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: build-dir org.flatpak.script.yml
- en: '[PRE35]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: $ flatpak run org.flatpak.script
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ flatpak run org.flatpak.script
- en: '[PRE36]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
