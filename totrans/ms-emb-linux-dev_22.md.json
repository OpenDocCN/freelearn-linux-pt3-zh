["```\nMemory: 511MB = 511MB total\nMemory: 505980k/505980k available, 18308k reserved, 0K highmem\nVirtual kernel memory layout:\n    vector  : 0xffff0000 - 0xffff1000   ( 4 kB)\n    fixmap  : 0xfff00000 - 0xfffe0000   ( 896 kB)\n    vmalloc : 0xe0800000 - 0xff000000   ( 488 MB)\n    lowmem  : 0xc0000000 - 0xe0000000   ( 512 MB)\n    pkmap   : 0xbfe00000 - 0xc0000000   ( 2 MB)\n    modules : 0xbf800000 - 0xbfe00000   ( 6 MB)\n      .text : 0xc0008000 - 0xc0763c90   (7536 kB)\n      .init : 0xc0764000 - 0xc079f700   ( 238 kB)\n      .data : 0xc07a0000 - 0xc0827240   ( 541 kB)\n      .bss  : 0xc0827240 - 0xc089e940   ( 478 kB) \n```", "```\n$ cd ~\n$ cd build_arm64\n$ aarch64-buildroot-linux-gnu-size vmlinux\n   text     data    bss      dec  hex     filename\n26412819 15636144 620032 42668995 28b13c3 vmlinux \n```", "```\n# cat /proc/meminfo\nMemTotal:        1996796 kB\nMemFree:         1917020 kB\nMemAvailable:    1894044 kB\nBuffers:            2444 kB\nCached:            11976 kB\nSwapCached:            0 kB\nActive:             9440 kB\nInactive:           8964 kB\nActive(anon):         92 kB\nInactive(anon):     4096 kB\nActive(file):       9348 kB\nInactive(file):     4868 kB\nUnevictable:           0 kB\nMlocked:               0 kB\nSwapTotal:             0 kB\nSwapFree:              0 kB\nDirty:                 8 kB\nWriteback:             0 kB\nAnonPages:          4008 kB\nMapped:             6864 kB\nShmem:               200 kB\nKReclaimable:       7412 kB\nSlab:              20924 kB\nSReclaimable:       7412 kB\nSUnreclaim:        13512 kB\nKernelStack:        1552 kB\nPageTables:          540 kB\nSecPageTables:         0 kB\nNFS_Unstable:          0 kB\nBounce:                0 kB\nWritebackTmp:          0 kB\nCommitLimit:      998396 kB\nCommitted_AS:       7396 kB\nVmallocTotal:   135288315904 kB\nVmallocUsed:        4072 kB\nVmallocChunk:          0 kB\n<…> \n```", "```\n# lsmod\nModule          Size  Used by\ng_multi        47670  2\nlibcomposite   14299  1 g_multi\nmt7601Usta    601404  0 \n```", "```\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/resource.h>\n#define BUFFER_SIZE (1024 * 1024)\nvoid print_pgfaults(void)\n{\n    int ret;\n    struct rusage usage;\n    ret = getrusage(RUSAGE_SELF, &usage);\n    if (ret == -1) {\n        perror(\"getrusage\");\n    } else {\n        printf(\"Major page faults %ld\\n\", usage.ru_majflt);\n        printf(\"Minor page faults %ld\\n\", usage.ru_minflt);\n    }\n}\nint main(int argc, char *argv[])\n{\n    unsigned char *p;\n    printf(\"Initial state\\n\");\n    print_pgfaults();\n    p = malloc(BUFFER_SIZE);\n    printf(\"After malloc\\n\");\n    print_pgfaults();\n    memset(p, 0x42, BUFFER_SIZE);\n    printf(\"After memset\\n\");\n    print_pgfaults();\n    memset(p, 0x42, BUFFER_SIZE);\n    printf(\"After 2nd memset\\n\");\n    print_pgfaults();\n    return 0;\n} \n```", "```\nInitial state\nMajor page faults 0\nMinor page faults 172\nAfter malloc\nMajor page faults 0\nMinor page faults 186\nAfter memset\nMajor page faults 0\nMinor page faults 442\nAfter 2nd memset\nMajor page faults 0\nMinor page faults 442 \n```", "```\n# cat /proc/1/maps\naaaaaf830000-aaaaaf83a000 r-xp 00000000 b3:62 397   /sbin/init.sysvinit\naaaaaf84f000-aaaaaf850000 r--p 0000f000 b3:62 397   /sbin/init.sysvinit\naaaaaf850000-aaaaaf851000 rw-p 00010000 b3:62 397   /sbin/init.sysvinit\naaaae9d63000-aaaae9d84000 rw-p 00000000 00:00 0     [heap]\nffff7ffb0000-ffff8013b000 r-xp 00000000 b3:62 309   /lib/libc.so.6\nffff8013b000-ffff8014d000 ---p 0018b000 b3:62 309   /lib/libc.so.6\nffff8014d000-ffff80150000 r--p 0018d000 b3:62 309   /lib/libc.so.6\nffff80150000-ffff80152000 rw-p 00190000 b3:62 309   /lib/libc.so.6\nffff80152000-ffff8015e000 rw-p 00000000 00:00 0\nffff8016c000-ffff80193000 r-xp 00000000 b3:62 304   /lib/ld-linux-aarch64.so.1\nffff801a4000-ffff801a6000 rw-p 00000000 00:00 0\nffff801a6000-ffff801a8000 r--p 00000000 00:00 0     [vvar]\nffff801a8000-ffff801aa000 r-xp 00000000 00:00 0     [vdso]\nffff801aa000-ffff801ac000 r--p 0002e000 b3:62 304   /lib/ld-linux-aarch64.so.1\nffff801ac000-ffff801ae000 rw-p 00030000 b3:62 304   /lib/ld-linux-aarch64.so.1\nffffd73ca000-ffffd73eb000 rw-p 00000000 00:00 0     [stack] \n```", "```\nCONFIG_SWAP\nCONFIG_CGROUP_MEM_RES_CTLR\nCONFIG_CGROUP_MEM_RES_CTLR_SWAP\nCONFIG_ZRAM \n```", "```\n/dev/zram0 none swap defaults zramsize=<size in bytes>, swapprio=<swap partition priority> \n```", "```\n# swapon /dev/zram0\n# swapoff /dev/zram0 \n```", "```\nvoid *mmap(void *addr, size_t length, int prot, int flags,int fd, off_t offset); \n```", "```\nint shm_fd;\nchar *shm_p;\nshm_fd = shm_open(\"/myshm\", O_CREAT | O_RDWR, 0666);\nftruncate(shm_fd, 65536);\nshm_p = mmap(NULL, 65536, PROT_READ | PROT_WRITE, MAP_SHARED, shm_fd, 0); \n```", "```\nint f;\nint fb_size;\nunsigned char *fb_mem;\nf = open(\"/dev/fb0\", O_RDWR);\n/* Use ioctl FBIOGET_VSCREENINFO to find the display\n dimensions and calculate fb_size */\nfb_mem = mmap(0, fb_size, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);\n/* read and write pixels through pointer fb_mem */ \n```", "```\n total        used   free shared buffers cached\nMem:   509016      504312   4704 0      26456   363860\n-/+ buffers/cache: 113996 395020\nSwap:       0           0      0 \n```", "```\n# echo 3 > /proc/sys/vm/drop_caches \n```", "```\n# ps -eo pid,tid,class,rtprio,stat,vsz,rss,comm\n    PID     TID CLS RTPRIO STAT    VSZ   RSS COMMAND\n      1       1 TS       - Ss     4496  2652 systemd\n    <…>\n    205     205 TS       - Ss     4076  1296 systemd-journal\n    228     228 TS       - Ss     2524  1396 udevd\n    581     581 TS       - Ss     2880  1508 avahi-daemon\n    584     584 TS       - Ss     2848  1512 dbus-daemon\n    590     590 TS       - Ss     1332   680 acpid\n    594     594 TS       - Ss     4600  1564 wpa_supplicant \n```", "```\ntop - 21:17:52 up 10:04, 1 user, load average: 0.00, 0.01, 0.05\nTasks: 96 total, 1 running, 95 sleeping, 0 stopped, 0 zombie\n%Cpu(s):  1.7 us,  2.2 sy,  0.0 ni, 95.9 id,  0.0 wa,  0.0 hi\nKiB Mem : 509016 total, 278524 used, 230492 free,  25572 buffers\nKiB Swap:      0 total,      0 used,      0 free, 170920 cached\nPID USER PR NI   VIRT   RES   SHR S  %CPU  %MEM    TIME+ COMMAND\n595 root 20  0  64920  9.8m  4048 S   0.0   2.0  0:01.09 node\n866 root 20  0  28892  9152  3660 S   0.2   1.8  0:36.38 Xorg\n<…> \n```", "```\nffffbd080000-ffffbd20b000 r-xp 00000000 b3:62 309 /lib/libc.so.6\nSize:               1580 kB\nKernelPageSize:        4 kB\nMMUPageSize:           4 kB\nRss:                1132 kB\nPss:                 112 kB\nPss_Dirty:             0 kB\nShared_Clean:       1132 kB\nShared_Dirty:          0 kB\nPrivate_Clean:         0 kB\nPrivate_Dirty:         0 kB\nReferenced:         1132 kB\nAnonymous:             0 kB\nKSM:                   0 kB\nLazyFree:              0 kB\nAnonHugePages:         0 kB\nShmemPmdMapped:        0 kB\nFilePmdMapped:         0 kB\nShared_Hugetlb:        0 kB\nPrivate_Hugetlb:       0 kB\nSwap:                  0 kB\nSwapPss:               0 kB\nLocked:                0 kB\nTHPeligible:           0\nVmFlags: rd ex mr mw me \n```", "```\n# smem -t\nPID User Command                     Swap   USS   PSS   RSS\n  1 root init [5]                       0   136   267  1532\n361 root /sbin/klogd -n                 0   104   273  1708\n367 root /sbin/getty 38400 tty1         0   108   278  1788\n369 root /sbin/getty -L 115200 ttyS2    0   108   278  1788\n358 root /sbin/syslogd -n -O /var/lo    0   108   279  1728\n306 root udhcpc -R -b -p /var/run/ud    0   168   284  1372\n366 root /bin/sh /bin/start_getty 11    0   116   315  1736\n383 root -sh                            0   220   506  2184\n129 root /sbin/udevd -d                 0  1436  1517  2380\n351 root sshd: /usr/sbin/sshd [liste    0   928  1893  3764\n380 root sshd: root@pts/0               0  3816  4900  7160\n387 root python3 /usr/bin/smem -t       0 11968 12136 13456\n-----------------------------------------------------------\n 12 1                                   0 19216 22926 40596 \n```", "```\n# smemcap > smem-beagleplay-cap.tar \n```", "```\n$ smem -t -S smem-beagleplay-cap.tar \n```", "```\n#include <mcheck.h>\n#include <stdlib.h>\n#include <stdio.h>\nint main(int argc, char *argv[])\n{\n    int j;\n    mtrace();\n    for (j = 0; j < 2; j++)\n        malloc(100); /* Never freed:a memory leak */\n    calloc(16, 16); /* Never freed:a memory leak */\n    exit(EXIT_SUCCESS);\n} \n```", "```\n$ export MALLOC_TRACE=mtrace.log\n$ ./mtrace-example\n$ mtrace mtrace-example mtrace.log\nMemory not freed:\n-----------------\n           Address   Size      Caller\n0x0000000001479460    0x64  at /home/chris/mtrace-example.c:12\n0x00000000014794d0    0x64  at /home/chris/mtrace-example.c:12\n0x0000000001479540   0x100  at /home/chris/mtrace-example.c:14 \n```", "```\n$ valgrind --leak-check=full ./mtrace-example\n==3384686== Memcheck, a memory error detector\n==3384686== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.\n==3384686== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info\n==3384686== Command: ./mtrace-example\n==3384686==\n==3384686==\n==3384686== HEAP SUMMARY:\n==3384686==     in use at exit: 456 bytes in 3 blocks\n==3384686==   total heap usage: 3 allocs, 0 frees, 456 bytes allocated\n==3384686==\n==3384686== 200 bytes in 2 blocks are definitely lost in loss record 1 of 2\n==3384686==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\n==3384686==    by 0x1091D3: main (mtrace-example.c:12)\n==3384686==\n==3384686== 256 bytes in 1 blocks are definitely lost in loss record 2 of 2\n==3384686==    at 0x484D953: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\n==3384686==    by 0x1091EC: main (mtrace-example.c:14)\n==3384686==\n==3384686== LEAK SUMMARY:\n==3384686==    definitely lost: 456 bytes in 3 blocks\n==3384686==    indirectly lost: 0 bytes in 0 blocks\n==3384686==      possibly lost: 0 bytes in 0 blocks\n==3384686==    still reachable: 0 bytes in 0 blocks\n==3384686==         suppressed: 0 bytes in 0 blocks\n==3384686==\n==3384686== For lists of detected and suppressed errors, rerun with: -s\n==3384686== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0) \n```", "```\n# echo 25 > /proc/sys/vm/overcommit_ratio\n# grep -e MemTotal -e CommitLimit /proc/meminfo\nMemTotal:        1996796 kB\nCommitLimit:      499196 kB \n```", "```\n# grep -e MemTotal -e Committed_AS /proc/meminfo\nMemTotal:        1996796 kB\nCommitted_AS:    2907335 kB \n```", "```\n[44510.490320] eatmem invoked oom-killer: gfp_mask=0x200da, order=0, oom_score_adj=0 \n```"]