- en: 29\. Adding a New Disk Drive to a CentOS 8 System
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 29\. 向 CentOS 8 系统添加新硬盘驱动器
- en: One of the first problems encountered by users and system administrators these
    days is that systems tend to run out of disk space to store data. Fortunately
    disk space is now one of the cheapest IT commodities. In the next two chapters
    we will look at the steps necessary to configure CentOS 8 to use the space provided
    via the installation of a new physical or virtual disk drive.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 目前用户和系统管理员面临的第一个问题之一是，系统往往会因存储数据的磁盘空间不足而出现问题。幸运的是，磁盘空间现在是最便宜的 IT 商品之一。在接下来的两章中，我们将介绍配置
    CentOS 8 以使用新物理或虚拟硬盘驱动器提供的空间所需的步骤。
- en: 29.1 Mounted File Systems or Logical Volumes
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 29.1 挂载的文件系统或逻辑卷
- en: There are two ways to configure a new disk drive on a CentOS 8 system. One very
    simple method is to create one or more Linux partitions on the new drive, create
    Linux file systems on those partitions and then mount them at specific mount points
    so that they can be accessed. This approach will be covered in this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 CentOS 8 系统上配置新硬盘有两种方法。一种非常简单的方法是，在新硬盘上创建一个或多个 Linux 分区，在这些分区上创建 Linux 文件系统，然后将它们挂载到特定的挂载点，以便访问。此方法将在本章中进行讲解。
- en: Another approach is to add the new space to an existing volume group or create
    a new volume group. When CentOS 8 is installed a volume group is created and named
    cl. Within this volume group are three logical volumes named root, home and swap
    that are used to store the / and /home file systems and swap partition respectively.
    By configuring the new disk as part of a volume group we are able to increase
    the disk space available to the existing logical volumes. Using this approach
    we are able, therefore, to increase the size of the /home file system by allocating
    some or all of the space on the new disk to the home volume. This topic will be
    discussed in detail in [“Adding a New Disk to a CentOS 8 Volume Group and Logical
    Volume”](../Text/Volume_Groups.xhtml#_idTextAnchor375).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是将新空间添加到现有的卷组中，或创建一个新的卷组。当 CentOS 8 安装时，会创建一个名为 cl 的卷组。在该卷组中，有三个逻辑卷，分别命名为
    root、home 和 swap，用于存储 / 和 /home 文件系统以及交换分区。通过将新硬盘配置为卷组的一部分，我们可以增加现有逻辑卷的磁盘空间。因此，我们可以通过将新硬盘上的部分或全部空间分配给
    home 卷，来增大 /home 文件系统的大小。这个话题将在[《向 CentOS 8 卷组和逻辑卷添加新硬盘》](../Text/Volume_Groups.xhtml#_idTextAnchor375)中详细讨论。
- en: 29.2 Finding the New Hard Drive
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 29.2 查找新硬盘
- en: This tutorial assumes that a new physical or virtual hard drive has been installed
    on the system and is visible to the operating system. Once added, the new drive
    should automatically be detected by the operating system. Typically, the disk
    drives in a system are assigned device names beginning hd or sd followed by a
    letter to indicate the device number. For example, the first device might be /dev/sda,
    the second /dev/sdb and so on.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程假设系统已安装新物理或虚拟硬盘，并且该硬盘对操作系统可见。添加后，操作系统应自动检测到新硬盘。通常，系统中的硬盘驱动器会分配以 hd 或 sd 开头的设备名称，后跟一个字母表示设备编号。例如，第一个设备可能是
    /dev/sda，第二个设备是 /dev/sdb，依此类推。
- en: 'The following is output from a system with only one disk drive connected to
    a SATA controller:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是只有一个硬盘驱动器连接到 SATA 控制器的系统输出：
- en: ls /dev/sd*
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ls /dev/sd*
- en: /dev/sda /dev/sda1 /dev/sda2
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda /dev/sda1 /dev/sda2
- en: This shows that the disk drive represented by /dev/sda is itself divided into
    2 partitions, represented by /dev/sda1 and /dev/sda2\.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这显示了由 /dev/sda 表示的硬盘驱动器被分为 2 个分区，分别由 /dev/sda1 和 /dev/sda2 表示。
- en: 'The following output is from the same system after a second hard disk drive
    has been installed:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下输出来自同一系统，在安装了第二个硬盘驱动器后：
- en: ls /dev/sd*
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ls /dev/sd*
- en: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb
- en: As shown above, the new hard drive has been assigned to the device file /dev/sdb.
    Currently the drive has no partitions shown (because we have yet to create any).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，新硬盘已被分配到设备文件 /dev/sdb。目前该驱动器没有显示任何分区（因为我们尚未创建任何分区）。
- en: At this point we have a choice of creating partitions and file systems on the
    new drive and mounting them for access or adding the disk as a physical volume
    as part of a volume group. To perform the former continue with this chapter, otherwise
    read [“Adding a New Disk to a CentOS 8 Volume Group and Logical Volume”](../Text/Volume_Groups.xhtml#_idTextAnchor375)
    for details on configuring Logical Volumes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: 29.3 Creating Linux Partitions
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'The next step is to create one or more Linux partitions on the new disk drive.
    This is achieved using the fdisk utility which takes as a command-line argument
    the device to be partitioned:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: fdisk /dev/sdb
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to fdisk (util-linux 2.32.1).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Changes will remain in memory only, until you decide to write them.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Be careful before using the write command.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: Device does not contain a recognized partition table.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: Created a new DOS disklabel with disk identifier 0xbd09c991.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to view the current partitions on the disk enter the p command:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): p'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk /dev/sdb: 8 GiB, 8589934592 bytes, 16777216 sectors'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 'Disklabel type: dos'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk identifier: 0xbd09c991'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: 'As we can see from the above fdisk output, the disk currently has no partitions
    because it is a previously unused disk. The next step is to create a new partition
    on the disk, a task which is performed by entering n (for new partition) and p
    (for primary partition):'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): n'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: Partition type
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: p primary (0 primary, 0 extended, 4 free)
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: e extended (container for logical partitions)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: 'Select (default p): p'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition number (1-4, default 1):'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: In this example we only plan to create one partition which will be partition
    1\. Next we need to specify where the partition will begin and end. Since this
    is the first partition we need it to start at the first available sector and since
    we want to use the entire disk we specify the last sector as the end. Note that
    if you wish to create multiple partitions you can specify the size of each partition
    by sectors, bytes, kilobytes or megabytes.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition number (1-4, default 1): 1'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'First sector (2048-16777215, default 2048):'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: 'Last sector, +sectors or +size{K,M,G,T,P} (2048-16777215, default 16777215):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Created a new partition 1 of type ‘Linux’ and of size 8 GiB.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help):'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have specified the partition, we need to write it to the disk using
    the w command:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): w'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: The partition table has been altered.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Calling ioctl() to re-read partition table.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Syncing disks.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'If we now look at the devices again we will see that the new partition is visible
    as /dev/sdb1:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: ls /dev/sd*
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb /dev/sdb1
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to create a file system on our new partition.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: 29.4 Creating a File System on a CentOS 8 Disk Partition
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: 'We now have a new disk installed, it is visible to CentOS 8 and we have configured
    a Linux partition on the disk. The next step is to create a Linux file system
    on the partition so that the operating system can use it to store files and data.
    The easiest way to create a file system on a partition is to use the mkfs.xfs
    utility:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: mkfs.xfs /dev/sdb1
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: meta-data=/dev/sdb1 isize=512 agcount=4, agsize=524224 blks
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: = sectsz=512 attr=2, projid32bit=1
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: = crc=1 finobt=1, sparse=1, rmapbt=0
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: = reflink=1
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: data = bsize=4096 blocks=2096896, imaxpct=25
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: = sunit=0 swidth=0 blks
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: naming =version 2 bsize=4096 ascii-ci=0, ftype=1
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: log =internal log bsize=4096 blocks=2560, version=2
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: = sectsz=512 sunit=0 blks, lazy-count=1
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: realtime =none extsz=4096 blocks=0, rtextents=0
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: In this case we have created an XFS file system. XFS is a high performance file
    system which is the default filesystem type on CentOS 8 and includes a number
    of advantages in terms of parallel I/O performance and the use of journaling.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: 29.5 An Overview of Journaled File Systems
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: A journaling filesystem keeps a journal or log of the changes that are being
    made to the filesystem during disk writing that can be used to rapidly reconstruct
    corruptions that may occur due to events such as a system crash or power outage.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: There are a number of advantages to using a journaling file system. Both the
    size and volume of data stored on disk drives has grown exponentially over the
    years. The problem with a non-journaled file system is that following a crash
    the fsck (filesystem consistency check) utility has to be run. The fsck utility
    will scan the entire filesystem validating all entries and making sure that blocks
    are allocated and referenced correctly. If it finds a corrupt entry it will attempt
    to fix the problem. The issues here are two-fold. First, the fsck utility will
    not always be able to repair damage and you will end up with data in the lost+found
    directory. This is data that was being used by an application but the system no
    longer knows where it was referenced from. The other problem is the issue of time.
    It can take a very long time to complete the fsck process on a large file system,
    potentially leading to unacceptable down time.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: A journaled file system, on the other hand, records information in a log area
    on a disk (the journal and log do not need to be on the same device) during each
    write. This is a essentially an “intent to commit” data to the filesystem. The
    amount of information logged is configurable and ranges from not logging anything,
    to logging what is known as the “metadata” (i.e. ownership, date stamp information
    etc), to logging the “metadata” and the data blocks that are to be written to
    the file. Once the log is updated the system then writes the actual data to the
    appropriate areas of the filesystem and marks an entry in the log to say the data
    is committed.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: After a crash the filesystem can very quickly be brought back on-line using
    the journal log, thereby reducing what could take minutes using fsck to seconds
    with the added advantage that there is considerably less chance of data loss or
    corruption.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在崩溃后，可以使用日志文件快速将文件系统重新上线，从而减少使用 `fsck` 可能需要几分钟的时间，带来的优势是几乎没有数据丢失或损坏的机会。
- en: 29.6 Mounting a File System
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 29.6 挂载文件系统
- en: 'Now that we have created a new file system on the Linux partition of our new
    disk drive we need to mount it so that it is accessible and usable. In order to
    do this we need to create a mount point. A mount point is simply a directory or
    folder into which the file system will be mounted. For the purposes of this example
    we will create a /backup directory to match our file system label (although it
    is not necessary that these values match):'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们在新磁盘驱动器的 Linux 分区上创建了一个新的文件系统，需要将其挂载以使其可访问和可用。为此，我们需要创建一个挂载点。挂载点只是文件系统将要挂载到其中的目录或文件夹。为了本例子的目的，我们将创建一个
    `/backup` 目录以匹配我们的文件系统标签（尽管这些值匹配并非必需）：
- en: mkdir /backup
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mkdir /backup
- en: 'The file system may then be manually mounted using the mount command:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后可以使用 `mount` 命令手动挂载文件系统：
- en: mount /dev/sdb1 /backup
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mount /dev/sdb1 /backup
- en: 'Running the mount command with no arguments shows us all currently mounted
    file systems (including our new file system):'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 `mount` 命令而不带任何参数会显示所有当前挂载的文件系统（包括我们的新文件系统）：
- en: mount
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mount
- en: sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime,seclabel)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime,seclabel)
- en: proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)
- en: .
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: .
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: /dev/sdb1 on /backup type xfs (rw,relatime,seclabel,attr2,inode64,noquota)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sdb1 on /backup type xfs (rw,relatime,seclabel,attr2,inode64,noquota)
- en: 29.7 Configuring CentOS 8 to Automatically Mount a File System
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 29.7 配置 CentOS 8 自动挂载文件系统
- en: 'In order to set up the system so that the new file system is automatically
    mounted at boot time an entry needs to be added to the /etc/fstab file. The format
    for an fstab entry is as follows:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置系统，使新文件系统在引导时自动挂载，需要向 `/etc/fstab` 文件添加条目。`fstab` 条目的格式如下：
- en: <device> <dir> <type> <options> <dump> <fsck>
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: <device> <dir> <type> <options> <dump> <fsck>
- en: 'These entries can be summarized as follows:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这些条目可以总结如下：
- en: •<device> - The device on which the filesystem is to be mounted.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: •<device> - 文件系统要挂载的设备。
- en: •<dir> - The directory that is to act as the mount point for the filesystem.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: •<dir> - 作为文件系统挂载点的目录。
- en: •<type> - The filesystem type (xfs, ext4 etc.)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: •<type> - 文件系统类型（xfs、ext4 等）。
- en: •<options> - Additional filesystem mount options, for example making the filesystem
    read-only or controlling whether the filesystem can be mounted by any user. Run
    man mount to review a full list of options. Setting this value to defaults will
    use the default settings for the filesystem (rw, suid, dev, exec, auto, nouser,
    async).
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: •<options> - 额外的文件系统挂载选项，例如使文件系统为只读或控制是否可以由任何用户挂载文件系统。运行 `man mount` 可查看完整的选项列表。将此值设置为
    `defaults` 将使用文件系统的默认设置（rw、suid、dev、exec、auto、nouser、async）。
- en: •<dump> - Dictates whether the content of the filesystem is to be included in
    any backups performed by the dump utility. This setting is rarely used and can
    be disabled with a 0 value.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: •<dump> - 确定文件系统内容是否包含在由 `dump` 实用程序执行的任何备份中。此设置很少使用，可以通过设置为 0 来禁用。
- en: •<fsck> - Whether the filesystem is checked by fsck after a system crash and
    the order in which filesystems are to be checked. For journaled filesystems such
    as XFS this should be set to 0 to indicate that the check is not required.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: •<fsck> - 文件系统在系统崩溃后是否由 fsck 检查以及检查顺序。对于像 XFS 这样的日志文件系统，应将此设置为 0，表示不需要检查。
- en: 'The following example shows an fstab file configured to automount our /backup
    partition on the /dev/sdb1 partition:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例显示了一个配置自动挂载我们的 `/backup` 分区到 `/dev/sdb1` 分区的 `fstab` 文件：
- en: /dev/mapper/cl-root / xfs defaults 0 0
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/mapper/cl-root / xfs defaults 0 0
- en: UUID=b4fc85a1-0b25-4d64-8100-d50ea23340f7 /boot xfs defaults 0 0
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: UUID=b4fc85a1-0b25-4d64-8100-d50ea23340f7 /boot xfs defaults 0 0
- en: /dev/mapper/cl-home /home xfs defaults 0 0
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/mapper/cl-home /home xfs defaults 0 0
- en: /dev/mapper/cl-swap swap swap defaults 0 0
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/mapper/cl-swap swap swap defaults 0 0
- en: /dev/sdb1 /backup xfs defaults 0 0
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sdb1 /backup xfs defaults 0 0
- en: The /backup filesystem will now automount each time the system restarts.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 每次系统重新启动时，`/backup` 文件系统都会自动挂载。
- en: 29.8 Adding a Disk Using Cockpit
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 29.8 使用 Cockpit 添加磁盘
- en: 'In addition to working with storage using the command-line utilities outlined
    in this chapter, it is also possible to configure a new storage device using the
    Cockpit web console. To view the current storage configuration, log into the Cockpit
    console and select the Storage option as shown in [Figure 29-1](../Text/Adding_New_DIsk.xhtml#_idTextAnchor372):'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/centos_8_cockpit_storage_page.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
- en: Figure 29-1
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: 'To locate the newly added storage, scroll to the bottom of the Storage page
    until the Drives section comes into view:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/centos_8_cockpit_storage_devices.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
- en: Figure 29-2
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: 'In the case of the above figure, the new drive is the 8 GiB drive. Select the
    new drive to display the Drive screen as shown in [Figure 29-3](../Text/Adding_New_DIsk.xhtml#_idTextAnchor373):'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/centos_8_cockpit_storage_drive.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
- en: Figure 29-3
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Create Partition Table button and, in the resulting dialog accept
    the default settings clicking on the Format button:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/centos_8_cockpit_storage_format.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
- en: Figure 29-4
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Create Partition button and use the dialog to specify how much
    space is to be allocated to this partition, the filesystem type (XFS is recommended)
    and an optional label, filesystem mount point and mount options. Note that if
    this new partition does not use all of the available space, additional partitions
    may subsequently be added to the drive. To change settings such as whether the
    filesystem is read-only or mounted at boot time, change the Mounting menu option
    to Custom and adjust the toggle button settings:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/centos_8_cockpit_storage_create_partition.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
- en: Figure 29-5
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Once the settings have been selected, click on the Create partition button to
    commit the change. On completion of the creation process the new partition will
    be added to the disk, the corresponding filesystem created and mounted at the
    designated mount point and appropriate changes made to the /etc/fstab file.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: 29.9 Summary
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: This chapter has covered the topic of adding an additional physical or virtual
    disk drive to an existing CentOS 8 system. This is a relatively simple process
    of making sure the new drive has been detected by the operating system, creating
    one or more partitions on the drive and then making filesystems on those partitions.
    Although a number of different filesystem types are available on CentOS 8, XFS
    is generally the recommended option. Once the filesystems are ready, they can
    be mounted using the mount command. So that the newly created filesystems mount
    automatically on system startup, additions can be made to the /etc/fstab configuration
    file.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
