["```\n#!/bin/bash\n#\n# This file implements CIS Red Hat Enterprise Linux 7 Benchmark \n# Recommendation 5.2.8 from version 2.2.0\necho -n \"Ensure root logins are disabled on SSH... \"\nOUTPUT=$(grep -e \"^PermitRootLogin no\" /etc/ssh/sshd_config)\nif [ \"x$OUTPUT\" == \"x\" ]; then\n  echo FAILED!\n  OPTPRESENT=$(grep -e \"^PermitRootLogin.*\" /etc/ssh/sshd_config)\n  if [ \"x$OPTPRESENT\" == \"x\" ]; then\n    echo \"Configuration not present - attempting to add\"\n    echo \"PermitRootLogin no\" | sudo tee -a /etc/ssh/sshd_config 1>/dev/null\n  else\n    echo \"Configuration present - attempting to modify\"\n    sudo sed -i 's/^PermitRootLogin.*/PermitRootLogin no/g' /etc/ssh/sshd_config\n  fi\n  sudo systemctl restart sshd\nelse\n  echo OK\nfi\n```", "```\n---\n- name: 5.2.8 Ensure SSH root login is disabled (Scored - L1S L1W)\n  lineinfile:\n    state: present\n    dest: /etc/ssh/sshd_config\n    regexp: '^PermitRootLogin'\n    line: 'PermitRootLogin no'\n  notify: Restart sshd\n```", "```\n---\n- name: Restart sshd\n  service:\n    name: sshd\n    state: restarted\n```", "```\n---\n- name: Test and implement CIS benchmark\n  hosts: all\n  become: yes\n\n  roles:\n    - rhel7cis_recommendation528\n    - rhel7cis_recommendation529\n```", "```\n---\n- name: 5.2.8 Ensure SSH root login is disabled (Scored - L1S L1W)\n  lineinfile:\n    state: present\n    dest: /etc/ssh/sshd_config\n    regexp: '^PermitRootLogin'\n    line: 'PermitRootLogin no'\n  notify: Restart sshd\n\n- name: 5.2.9 Ensure SSH PermitEmptyPasswords is disabled (Scored - L1S L1W)\n  lineinfile:\n    state: present\n    dest: /etc/ssh/sshd_config\n    regexp: '^PermitEmptyPasswords'\n    line: 'PermitEmptyPasswords no'\n  notify: Restart sshd\n```", "```\n  when: \n    - recommendation_528|default(true)|bool\n```", "```\n  when: \n    - recommendation_529|default(true)|bool\n```", "```\n[legacyservers]\nlegacy-testhost\n\n[legacyservers:vars]\nrecommendation_528=false\n```", "```\n  tags:\n    - notlegacy\n    - allservers\n```", "```\n  tags:\n    - allservers\n```", "```\n  tags:\n    - notlegacy\n    - allservers\n    - level1\n    - scored\n```", "```\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0\n```", "```\n---\n- name: 3.1.2 Ensure packet redirect sending is disabled (Scored - L1S L1W)\n  sysctl:\n    name: \"{{ item.paramname }}\"\n    value: \"{{ item.paramvalue }}\"\n    reload: yes\n    ignoreerrors: yes\n    sysctl_set: yes\n    state: present\n  loop:\n    - { paramname: net.ipv4.conf.all.send_redirects, paramvalue: 0 }\n    - { paramname: net.ipv4.conf.default.send_redirects, paramvalue: 0 }\n  notify:\n    - Flush IPv4 routes\n```", "```\n- name: Flush IPv4 routes\n  sysctl:\n    name: net.ipv4.route.flush\n    value: \"1\"\n    sysctl_set: yes\n```", "```\n---\n- name: 2.2.1.1 Ensure time synchronization is in use (Not Scored - L1S L1W)\n  yum:\n    name: chrony\n    state: present\n\n- name: 2.2.1.1 Ensure time synchronization is in use (Not Scored - L1S L1W)\n  service:\n    name: chronyd\n    state: started\n```", "```\n$ cd roles\n$ git clone https://github.com/MindPointGroup/RHEL7-CIS.git\n$ cd ..\n```", "```\n---\n- name: Implement EL7 CIS benchmark\n  hosts: all\n  become: yes\n\n  roles:\n    - RHEL7-CIS\n```", "```\n$ ansible-playbook -i hosts site.yml --tags=level1\n```", "```\n$ ansible-playbook -i hosts site.yml -e rhel7cis_is_router=true\n```", "```\n[routers]\nrouter-testhost\n\n[routers:vars]\nrhel7cis_is_router=true\n```", "```\n$ ansible-playbook -i routers site.yml\n```", "```\n$ ansible-playbook -i hosts site.yml\n```"]