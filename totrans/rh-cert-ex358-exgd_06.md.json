["```\n---\n- name: Cups printer queue setup\n  hosts: cups_servers\n  become: true\n  become_method: sudo\n```", "```\n[emcleroy@rhel1 ~]$ ippfind -T 20\nipp://HPE070EA601518.local:631/ipp/print\nipp://EPSON04046D.local:631/ipp/print\nipp://BRW9C305BC2B044.local:631/ipp/print\n```", "```\n  tasks:\n    - name: Install cups\n      package:\n        name: cups\n        state: latest\n    - name: Start and enable cups service\n      service:\n        name: cups\n        state: started\n        enabled: true\n    - name: Enable firewall rules\n      firewalld:\n        service: mdns\n        permanent: true\n        state: enabled\n    - name: Enable firewall rules\n      firewalld:\n        port: 631/tcp\n        permanent: true\n        state: enabled\n    - name: Reload firewall\n      command:\n        cmd: firewall-cmd --reload\n    - name: Setup print queue\n      command:\n        cmd: lpadmin -p printer-queue -v ipp://BRW9C305BC2B044.local:631/ipp/print -m everywhere -E\n    - name: Set default print queue\n      command:\n        cmd: lpadmin -d printer-queue\n    - name: Test to ensure print queue is setup correctly\n      command:\n        cmd: lpstat -p printer-queue\n```", "```\n[emcleroy@rhel3 cups_playbook]$ ansible-playbook -i inventory cups_playbook.yml -u emcleroy –k –-ask-become -v\n```", "```\n---\n- name: Cups printer queue setup\n  hosts: cups_servers\n  become: true\n  become_method: sudo\n  tasks:\n    - name: Disable print queue\n      command:\n        cmd: cupsdisable printer-queue\n```", "```\n---\n- name: Cups printer queue setup\n  hosts: cups_servers\n  become: true\n  become_method: sudo\n  tasks:\n    - name: Enable print queue\n      command:\n        cmd: cupsenable printer-queue\n```", "```\n[emcleroy@rhel1 ~]$ sudo postconf -e \"inet_interfaces = loopback-only\"\n[sudo] password for emcleroy:\n[emcleroy@rhel1 ~]$ sudo postconf inet_interfaces\ninet_interfaces = loopback-only\n```", "```\n[emcleroy@rhel1 ~]$ sudo postconf -e \"myorigin = example.com\"\n[emcleroy@rhel1 ~]$ sudo postconf myorigin\nmyorigin = example.com\n```", "```\n[emcleroy@rhel1 ~]$ sudo postconf -e \"inet_protocols = ipv4\"\n[emcleroy@rhel1 ~]$ sudo postconf inet_protocols\ninet_protocols = ipv4\n```", "```\n[emcleroy@rhel1 ~]$ sudo postconf -e \"mydestination =\"\n[emcleroy@rhel1 ~]$ sudo postconf mydestination\nmydestination =\n```", "```\n[emcleroy@rhel1 ~]$ sudo postconf -e \"mynetworks = 127.0.0.0/8\"\n[emcleroy@rhel1 ~]$ sudo postconf mynetworks\nmynetworks = 127.0.0.0/8\n```", "```\n[emcleroy@rhel1 ~]$ sudo postconf -e \"local_transport = error: no local delivery\"\n[emcleroy@rhel1 ~]$ sudo postconf local_transport\nlocal_transport = error: no local delivery\n```", "```\n[emcleroy@rhel1 ~]$ sudo postconf -e \"relayhost = [rhel2.example.com]\"\n[emcleroy@rhel1 ~]$ sudo postconf relayhost\nrelayhost = [rhel2.example.com]\n```", "```\n---\n- name: Setup null client email server\n  hosts: email_servers\n  become: true\n  become_method: sudo\n```", "```\n  tasks:\n    - name: Install postfix\n      package:\n        name: postfix\n        state: latest\n    - name: Open firewall rules for postfix\n      firewalld:\n        service: smtp\n        state: enabled\n        permanent: true\n    - name: Reload firewall\n      command:\n        cmd: firewall-cmd --reload\n    - name: Set configuration settings using a loop\n      command:\n        cmd: postconf -e \"{{ item.name }} = {{ item.value }}\"\n      loop:\n        - { name: 'inet_interfaces', value: 'loopback-only' }\n        - { name: 'myorigin', value: 'example.com' }\n        - { name: 'inet_protocols', value: 'ipv4' }\n        - { name: 'mydestination', value: '' }\n        - { name: 'mynetworks', value: '127.0.0.0/8' }\n        - { name: 'local_transport', value: 'error: no local delivery' }\n        - { name: 'relayhost', value: '[smtp.example.com]' }\n    - name: Restart and enable postfix to refresh config\n      service:\n        name: postfix\n        state: restarted\n        enabled: true\n```", "```\n[emcleroy@rhel3 email_playbook]$ ansible-playbook -i inventory email_playbook.yml -u emcleroy -k --ask-become -v\n```"]