["```\nsudo apt install docker.io \n```", "```\nsystemctl status docker \n```", "```\nsystemctl enable --now docker \n```", "```\nsudo usermod -aG docker <yourusername> \n```", "```\ndocker search ubuntu \n```", "```\ndocker pull ubuntu \n```", "```\ndocker images \n```", "```\ndocker rmi d2e4e1f51132 \n```", "```\ndocker run -it ubuntu /bin/bash \n```", "```\ndocker start d2e4e1f51132 \n```", "```\ndocker attach d2e4e1f51132 \n```", "```\ndocker run -dit ubuntu /bin/bash \n```", "```\ndocker run -dit -p 8080:80 ubuntu /bin/bash \n```", "```\ndocker attach dfb3e \n```", "```\nsudo apt install apache2 \n```", "```\napt update \n```", "```\napt install apache2 \n```", "```\n/etc/init.d/apache2 start \n```", "```\ndocker commit <Container ID> ubuntu/apache-server:1.0 \n```", "```\ndocker run -dit -p 8080:80 ubuntu/apache-server:1.0 /bin/bash \n```", "```\ndocker stop <Container ID> \n```", "```\nFROM ubuntu\nMAINTAINER Jay <jay@somewhere.net>\n# Avoid confirmation messages\nARG DEBIAN_FRONTEND=noninteractive\n# Update the container's packages\nRUN apt update; apt dist-upgrade -y\n# Install apache2 and vim\nRUN apt install -y apache2 vim-nox\n# Start Apache\nENTRYPOINT apache2ctl -D FOREGROUND \n```", "```\nFROM ubuntu \n```", "```\nMAINTAINER Jay <myemail@somewhere.net> \n```", "```\n# Avoid confirmation messages \n```", "```\nARG DEBIAN_FRONTEND=noninteractive \n```", "```\nRUN apt update; apt dist-upgrade -y \n```", "```\nRUN apt install -y apache2 vim-nox \n```", "```\nENTRYPOINT apache2ctl -D FOREGROUND \n```", "```\ndocker build -t learnlinuxtv/apache-server:1.0 . \n```", "```\ndocker run -dit -p 8080:80 learnlinuxtv/apache-server:1.0 \n```", "```\nsudo snap install lxd \n```", "```\nsudo usermod -aG lxd <yourusername> \n```", "```\nlxd init \n```", "```\nlxc launch ubuntu:22.04 mycontainer \n```", "```\nlxc exec mycontainer bash \n```", "```\nlxc exec mycontainer -- su --login ubuntu \n```", "```\nlxc config set mycontainer boot.autostart 1 \n```", "```\nsudo apt update && sudo apt install apache2 \n```", "```\ncurl <container_ip_address> \n```", "```\nlxc profile create external \n```", "```\nProfile external created \n```", "```\nlxc profile edit external \n```", "```\ndescription: External access profile\ndevices:\n  eth0:\n  name: eth0\n  nictype: bridged\n  parent: br0\n  type: nic \n```", "```\nlxc launch ubuntu:22.04 mynewcontainer -p default -p external \n```", "```\nlxc profile add mycontainer external \n```"]