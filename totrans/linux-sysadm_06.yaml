- en: '6'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Basic System Settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux is a highly customizable operating system, and it provides a vast array
    of configuration options that allow users to tailor their systems to their specific
    needs. In this chapter, we will explore some of the basic system configuration
    settings in Linux and how they can be customized to improve system performance,
    security, and usability.
  prefs: []
  type: TYPE_NORMAL
- en: Before you make any changes to a configuration file, you should always make
    a backup. When making a copy, append a `.bak` extension to it so that you know
    it’s a copy meant for safekeeping.
  prefs: []
  type: TYPE_NORMAL
- en: Eventually, you are almost guaranteed to make a blunder when modifying these
    files. It is essential to have a backup of any configuration files before making
    any changes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Due to the impossibility of covering every configuration file in Linux, we
    will focus on the most common configurations instead:'
  prefs: []
  type: TYPE_NORMAL
- en: The `hosts` configuration file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `resolv` configuration file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `network-scripts` configuration file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `dhclient` configuration file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `sysctl` configuration file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overview of basic settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Linux has various basic settings that you can configure to customize the behavior
    of your system. These settings are typically found in configuration files, and
    they can affect various aspects of the operating system:'
  prefs: []
  type: TYPE_NORMAL
- en: '`timedatectl` command in most modern Linux distributions. This command allows
    users to set the system’s time zone, as well as the date and time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`hostnamectl` command. This command allows users to set the hostname, as well
    as the static IP address and domain name.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`useradd` and `groupadd` commands are used to create new users and groups,
    respectively. The `usermod` and `groupmod` commands are used to modify existing
    users and groups.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ifconfig` command can be used to configure network interfaces, while the `ip`
    command can be used to manage IP addresses, routes, and network devices. The **NetworkManager**
    service is a popular tool for managing network connections and settings in Linux.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**System security configuration**: Linux is known for its robust security features,
    and many system configuration settings focus on enhancing system security. Some
    of the key security configuration settings include configuring the firewall, managing
    user permissions, configuring **Security-Enhanced Linux** (**SELinux**), and setting
    up system auditing and monitoring.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sysctl` command or by modifying the `/``etc/sysctl.conf` file.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For example, to increase the maximum number of open files allowed by the system,
    you can set the `fs.file-max` parameter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**CPU scaling**: Linux provides CPU scaling mechanisms that control the CPU’s
    frequency and power-saving features. Adjusting CPU scaling can help strike a balance
    between power efficiency and performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For example, to set the CPU governor to performance mode (maximum frequency
    all the time), you can use the `cpufreq-set` command (may require installation
    of `cpufrequtils`):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**I/O scheduler**: The Linux kernel offers multiple I/O schedulers, each designed
    for specific storage devices and access patterns. Choosing the right scheduler
    for your storage can improve I/O performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As an example, to set the I/O scheduler for a specific block device, such as
    an SSD, use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Swap configuration**: The swap space is used when physical RAM is full. However,
    excessive swapping can significantly impact performance. Adjusting swapiness can
    control the tendency to swap out memory.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For example, to reduce swappiness (less aggressive swapping), set a lower value
    (for example, `10`) in `/etc/sysctl.conf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Filesystem mount options**: Mount options for filesystems can impact performance
    based on the use case. Some options can optimize read/write operations or enhance
    data safety.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As an example, for an SSD-mounted filesystem, you can set the `noatime` option
    to avoid updating access timestamps for improved read performance:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**Network settings**: Fine-tuning network parameters can enhance networking
    performance and reduce latency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For example, to increase the TCP buffer size, set the following in `/etc/sysctl.conf`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: System performance configuration is an iterative and adaptive process that requires
    a deep understanding of the system’s components and workloads. By making informed
    and measured adjustments, system administrators can create efficient, stable,
    and responsive systems that meet the needs of their users and applications.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Remember to back up configuration files before making changes and thoroughly
    test the system after modifications to ensure the desired performance improvements.
    The optimal settings may vary depending on the specific hardware, workload, and
    user requirements. Regular monitoring and profiling can help you identify performance
    bottlenecks and further refine the configuration.
  prefs: []
  type: TYPE_NORMAL
- en: The hosts configuration file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Linux `hosts` file is a simple text file that is used to map hostnames to
    IP addresses. It is located in the `/etc` directory. The file contains a list
    of IP addresses and their corresponding hostnames. When a user tries to access
    a hostname, the system checks the `hosts` file to determine the IP address associated
    with that hostname.
  prefs: []
  type: TYPE_NORMAL
- en: The `hosts` file is used first in the `hosts` file for a mapping. This can be
    useful in situations where a specific hostname needs to be redirected to a different
    IP address or when you want to test a website before it is made live.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `hosts` file consists of several columns of data, separated by whitespace.
    The first column contains the IP address, while the second column contains the
    hostname. Additional columns can be used to specify aliases for the hostname.
    For example, the following line in the `hosts` file maps the `192.168.1.80` IP
    address to the `centos` hostname and sets `centos8` as an alias:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.1 – The content of the hosts file](img/B18575_06_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.1 – The content of the hosts file
  prefs: []
  type: TYPE_NORMAL
- en: Now, for example, if you want to SSH into that server with CentOS (`192.168.1.80`),
    you don’t have to remember the IP, you just have to know what name you assigned
    to that server.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is valid for `ping` too. You just have to remember the name when you use
    `ping` rather than the IP. Here’s an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: You can edit the `hosts` file using a text editor, such as nano or Vim. It’s
    important to note that the `hosts` file requires root privileges to edit. Therefore,
    you must use the `sudo` command or switch to the root user before editing the
    file.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to mapping hostnames to IP addresses, the `hosts` file can be used
    to block access to specific websites. By mapping a hostname to the loopback address
    (`127.0.0.1`), you can effectively block access to that website. For example,
    the following line in the `hosts` file blocks access to the `example.com` website:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: In conclusion, the Linux `hosts` file is a simple yet powerful tool for mapping
    hostnames to IP addresses and overriding the DNS resolution process. It can be
    used to redirect traffic to a different IP address, test websites before they
    go live, and block access to specific websites. Understanding how to use the `hosts`
    file can help you troubleshoot networking issues and improve the security of your
    system.
  prefs: []
  type: TYPE_NORMAL
- en: The resolv configuration file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `resolv.conf` file is an essential configuration file in Linux systems that
    is used to configure DNS resolution settings. DNS is responsible for translating
    human-readable domain names (such as `www.example.com`) into IP addresses that
    computers can understand. This translation is crucial for accessing websites,
    services, and other network resources on the internet. The file is located in
    the `/etc` directory and contains information about the DNS servers that the system
    should use to resolve domain names.
  prefs: []
  type: TYPE_NORMAL
- en: The `resolv.conf` file is used by various networking programs, including the
    system resolver library, web browsers, and email clients. When a user tries to
    access a website or connect to a remote server using its hostname, the system
    uses the `resolv.conf` file to find the corresponding IP address.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `resolv.conf` file consists of several directives that define the DNS servers
    to use and the search domains to append to hostnames. The following are the most
    commonly used directives in the `resolv.conf` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '`nameserver`: This directive specifies the IP address of the DNS server to
    use for name resolution. You can specify multiple nameservers in the file, and
    the system will use them in the order they are listed. For example, the following
    line in the `resolv.conf` file specifies the IP address of the DNS server at `192.168.1.1`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 6.2 – The content of the resolv.conf file](img/B18575_06_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.2 – The content of the resolv.conf file
  prefs: []
  type: TYPE_NORMAL
- en: '`search`: This directive specifies the search domain to append to hostnames
    that are not fully qualified. For example, if the search domain is set to `example.com`,
    and a user tries to access the `www` hostname, the system will try to resolve
    `www.example.com`. You can specify multiple search domains in the file, and the
    system will use them in the order they are listed. For example, the following
    line in the `resolv.conf` file specifies the search domain as `example.com`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`options`: This directive specifies additional options to use for name resolution,
    such as the timeout and retry values. For example, the following line in the `resolv.conf`
    file specifies a timeout of `5` seconds and a retry value of `2`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You can edit the `resolv.conf` file using a text editor, such as nano or Vim.
    We need root privilege to edit. It’s important to note that the `resolv.conf`
    file can be automatically generated by various tools, such as the **Dynamic Host
    Configuration Protocol** (**DHCP**) client or the NetworkManager service. Therefore,
    any changes you make to the file may be overwritten by these tools.
  prefs: []
  type: TYPE_NORMAL
- en: In conclusion, the Linux `resolv.conf` file is a crucial configuration file
    that defines the DNS servers to use and the search domains to append to hostnames.
    Understanding how to configure the `resolv.conf` file can help you troubleshoot
    networking issues and improve the performance and security of your system.
  prefs: []
  type: TYPE_NORMAL
- en: The network-scripts configuration file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In Linux, `network-scripts` is used to configure network interfaces. These scripts
    are located in the `/etc/sysconfig/network-scripts` directory and define the network
    settings for each interface, such as the IP address, netmask, gateway, and DNS
    servers (network file configuration path is specific to CentOS).
  prefs: []
  type: TYPE_NORMAL
- en: The `network-scripts` is written in Bash and consists of several configuration
    files, each corresponding to a specific network interface. The most commonly used
    configuration files are `ifcfg-ethX` for Ethernet interfaces and `ifcfg-wlanX`
    for wireless interfaces, where `X` is the interface number.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `ifcfg-ethX` configuration file contains the following parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '`DEVICE`: This parameter specifies the name of the network interface – for
    example, `DEVICE=eth0`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`BOOTPROTO`: This parameter specifies whether the interface should use DHCP
    or a static IP address. If DHCP is used, the parameter’s value is set to `dhcp`.
    If a static IP address is used, the parameter’s value is set to `static`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`IPADDR`: This parameter specifies the IP address of the interface.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`NETMASK`: This parameter specifies the network mask of the interface.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`GATEWAY`: This parameter specifies the default gateway for the interface.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`DNS1`, `DNS2`, and `DNS3`: These parameters specify the IP addresses of the
    DNS servers to use for name resolution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `ifcfg-wlanX` configuration file contains similar parameters but also includes
    additional parameters for wireless settings, such as the ESSID and encryption
    method.
  prefs: []
  type: TYPE_NORMAL
- en: You can edit the `network-scripts` configuration files using a text editor,
    such as nano or Vim. It’s important to note that changes made to the configuration
    files will not take effect until the network service is restarted. You can restart
    the network service by running the `service network restart` or `systemctl restart
    network` command, depending on your Linux distribution.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the configuration files, the `network-scripts` directory also
    contains scripts that are executed when the network service is started or stopped.
    These scripts can be used to perform additional network configuration tasks, such
    as setting up virtual interfaces or configuring network bridges.
  prefs: []
  type: TYPE_NORMAL
- en: In conclusion, the Linux `network-scripts` configuration files are used to configure
    network interfaces and define network settings such as IP addresses, netmasks,
    gateways, and DNS servers. Understanding how to configure these files can help
    you troubleshoot networking issues and improve the performance and security of
    your system.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of the `network-scripts` config file from CentOS that’s been generated
    automatically is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.3 – Network configuration file](img/B18575_06_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.3 – Network configuration file
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, DHCP is enabled and there is no static reservation, and the
    name of the network card is `enp0s31f6`.
  prefs: []
  type: TYPE_NORMAL
- en: 'If we would like to make a static IP reservation, we should use something like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: With Ubuntu 17, networking configuration is done through Netplan, a YAML-based
    framework. You can do all of your DNS, gateway, netmask, and IP configuration
    here.
  prefs: []
  type: TYPE_NORMAL
- en: '`/etc/netplan` is where the network configuration files are located.'
  prefs: []
  type: TYPE_NORMAL
- en: 'A sample configuration file for a network interface using Netplan looks like
    this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.4 – Ubuntu Netplan configuration file](img/B18575_06_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.4 – Ubuntu Netplan configuration file
  prefs: []
  type: TYPE_NORMAL
- en: To have your changes take effect, restart networking with the `netplan` `apply`
    command.
  prefs: []
  type: TYPE_NORMAL
- en: The dhclient configuration file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `dhclient` configuration file in Linux is located at `/etc/dhcp/dhclient.conf`.
    This file is used by the `dhclient` program to configure the DHCP client settings
    on a Linux system.
  prefs: []
  type: TYPE_NORMAL
- en: 'The `dhclient.conf` file contains various configuration options that control
    how the DHCP client interacts with the DHCP server. Some of the common configuration
    options that can be set in the `dhclient.conf` file are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`dhclient.conf` file allows you to set the timeout values for various DHCP
    requests. You can set the timeout values for `DHCPDISCOVER`, `DHCPREQUEST`, and
    `DHCPACK` messages.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Lease time**: You can set the length of time that the DHCP client can use
    an assigned IP address.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dhclient.conf` file allows you to specify the DNS servers that the DHCP client
    should use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Hostname**: You can set the hostname that the DHCP client should use when
    requesting an IP address.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Client identifier**: You can specify the client identifier that the DHCP
    client should use when communicating with the DHCP server.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dhclient.conf` file also allows you to set vendor-specific options that can
    be used to configure various network settings.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It’s important to note that the syntax for the `dhclient.conf` file can vary,
    depending on the version of dhclient that is being used. It’s always a good idea
    to consult the documentation for your specific version of `dhclient` to ensure
    that you are using the correct syntax.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is what a default `dhclient.conf` file will look like in Ubuntu:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.5 – DHCP configuration file](img/B18575_06_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.5 – DHCP configuration file
  prefs: []
  type: TYPE_NORMAL
- en: In conclusion, the `dhclient.conf` configuration file plays a crucial role in
    managing the DHCP client behavior on a system. By customizing the `dhclient.conf`
    file, administrators can fine-tune various settings and options to ensure optimal
    network connectivity and address assignment.
  prefs: []
  type: TYPE_NORMAL
- en: Properly configuring `dhclient.conf` can greatly enhance network stability,
    security, and performance. For example, administrators can prioritize certain
    DNS servers for faster resolution, enforce specific lease durations to manage
    IP address allocation efficiently, and set up fallback mechanisms in case the
    primary DHCP server becomes unavailable.
  prefs: []
  type: TYPE_NORMAL
- en: The sysctl configuration file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Linux `sysctl` configuration file is located at `/etc/sysctl.conf`. This
    file is used to configure kernel parameters at runtime. The `sysctl.conf` file
    contains a set of key-value pairs that represent various kernel parameters.
  prefs: []
  type: TYPE_NORMAL
- en: The `sysctl.conf` file is divided into sections, where each section contains
    a set of key-value pairs that correspond to a specific group of kernel parameters.
    Each key-value pair consists of the name of the kernel parameter, followed by
    its value. This value can be either a numeric value or a string.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some examples of kernel parameters that can be configured using the
    `sysctl.conf` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '`net.ipv4.ip_forward`: This parameter enables or disables IP forwarding. A
    value of `1` enables IP forwarding, while a value of `0` disables it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`net.ipv4.tcp_syncookies`: This parameter enables or disables TCP SYN cookies.
    A value of `1` enables TCP SYN cookies, while a value of `0` disables them.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kernel.core_pattern`: This parameter specifies the pattern used to name core
    dump files. The default pattern is `core`, but you can specify a different pattern
    if you wish.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`kernel.shmmax`: This parameter specifies the maximum size of a shared memory
    segment in bytes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`vm.swappiness`: This parameter controls the degree to which the kernel swaps
    out unused memory pages to disk. A higher value means that the kernel will be
    more aggressive in swapping out memory pages, while a lower value means that the
    kernel will be less aggressive.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To apply changes made to the `sysctl.conf` file, you can use the `sysctl` command
    with the `-p` option, which will load the settings from the file into the kernel.
    It’s important to note that some kernel parameters can only be set at boot time
    and cannot be changed at runtime using the `sysctl.conf` file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Depending on your system and kernel, the `sysctl.conf` file might be called
    or located in the following locations:'
  prefs: []
  type: TYPE_NORMAL
- en: '`/``etc/sysctl.d/*.conf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/``run/sysctl.d/*.conf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/``usr/local/lib/sysctl.d/*.conf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/``usr/lib/sysctl.d/*.conf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/``lib/sysctl.d/*.conf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`/``etc/sysctl.conf`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linux will often try to read those files in that order. The remaining files
    with the same name in other folders are ignored the first time it discovers a
    genuine file with valid entries.
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t know what you’re doing, then playing around with the `etc/sysctl.conf`
    file could have serious consequences. You can observe which commands and files
    the OS tries to load and in what order by running the `sysctl``--``system` command.
    However, use this command with caution. This command will actively load and conduct
    operations on your OS because it is not a dry-run command, and you run the risk
    of misconfiguring your settings if you’re unsure if it should do that.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In conclusion, Linux provides a vast array of configuration settings that can
    be used to tailor the system to specific needs. Understanding how to configure
    basic system settings such as system time, hostname, user and group settings,
    network settings, security settings, and performance settings can help improve
    system performance, security, and usability. By customizing these settings, users
    can create a Linux system that meets their specific requirements and enhances
    their productivity.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will talk about user and group management.
  prefs: []
  type: TYPE_NORMAL
