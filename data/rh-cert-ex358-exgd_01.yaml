- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Block Storage – Learning How to Provision Block Storage on Red Hat Enterprise
    Linux
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 块存储—在 Red Hat 企业版 Linux 上学习如何配置块存储
- en: Block storage within **Red Hat Enterprise Linux** (**RHEL**) makes up the foundation
    of many core applications. You will use it for many things within the world of
    Linux, from application development to backups to deployments of infrastructure
    such as OpenStack using **Internet Small Computer Systems Interface** (**iSCSI**).
    Through understanding how and when to use block storage over other storage options
    and how to provision it through manual steps as well as automate it through Ansible,
    you will be able to comprehend and grasp the knowledge needed for your day-to-day
    work with Linux as well as ensuring you understand the building blocks required
    to meet the needs of the *EX358* exam. These lessons not only allow you to complete
    the *EX358* exam with success but also enable you to better understand why we
    use block storage over other filesystems in situations that dictate the use of
    this filesystem type in real-world scenarios.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**Red Hat Enterprise Linux** (**RHEL**) 中的块存储构成了许多核心应用程序的基础。你将在 Linux 的多个领域中使用它，从应用程序开发、备份到
    OpenStack 等基础设施的部署，使用 **互联网小型计算机系统接口** (**iSCSI**) 等技术。通过了解何时使用块存储而非其他存储选项，以及如何通过手动步骤配置它并通过
    Ansible 实现自动化，你将能够掌握日常使用 Linux 所需的知识，同时确保你理解为满足 *EX358* 考试需求而必备的构建模块。这些课程不仅可以帮助你成功完成
    *EX358* 考试，还能让你更好地理解为什么在某些实际场景下我们使用块存储而非其他文件系统。'
- en: This comes in handy when you are building your infrastructure at your company,
    in your home lab for learning purposes, or for that start-up you always wanted
    to create. At the end of this chapter, you will be able to provision block storage
    using Red Hat best practices both manually and through Ansible automation in order
    to meet the requirements of Red Hat. This will allow you to gain support from
    Red Hat if you have an active contract and also gain help from the community if
    you do not have Red Hat support in order to resolve any issues you may run into
    during your usage of this technology.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在公司搭建基础设施、在家庭实验室进行学习，或为你一直想创办的初创公司提供服务时，这将非常方便。本章结束时，你将能够通过 Red Hat 的最佳实践手动和通过
    Ansible 自动化方式配置块存储，以满足 Red Hat 的要求。这将使你在拥有有效合同的情况下获得 Red Hat 的支持，同时，如果没有 Red Hat
    支持，也能通过社区获得帮助，以解决你在使用该技术过程中可能遇到的任何问题。
- en: You will be able to configure iSCSI initiators, boot with them both manually
    and through Ansible automation, and safely tear down unused variations of the
    iSCSI block storage after you are done with this chapter. This will, in turn,
    ensure your full understanding of the overall life cycle and the effective nature
    of block storage in your ecosystem.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，你将能够配置 iSCSI 启动器，手动和通过 Ansible 自动化启动它们，并且在完成后安全地拆除不再使用的 iSCSI 块存储版本。这将确保你完全理解块存储在你的生态系统中的整体生命周期和有效性。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主要内容：
- en: iSCSI block storage—overview of what it is and why we need it
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iSCSI 块存储—概述它是什么以及我们为何需要它
- en: iSCSI block storage—manual provisioning and deployment
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iSCSI 块存储—手动配置和部署
- en: iSCSI block storage—Ansible automation playbook creation and usage
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iSCSI 块存储—Ansible 自动化剧本的创建与使用
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: Before we delve into the topics in detail, you will need to set a few things
    up. Let’s look at what they are.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入讨论这些主题之前，你需要设置一些必要的东西。让我们看看它们是什么。
- en: Setting up GitHub access
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 GitHub 访问权限
- en: 'You will need a free GitHub account in order to access some of the code that
    will be provided throughout this book. Please sign up for a free account at [https://github.com/](https://github.com/).
    We will be utilizing the code found in the following repository throughout the
    course of this book: [https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-](https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-).
    We will be utilizing the code snippets found in the `ch1` folder of this code
    repository (aka repo) for our iSCSI automation hands-on exercises, which can be
    found here: [https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter01](https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter01).
    The code placed here will allow you to check your work and ensure you are on the
    right track when writing your playbooks within Ansible. Please keep in mind these
    are one person’s way of writing tested playbooks that will meet the exam objectives;
    however, there are many ways of writing successful playbooks to meet these objectives.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个免费的 GitHub 账户，以便访问本书中提供的部分代码。请在 [https://github.com/](https://github.com/)
    注册一个免费账户。我们将在本书中使用以下仓库中的代码：[https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-](https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-)。我们将利用该代码库（也称为
    repo）中 `ch1` 文件夹中的代码片段进行 iSCSI 自动化实践练习，代码位置如下：[https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter01](https://github.com/PacktPublishing/Red-Hat-Certified-Specialist-in-Services-Management-and-Automation-EX358-Exam-Guide/tree/main/Chapter01)。这里的代码将帮助你检查自己的工作，确保在编写
    Ansible 剧本时走在正确的轨道上。请记住，这些代码是一个人编写并经过测试的剧本，能够满足考试目标；然而，编写成功剧本的方式有很多种，也能达到这些目标。
- en: Setting up your lab environment
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置你的实验环境
- en: 'All of the demonstrations of VirtualBox and coding will be shown on macOS but
    can be performed on Windows as well as Linux OSs. We will be setting up some iSCSI
    block devices. First, you will need a machine that can run VirtualBox with enough
    memory to run your machine and three VMs that each have 2 GB of memory, one 10
    GB hard drive, and one 5 GB hard drive, which equals 15 GB of required hard drive
    space per VM, as can be seen in the following screenshot:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 VirtualBox 和编码演示将会在 macOS 上展示，但也可以在 Windows 和 Linux 操作系统上执行。我们将设置一些 iSCSI
    块设备。首先，你需要一台能够运行 VirtualBox 的计算机，并且内存足够支持运行你的计算机和三个虚拟机，每个虚拟机需要 2 GB 内存，一个 10 GB
    硬盘和一个 5 GB 硬盘，这意味着每个虚拟机需要 15 GB 的硬盘空间，具体可以参考以下截图：
- en: '![Figure 1.1 – Layout of the VirtualBox deployment](img/Figure_1.01_B18607.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – VirtualBox 部署布局](img/Figure_1.01_B18607.jpg)'
- en: Figure 1.1 – Layout of the VirtualBox deployment
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – VirtualBox 部署布局
- en: 'This is mainly for the storage hands-on labs, and you can revert to one 10
    GB hard drive for exercises. RHEL 8.1 requires at least 9.37 GB of space to run.
    Using a Red Hat Developer account ([https://developers.redhat.com/](https://developers.redhat.com/)),
    you can access real Red Hat software to develop your skills as well as the software
    in order to set this up:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这主要是针对存储实践实验室，你可以为练习还原到一个 10 GB 的硬盘。RHEL 8.1 需要至少 9.37 GB 的空间才能运行。使用 Red Hat
    开发者账户（[https://developers.redhat.com/](https://developers.redhat.com/)），你可以访问真实的
    Red Hat 软件来提升你的技能以及设置所需的软件：
- en: '![Figure 1.2 – Signup is simple!](img/Figure_1.02_B18607.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – 注册很简单！](img/Figure_1.02_B18607.jpg)'
- en: Figure 1.2 – Signup is simple!
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – 注册很简单！
- en: 'Because the exam is set for RHEL 8.1, I recommend using this version for your
    studying needs in order to get the most authentic exam-like infrastructure possible.
    In the following screenshot, the correct version you should download is the first
    option:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 因为考试是基于 RHEL 8.1 设置的，我建议你使用这个版本进行学习，以获得最真实的考试环境。在以下截图中，你应该下载的正确版本是第一个选项：
- en: '![Figure 1.3 – The correct version for the exam and for you](img/Figure_1.03_B18607.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – 考试和你的正确版本](img/Figure_1.03_B18607.jpg)'
- en: Figure 1.3 – The correct version for the exam and for you
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – 考试和你的正确版本
- en: 'This will be true for the entirety of the book, including the comprehensive
    review and lab at the end. Before installing the OS, you can create a second hard
    drive in VirtualBox from the settings, as can be seen in the following screenshot:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这在整本书中都适用，包括最后的综合评审和实验。在安装操作系统之前，你可以在 VirtualBox 中从设置中创建一个第二硬盘，如下图所示：
- en: '![Figure 1.4 – Creating a second hard drive for your VM](img/Figure_1.04_B18607.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – 为你的虚拟机创建第二个硬盘](img/Figure_1.04_B18607.jpg)'
- en: Figure 1.4 – Creating a second hard drive for your VM
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – 为你的虚拟机创建第二个硬盘
- en: 'You also need to ensure that you choose **Bridged Adapter** mode for your network
    **Attached to** option. The **Promiscuous Mode** option is also allowed so that
    it can reach the internet and other adapters. One caveat to keep in mind is that
    bridged-over Wi-Fi does not always play nice, so try to ensure you have a wired
    connection if you are setting up your lab in this manner:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要确保为网络的 **附加到** 选项选择 **桥接适配器** 模式。**混杂模式** 选项也是允许的，这样它就可以连接到互联网和其他适配器。需要注意的是，桥接模式通过
    Wi-Fi 并不总是稳定，因此如果你是以这种方式搭建实验环境，尽量确保你有有线连接：
- en: '![Figure 1.5 – Bridged adapter with Promiscuous Mode option](img/Figure_1.05_B18607.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5 – 带有混杂模式选项的桥接适配器](img/Figure_1.05_B18607.jpg)'
- en: Figure 1.5 – Bridged adapter with Promiscuous Mode option
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – 带有混杂模式选项的桥接适配器
- en: 'From here, you can then mount the downloaded ISO and kick off the installation:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以挂载已下载的 ISO 并开始安装：
- en: '![Figure 1.6 – Mounting RHEL DVD ISO that was downloaded previously](img/Figure_1.06_B18607.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.6 – 挂载之前下载的 RHEL DVD ISO](img/Figure_1.06_B18607.jpg)'
- en: Figure 1.6 – Mounting RHEL DVD ISO that was downloaded previously
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.6 – 挂载之前下载的 RHEL DVD ISO
- en: 'There are some best practices you need to keep in mind. We will be installing
    the **Server with the GUI** option. Make sure to create yourself an administrator
    account as well as keeping your root account as you will want to do everything
    as sudo and not directly as root for security purposes and all-around good habits.
    The user creation screen, as follows, allows you to set up your root password
    and any users you would like to create:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要牢记一些最佳实践。我们将安装 **带图形用户界面的服务器** 选项。确保为自己创建一个管理员账户，并保留 root 账户，因为出于安全考虑以及良好的习惯，你希望使用
    sudo 而不是直接使用 root 来执行所有操作。以下的用户创建界面允许你设置 root 密码和任何你希望创建的用户：
- en: '![Figure 1.7 – Administrator accounts are best practices; sudo over root is
    always preferred](img/Figure_1.07_B18607.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7 – 管理员账户是最佳实践；总是优先使用 sudo 而不是 root](img/Figure_1.07_B18607.jpg)'
- en: Figure 1.7 – Administrator accounts are best practices; sudo over root is always
    preferred
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – 管理员账户是最佳实践；总是优先使用 sudo 而不是 root
- en: 'Next, you will need to use the login for your Red Hat Developer account and
    license the VMs using the account credentials. See the following screenshot for
    how to correctly apply a Red Hat subscription license:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你需要使用 Red Hat 开发者账户的登录信息，并使用账户凭证对虚拟机进行授权。请参考以下截图，了解如何正确应用 Red Hat 订阅许可证：
- en: '![Figure 1.8 – Red Hat Developer credentials or an active Red Hat account needed](img/Figure_1.08_B18607.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.8 – 需要 Red Hat 开发者凭证或有效的 Red Hat 账户](img/Figure_1.08_B18607.jpg)'
- en: Figure 1.8 – Red Hat Developer credentials or an active Red Hat account needed
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.8 – 需要 Red Hat 开发者凭证或有效的 Red Hat 账户
- en: 'You can create one machine and then clone it into the other two you need. Make
    sure you choose to generate new MAC addresses and to make a full clone to ensure
    that no overlap causes network or storage issues, as shown in the following screenshot:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以创建一台机器，然后将其克隆为你需要的另外两台。确保选择生成新的 MAC 地址并做完整克隆，以确保没有重叠导致网络或存储问题，如下图所示：
- en: '![Figure 1.9 – Full clones with new MAC generation and a new name for the VM](img/Figure_1.09_B18607.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.9 – 新的 MAC 生成和虚拟机新名称的完整克隆](img/Figure_1.09_B18607.jpg)'
- en: Figure 1.9 – Full clones with new MAC generation and a new name for the VM
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9 – 新的 MAC 生成和虚拟机新名称的完整克隆
- en: 'Next, we will set up the host file with the domain of `example.com` in order
    to route correctly to and from the different systems. You will need to do the
    following on the servers in a command line to get your IP addresses and then go
    to each device and set up the host file with the same information:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将设置主机文件，使用 `example.com` 域名，以便正确地进行不同系统之间的路由。你需要在服务器上使用命令行来获取 IP 地址，然后去每个设备并使用相同的信息设置主机文件：
- en: '![Figure 1.10 – Hostname and IP of rhel1.example.com system](img/Figure_1.10_B18607.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.10 – rhel1.example.com系统的主机名和IP](img/Figure_1.10_B18607.jpg)'
- en: Figure 1.10 – Hostname and IP of rhel1.example.com system
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.10 – rhel1.example.com系统的主机名和IP
- en: 'Next, let’s gather the hostnames or change them to what you would like them
    to be using the following commands and review the output in this case, which is
    `rhel1.example.com`:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用以下命令收集主机名或将其更改为你想要的名称，并查看此情况下的输出，应该是`rhel1.example.com`：
- en: '[PRE0]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Use the hostnames and the IP addresses to build the inventory for the host
    file. After you do this, make sure that you shut down the system for it to save
    the changes permanently. Next, you’re going to want to add these as noted to the
    host file on all three VMs using the following command:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 使用主机名和IP地址构建主机文件的清单。完成后，确保关闭系统以永久保存更改。接下来，你将需要使用以下命令在所有三台虚拟机的主机文件中添加这些内容：
- en: '[PRE1]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Here is an example of the completed `/``etc/hosts` file:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是完成的`/etc/hosts`文件示例：
- en: '![Figure 1.11 – Finished /etc/hosts file](img/Figure_1.11_B18607.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.11 – 完成的`/etc/hosts`文件](img/Figure_1.11_B18607.jpg)'
- en: Figure 1.11 – Finished /etc/hosts file
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11 – 完成的`/etc/hosts`文件
- en: 'Keep in mind your `/etc/hosts` file will look different based on your IPs.
    You should now be able to ping via the hostname and IP of all of the different
    VMs from one to another:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，你的`/etc/hosts`文件会根据你的IP地址有所不同。现在你应该能够通过主机名和IP地址互相ping通所有不同的虚拟机：
- en: '![Figure 1.12 – Example of working networking environment](img/Figure_1.12_B18607.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.12 – 工作网络环境示例](img/Figure_1.12_B18607.jpg)'
- en: Figure 1.12 – Example of working networking environment
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12 – 工作网络环境示例
- en: Next, for ease of use, let’s set up passwordless sudo for our user account,
    which in my case would be `emcleroy`.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了方便使用，我们将为我们的用户账户设置无密码的sudo，这里我的用户名是`emcleroy`。
- en: 'We will start by running the following command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从运行以下命令开始：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, we will locate the lines of code highlighted in the following screenshot
    and add the highlighted lines of text. Also, note that if you are allowing administrators,
    you can simply uncomment `#` in front of the `%wheel` line as well:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将定位到以下截图中高亮显示的代码行，并添加高亮显示的文本。还要注意，如果你允许管理员，可以简单地取消注释`#`，将其放在`%wheel`行前面：
- en: '![Figure 1.13 – Highlighted lines of text to be added, substituting your username
    for mine](img/Figure_1.13_B18607.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.13 – 高亮显示的文本行，需要添加并将你的用户名替换为我的用户名](img/Figure_1.13_B18607.jpg)'
- en: Figure 1.13 – Highlighted lines of text to be added, substituting your username
    for mine
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.13 – 高亮显示的文本行，需要添加并将你的用户名替换为我的用户名
- en: You will need to do this for all three of the servers.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要为所有三台服务器执行此操作。
- en: 'Finally, we will add SSH keys across the servers to allow for fast connectivity
    so that we do not have to type passwords every time we need to log in from one
    server to another. Start by generating SSH keys with the following command on
    your `rhel1` VM:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将在服务器之间添加SSH密钥，以便实现快速连接，这样每次从一台服务器登录到另一台服务器时，我们就不必输入密码。从你的`rhel1`虚拟机开始，使用以下命令生成SSH密钥：
- en: '[PRE3]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Just leave the defaults and keep hitting *Enter*, and then once that is generated,
    you will want to do the following:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 只需保持默认设置，不断按*Enter*，然后一旦密钥生成，你需要执行以下操作：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This will push the keys to the servers and allow all the servers to talk bi-directionally.
    You will want to do that for all three servers, so you will do the following (including
    for the server you are currently on to ensure that the keys are pushed to the
    known host file for all of the servers):'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这将把密钥推送到各个服务器，并允许所有服务器进行双向通信。你需要为所有三台服务器执行这个操作，所以你将做以下操作（包括当前所在的服务器，以确保密钥被推送到所有服务器的已知主机文件中）：
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: From here, you have full access to a three-VM lab running RHEL 8.1 with secondary
    HDDs for use with this iSCSI hands-on exercise. The only minor differences will
    come up in the networking hands-on labs where we will go over adding additional
    **network interface controllers** (**NICs**) for network teaming. This will be
    another topic that you need to understand in order to ace the *EX358* exam.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里开始，你可以完全访问运行RHEL 8.1、并为本次iSCSI实践练习配置了额外硬盘的三台虚拟机实验室。唯一的小差异出现在网络实践实验中，我们将讨论如何添加额外的**网络接口控制器**（**NICs**）进行网络团队配置。这将是你需要了解的另一个话题，以便顺利通过*EX358*考试。
- en: Congratulations! You have now successfully set up your lab environment. Pat
    yourself on the back and take a break. We will now be talking about the manual
    steps to build out iSCSI block devices and use them. This will be followed by
    putting that lab environment you just built to the test and getting hands-on experience
    with the technology.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜你！你已经成功地设置了实验环境。为自己鼓掌，休息一下。接下来我们将讨论构建iSCSI块设备并使用它们的手动步骤。然后，我们将测试你刚刚构建的实验环境，亲身体验这项技术。
- en: iSCSI block storage – overview of what it is and why we need it
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iSCSI块存储——它是什么，为什么我们需要它
- en: There are a number of things you need to know about block storage and, in this
    case, iSCSI. It is a **storage area network** (**SAN**) protocol that allows for
    devices or parts of devices to be seen as block storage by an end device. SAN
    is how iSCSI connects to the network and gives the ability to provide network
    **logical unit numbers** (**LUNs**). This allows systems to use these block devices
    as if they were physical hard drives in the system that they can boot from, save
    files to, or use like any hard drive that you have in your normal computer. With
    this in mind, we have to take a few things into account.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多关于块存储，特别是iSCSI的知识需要了解。iSCSI是一种**存储区域网络**（**SAN**）协议，它允许设备或设备的部分被终端设备视为块存储。SAN是iSCSI连接到网络的方式，并使其能够提供网络**逻辑单元号**（**LUNs**）。这使得系统可以像使用物理硬盘一样使用这些块设备，可以从中启动、保存文件，或者像在普通计算机中使用硬盘那样使用它们。考虑到这一点，我们需要考虑一些因素。
- en: First, you have to ensure that your network can handle the connectivity without
    congestion as this will cause your systems to slow down and possibly lag behind
    what you are doing, causing users to become frustrated. Knowing this, you have
    to plan out your SAN extremely well and properly network out your block storage
    onto a normally non-encrypted network setup that meets the minimum speeds of 10
    GB but can go much higher in a lot of cases. This allows smooth usage of your
    storage without the headaches you will run into as a system administrator. If
    you were to put this on the same network as your LAN traffic and expect your streaming
    (don’t do this while at work!) users are watching videos while trying to also
    do their jobs from a machine that is hosted from a SAN iSCSI block storage device.
    Other things to keep in mind are you need to ensure proper `firewalld` syntax
    is utilized and SELinux protocols are followed to allow connectivity at startup
    or you will have a giant paperweight without much happening.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你必须确保你的网络可以无阻塞地处理连接，因为拥堵会导致系统变慢，甚至可能落后于你正在进行的操作，进而让用户感到沮丧。了解这一点后，你需要非常谨慎地规划你的SAN，并妥善地将块存储网络配置到一个通常不加密的网络设置上，该网络应满足最低10
    GB的速度要求，在许多情况下速度可以更高。这可以确保你在不遇到头疼问题的情况下顺畅使用存储，避免作为系统管理员时遇到的麻烦。如果你将其放置在与局域网（LAN）流量相同的网络上，并且期望流媒体用户（别在工作时做这个！）在观看视频的同时，依然能够通过从SAN
    iSCSI块存储设备托管的机器进行工作。另一个要记住的事情是，你需要确保正确使用`firewalld`语法，并遵循SELinux协议，以允许在启动时建立连接，否则你将得到一个巨大的纸重物，几乎什么也不会发生。
- en: There are some main items you have to take into account when you are looking
    at iSCSI using `targetcli`, and I will get to more details about `targetcli` as
    that is the toolset we will utilize to allow us to use iSCSI in our RHEL 8.1 environment.
    The main things you need to know are the **initiator**, **target**, **Portal**,
    **LUN**, **Access Control List** (**ACL**), and **Target Portal Group** (**TPG**).
    These items make up iSCSI storage and lead to a lot of misconceptions. Let’s test
    your knowledge before we dig deeper into the systems and how they work together
    to provide block storage over the network to remote servers.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在使用`targetcli`配置iSCSI时，有几个主要事项需要考虑，我将详细介绍`targetcli`，因为它是我们在RHEL 8.1环境中使用iSCSI的工具集。你需要了解的主要内容包括**启动器**、**目标**、**门户**、**LUN**、**访问控制列表**（**ACL**）和**目标门户组**（**TPG**）。这些项目构成了iSCSI存储，并导致了很多误解。在我们深入探讨这些系统及其如何协同工作、通过网络向远程服务器提供块存储之前，让我们先测试一下你的知识。
- en: Testing your knowledge
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试你的知识
- en: 'Answer the following questions:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 请回答以下问题：
- en: What is an iSCSI storage source on an iSCSI server?
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在iSCSI服务器上，iSCSI存储源是什么？
- en: Target
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目标
- en: LUN
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: LUN
- en: '**iSCSI Qualified** **Name** (**IQN**)'
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**iSCSI合格** **名称**（**IQN**）'
- en: ACL
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: ACL
- en: What is a unique worldwide name used to identify both initiators and targets?
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于标识启动器和目标的唯一全球名称是什么？
- en: Target
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目标
- en: LUN
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: LUN
- en: IQN
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IQN
- en: ACL
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: ACL
- en: 'An iSCSI client that is typically software-based is known as a:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常是软件基础的iSCSI客户端被称为：
- en: TPG
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: TPG
- en: Portal
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 门户
- en: IQN
  id: totrans-88
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IQN
- en: Initiator
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 发起者
- en: Which of the following is an access restriction using the IQN?
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项是使用 IQN 的访问限制？
- en: Target
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目标
- en: LUN
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: LUN
- en: IQN
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IQN
- en: ACL
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: ACL
- en: What is the most commonly used software for setting up RHEL 8.1 iSCSI block
    storage?
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置 RHEL 8.1 iSCSI 块存储时，最常用的软件是什么？
- en: '`firewalld`'
  id: totrans-96
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`firewalld`'
- en: SELinux
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SELinux
- en: '`targetcli`'
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`targetcli`'
- en: '`networkd`'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`networkd`'
- en: Which service or port do you need to allow for iSCSI to work through your firewall?
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使 iSCSI 通过防火墙工作，需要允许哪个服务或端口？
- en: '`iSCSI-target`'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`iSCSI-target`'
- en: '`3260/UDP`'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`3260/UDP`'
- en: '`iSCSI`'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`iSCSI`'
- en: '`targetcli`'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`targetcli`'
- en: What includes the named item `2020-06.com.mcleroy.www`?
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`2020-06.com.mcleroy.www` 包含什么？'
- en: Target
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目标
- en: LUN
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: LUN
- en: IQN
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IQN
- en: ACL
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: ACL
- en: Which system do you need to enable to ensure iSCSI will start at boot?
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为确保 iSCSI 在启动时自动启动，需要启用哪个系统？
- en: '`firewalld`'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`firewalld`'
- en: Target
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目标
- en: '`targetcli`'
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`targetcli`'
- en: '`networkd`'
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`networkd`'
- en: 'Answers:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 答案：
- en: A. Target
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: A. 目标
- en: C. IQN
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: C. IQN
- en: D. Initiator
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: D. 发起者
- en: D. ACL
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: D. ACL
- en: C. `targetcli`
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: C. `targetcli`
- en: A.`iSCSI-target`
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: A.`iSCSI-target`
- en: C. IQN
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: C. IQN
- en: B. Target
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: B. 目标
- en: iSCSI block storage – manual provisioning and deployment
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iSCSI 块存储 – 手动配置和部署
- en: We will start by installing `targetcli` and using that to set up iSCSI to provide
    block-based storage to other systems for file usage, boot systems, and so on.
    This will showcase the wide range of uses that come with iSCSI block storage implemented
    with RHEL 8.1\. We will then show how to decommission the storage device and clean
    up the systems after utilizing the resources.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先安装`targetcli`，并使用它设置 iSCSI，将基于块的存储提供给其他系统进行文件使用、引导系统等。这将展示在 RHEL 8.1 中实现的
    iSCSI 块存储的广泛用途。然后我们将展示如何报废存储设备并在使用完资源后清理系统。
- en: 'First, we will install `targetcli` in order to utilize the iSCSI systems on
    `rhel1`:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将安装`targetcli`，以便在`rhel1`上使用 iSCSI 系统：
- en: '[PRE6]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'We will follow that by enabling the system to start up the iSCSI block storage.
    When the system boots or has an issue that causes the target system to need to
    restart, it will reload the service in order to keep the storage up and operational:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将启用系统启动 iSCSI 块存储。当系统启动或出现问题导致目标系统需要重启时，它将重新加载该服务，以确保存储持续运行：
- en: '[PRE7]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After that, we will allow `iscsi-initiator` through `firewalld` in order to
    ensure that the other servers are able to access the block storage without issue.
    We will also reload the firewall, or the opening you just made will not be there:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将通过 `firewalld` 允许 `iscsi-initiator`，以确保其他服务器能够顺利访问块存储。我们还将重新加载防火墙，否则刚刚打开的端口将不会生效：
- en: '[PRE8]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'After that, we will be utilizing the new service we just installed—`targetcli`—to
    create network block storage in order to share it with `rhel2.example.com`:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用刚刚安装的新服务——`targetcli`——创建网络块存储，以便与`rhel2.example.com`共享：
- en: '![Figure 1.14 – targetcli initiated for the first time](img/Figure_1.14_B18607.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图1.14 – targetcli 首次启动](img/Figure_1.14_B18607.jpg)'
- en: Figure 1.14 – targetcli initiated for the first time
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.14 – targetcli 首次启动
- en: 'We will now create backstores for the physical disk partitioning. We will be
    creating backstores of the type `block` in order to meet the needs of the iSCSI
    system today. This will allow the persistent filesystems and us to set up how
    we would like the LUNs to be in terms of size and security:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将为物理磁盘分区创建后端存储（backstores）。我们将创建类型为`block`的后端存储，以满足当前 iSCSI 系统的需求。这将允许持久文件系统，并且我们可以设置
    LUN 的大小和安全性：
- en: '[PRE9]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Next, we will create an IQN in the `/iscsi` directory in order to provide a
    target and destination for the block storage device:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将在 `/iscsi` 目录中创建一个 IQN，以便为块存储设备提供目标和目的地：
- en: '[PRE10]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'As you can see in the preceding code snippet, a default portal was created
    on port `3260` for connectivity to the block storage backstores using the `create`
    command for the IQN. Next, we will create a LUN for physically supporting the
    storage needs of the iSCSI block storage:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的代码片段所示，已经为连接块存储后端存储创建了一个默认门户，并使用`create`命令为 IQN 创建。接下来，我们将为物理支持 iSCSI 块存储的存储需求创建一个
    LUN：
- en: '[PRE11]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The next thing we need for iSCSI is an ACL to allow traffic to reach our storage
    devices successfully. We will need to exit out of `targetcli` temporarily to view
    the Red Hat name for the initiator’s IQN. It can be found in `/etc/iscsi/initiatorname.iscsi`:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来需要的 iSCSI 组件是 ACL，以便允许流量成功到达我们的存储设备。我们需要暂时退出`targetcli`以查看发起者 IQN 的 Red
    Hat 名称。它可以在 `/etc/iscsi/initiatorname.iscsi` 中找到：
- en: '[PRE12]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Here is an example of the initiator name that is currently being used on the
    next image:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是当前在下一张图片中使用的发起者名称示例：
- en: '![Figure 1.15 – initiatorname.iscsi](img/Figure_1.15_B18607.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.15 – initiatorname.iscsi](img/Figure_1.15_B18607.jpg)'
- en: Figure 1.15 – initiatorname.iscsi
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.15 – initiatorname.iscsi
- en: 'We will go back into `targetcli` and finish up the system preparations, setting
    up the system to use an ACL of our choosing for the system that will be utilizing
    the block storage:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将返回到 `targetcli` 并完成系统的准备工作，为使用块存储的系统设置我们选择的 ACL。
- en: '[PRE13]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Next, we will remove the default portal and create one on the specific IP address
    of our server:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将移除默认的门户，并在我们服务器的特定 IP 地址上创建一个新的门户：
- en: '[PRE14]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Finally, the following is your completed block storage target:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，以下是您完成的块存储目标：
- en: '![Figure 1.16 – iSCSI block storage target](img/Figure_1.16_B18607.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.16 – iSCSI 块存储目标](img/Figure_1.16_B18607.jpg)'
- en: Figure 1.16 – iSCSI block storage target
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.16 – iSCSI 块存储目标
- en: We have just shown how to provision iSCSI block storage for consumption. Now,
    we will showcase how to utilize that block storage for actual usage in your systems.
    We will connect from `rhel1.example.com` to `rhel2.example.com` and mount it,
    provision it, and utilize it to move and store files, as one of the examples of
    how we can use these systems is to increase the storage capacity of remote servers
    without needing to increase space, power, or cooling directly for the rack the
    server is housed within.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚展示了如何配置 iSCSI 块存储以供使用。现在，我们将展示如何在您的系统中实际使用这些块存储。我们将从 `rhel1.example.com`
    连接到 `rhel2.example.com` 并挂载、配置、使用它来移动和存储文件。因为我们可以通过这种方式增加远程服务器的存储容量，而不需要直接为服务器机架增加空间、电力或冷却。
- en: 'The first thing we will need to do is install the iSCSI utilities, as on the
    exam you may not have the installation of the **Server with** **the GUI**:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先需要做的是安装 iSCSI 工具，因为在考试中，您可能没有安装 **带有图形界面的服务器**：
- en: '[PRE15]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'This allows us to ingest the iSCSI block storage that we created previously.
    Next, we are going to look up the configured target on `rhel1` (`192.168.1.198`)
    (please note: this might be a different IP for you in your lab) and log in to
    it to ensure connectivity. From here, we need to set the login information on
    the `/etc/iscsi/iscsid.conf` file in order to pass the correct login information
    so that we can log in to the storage device:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 这使我们能够接入之前创建的 iSCSI 块存储。接下来，我们将查找 `rhel1`（`192.168.1.198`）上配置的目标（请注意：在您的实验室中，可能是不同的
    IP 地址），并登录到它以确保连接性。从这里，我们需要在 `/etc/iscsi/iscsid.conf` 文件中设置登录信息，以便传递正确的登录信息，从而能够登录到存储设备：
- en: '[PRE16]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, we will set the `InitiatorName` field so that we can pass a known entry
    to the connecting server using the following commands:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将设置 `InitiatorName` 字段，以便使用以下命令向连接的服务器传递已知条目：
- en: '[PRE17]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Please note you can use the manual page to gain further insight into the `iscsiadm`
    command set with the `man iscsiadm` command. On `rhel2`, we will do a discovery
    of available block devices using the `iscsiadm` command. The `–m` flag specifies
    the mode—in this case, `discovery`. The `–t` flag specifies the type of target—in
    our case, `st`, which is `sendtargets`, which tells the server to send a list
    of iSCSI targets. The `–p` flag specifies which portal to use, which is a combination
    of IP address and port. If no port is passed, it will default to `3260`:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您可以使用手册页面通过 `man iscsiadm` 命令深入了解 `iscsiadm` 命令集。在 `rhel2` 上，我们将使用 `iscsiadm`
    命令进行可用块设备的发现。`–m` 标志指定模式，在本例中为 `discovery`。`–t` 标志指定目标类型，在我们这里是 `st`，即 `sendtargets`，它告诉服务器发送
    iSCSI 目标列表。`–p` 标志指定使用哪个门户，这是 IP 地址和端口的组合。如果没有提供端口，它将默认为 `3260`：
- en: '[PRE18]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Please note the output from the preceding command will be as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，前一个命令的输出将如下所示：
- en: '[PRE19]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: As you can see here, we have a block device that is showing as available.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们有一个显示为可用的块设备。
- en: 'We will try to log in to the device, and you can see we have logged in and
    it is showing the device connected, as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将尝试登录到设备，您可以看到我们已经登录，并且设备已连接，如下所示：
- en: '[PRE20]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: In the preceding code, we are using the `–m` flag to choose `node` mode. We
    are using the `–T` flag to specify the target name. We are again using the `–p`
    flag for the portal, which defaults to port `3260`. Finally, we are using the
    `–l` flag to tell `iscsiadm` to log in to the target.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，我们使用 `–m` 标志选择 `node` 模式。我们使用 `–T` 标志指定目标名称。我们再次使用 `–p` 标志指定门户，默认端口为
    `3260`。最后，我们使用 `–l` 标志告诉 `iscsiadm` 登录到目标。
- en: 'Next, we are going to use the `–m` mode flag to check the session and `–P`
    to print the information level of 3:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用`–m`模式标志来检查会话，使用`–P`来打印信息级别为3：
- en: '[PRE21]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can see that we have `sdb`, which is the second drive on `rhel2`, and now
    we have `sdc` as well:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到我们有`sdb`，这是`rhel2`上的第二个驱动器，现在我们也有`sdc`：
- en: '![Figure 1.17 – sdc drive is now showing up](img/Figure_1.17_B18607.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.17 – sdc 驱动器现在已显示](img/Figure_1.17_B18607.jpg)'
- en: Figure 1.17 – sdc drive is now showing up
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.17 – sdc 驱动器现在已显示
- en: 'Next, we are going to partition the drive and format it with `xfs`. This will
    allow us to mount the system on boot as well as to save persistent files. This
    can be used for many things from file storage to OS or databases. First, we are
    going to format the drive to `xfs`:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将对驱动器进行分区并用`xfs`格式化。这将使我们能够在启动时挂载系统，并保存持久文件。它可以用于从文件存储到操作系统或数据库的许多用途。首先，我们将把驱动器格式化为`xfs`：
- en: '[PRE22]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Then, we are going to use the following command to get the UUID to use in `fstab`
    to make it a persistent mount that will automatically mount at startup:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将使用以下命令获取 UUID，以便在`fstab`中使用，使其成为持久挂载，并在启动时自动挂载：
- en: '[PRE23]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Here, we can see an example of the added value highlighted in `fstab`:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们可以看到在`fstab`中添加的值的示例，已被高亮显示：
- en: '![Figure 1.18 – Updated fstab after adding the iSCSI block storage device](img/Figure_1.18_B18607.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.18 – 添加 iSCSI 块存储设备后的更新 fstab](img/Figure_1.18_B18607.jpg)'
- en: Figure 1.18 – Updated fstab after adding the iSCSI block storage device
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.18 – 添加 iSCSI 块存储设备后的更新 fstab
- en: 'Here are the lines where we added the new iSCSI drive to `fstab`. Please note
    that for network devices, we pass the `_netdev` option. Next, we are going to
    mount the system in order to use it for moving files around:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们将新添加的 iSCSI 驱动器写入`fstab`的行。请注意，对于网络设备，我们传递了`_netdev`选项。接下来，我们将挂载系统以便于移动文件：
- en: '[PRE24]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'After it is mounted, we are going to move into the new drive, create a folder
    and a test `.txt` file, and ensure it saves, which it does by using the following
    commands:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 挂载后，我们将进入新驱动器，创建一个文件夹和一个测试的`.txt`文件，并确保它能够保存，以下命令将会实现：
- en: '[PRE25]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Next, we are going to remove the mount, log out of the connection, and delete
    the leftovers:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将移除挂载，退出连接，并删除剩余的文件：
- en: '[PRE26]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This wraps up the section on manually setting up iSCSI. Next is automating it.
    We will go into more detail in the hands-on review and the quiz at the end of
    the book. I hope you are enjoying this journey as much as I am.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分关于手动设置 iSCSI 的内容到此为止。接下来是自动化部分。我们将在动手操作和书籍结尾的测验中详细讨论。我希望你和我一样享受这段旅程。
- en: iSCSI block storage – Ansible automation playbook creation and usage
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iSCSI 块存储 – Ansible 自动化剧本创建与使用
- en: We will start the automation portion of working with iSCSI block storage by
    first installing and configuring the use of Ansible core 2.9 as that is what is
    used in the *EX358* exam. I will not be using the **fully qualified collection
    name** (**FQCN**) as that can sometimes cause errors in a 2.9 environment, which
    could lead to issues while taking the exam. This we want to avoid at all costs,
    so we will be using the classic module names, and I will explain the differences
    to a degree so that you can understand what you will need to use in future versions
    of Ansible.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过首先安装和配置使用 Ansible 核心 2.9 来开始 iSCSI 块存储的自动化部分，因为这是 *EX358* 考试中使用的版本。我不会使用**完全限定的集合名称**（**FQCN**），因为在
    2.9 环境中它有时会导致错误，这可能会在考试过程中引发问题。我们希望尽一切可能避免这种情况，因此我们将使用经典的模块名称，并会在一定程度上解释它们的差异，以便你能够理解未来版本的
    Ansible 中需要使用的内容。
- en: First, let’s start by installing Ansible 2.9 on server `rhel3` as that is going
    to be what we consider the workstation server from our `yum` repository. Depending
    on your personal preferences, you can make `rhel1` your classroom server and `rhel2`
    and `rhel3` your test servers, but in our case, we have already set up `rhel1`
    with iSCSI and `rhel2`.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们从服务器`rhel3`开始安装 Ansible 2.9，因为它将作为我们从`yum` 仓库中获取的工作站服务器。根据个人偏好，你可以将`rhel1`设为课堂服务器，`rhel2`和`rhel3`设为测试服务器，但在我们的案例中，我们已经将`rhel1`设置为
    iSCSI 服务器，并使用了`rhel2`。
- en: 'First, we will enable the needed repos:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将启用所需的仓库：
- en: '[PRE27]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Next, we will install Python 3:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将安装 Python 3：
- en: '[PRE28]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Then, we will install Ansible 2.9:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将安装 Ansible 2.9：
- en: '[PRE29]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Let’s check and ensure that the right version of Ansible is installed:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检查并确保安装了正确版本的 Ansible：
- en: '[PRE30]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Next, we are going to start writing a playbook using the **Yet Another Markup
    Language** (**YAML**) Ansible language. This is a simple module-based function
    that will allow you to write up a playbook that will accomplish your task quickly
    and efficiently. I recommend a good editor when writing up these playbooks. JetBrains'
    PyCharm is my go-to and is what you will see me write my playbooks in when you
    see example screenshots of the finished results. Do also note that the finished
    playbooks can be found in the GitHub repository of this book, as mentioned in
    the *Technical requirements* section for each chapter.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将开始使用**Yet Another Markup Language**（**YAML**）Ansible语言编写playbook。这是一个简单的基于模块的功能，可以让您快速有效地编写playbook，以完成您的任务。在编写这些playbook时，我建议使用一个好的编辑器。JetBrains的PyCharm是我的首选，也是您看到我在其中编写playbook完成结果示例屏幕截图的编辑器。还请注意，完成的playbook可以在本书的GitHub存储库中找到，如每章节的*技术要求*部分所述。
- en: 'The first thing you will want to create is a directory where you want to run
    the playbooks from:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您将想要创建一个目录，用于运行playbooks：
- en: '[PRE31]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Once in the directory, we will create an inventory file with a default group
    that will have both the `rhel1` and `rhel2` servers in them:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入目录，我们将创建一个包含`rhel1`和`rhel2`服务器的默认组的清单文件：
- en: '[PRE32]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: As you can see, I added `ansible_host` and the IP address. This is in case there
    is no host file set up or the name is not DNS routable. I added the default group
    with all of the hosts, and there are two additional groups that allow me to limit
    what my playbooks make changes to. That way, I can tell my playbook to mount the
    storage on `rhel2` using the `iscsi_user` group.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所见，我添加了`ansible_host`和IP地址。这是为了在没有设置主机文件或名称不可DNS路由的情况下。我添加了包含所有主机的默认组，并有两个额外的组，允许我限制我的playbook所做的更改。这样，我可以告诉我的playbook使用`iscsi_user`组在`rhel2`上挂载存储。
- en: 'Next, we are going to write the block storage playbook named `mount_iscsi.yml`,
    and I will break it down after showing you what that playbook looks like:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将编写名为`mount_iscsi.yml`的块存储playbook，并在展示该playbook后详细解释：
- en: '[PRE33]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The module name for this instance is `yum`, and that is used to install the
    `iscsi-initiator-utils` package that will install the utilities. Next, we have
    the different flags of the modules, such as `dest:` for the destination of the
    source file that is in your playbook’s `templates` folder. In the template folder
    location within your playbook directory, you will have the file`/templates/initiatorname.iscsi.j2`,
    which contains the initiator name to pass to the playbook. It will contain the
    following code:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 此实例的模块名称为`yum`，用于安装`iscsi-initiator-utils`包，该包将安装实用程序。接下来，我们有模块的不同标志，如`dest:`用于您playbook的`templates`文件夹中源文件的目标位置。在playbook目录中的模板文件夹位置，您将拥有文件`/templates/initiatorname.iscsi.j2`，其中包含传递给playbook的初始化程序名称的代码：
- en: '[PRE34]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'You can find out more about each module that you’re using by looking at the
    equivalent of a man page, as follows:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过查看类似于man页的等效内容来了解您使用的每个模块的更多信息，如下所示：
- en: '[PRE35]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'You can also list the files with the following command, but keep in mind there
    are thousands of modules, so try to grep the names if possible:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用以下命令列出文件，但请记住有数千个模块，因此请尽可能使用grep命令筛选名称：
- en: '[PRE36]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The following screenshot shows what a normal `ansible-doc` page looks like
    for the different modules:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了不同模块的正常`ansible-doc`页面的外观：
- en: '![Figure 1.19 – Example of the yum module documentation page](img/Figure_1.19_B18607.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![图1.19 – yum模块文档页面示例](img/Figure_1.19_B18607.jpg)'
- en: Figure 1.19 – Example of the yum module documentation page
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.19 – yum模块文档页面示例
- en: We will use the following command to run the `ansible-playbook -i inventory
    mount_iscsi.yml -u emcleroy -k --ask-become –v` playbook. This will be executed
    from the `rhel3` server and make changes to the `rhel2` server. This concludes
    our automated approach to mounting a LUN for iSCSI block storage. We learned a
    little about Ansible and how it works, from modules to templates. We will learn
    a lot more about Ansible and all of its inner workings in the upcoming chapters
    in greater detail, so stick around.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用以下命令来运行`ansible-playbook -i inventory mount_iscsi.yml -u emcleroy -k --ask-become
    –v`剧本。这将从`rhel3`服务器执行，并对`rhel2`服务器进行更改。这结束了我们自动化挂载iSCSI块存储的方法。我们学到了一些关于Ansible的知识，从模块到模板的工作方式。在接下来的章节中，我们将更详细地了解Ansible及其所有内部工作原理，敬请期待。
- en: Summary
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This brings us to the end of the first chapter, where we went into details about
    RHEL block storage, setting up a hands-on environment for testing purposes, and
    getting the first taste of Ansible. In the coming chapters, we will be digging
    deeper into how to use Ansible with further examples and more hands-on exercises
    that will help hone your abilities as a systems admin and help ensure you pass
    the *EX358* exam. In the next chapter, we will be continuing our journey into
    network storage, talking about network file storage and how we can use that to
    share information across our organizations and make our jobs faster. Please join
    me as we continue our road to gaining the *EX358* certification that you want
    to achieve and that I want to help you obtain.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这标志着第一章的结束，在这一章中，我们详细介绍了RHEL块存储、为测试目的设置实践环境，以及初步体验了Ansible。在接下来的章节中，我们将深入探讨如何使用Ansible，提供更多实例和实践练习，帮助你提升系统管理员的能力，并确保你通过*EX358*考试。在下一章，我们将继续深入探讨网络存储，讨论网络文件存储以及如何利用它在组织内部共享信息，从而提高工作效率。请继续与我一同前行，迈向你希望获得的*EX358*认证，这是我希望帮助你实现的目标。
