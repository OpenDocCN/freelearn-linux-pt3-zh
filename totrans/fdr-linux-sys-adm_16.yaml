- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: System Administration
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统管理
- en: 'Unlike many professions, there is no single path to becoming a system administrator.
    Many **SysAdmins** have a degree in a wide range of fields: **computer science**,
    **systems engineering**, **Information Technology**, **software engineering**,
    **mechanical engineering**, **meteorology**, and so on.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 与许多职业不同，成为一名系统管理员并没有单一的路径。许多**系统管理员**拥有不同领域的学位：**计算机科学**、**系统工程**、**信息技术**、**软件工程**、**机械工程**、**气象学**等等。
- en: Plus, given the hands-on nature of system administration, and the availability
    of open source server software, many SysAdmins enter this field on a self-taught
    basis. Generally, it requires some prior experience with the system expected to
    be managed. In some cases, SysAdmin candidates must hold a certificate before
    they can be considered for the position.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，鉴于系统管理的实践性质，以及开源服务器软件的可用性，许多系统管理员是自学成才的。通常，这需要一些管理预期系统的先前经验。在某些情况下，系统管理员候选人必须持有证书才能被考虑聘用。
- en: This profession becomes more difficult if you don’t have the habit of undertaking
    *best practices*.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有采取最佳实践的习惯，这项职业会变得更加困难。
- en: But where do you learn them? Where are they written down?
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 但是你从哪里学到这些呢？它们在哪里写下来？
- en: In this chapter, we intend to clear up those doubts and help you on your way
    to becoming a **Linux** **system administrator**.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们打算解答这些疑惑，并帮助你成为一名**Linux** **系统管理员**。
- en: 'We’re going to cover the following main topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论以下主要主题：
- en: The three laws of the SysAdmin
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 系统管理员的三条法则
- en: A little bit of Git and programming
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一点Git和编程
- en: Don’t forget to back up
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要忘记备份
- en: Automating with Ansible
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Ansible进行自动化
- en: Never-ending study
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 永无止境的学习
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To complete the topics in this chapter, you will need to install the packages
    indicated in each section. In each section, you will find instructions for the
    different types of packages you will need to install.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成本章中的主题，你需要安装每个部分中指示的软件包。在每个部分，你将找到有关你需要安装的不同类型软件包的说明。
- en: 'The examples for this chapter can be downloaded from this book’s **GitHub**
    repository: [https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter10](https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter10).'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的示例可以从本书的**GitHub**仓库下载：[https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter10](https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter10)。
- en: The three laws of the SysAdmin
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统管理员的三条法则
- en: “*Because, if you stop to think of it, the three laws of robotics are the essential
    guiding principles of a good many of the world’s ethical systems. [...] To put
    it simply, if Byerley follows all the laws of robotics, he may be a robot, or
    may simply be a very* *good man.*”
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '“*因为，如果你停下来思考，机器人学的三条法则是许多世界伦理系统的基本指导原则。 [...] 简而言之，如果拜尔利遵守了所有的机器人学法则，他可能是一个机器人，或者只是一个非常*
    *好的人*。”  '
- en: '*Dr. Susan Calvin in Evidence from* *Isaac Asimov*'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*来自* *艾萨克·阿西莫夫*的《证据》中，**苏珊·卡尔文博士**。'
- en: 'For more than 20 years, I was a SysAdmin for different companies. In those
    years, some young people asked me what the best practices were and if could they
    apply them to consider themselves a good SysAdmin. Over the years, I have read
    different articles about these *best practices*: **Ethics Code for SysAdmins**,
    **The 10 Commandments of the SysAdmin**, and even **Fundamental Laws** **of Computing**.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 20多年来，我一直是不同公司系统管理员。在那些年里，一些年轻人曾问我，最好的实践是什么，是否可以将它们应用于自己，认为自己是一个合格的系统管理员。在这些年里，我读过不同的文章，讨论了这些*最佳实践*：**系统管理员伦理规范**、**系统管理员的十诫**，甚至**计算机基本法则**。
- en: This job of becoming a platform SysAdmin is an arduous task that becomes complicated
    if we don’t get into the habit of applying best practices. But where do you learn
    them? Where are they written down?
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 成为平台系统管理员这项工作是艰巨的任务，如果我们没有养成应用最佳实践的习惯，它就会变得复杂。但是你从哪里学到这些呢？它们在哪里写下来？
- en: One of the best philosophies, in my experience, is to follow the **KISS principle**
    and, based on it, simplify the recommendations into fundamental principles that
    help us develop our skills.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我的经验，最好的哲学之一是遵循**KISS原则**，并基于此将建议简化为有助于我们技能发展的基本原则。
- en: Let’s provide an overview of this principle.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们概述一下这个原则。
- en: The KISS principle
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: KISS原则
- en: The KISS principle (an acronym for *Keep It Simple, Stupid!*) is a design principle
    that was outlined by the US Navy in 1960\. It states that most systems work better
    if they’re kept simple than if they become complicated. Thus, simplicity should
    be a key aim in design, and unnecessary complexity should be avoided.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: KISS 原则（*Keep It Simple, Stupid!* 的缩写）是美国海军于1960年提出的一项设计原则。它指出，大多数系统如果保持简单而不是复杂，工作效果会更好。因此，简洁性应当成为设计的关键目标，应避免不必要的复杂性。
- en: 'A text attributed to *Leonardo Da Vinci* gives us a broad outline of the principle:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一段归于*莱昂纳多·达·芬奇*的文字为我们概述了这一原则：
- en: “*Simplicity is the* *ultimate sophistication.*
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: “*简洁就是* *终极的复杂性*。”
- en: '*When once you have tasted flight, you will forever walk the Earth with your
    eyes turned skyward, for there you have been, and there you will always long*
    *to return.*'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*一旦你体验过飞行，你将永远仰望天空行走在地球上，因为你曾经在那里，且总会渴望* *回到那里。*'
- en: '*Learning never exhausts* *the mind.*”'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: “*学习永远不会耗尽* *思维*。”
- en: – *Leonardo* *da Vinci*
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: – *莱昂纳多* *达·芬奇*
- en: In most cases, simple solutions are more effective. Over the years, I have seen
    young SysAdmins fall into applying complex solutions that lead to more issues.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，简单的解决方案更有效。多年来，我看到许多年轻的系统管理员在应用复杂的解决方案时，反而导致了更多的问题。
- en: Note
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For more information on how to apply the KISS principle in code creation, refer
    to *The Kiss Principle* at [https://people.apache.org/~fhanik/kiss.html](https://people.apache.org/~fhanik/kiss.html).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 想要了解更多关于如何在代码创建中应用KISS原则的信息，请参考*The Kiss Principle*，网址是[https://people.apache.org/~fhanik/kiss.html](https://people.apache.org/~fhanik/kiss.html)。
- en: Based on this, let me share with you the fundamental principles that guide me
    in my work as a SysAdmin.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 基于此，让我分享一下作为系统管理员，指导我工作的基本原则。
- en: Let’s see how these fundamental principles originated, and then delve deeper
    into them.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这些基本原则是如何起源的，然后深入探讨它们。
- en: Knowing the basic tasks
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解基本任务
- en: 'This is from Wikipedia ([https://en.wikipedia.org/wiki/System_administrator](https://en.wikipedia.org/wiki/System_administrator)):'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这是来自维基百科的内容（[https://en.wikipedia.org/wiki/System_administrator](https://en.wikipedia.org/wiki/System_administrator)）：
- en: “*A System Administrator is the person who handles implementing, configuring,
    maintaining, monitoring, documenting, and ensuring the proper functioning of a
    computer system, or some aspect* *of it.*”
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: “*系统管理员是负责实施、配置、维护、监控、文档记录并确保计算机系统或其某一方面正常运行的人*。”
- en: Their purpose is to guarantee the *uptime*, *performance*, *resource usage*,
    and *security* of the servers that they manage.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的目的是保证他们所管理的服务器的*正常运行时间*、*性能*、*资源使用*和*安全性*。
- en: They have different roles, such as *server administrator*, *database administrator*,
    *network administrator*, *email server administrator*, *web server administrator*,
    *security administrator*, *backup administrator*, and so on.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 他们有不同的角色，比如*服务器管理员*、*数据库管理员*、*网络管理员*、*邮件服务器管理员*、*Web服务器管理员*、*安全管理员*、*备份管理员*等。
- en: Depending on the role, the tasks change, but they converge on fundamental points.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 根据角色的不同，任务会有所变化，但它们都集中于一些基本点。
- en: Let’s start with the most basic point, which is to *always use the command-line
    interface*. As mentioned in [*Chapter 1*](B19121_01_split_000.xhtml#_idTextAnchor014),
    the Terminal is the primary tool for operating system administration. Its use
    extends the capabilities of system administration and operation.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从最基本的一点开始，那就是*始终使用命令行界面*。正如在[*第一章*](B19121_01_split_000.xhtml#_idTextAnchor014)中提到的，终端是操作系统管理的主要工具。它的使用扩展了系统管理和操作的能力。
- en: From my own experience, *any productive system will fail one day*, no matter
    how many precautions we have provided or maintenance we’ve undertaken. The best
    solution is to prepare for that day with a valid backup.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 根据我个人的经验，*任何生产系统终究会失败*，无论我们采取了多少预防措施或进行过多少维护。最佳解决方案是为那一天做好准备，确保有有效的备份。
- en: 'If we do not know what is critical in our system, then we should investigate
    what is critical and, thus, plan to have a backup. How do we know that a backup
    will serve us in case of disaster? Here are some questions you should ask when
    planning:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们不知道系统中哪些是关键内容，那么我们应该调查哪些是关键内容，并因此规划备份。我们如何知道备份在灾难发生时会起作用？以下是您在规划时应该提出的一些问题：
- en: What software (or script) is used for backing up?
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用什么软件（或脚本）进行备份？
- en: How much space do we have for backups (internal and external, on disk, or on
    tape)?
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们有多少空间用于备份（包括内部和外部，磁盘或磁带）？
- en: How often should we rotate the backups?
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们应该多久轮换一次备份？
- en: Regardless of the total backup (full backup), do we need incremental backups?
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无论是完整备份（full backup），我们是否需要增量备份？
- en: Once we have a clear idea of how we make the backup, we must take the necessary
    time to verify it. Although we have a good plan for creating backups, this does
    not mean that they won’t be corrupted.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们清楚了如何进行备份，我们必须花时间来验证它。尽管我们有一个良好的备份计划，但这并不意味着备份不会遭到破坏。
- en: Backing up, and how often we do it, is *the most basic and generic task* in
    all types of system administration.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 备份以及我们备份的频率是所有类型的系统管理中*最基本和最通用的任务*。
- en: The majority of backup solutions allow us to handle this task via the command
    line. Thanks to this facility, the task could become *automated*, like many others.
    Automating tasks streamlines SysAdmins’ work.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数备份解决方案允许我们通过命令行来处理这个任务。得益于这一功能，任务可以像许多其他任务一样*自动化*。自动化任务使系统管理员的工作更加高效。
- en: The statement *Lazy SysAdmin is the best SysAdmin* is well known. This means
    that if you are proactive enough to automate all processes, you will have a lot
    of *free time* and be considered lazy. The best SysAdmin never seems to be very
    busy and prefers relaxing and letting the system do the work for them. *Work smarter,*
    *not harder*.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 语句*懒惰的系统管理员是最好的系统管理员*广为人知。这意味着如果你足够积极地去自动化所有的流程，你将拥有大量的*自由时间*，并且被认为是懒惰的。最好的系统管理员看起来似乎总是不太忙，喜欢放松并让系统为他们工作。*更聪明地工作，*
    *而不是更努力地工作*。
- en: But the free time we can get from *automating processes* should be used productively
    – maybe by studying some new language or emerging technologies we haven’t mastered
    (Perl, Python, Kubernetes, and so on) or optimizing some script to turn it into
    an *orchestration*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 但是我们从*自动化流程*中获得的自由时间应该被有效利用——也许可以通过学习一些我们还未掌握的新语言或新兴技术（如 Perl、Python、Kubernetes
    等），或者优化某些脚本，将它们转变为*编排*。
- en: 'The following figure shows the evolution of these principles:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了这些原则的演变：
- en: '![Figure 10.1 – Fundamental principles](img/B19121_10_1.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.1 – 基本原则](img/B19121_10_1.jpg)'
- en: Figure 10.1 – Fundamental principles
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1 – 基本原则
- en: Following these basic principles helped me improve many systems administration
    skills. Although they do not cover all aspects of systems administration per se,
    they create good habits that could develop many skills needed for this job.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循这些基本原则帮助我提升了许多系统管理技能。尽管它们并没有涵盖系统管理的所有方面，但它们创造了良好的习惯，能够培养许多这项工作所需的技能。
- en: 'These principles constitute my *fundamental laws of effective management* –
    that is, my three laws of the SysAdmin:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这些原则构成了我的*有效管理的基本法则*——即我的三条系统管理员法则：
- en: '**Back up**: A SysAdmin must back up the entire system and always verify the
    backup'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**备份**：系统管理员必须备份整个系统，并始终验证备份。'
- en: '**Automate**: A SysAdmin should automate as much as possible, except if it
    conflicts with the first law'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自动化**：系统管理员应尽可能自动化所有工作，除非这与第一条法则相冲突。'
- en: '**Study**: A SysAdmin must have free time to study, so long this free time
    does not conflict with the first or second law'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学习**：系统管理员必须有自由时间来学习，只要这段自由时间不与第一条或第二条法则冲突。'
- en: Before we dive deep into each of the laws of system administration, let’s take
    a quick look at a couple of indispensable tools for implementing them.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨系统管理的每一条法则之前，先快速看一下实施这些法则所必需的几个工具。
- en: First, we’ll look at programming and version management.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将探讨编程和版本管理。
- en: A little bit of Git and programming
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一点点 Git 和编程
- en: Typical system administration tasks involve command-line tools. Tasks of greater
    complexity often need to chain several commands and share the results with each
    other. Linux commands can be combined to solve repetitive and difficult tasks
    using the Bash shell environment and basic programming functions.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的系统管理任务涉及命令行工具。更复杂的任务通常需要将多个命令串联起来，并相互共享结果。Linux 命令可以组合使用，通过 Bash shell 环境和基本编程功能来解决重复性和复杂的任务。
- en: As a command interpreter and a programming language in its own right, the Bash
    shell environment allows you to run routines and use expressions, besides running
    other programming languages.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 作为命令解释器和一种独立的编程语言，Bash shell 环境不仅可以运行例程和使用表达式，还可以运行其他编程语言。
- en: These routines simplify the lists of commands, which can be included in a file
    called a *Bash script*.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 这些例程简化了命令列表，这些命令可以包含在一个名为*Bash 脚本*的文件中。
- en: Next, we’ll learn how to create Bash scripts.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习如何创建 Bash 脚本。
- en: Bash scripting
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Bash 脚本
- en: '*Bash scripting* consists of programming using commands as the program’s instructions.
    This strategy automates repetitive tasks, reducing them to a single line through
    expressions such as logic gates, conditions, loops, and so on. Thus, it facilitates
    the consolidation of several long commands into a *single piece of code* *to run*.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '*Bash 脚本编写* 是使用命令作为程序指令的编程方式。此策略通过使用逻辑门、条件、循环等表达式，将重复性任务自动化，简化为一行代码。因此，它便于将多个长命令合并成一段*可执行代码*。'
- en: It provides a structured, formatted, and modular sequence of activities, as
    well as commands with dynamic values through the use of command-line arguments.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 它提供了一个结构化、格式化和模块化的活动序列，并通过命令行参数使用动态值的命令。
- en: In its simplest form, a Bash script consists of a runnable file containing a
    list of commands, and with programming logic to control decision-making in the
    task. Skill in shell scripting is essential for administering systems in any operating
    environment.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在最简单的形式下，Bash 脚本由一个可执行文件组成，该文件包含一系列命令，并通过编程逻辑控制任务中的决策。掌握 Shell 脚本编写技巧对于在任何操作环境中管理系统至关重要。
- en: 'There is a lot of literature and many references on how to write a Bash script
    in the best way. However, by following the principle of simplicity mentioned at
    the beginning of this chapter, it could summarized as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 关于如何编写 Bash 脚本的最佳方式，有大量的文献和参考资料。然而，按照本章开始时提到的简洁原则，可以总结如下：
- en: '[PRE0]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let’s take a closer look:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细看看：
- en: '[**1**] **she-bang** or **sh-bang**: The first line of a script starts with
    the **#!** notation. This is a *two-byte magic number* that indicates an interpretative
    script. The syntax that follows is the name of the command interpreter needed
    to run the lines of this script.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**1**] **she-bang** 或 **sh-bang**：脚本的第一行以 **#!** 符号开头。这是一个*两字节魔术数字*，表示解释性脚本。接下来的语法是运行此脚本所需的命令解释器的名称。'
- en: Note
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To understand how magic numbers indicate file types in Linux, refer to the **file(1)**
    and **magic(5)** man pages.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解魔术数字如何指示 Linux 中的文件类型，请参考**file(1)**和**magic(5)**的手册页。
- en: '[**2**] **IDENTIFICATION**: The identification section of the script is essential
    and indispensable. This is the documentation of the script and includes the description
    of the routines run, as well as the version and even the author’s details and
    license of use.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**2**] **IDENTIFICATION**：脚本的标识部分至关重要且不可或缺。它是脚本的文档，包含了运行的常规操作的描述、版本信息，甚至是作者的详细信息和使用许可。'
- en: '[**3**] **VARIABLES**: This section declares the variables that run the script
    during its operation. The variables store information in the system’s memory.
    The script uses local variables. These variables store information for short periods.
    Local variables exist and are valid only for the shell or session in which the
    script runs.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**3**] **VARIABLES**：该部分声明了在脚本执行过程中使用的变量。变量存储系统内存中的信息。脚本使用局部变量，这些变量在短时间内存储信息。局部变量仅在脚本运行的
    Shell 或会话中存在和有效。'
- en: '[**4**] **COMMANDS**: This section lists the routines and commands to run.
    It also includes functions used to specify *run* commands in specific situations.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**4**] **COMMANDS**：该部分列出了要执行的常规操作和命令。它还包括用于在特定情况下指定*执行*命令的函数。'
- en: 'Let’s see an example of a Bash script. Create a script that covers the following
    routines:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个 Bash 脚本的例子。创建一个包含以下常规操作的脚本：
- en: Name the file **mytasks.sh**.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件命名为**mytasks.sh**。
- en: Create a *working directory* named **class**.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为**class**的*工作目录*。
- en: 'Concatenate the following files as a **data** file in the working directory:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下文件连接为工作目录中的**data**文件：
- en: '**/****etc/passwd**'
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/****etc/passwd**'
- en: '**/****etc/group**'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/****etc/group**'
- en: '**/****etc/shadow**'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/****etc/shadow**'
- en: 'Create the following users:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下用户：
- en: '**John**'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**约翰**'
- en: '**Peter**'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**彼得**'
- en: '**Mark**'
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**马克**'
- en: Copy the **data** file to the users’ home.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**data**文件复制到用户的主目录。
- en: Generate an *activity log*.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成一个*活动日志*。
- en: 'The routines are simple: creating a *working directory* gives the administrator
    a single point of consolidation of working files. This makes backing up much easier.
    And, from system files, we create a data file, which must exist in each of the
    users’ home directories – the same users that, if they do not exist in the system,
    must create them. All routines and activities performed by the Bash script should
    be recorded in the log for documentation purposes.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这些常规操作很简单：创建一个*工作目录*可以让管理员集中管理工作文件，这样备份就变得更加容易。从系统文件中，我们创建了一个数据文件，这个文件必须存在于每个用户的主目录中——这些用户如果在系统中不存在，就必须先创建它们。所有
    Bash 脚本执行的常规操作和活动都应记录在日志文件中，以备文档记录。
- en: The Bash script involves creating users, so the user running the script must
    have the *appropriate privileges* to do so. One of the best options is to use
    the `sudo` command. Then, you can grant the *non-root user* the privilege to create
    users and assign the permissions needed to the files involved in the activities.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Bash 脚本涉及创建用户，因此运行脚本的用户必须具备*适当的权限*。一个最好的选择是使用`sudo`命令。这样，你可以授予*非 root 用户*创建用户的权限，并为涉及的文件分配所需的权限。
- en: 'To make this example a little simpler, we’ll use the `root` user. To switch
    to the `root` user, use the `sudo` command:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化这个示例，我们将使用`root`用户。切换到`root`用户，请使用`sudo`命令：
- en: '[PRE1]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To create the Bash script, follow these steps:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 Bash 脚本的步骤如下：
- en: 'Create and change to the **class** working directory:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建并切换到**class**工作目录：
- en: '[PRE2]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Use your preferred text editor to create the **mytasks.sh** script file. In
    this example, we will use the **vim** editor:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你喜欢的文本编辑器来创建**mytasks.sh**脚本文件。在本例中，我们将使用**vim**编辑器：
- en: '[PRE3]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As a **she-bang**, add the **#!/****bin/bash** line:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为**she-bang**，添加**#!/****bin/bash**这一行：
- en: '![Figure 10.2 – Creating the mytasks.sh script](img/B19121_10_2.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.2 – 创建 mytasks.sh 脚本](img/B19121_10_2.jpg)'
- en: Figure 10.2 – Creating the mytasks.sh script
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.2 – 创建 mytasks.sh 脚本
- en: 'Fill in the **IDENTIFICATION** section with descriptive information about the
    script routine, including the version and the author of the script:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**IDENTIFICATION**部分，描述脚本常规操作的信息，包括脚本的版本和作者：
- en: '![Figure 10.3 – Script identification section](img/B19121_10_3.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.3 – 脚本标识部分](img/B19121_10_3.jpg)'
- en: Figure 10.3 – Script identification section
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.3 – 脚本标识部分
- en: 'In the **VARIABLES** section, we need to declare the static information, which
    won’t change:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**VARIABLES**部分，我们需要声明静态信息，这些信息不会改变：
- en: 'The path and name of the **class** working directory:'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**class** 工作目录的路径和名称：'
- en: '[PRE4]'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The path and name of **DATA_FILE**:'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**DATA_FILE**的路径和名称：'
- en: '[PRE5]'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the command section, test the use of variables and how tasks are logged
    and run by creating the **data** file:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令部分，测试变量的使用，以及如何通过创建**数据**文件来记录和执行任务：
- en: 'Start recording a header with symbols to separate the activities in **log**:'
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始记录一个包含符号的头部，以便在**日志**中分隔活动：
- en: '[PRE6]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To learn more about kernel log levels, refer to the **syslog(2)** man page.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 若要了解更多内核日志级别的相关信息，请参阅**syslog(2)**手册页。
- en: 'Record the first activity – that is, creating the data file:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记录第一个活动——即创建数据文件：
- en: '[PRE7]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This same first activity can be seen in the following screenshot:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图可以看到同样的第一个活动：
- en: '![Figure 10.4 – The first version of mytasks.sh](img/B19121_10_4.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.4 – mytasks.sh 的第一个版本](img/B19121_10_4.jpg)'
- en: Figure 10.4 – The first version of mytasks.sh
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – mytasks.sh 的第一个版本
- en: 'Now, let’s test this first version of the Bash script:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们测试一下这个 Bash 脚本的第一个版本：
- en: 'Set *run rights* to the **mytasks.sh** script:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置*运行权限*到**mytasks.sh**脚本：
- en: '[PRE8]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Figure 10.5 – Setting run rights to mytasks.sh](img/B19121_10_5.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.5 – 设置 mytasks.sh 的运行权限](img/B19121_10_5.jpg)'
- en: Figure 10.5 – Setting run rights to mytasks.sh
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5 – 设置 mytasks.sh 的运行权限
- en: 'Run the **mytasks.sh** script:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行**mytasks.sh**脚本：
- en: '[PRE9]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Verify the creation of the **data** file:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证**数据**文件的创建：
- en: '![Figure 10.6 – Verifying the data file](img/B19121_10_6.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.6 – 验证数据文件](img/B19121_10_6.jpg)'
- en: Figure 10.6 – Verifying the data file
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.6 – 验证数据文件
- en: 'Verify that activities are recorded in the **log** file:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证活动是否记录在**日志**文件中：
- en: '![Figure 10.7 – Verifying the log file](img/B19121_10_7.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.7 – 验证日志文件](img/B19121_10_7.jpg)'
- en: Figure 10.7 – Verifying the log file
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7 – 验证日志文件
- en: As we can see, the `data` file was created and the activities were recorded
    in the `log` file.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，`data`文件已创建，并且活动已记录在`log`文件中。
- en: 'The next step is to create the users. However, note that every time the Bash
    script runs, the `data` file must be created. Before continuing, now is a good
    time to add a validation:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是创建用户。但是，请注意，每次运行 Bash 脚本时，都必须创建`data`文件。在继续之前，现在是添加验证的好时机：
- en: If the **data** file exists, continue with the following instruction.
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果**data**文件存在，则继续执行以下指令。
- en: If the **data** file is not present, then you can create it.
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果**data**文件不存在，则可以创建它。
- en: 'For validation, use an `COMMANDS` section, add the following `if-else` statement:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了验证，使用`COMMANDS`部分，添加以下`if-else`语句：
- en: '[PRE10]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: for i in passwd group shadow
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: for i in passwd group shadow
- en: do
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: do
- en: cat /etc/$i >> $DATA_FILE
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cat /etc/$i >> $DATA_FILE
- en: 'for loop in Bash is a statement that allows code to run repeatedly.The `COMMANDS`
    section looks as follows:'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Bash 中的**for**循环是一条允许代码反复运行的语句。`COMMANDS`部分如下所示：
- en: '[PRE11]'
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Figure 10.8 – The COMMANDS section of mytasks.sh](img/B19121_10_8.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.8 – mytasks.sh 的 COMMANDS 部分](img/B19121_10_8.jpg)'
- en: Figure 10.8 – The COMMANDS section of mytasks.sh
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8 – mytasks.sh 的 COMMANDS 部分
- en: Save the changes and test them.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 保存更改并进行测试。
- en: 'Verify the run in the **log** file record:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证**log**文件记录中的运行：
- en: '![Figure 10.9 – Verifying the run on the log file](img/B19121_10_9.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.9 – 验证日志文件的运行](img/B19121_10_9.jpg)'
- en: Figure 10.9 – Verifying the run on the log file
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9 – 验证日志文件的运行
- en: 'Delete the **data** file and rerun the **mytasks.sh** script to confirm the
    creation of the **data** file:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除**data**文件并重新运行**mytasks.sh**脚本，以确认创建了**data**文件：
- en: '[PRE12]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Figure 10.10 – Validating the creation of the data file](img/B19121_10_10.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.10 – 验证数据文件的创建](img/B19121_10_10.jpg)'
- en: Figure 10.10 – Validating the creation of the data file
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.10 – 验证数据文件的创建
- en: 'Since this change worked, the version of the Bash script could change:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 由于此更改有效，Bash 脚本的版本可能会更改：
- en: '[PRE13]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Figure 10.11 – Modifying the version of mytasks.sh](img/B19121_10_11.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.11 – 修改 mytasks.sh 版本](img/B19121_10_11.jpg)'
- en: Figure 10.11 – Modifying the version of mytasks.sh
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.11 – 修改 mytasks.sh 版本
- en: Let’s continue by adding the routine activities.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续添加例程活动。
- en: 'The routine includes creating users and copying the `data` file to their home
    directories. Here, a combination of statements and loops is used so that the script
    can be reused every time extra users are added to it:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 该例程包括创建用户并将`data`文件复制到他们的主目录。这里使用了语句和循环的组合，以便每次添加新用户时，脚本都能被重用：
- en: 'Begin by recording the activity in the **log** file:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从记录活动开始，记录到**log**文件中：
- en: '[PRE14]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Use a **for** loop to confirm the users and the **data** file in their home
    directories. Instead of adding the usernames to the script, instruct the loop
    to take the reading of a **users** file as input. So, add the **users** file to
    the **VARIABLES** section:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**for**循环确认用户和他们主目录中的**data**文件。不要将用户名添加到脚本中，而是指示循环读取**users**文件作为输入。因此，将**users**文件添加到**VARIABLES**部分：
- en: '[PRE15]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Create the **users** file with the requested usernames:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建包含所需用户名的**users**文件：
- en: '![Figure 10.12 – The users file](img/B19121_10_12.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.12 – 用户文件](img/B19121_10_12.jpg)'
- en: Figure 10.12 – The users file
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.12 – 用户文件
- en: 'In the `data` file to the user’s home directory. Alternatively, you can copy
    the `data` file to its home directory, in case the user exists but the `data`
    file doesn’t. This statement takes the form of a *nested* *if statement*:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`data`文件复制到用户的主目录中。或者，您可以将`data`文件复制到其主目录，以防用户存在但`data`文件不存在。此语句采用*嵌套* *if
    语句*的形式：
- en: '![Figure 10.13 – A nested if statement](img/B19121_10_13.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.13 – 嵌套 if 语句](img/B19121_10_13.jpg)'
- en: Figure 10.13 – A nested if statement
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.13 – 嵌套 if 语句
- en: 'Run the **mytasks.sh** script and confirm that the users were created and that
    the **data** file was copied to their home directories:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行**mytasks.sh**脚本并确认用户已创建，且**data**文件已复制到他们的主目录：
- en: '![Figure 10.14 – Testing user creation and data file copying](img/B19121_10_14.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.14 – 测试用户创建和数据文件复制](img/B19121_10_14.jpg)'
- en: Figure 10.14 – Testing user creation and data file copying
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.14 – 测试用户创建和数据文件复制
- en: 'Rerun the test for user creation and data file copy to confirm the condition:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新运行测试，确认用户创建和数据文件复制的条件：
- en: '![Figure 10.15 – Creation and copy condition confirmed](img/B19121_10_15.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.15 – 创建和复制条件确认](img/B19121_10_15.jpg)'
- en: Figure 10.15 – Creation and copy condition confirmed
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.15 – 创建和复制条件确认
- en: 'Add the **lucas** user to the **user** file and run the **mytasks.sh** script
    to confirm the creation of the user and that the **data** file was copied:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 **lucas** 用户添加到 **user** 文件，并运行 **mytasks.sh** 脚本以确认用户已创建并且 **data** 文件已复制：
- en: '![Figure 10.16 – Adding the lucas user](img/B19121_10_16.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.16 – 添加 lucas 用户](img/B19121_10_16.jpg)'
- en: Figure 10.16 – Adding the lucas user
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.16 – 添加 lucas 用户
- en: 'Run the script and review the **log** file:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本并查看 **log** 文件：
- en: '![Figure 10.17 – Reviewing user creation and copying the data file](img/B19121_10_17.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.17 – 审核用户创建并复制数据文件](img/B19121_10_17.jpg)'
- en: Figure 10.17 – Reviewing user creation and copying the data file
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.17 – 审核用户创建并复制数据文件
- en: 'The nested **if** statement works and results in the version of the script
    being changed. Since this is a working version that meets the needs of the routine,
    this makes it the first version of the script:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 嵌套的 **if** 语句起作用，并导致脚本的版本发生变化。由于这是满足常规需求的工作版本，因此它成为了脚本的第一个版本：
- en: '[PRE16]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You can find the **mytasks.sh** script in this book’s GitHub repository at [https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter10/](https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter10/).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在本书的 GitHub 仓库中找到 **mytasks.sh** 脚本，网址是 [https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter10/](https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter10/)。
- en: 'This small script exemplifies how to simplify routine day-to-day tasks. If
    you have any doubts about whether a routine could be a Bash script, remember one
    of the most well-known statements among SysAdmins:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 这个小脚本展示了如何简化日常任务。如果你对某个常规操作是否可以用 Bash 脚本表示有所疑问，请记住系统管理员中最著名的语句之一：
- en: “*If you typed it twice, you should have scripted* *it once.*”
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: “*如果你输入了两次，你应该只写一次脚本*。”
- en: The problems come when you’re modifying the scripts and managing their versions.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 当你修改脚本并管理其版本时，问题就会出现。
- en: A tool that could help us when we need to manage different versions of scripts
    or configuration files is Git.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们需要管理不同版本的脚本或配置文件时，一个可以帮助我们的工具是 Git。
- en: Let’s learn a little bit about this tool.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来了解一下这个工具。
- en: Git
  id: totrans-195
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Git
- en: '**Git** is a form of control version software designed by *Linus Torvalds*
    and released in 2007\. It maintains versions of applications, prioritizes *efficiency*,
    *reliability*, and *compatibility*, and provides a record of changes to the files.
    It also coordinates the work that several people do on shared files in a code
    repository.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '**Git** 是由 *Linus Torvalds* 设计并于 2007 年发布的一种版本控制软件。它维护应用程序的版本，优先考虑 *效率*、*可靠性*
    和 *兼容性*，并提供文件变更记录。它还协调多个人在共享代码库中的文件上所做的工作。'
- en: Git has supported the growth of open source software in recent years, making
    collaboration between programmers around the world easier.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: Git 在近年来支持了开源软件的增长，使全球程序员之间的协作变得更加容易。
- en: Version control allows you to record changes that have been made to a file or
    set of files over time so that specific versions can be retrieved later.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 版本控制允许你记录在一段时间内对文件或文件集所做的更改，以便以后可以检索到特定版本。
- en: Git is a *distributed version control system*. Besides the central repository,
    the clients replicate the entire repository, including its complete history. Thus,
    if a server fails, any of the repository clients could get copied back to the
    server to restore it. Each clone is a complete backup of all data.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: Git 是一个 *分布式版本控制系统*。除了中央仓库外，客户端还会复制整个仓库，包括其完整历史。因此，如果服务器发生故障，任何一个仓库客户端都可以将数据复制回服务器以恢复它。每个克隆都是所有数据的完整备份。
- en: '**GitLab** and **GitHub** provide the most important *Git-based* web services.
    Each of them allows us to share repositories of our projects, both *private* *and
    public*.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**GitLab** 和 **GitHub** 提供了最重要的 *基于 Git* 的 web 服务。它们都允许我们共享项目的代码库，无论是 *私有的*
    还是 *公开的*。'
- en: 'To access GitHub, use your preferred browser and navigate to [https://github.com/login](https://github.com/login).
    Log in or create your account by following the instructions on the page:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问 GitHub，请使用你喜欢的浏览器并导航到 [https://github.com/login](https://github.com/login)。登录或按照页面上的说明创建账户：
- en: '![Figure 10.18 – GitHub login page](img/B19121_10_18.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.18 – GitHub 登录页面](img/B19121_10_18.jpg)'
- en: Figure 10.18 – GitHub login page
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.18 – GitHub 登录页面
- en: 'To access GitLab, use your preferred browser and navigate to [https://gitlab.com/users/login](https://gitlab.com/users/login).
    Log in or register to create your account by following the instructions on the
    page. Also, consider signing in using other web services such as **Google**, **GitHub**,
    **Twitter**, **Bitbucket**, or **Salesforce** for authentication. Each service
    will ask you if you want GitLab to access your account:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问GitLab，请使用您喜欢的浏览器并导航到[https://gitlab.com/users/login](https://gitlab.com/users/login)。按照页面上的说明登录或注册以创建帐户。此外，您还可以考虑使用其他Web服务进行身份验证，例如**Google**、**GitHub**、**Twitter**、**Bitbucket**或**Salesforce**。每个服务都会询问您是否允许GitLab访问您的帐户：
- en: '![Figure 10.19 – GitLab – The Sign in page](img/B19121_10_19.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.19 – GitLab – 登录页面](img/B19121_10_19.jpg)'
- en: Figure 10.19 – GitLab – The Sign in page
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.19 – GitLab – 登录页面
- en: Now, let’s learn how to work with Git. We use a local repository, but it could
    live on a dedicated server or a web service platform.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们学习如何使用Git。我们使用本地仓库，但它也可以托管在专用服务器或Web服务平台上。
- en: Note
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The examples that follow illustrate how to use Git, so the public repository
    on the web could use either of the two free services. *Choose wisely*.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了如何使用Git，因此Web上的公共仓库可以使用这两种免费的服务之一。*明智选择*。
- en: Let’s start with the basics.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从基础开始。
- en: The basics
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基础
- en: Git handles files as a set of snapshots of a mini filesystem. Most operations
    in Git only need local files and resources to work. Everything in Git gets verified
    before storage. Therefore, it is identified by a *checksum* (as an identification
    number). Git generally adds information.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: Git将文件视为迷你文件系统的一组快照。Git中的大多数操作只需要本地文件和资源即可工作。Git中的所有内容在存储之前都要经过验证。因此，它通过*校验和*（作为识别号）来标识。Git通常会添加信息。
- en: 'Git has three main states that files come in: *modified*, *staged*, and *committed*:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: Git有三种主要状态：*modified（已修改）*、*staged（已暂存）*和*committed（已提交）*：
- en: '**Modified** means that the file has changed but the changes have not been
    committed to the database yet'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Modified（已修改）**意味着文件已更改，但更改尚未提交到数据库。'
- en: '**Staged** means that a modified file, in its current version, gets marked
    to go to the next commit instance'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Staged（已暂存）**意味着已修改的文件在当前版本中被标记为准备进入下一个提交实例。'
- en: '**Committed** means that the changes are stored in the local database'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Committed（已提交）**意味着更改已存储在本地数据库中。'
- en: 'The following figure illustrates the state changes of a file within Git:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了Git中一个文件的状态变化：
- en: "![Figure 10.20 – File state change flow in \uFEFFGit](img/B19121_10_20.jpg)"
  id: totrans-218
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.20 – Git中文件状态更改流程](img/B19121_10_20.jpg)'
- en: Figure 10.20 – File state change flow in Git
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.20 – Git中文件状态更改流程
- en: 'In [*Chapter 2*](B19121_02.xhtml#_idTextAnchor087), we installed Git on our
    workstation. Let’s set up our session and create a sample repository. Follow these
    steps:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第2章*](B19121_02.xhtml#_idTextAnchor087)中，我们在工作站上安装了Git。现在让我们设置会话并创建一个示例仓库。请按照以下步骤操作：
- en: 'As a *non-root user*, set up a username and associate it with an email address.
    This data gets saved with the changes that are made. Use the **git** **config**
    command:'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为*非根用户*，设置用户名并将其与电子邮件地址关联。此数据将在进行更改时保存。使用**git** **config**命令：
- en: '[PRE17]'
  id: totrans-222
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Create a directory and switch to it:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个目录并切换到该目录：
- en: '[PRE18]'
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Initialize the directory as a **git** repository:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 初始化目录为**git**仓库：
- en: '[PRE19]'
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The `git-basics` directory is now a `git` repo, so it might contain one of
    the states mentioned previously:'
  id: totrans-227
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`git-basics`目录现在是一个`git`仓库，因此它可能包含之前提到的某个状态：'
- en: '![Figure 10.21 – The git-basics directory](img/B19121_10_21.jpg)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.21 – git-basics目录](img/B19121_10_21.jpg)'
- en: Figure 10.21 – The git-basics directory
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.21 – git-basics目录
- en: To be able to see the state of the repository, add a custom configuration in
    the user’s profile.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看仓库的状态，请在用户的配置文件中添加自定义配置。
- en: 'Add the following lines to the **.bashrc** file of the user:'
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下行添加到用户的**.bashrc**文件中：
- en: '[PRE20]'
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![Figure 10.22 – Adding git-prompt to the .bashrc file](img/B19121_10_22.jpg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.22 – 将git-prompt添加到.bashrc文件](img/B19121_10_22.jpg)'
- en: Figure 10.22 – Adding git-prompt to the .bashrc file
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.22 – 将git-prompt添加到.bashrc文件
- en: 'After saving this change to the **.bashrc** file, return to the **git-basics**
    directory:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存此更改到**.bashrc**文件后，返回**git-basics**目录：
- en: '![Figure 10.23 – git-basics](img/B19121_10_23.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.23 – git-basics](img/B19121_10_23.jpg)'
- en: Figure 10.23 – git-basics
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.23 – git-basics
- en: Note that the prompt now shows the initial branch of the repo, which is named
    `master`.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，提示符现在显示的是仓库的初始分支，名为`master`。
- en: '`master` is the initial name of the branch by default. Before we start adding
    files, let’s rename the branch.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`master`是默认的初始分支名称。在开始添加文件之前，让我们先重命名分支。'
- en: 'Use the **git branch** command to change the branch’s name from **master**
    to **main**:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**git branch**命令将分支名称从**master**更改为**main**：
- en: '[PRE21]'
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![Figure 10.24 – Renaming the initial branch](img/B19121_10_24.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.24 – 重命名初始分支](img/B19121_10_24.jpg)'
- en: Figure 10.24 – Renaming the initial branch
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.24 – 重命名初始分支
- en: Now, it’s time to add files to the repository.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候将文件添加到仓库中。
- en: 'Create a Python script called **my-script.py** with the following content:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为**my-script.py**的 Python 脚本，内容如下：
- en: '[PRE22]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Upon running this script, you will asked for your name and you’ll see a welcome
    message.
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 运行此脚本后，你将被要求输入姓名，并看到欢迎信息。
- en: 'After saving the file, review the status of the repository by running the **git**
    **status** command:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件后，通过运行**git status**命令审查仓库的状态：
- en: '[PRE23]'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Figure 10.25 – Reviewing the status of the repository](img/B19121_10_25.jpg)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.25 – 审查仓库状态](img/B19121_10_25.jpg)'
- en: Figure 10.25 – Reviewing the status of the repository
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.25 – 审查仓库状态
- en: The output of the command shows that the repository has changed. Note that some
    files are not *tracked* until their status changes.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 命令的输出显示仓库已经发生了变化。请注意，某些文件在状态发生变化之前是*未跟踪*的。
- en: At the *prompt*, you should now see the `%` symbol, which indicates that a file
    has been added to the repository.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 在*提示符*中，你现在应该能看到`%`符号，表示文件已被添加到仓库中。
- en: 'Let’s look at some other symbols that were added to the prompt concerning the
    repository’s status:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看提示符中关于仓库状态的其他符号：
- en: Unstaged (*****)
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 未暂存（*****）
- en: Staged (**+**)
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已暂存（**+**）
- en: Note
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To learn more about **git-prompt**, refer to the documentation of the **git-prompt.sh**
    script at **/usr/share/git-core/contrib/completion/git-prompt.sh**.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于**git-prompt**的信息，请参考**git-prompt.sh**脚本的文档，路径为**/usr/share/git-core/contrib/completion/git-prompt.sh**。
- en: Now, let’s change the repository’s status.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们更改仓库的状态。
- en: 'Use the **git add** command to add the file to the repository:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**git add**命令将文件添加到仓库：
- en: '[PRE24]'
  id: totrans-261
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![Figure 10.26 – Changing the repository’s status](img/B19121_10_26.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.26 – 更改仓库状态](img/B19121_10_26.jpg)'
- en: Figure 10.26 – Changing the repository’s status
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.26 – 更改仓库状态
- en: Now, the repository’s status appears as `staged`, and the prompt displays the
    respective symbol (`+`).
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，仓库的状态显示为`已暂存`，提示符显示相应的符号（`+`）。
- en: Before we store the changes in the database, we need to test the file and review
    that no other changes need to be made.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们将更改存储到数据库之前，需要测试文件并审查是否不需要进行其他更改。
- en: 'Run the **my-script.py** script and verify that it works fine:'
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行**my-script.py**脚本并验证它是否正常工作：
- en: '[PRE25]'
  id: totrans-267
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Figure 10.27 – Testing the my-script.py script](img/B19121_10_27.jpg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.27 – 测试 my-script.py 脚本](img/B19121_10_27.jpg)'
- en: Figure 10.27 – Testing the my-script.py script
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.27 – 测试 my-script.py 脚本
- en: Since the script ran successfully, let’s commit to adding the file to the repository.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 由于脚本成功运行，我们来提交将文件添加到仓库中。
- en: 'Use the **git commit** command to change the status of the branch to **committed**
    so that you can apply the change that was made to the repository. This command
    supports adding a comment. This comment helps notify you about the modifications
    that are made in the repository by providing a brief description of the changes:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**git commit**命令将分支的状态更改为**已提交**，以便你可以应用对仓库所做的更改。此命令支持添加评论。该评论有助于通过简要描述更改，通知你仓库中所做的修改：
- en: '[PRE26]'
  id: totrans-272
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: $ git log
  id: totrans-273
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git log
- en: '[PRE27]'
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![Figure 10.28 – Committing and reviewing the repository’s history](img/B19121_10_28.jpg)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.28 – 提交并审查仓库历史](img/B19121_10_28.jpg)'
- en: Figure 10.28 – Committing and reviewing the repository’s history
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.28 – 提交并审查仓库历史
- en: Note
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you have doubts about how to add a good commit message, please visit the
    online resource *Conventional Commits* at [https://www.conventionalcommits.org/](https://www.conventionalcommits.org/).
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对如何添加一个好的提交信息有疑问，请访问在线资源*Conventional Commits*：[https://www.conventionalcommits.org/](https://www.conventionalcommits.org/)。
- en: With these simple steps, our script repository has *version control* and is
    managed by Git.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些简单的步骤，我们的脚本仓库拥有了*版本控制*，并由 Git 管理。
- en: Having a repository that contains the scripts that are used for daily tasks,
    aside from acting as a backup, can be turned into a collaborative resource for
    our area. If we wish to publish it on a web platform, we need to *remove sensitive
    data* from it so that we can turn it into a valuable resource for the community.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有一个包含日常任务脚本的仓库，除了充当备份之外，还可以将其转变为我们领域的协作资源。如果我们希望将其发布到网页平台，我们需要 *移除敏感数据*，以便将其转变为社区的宝贵资源。
- en: Now, let’s learn how to publish both script directories in a public repository
    on the internet.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们学习如何将两个脚本目录发布到互联网上的公共仓库中。
- en: Note
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For this example, I’m using a repository on GitHub, but it could be created
    the same way on any *Git-based web platform* of your choice.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我使用的是 GitHub 上的仓库，但可以在任何 *基于 Git 的网页平台* 上以相同方式创建。
- en: 'To create the repository on any web platform, follow these steps:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 要在任何网页平台上创建仓库，请按照以下步骤操作：
- en: 'Log into the web platform:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到网页平台：
- en: '![Figure 10.29 – Web platform dashboard](img/B19121_10_29.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.29 – 网页平台仪表板](img/B19121_10_29.jpg)'
- en: Figure 10.29 – Web platform dashboard
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.29 – 网页平台仪表板
- en: Click on the plus (**+**) button and click on **New repository**.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 点击加号（**+**）按钮，然后点击 **新建仓库**。
- en: 'The **Create a new repository** screen will appear:'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**创建新仓库** 界面将出现：'
- en: '![Figure 10.30 – The Create a new repository screen](img/B19121_10_30.jpg)'
  id: totrans-290
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.30 – 创建新仓库界面](img/B19121_10_30.jpg)'
- en: Figure 10.30 – The Create a new repository screen
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.30 – 创建新仓库界面
- en: Enter the repository’s name and a brief description of its use. Leave the repository
    set to **Public** and choose to **Add a README file**. This file provides a welcome
    message or a detailed description of the repository’s usage.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 输入仓库的名称和简要描述其用途。将仓库设置为 **公开** 并选择 **添加 README 文件**。此文件提供欢迎消息或详细说明仓库的使用。
- en: Once you’re finished, click **Create repository**.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，点击 **创建仓库**。
- en: 'The repository will be created. Click the **Code** button and copy the **HTTPS**
    address of the repository:'
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仓库将被创建。点击 **Code** 按钮并复制仓库的 **HTTPS** 地址：
- en: '![Figure 10.31 – Public repository](img/B19121_10_31.jpg)'
  id: totrans-295
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.31 – 公共仓库](img/B19121_10_31.jpg)'
- en: Figure 10.31 – Public repository
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.31 – 公共仓库
- en: Let’s copy the remote repository as local.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将远程仓库复制为本地仓库。
- en: 'Create a working directory and switch to it. Use the **git clone** command
    to download a copy of the repository:'
  id: totrans-298
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个工作目录并切换到该目录。使用 **git clone** 命令下载仓库的副本：
- en: '[PRE28]'
  id: totrans-299
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![Figure 10.32 – Cloning the repository](img/B19121_10_32.jpg)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.32 – 克隆仓库](img/B19121_10_32.jpg)'
- en: Figure 10.32 – Cloning the repository
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.32 – 克隆仓库
- en: 'Switch to the repository, verify the *main branch*, and review the files contained
    within:'
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到该仓库，验证 *主分支*，并检查其中包含的文件：
- en: '![Figure 10.33 – Verifying the repository](img/B19121_10_33.jpg)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.33 – 验证仓库](img/B19121_10_33.jpg)'
- en: Figure 10.33 – Verifying the repository
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.33 – 验证仓库
- en: 'Copy the directory of the Bash script example and the preceding example script
    into this directory:'
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Bash 脚本示例目录和前面的示例脚本复制到该目录中：
- en: '![Figure 10.34 – The daily-tasks-scripts repository](img/B19121_10_34.jpg)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.34 – daily-tasks-scripts 仓库](img/B19121_10_34.jpg)'
- en: Figure 10.34 – The daily-tasks-scripts repository
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.34 – daily-tasks-scripts 仓库
- en: 'Before adding the files with Git, note that the `class` directory, from the
    Bash script, has some ownership issues. Also, take note of the `log` file, which
    is not needed in the repository but is created when the script is run. The `users`
    file contains *sensitive information* about the users that have been created.
    Both files must remain, but their contents must be restarted (this is referred
    to as *blanking*). Fix these issues:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 Git 添加文件之前，请注意 Bash 脚本中的 `class` 目录存在一些所有权问题。同时，注意 `log` 文件，它在脚本运行时会创建，但不需要包含在仓库中。`users`
    文件包含有关已创建用户的 *敏感信息*。这两个文件必须保留，但其内容必须重置（这被称为 *清空*）。修复这些问题：
- en: '![Figure 10.35 – Fixing issues](img/B19121_10_35.jpg)'
  id: totrans-309
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.35 – 修复问题](img/B19121_10_35.jpg)'
- en: Figure 10.35 – Fixing issues
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.35 – 修复问题
- en: 'The preceding example directory, `git-basics`, is also a repository. Remove
    the hidden `.git` directory inside it so that Git doesn’t take it as a *submodule*
    of the main repository. A backup of our scripts is all we need:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的示例目录 `git-basics` 也是一个仓库。删除其中的隐藏 `.git` 目录，以防 Git 将其视为主仓库的 *子模块*。我们只需要备份我们的脚本：
- en: '![Figure 10.36 – Removing the .git directory](img/B19121_10_36.jpg)'
  id: totrans-312
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.36 – 删除 .git 目录](img/B19121_10_36.jpg)'
- en: Figure 10.36 – Removing the .git directory
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
- en: With the files ready, let’s add them to the repository.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the **git add** command to add all the files to the repository:'
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  id: totrans-316
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Commit the changes to the repository by adding the corresponding comment. Then,
    run the **git** **commit** command:'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.37 – Committing changes to the repository](img/B19121_10_37.jpg)'
  id: totrans-318
  prefs: []
  type: TYPE_IMG
- en: Figure 10.37 – Committing changes to the repository
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s synchronize the *local changes* with the *remote repository*. Set the
    *original repository* as the *upstream repository* to reference it. Use the **git
    push** command to set up the upstream repository:'
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  id: totrans-321
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![Figure 10.38 – Pushing changes to the repository](img/B19121_10_38.jpg)'
  id: totrans-322
  prefs: []
  type: TYPE_IMG
- en: Figure 10.38 – Pushing changes to the repository
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
- en: The authentication for the repository depends on the web platform in use. In
    the case of GitHub, it requests a *token*. To generate one, go to **Settings**
    | **Developer settings** | **Personal access token** | **Generate new token**
    and copy it to a safe place.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
- en: 'The modified files will appear on the web platform:'
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.39 – The repository on GitHub](img/B19121_10_39.jpg)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
- en: Figure 10.39 – The repository on GitHub
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
- en: With that, we have a collaborative repository of the scripts that will be used
    in our day-to-day tasks.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
- en: At the same time, the repository serves as a backup of our scripts.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
- en: Let’s take a walk through the alternatives that could help us make a backup.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
- en: Don’t forget to back up
  id: totrans-332
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Back up: A SysAdmin must back up the entire system, and always verify* *the
    backup.*'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: Backing up is the most basic task.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: 'Good practice begins with good habits. One of the habits that I have made over
    the years is to back up a file before editing it, either in the file path or by
    creating a backup directory:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 10.40 – Backing up before modifying](img/B19121_10_40.jpg)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
- en: Figure 10.40 – Backing up before modifying
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: On the surface, it doesn’t seem like a big task. However, if you incorporate
    this step into your tasks, then you have a simple backup of the files that you
    work with.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: Besides copying files to change, another good habit is to create a package that
    contains archives or compressed files.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see how this works.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
- en: Archiving and compression
  id: totrans-341
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First of all, note the difference between an **archive** file and a **compressed**
    file:'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
- en: An **archive** file consists of *files and directories* stored in a single file.
    The archive file remains uncompressed – it uses the same disk space as all the
    individual files and directories are combined.
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A **compressed** file also consists of files and directories stored in a single
    file. However, they are stored in such a way that they use less disk space than
    all the individual files and directories combined.
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An archive file itself is not compressed, but a compressed file could contain
    an archive file.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
- en: 'Linux provides several utilities for compressing and decompressing files. The
    following table shows the most used utilities:'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
- en: '| **Utility** | **Syntax** | **Examples** |'
  id: totrans-347
  prefs: []
  type: TYPE_TB
- en: '| `gzip` | `gzip <file>``gunzip <file>` | `$` `gzip test``$` `gunzip test.gz`
    |'
  id: totrans-348
  prefs: []
  type: TYPE_TB
  zh: '| `gzip` | `gzip <file>``gunzip <file>` | `$` `gzip test``$` `gunzip test.gz`
    |'
- en: '| `bzip2` | `bzip2 <file>``bunzip2 <file>` | `$` `bzip2 test``$` `bunzip2 test.bz2`
    |'
  id: totrans-349
  prefs: []
  type: TYPE_TB
  zh: '| `bzip2` | `bzip2 <file>``bunzip2 <file>` | `$` `bzip2 test``$` `bunzip2 test.bz2`
    |'
- en: '| `xz` | `xz <file>``xz -``d <file>` | `$` `xz test``$ xz -``d test.xz` |'
  id: totrans-350
  prefs: []
  type: TYPE_TB
  zh: '| `xz` | `xz <file>``xz -``d <file>` | `$` `xz test``$ xz -``d test.xz` |'
- en: '| `zip` | `zip .``zip-file <file>``unzip <.zip-file>` | `$ zip` `test.zip test``$`
    `unzip test.zip` |'
  id: totrans-351
  prefs: []
  type: TYPE_TB
  zh: '| `zip` | `zip .``zip-file <file>``unzip <.zip-file>` | `$ zip` `test.zip test``$`
    `unzip test.zip` |'
- en: Table 10.1 – Compress and decompress utilities
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 表 10.1 – 压缩和解压缩工具
- en: 'Let’s look at the difference between the utilities in the compression algorithms
    that are used by each:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下各压缩工具所使用的压缩算法的不同之处：
- en: The **gzip** utility compresses the size of files using **Lempel-Ziv** (**LZ77**)
    encoding. Each file gets replaced by one with the **.****gz** extension.
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**gzip**工具通过**Lempel-Ziv**（**LZ77**）编码来压缩文件大小。每个文件会被替换成一个扩展名为**.gz**的文件。'
- en: '**bzip2** compresses files using the *Burrows-Wheeler* block-sorting text compression
    algorithm and *Huffman encoding*. Each file gets replaced with another file with
    the **.****bz2** extension.'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**bzip2**使用*Burrows-Wheeler*块排序文本压缩算法和*哈夫曼编码*来压缩文件。每个文件都会被替换成另一个扩展名为**.bz2**的文件。'
- en: '**xz** uses the **Lempel-Ziv-Markov chain algorithm** (**LZMA**) for compression/decompression.'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**xz**使用**Lempel-Ziv-Markov链算法**（**LZMA**）进行压缩/解压缩。'
- en: The **.zip** format uses a *32-bit CRC algorithm*. It includes two copies of
    the metadata for each entry to provide greater protection against data loss.
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**.zip**格式使用*32位CRC算法*。它为每个条目包含两份元数据副本，以提供更好的防止数据丢失的保护。'
- en: Note
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To learn more about compression utilities, refer to the **gzip**, **bzip2**,
    **xz**, and **zip** man pages.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多压缩工具的使用，请参考**gzip**、**bzip2**、**xz**和**zip**的man手册。
- en: 'In practical use cases, compression utilities share the same goal: *to reduce
    the space usage* of the file in question. Beyond the algorithm, what needs to
    be considered is the size of space usage that the file reduces. This is due to
    portability reasons. The following illustrative example shows the differences
    practically. However, note that more compression or decompression requires more
    resources (CPU and memory).'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际使用场景中，压缩工具的共同目标是：*减少文件的空间占用*。除了算法之外，还需要考虑文件减少的空间大小。这是因为便携性原因。以下示例实际展示了它们之间的差异。不过需要注意的是，更多的压缩或解压缩操作会消耗更多的资源（CPU和内存）。
- en: Another best practice habit is to *compress* backups so that any space that’s
    used doesn’t become an issue. This can also be enhanced if we compress file archives.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个最佳实践是*压缩*备份文件，以避免所占用的空间成为问题。如果我们压缩文件归档，这一做法还能进一步提高效果。
- en: In Linux, we can use the `tar` tool to create, manage, and extract archive files.
    With this command, many files that are stored in a single archive file become
    portable. A `tar` archive is a structured sequence of metadata and file data with
    an index.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中，我们可以使用`tar`工具来创建、管理和提取归档文件。通过这个命令，许多存储在单一归档文件中的文件变得可以移植。一个`tar`归档是一个结构化的元数据和文件数据序列，并且带有索引。
- en: Archives might be compressed when they’re created using one of the supported
    compression algorithms. Besides creating archive files, the `tar` command provides
    further options, such as listing the contents of an archive without extracting
    it or extracting files from compressed and uncompressed archives.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建归档文件时，归档可能会被压缩，使用的是支持的某种压缩算法。除了创建归档文件外，`tar`命令还提供了其他选项，例如列出归档内容而不提取，或者从压缩和未压缩的归档中提取文件。
- en: 'The `tar` command’s options provide us with *three* *different styles*:'
  id: totrans-364
  prefs: []
  type: TYPE_NORMAL
  zh: '`tar`命令的选项为我们提供了*三种* *不同的风格*：'
- en: In the *traditional style*, the first argument is a group of option letters,
    and the arguments that follow supply arguments to those options that need them.
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*传统风格*中，第一个参数是一组选项字母，后面的参数为那些需要的选项提供对应的值。
- en: In the *UNIX or short option style*, each option letter comes preceded by a
    single hyphen (**-**). If an option has an argument, the argument follows it,
    either as a separate word on the command line or immediately after the option.
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*UNIX或简短选项风格*中，每个选项字母前面都会加上一个单一的连字符（**-**）。如果选项需要参数，参数紧跟在选项后面，可能是命令行中的独立词，也可能紧接在选项后面。
- en: In *GNU or long option style*, each option begins with two hyphens (**--**)
    and has a meaningful name, consisting of lowercase letters and hyphens. The long
    option could be abbreviated to its initial letters. Long option arguments are
    supplied as separate words on the command line, immediately following the option,
    or separated from the option by an equals (**=**) sign with no intervening whitespace.
    Optional arguments should always use the latter method.
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The `tar` command requires an action with at least one option. The most common
    actions and options are shown in the following table:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
- en: '| **Description** | **Traditional Style** | **Short Style** | **Long Style**
    |'
  id: totrans-369
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- |'
  id: totrans-370
  prefs: []
  type: TYPE_TB
- en: '| Creates an archive file | `c` | `-c` | `--``create` |'
  id: totrans-371
  prefs: []
  type: TYPE_TB
- en: '| Lists the content of an archive file | `t` | `-t` | `--``list` |'
  id: totrans-372
  prefs: []
  type: TYPE_TB
- en: '| Extracts an archive file | `x` | `-x` | `--``extract` |'
  id: totrans-373
  prefs: []
  type: TYPE_TB
- en: '| Shows the currently archived or extracted files | `v` | `-v` | `--``verbose`
    |'
  id: totrans-374
  prefs: []
  type: TYPE_TB
- en: '| Use this option with the name of the file to create or open | `f` | `-f`
    | `--``file` |'
  id: totrans-375
  prefs: []
  type: TYPE_TB
- en: '| Keeps the original permissions of the files by extracting them | `p` | `-p`
    | `--``preserve-permissions` |'
  id: totrans-376
  prefs: []
  type: TYPE_TB
- en: '| Uses the file suffix to determine the algorithm to use for compression |
    `a` | `-a` | `--``auto-compress` |'
  id: totrans-377
  prefs: []
  type: TYPE_TB
- en: '| Uses the `gzip` compression algorithm | `z` | `-z` | `--``gzip` |'
  id: totrans-378
  prefs: []
  type: TYPE_TB
- en: '| Uses the `bzip2` compression algorithm | `j` | `-j` | `--``bzip2` |'
  id: totrans-379
  prefs: []
  type: TYPE_TB
- en: '| Uses the `xz` compression algorithm | `J` | `-J` | `--``xz` |'
  id: totrans-380
  prefs: []
  type: TYPE_TB
- en: '| Uses an LZ-variant algorithm | `Z` | `-Z` | `--``compress` |'
  id: totrans-381
  prefs: []
  type: TYPE_TB
- en: '| Enables extended attribute support and stores file-extended attributes |
    NA | NA | `--``xattrs` |'
  id: totrans-382
  prefs: []
  type: TYPE_TB
- en: '| Enables SELinux context support and stores SELinux contexts | NA | NA | `--``selinux`
    |'
  id: totrans-383
  prefs: []
  type: TYPE_TB
- en: Table 10.2 – Common tar command actions and options
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
- en: Let’s analyze an example of how to create an archive of compressed files with
    two different compression algorithms so that we can compare the space that’s used.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
- en: As a non-root user, in our backup directory, use the `tar` command to create
    an archive file of the day-to-day script repository.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
- en: 'First, use the **gzip** compression algorithm option. Run the following **tar**
    command:'
  id: totrans-388
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  id: totrans-389
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![Figure 10.41 – Creating an archive with the tar command](img/B19121_10_41.jpg)'
  id: totrans-390
  prefs: []
  type: TYPE_IMG
- en: Figure 10.41 – Creating an archive with the tar command
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: 'Now use the **bzip2** compression algorithm and create the file archive from
    the same directory by running the following **tar** command:'
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  id: totrans-393
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '![Figure 10.42 – Using the bzip2 compression algorithm with the tar command](img/B19121_10_42.jpg)'
  id: totrans-394
  prefs: []
  type: TYPE_IMG
- en: Figure 10.42 – Using the bzip2 compression algorithm with the tar command
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
- en: 'Check the size of both file archives to compare the compression rate:'
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 10.43 – Comparing file sizes](img/B19121_10_43.jpg)'
  id: totrans-397
  prefs: []
  type: TYPE_IMG
- en: Figure 10.43 – Comparing file sizes
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
- en: 'As we can see, the repository’s directory size is `42272` bytes:'
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: $ du -sb daily-tasks-scripts.bkp.tar.gz
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
- en: 'bzip2 algorithm, is 18594 bytes:'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Let’s take a closer look at what this means:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
- en: The **gzip** compression algorithm reduced the size of the repository by 44.82%
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**gzip**压缩算法将仓库大小减少了44.82%'
- en: The **bzip2** compression algorithm reduced the size of the repository by 43.98%
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**bzip2**压缩算法将仓库大小减少了43.98%'
- en: 'The difference is minimal, and these are the most used formats for backups.
    It is up to you to decide which one to use – just remember: *don’t forget to*
    *back up!*'
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 区别很小，这些是最常用的备份格式。由你决定使用哪种格式 —— 只要记住：*不要忘记* *备份！*
- en: Note
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: To learn more about archiving files, refer to the **tar** man page.
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于归档文件的信息，请参考**tar**手册页。
- en: As mentioned in the previous section, the Git repository also helps us back
    up the information contained in it. It also provides us with a snapshot of the
    data at the time it was taken.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一节所述，Git仓库还帮助我们备份其中包含的信息。它还为我们提供了数据在获取时的快照。
- en: So, let’s learn how to manage versions with Git.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，让我们学习如何使用Git进行版本管理。
- en: Version management with Git
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Git进行版本管理
- en: 'To learn how Git handles versioning, we’ll use the example from the previous
    section. As a *non-root user*, switch to the `daily-tasks-scripts` repository
    directory and follow these steps:'
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解Git如何处理版本控制，我们将使用上一节中的示例。作为*非根用户*，切换到`daily-tasks-scripts`仓库目录并按照以下步骤操作：
- en: 'As a good habit, ensure that the local repository keeps updated and in sync
    with the remote repository before starting. Use the **git fetch** and **git pull**
    commands to do so:'
  id: totrans-414
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 作为一个好习惯，在开始之前确保本地仓库与远程仓库保持更新和同步。使用**git fetch**和**git pull**命令来完成：
- en: '[PRE35]'
  id: totrans-415
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '![Figure 10.44 – Keeping the repository updated and in sync](img/B19121_10_44.jpg)'
  id: totrans-416
  prefs: []
  type: TYPE_IMG
  zh: '![图10.44 – 保持仓库更新和同步](img/B19121_10_44.jpg)'
- en: Figure 10.44 – Keeping the repository updated and in sync
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.44 – 保持仓库更新和同步
- en: The `git fetch` command extracts all the data from a remote project that doesn’t
    already exist locally. The `git fetch` command only downloads the data to the
    local repository – it doesn’t merge it or change anything you’re currently working
    on. The changes have to be merged manually.
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '`git fetch`命令从远程项目中提取所有本地不存在的数据。`git fetch`命令只将数据下载到本地仓库 —— 它不会合并数据或更改你当前正在处理的内容。必须手动合并这些更改。'
- en: The `git pull` command incorporates changes from a remote repository into the
    current branch of the local repository.
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '`git pull`命令将远程仓库的更改合并到本地仓库的当前分支中。'
- en: As another good practice, Git gives you the option to branch the repository.
    Branching means deviating from the main line of development and continuing to
    work without altering that main line.
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 作为另一个好习惯，Git为你提供了分支仓库的选项。分支意味着偏离开发的主线并继续工作，而不改变主线。
- en: To change the repository without altering its original content, let’s create
    a branch.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 要更改仓库而不改变其原始内容，让我们创建一个分支。
- en: 'Create the enhancement branch of the **daily-tasks-scripts** repository. Use
    the **git branch** command and the appropriate branch name:'
  id: totrans-422
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建**daily-tasks-scripts**仓库的增强分支。使用**git branch**命令和适当的分支名称：
- en: '[PRE36]'
  id: totrans-423
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: Note
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Include the author of the changes in the *branch name* as good practice.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 将更改的作者包含在*分支名称*中是一个良好的实践。
- en: The `git branch` command only creates the branch. To switch to it, use the `git
    switch` command and the branch’s name.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: '`git branch`命令仅创建分支。要切换到该分支，请使用`git switch`命令并输入分支名称。'
- en: 'Both commands can be combined to create the branch and switch to it. To do
    this, use the `git switch` command with the `-``c` option:'
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个命令可以组合使用来创建分支并切换到该分支。为此，使用`git switch`命令并加上`-c`选项：
- en: '[PRE37]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: $ git diff
  id: totrans-429
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git diff
- en: '[PRE38]'
  id: totrans-430
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: $ git add README.md
  id: totrans-431
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git add README.md
- en: $ git commit –m "Updating README.md file"
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git commit –m "更新README.md文件"
- en: '[PRE39]'
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: $ git push –u origin acallejas/repo-enhancement
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git push –u origin acallejas/repo-enhancement
- en: '[PRE40]'
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: $ git branch
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git branch
- en: $ git branch -r
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git branch -r
- en: $ git branch -a
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ git branch -a
- en: '[PRE41]'
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: $ /etc/ansible/ansible.cfg file, but as a best practice, create a custom file
    to get better control of automated tasks.
  id: totrans-440
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ /etc/ansible/ansible.cfg文件，但作为最佳实践，请创建一个自定义文件以更好地控制自动化任务。
- en: '[PRE42]'
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: $ mkdir ansible; cd ansible
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ mkdir ansible; cd ansible
- en: '[PRE43]'
  id: totrans-443
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[defaults]'
  id: totrans-444
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[defaults]'
- en: inventory = inventory
  id: totrans-445
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: inventory = inventory
- en: '[PRE44]'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: $ ssh-keygen -t rsa -b 2048
  id: totrans-447
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ssh-keygen -t rsa -b 2048
- en: '[PRE45]'
  id: totrans-448
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: $ ssh-copy-id -i id_rsa.pub localhost
  id: totrans-449
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ssh-copy-id -i id_rsa.pub localhost
- en: '[PRE46]'
  id: totrans-450
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: $ ssh -i id_rsa localhost
  id: totrans-451
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ssh -i id_rsa localhost
- en: '[PRE47]'
  id: totrans-452
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[workstation]'
  id: totrans-453
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[workstation]'
- en: localhost
  id: totrans-454
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: localhost
- en: '[workstation:vars]'
  id: totrans-455
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[workstation:vars]'
- en: ansible_ssh_private_key_file=/home/acallejas/wdir/ansible/id_rsa
  id: totrans-456
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ansible_ssh_private_key_file=/home/acallejas/wdir/ansible/id_rsa
- en: '[PRE48]'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: $ ansible all -m ping
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ansible all -m ping
- en: '[PRE49]'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: $ ansible workstation -a "hostname"
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible workstation -a "hostname"
- en: '[PRE50]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: verify_webserver.yaml
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: verify_webserver.yaml
- en: '[PRE51]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: $ ansible-playbook --syntax-check verify_webserver.yaml
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook --syntax-check verify_webserver.yaml
- en: '[PRE52]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: $ ansible-playbook --syntax-check verify_webserver.yaml
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook --syntax-check verify_webserver.yaml
- en: '[PRE53]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: $ ansible-playbook --check verify_webserver.yaml
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook --check verify_webserver.yaml
- en: '[PRE54]'
  id: totrans-469
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: $ ansible-playbook verify_webserver.yaml
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: $ ansible-playbook verify_webserver.yaml
- en: '[PRE55]'
  id: totrans-471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-472
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
