- en: 11\. Ubuntu Software Package Management and Updates
  prefs: []
  type: TYPE_NORMAL
- en: It is highly unlikely that a newly installed Ubuntu system will contain all
    of the software packages necessary to perform the tasks for which it is intended.
    Even once all the required software has been installed, it is almost certain that
    newer versions of many of those packages will be released during the lifespan
    of the system. In some cases, you will need to ensure that these latest package
    releases are installed on the system so that bugs and security vulnerabilities
    are fixed.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter introduces the basic concepts of software management on Ubuntu,
    explains how these issues are addressed, and explores the concepts of repositories
    and software packages while exploring how to list, install and remove the software
    packages that make up a functioning Ubuntu system.
  prefs: []
  type: TYPE_NORMAL
- en: 11.1 Repositories
  prefs: []
  type: TYPE_NORMAL
- en: Linux is essentially comprised of a set of base packages that provide the core
    functionality of the operating system together with a range of other packages
    and modules that add functionality and features on top of the base operating system.
  prefs: []
  type: TYPE_NORMAL
- en: 'When Ubuntu is first installed, a number of different packages will be installed
    depending on the software options selected during the installation phase. Once
    the system is up and running, however, additional software can be installed as
    needed. Typically, all software that is part of Ubuntu (in other words, software
    that is not provided by a third-party vendor) is downloaded and installed on the
    system using the Advanced Package Tool (apt) command. As we have seen in earlier
    chapters, this typically consists of a command similar to the following being
    issued at the command prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: apt install apache2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When such a command is issued, the requested software is downloaded from a
    remote repository and installed on the local system. By default, Ubuntu is configured
    to download software from a number of different repositories:'
  prefs: []
  type: TYPE_NORMAL
- en: •main - Contains the core set of packages that are officially supported, tested
    and updated by Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: •restricted - Proprietary drivers for hardware devices for which no open source
    equivalent exists.
  prefs: []
  type: TYPE_NORMAL
- en: •universe - Contains packages that are not officially supported by the Ubuntu
    team at Canonical. These packages are, however, maintained by the Ubuntu community
    and include packages not available within the main repository.
  prefs: []
  type: TYPE_NORMAL
- en: •multiverse - Packages that may not conform to the open-source licensing terms
    under which Ubuntu is released due to copyright or other legal issues.
  prefs: []
  type: TYPE_NORMAL
- en: 'The list of currently enabled repositories on an Ubuntu system is contained
    within the /etc/apt/sources.list file which can be loaded into an editor to be
    viewed and modified. The file may be manually loaded into an editor, or edited
    using a choice of available editors using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: apt edit-sources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first few lines of this file usually reference the main and restricted
    repositories, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: deb http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
  prefs: []
  type: TYPE_NORMAL
- en: 'In the above example the list is configured to allow packages to be downloaded
    from the main and restricted repositories. Entries for the universe and multiverse
    repositories will also be included in the file:'
  prefs: []
  type: TYPE_NORMAL
- en: N.B. software from this repository may not have been tested as
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: extensively as that contained in the main release, although it includes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: newer versions of some applications which may provide useful features.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Also, please note that software in backports WILL NOT receive any review
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: or updates from the Ubuntu security team.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: deb http://us.archive.ubuntu.com/ubuntu/ lunar-backports main restricted universe
    multiverse
  prefs: []
  type: TYPE_NORMAL
- en: 'To disable a repository so that it will no longer be used to download packages,
    simply comment out the line by prefixing it with a ‘#’ character:'
  prefs: []
  type: TYPE_NORMAL
- en: '#deb http://ports.ubuntu.com/ubuntu-ports/ lunar-backports main restricted
    universe multiverse'
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition to the standard repositories there are also many third-party repositories.
    In the event that you need to use one of these, simply add an entry for it to
    the sources.list file. One such example is the partners repository, which can
    be added to the sources.list file as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: deb http://archive.canonical.com/ubuntu lunar partner
  prefs: []
  type: TYPE_NORMAL
- en: 'After making the change, run the following command to commit the changes:'
  prefs: []
  type: TYPE_NORMAL
- en: apt update
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 11.2 Managing Repositories with Software & Updates
  prefs: []
  type: TYPE_NORMAL
- en: 'As an alternative to using the command-line, repositories may be configured
    from within the GNOME desktop environment using the Software & Updates app. To
    launch this app, press the special key on the keyboard (on Windows keyboards this
    is the Windows key, on macOS the Command key and on Chromebooks the key displaying
    a magnifying glass) and enter Software & Updates into the search bar. In the results
    panel click on the corresponding icon to launch the app. Alternatively, open a
    terminal window and run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: $ update-manager
  prefs: []
  type: TYPE_NORMAL
- en: 'When the app loads, click on the Settings button as shown in [Figure 11-1](Ubuntu_Package_Management.xhtml#_idTextAnchor204):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_software_updates.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11-1
  prefs: []
  type: TYPE_NORMAL
- en: 'From the settings screen, enable or disable the required repositories listed
    under the Downloadable from the Internet heading:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_downloadable_updates.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11-2
  prefs: []
  type: TYPE_NORMAL
- en: 'To enable partner repositories, select the Other Software tab as shown in [Figure
    11-3](Ubuntu_Package_Management.xhtml#_idTextAnchor205):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_other_software.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11-3
  prefs: []
  type: TYPE_NORMAL
- en: 'To add other third-party repositories, click on the Add... button and enter
    the repository information in the resulting dialog:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_add_repo.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11-4
  prefs: []
  type: TYPE_NORMAL
- en: 11.3 Managing Packages with APT
  prefs: []
  type: TYPE_NORMAL
- en: The apt tool provides a way to perform most package management tasks directly
    from the command line. In this section we will explore some of the more frequently
    used apt command-line options.
  prefs: []
  type: TYPE_NORMAL
- en: 'An Ubuntu system keeps a local copy of the latest package information and,
    as such, it is recommended that this list be updated before performing any other
    apt operations as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: apt update
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One of the most common apt activities is to perform a package installation:'
  prefs: []
  type: TYPE_NORMAL
- en: apt install package_name
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Similarly, an installed package may be removed from the system using the remove
    option:'
  prefs: []
  type: TYPE_NORMAL
- en: apt remove package_name
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When a package is removed this way, configuration files associated with the
    package will remain on the system. This allows the package to be reinstalled later
    without losing any custom configuration settings. To remove these files either
    during the deletion, or even after the deletion as been performed, use the purge
    option:'
  prefs: []
  type: TYPE_NORMAL
- en: apt purge package_name
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To obtain a list of packages available for installation, use apt as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: apt list
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Alternatively, to list only those packages which are already installed, use
    the list option with the --installed flag:'
  prefs: []
  type: TYPE_NORMAL
- en: apt list --installed
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To check whether a specific package is already installed on the system, combine
    the list option with the package name:'
  prefs: []
  type: TYPE_NORMAL
- en: apt list package_name
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Use the search option to list all packages that match certain criteria. For
    example to list all packages that relate to the Apache web server:'
  prefs: []
  type: TYPE_NORMAL
- en: apt search apache
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To find which package contains a specific file, use the apt-file command. For
    example, to list the name of the packages which contain a file named gimp:'
  prefs: []
  type: TYPE_NORMAL
- en: apt-file --package-only list gimp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To view details about a package, run apt with the show option:'
  prefs: []
  type: TYPE_NORMAL
- en: apt show apache2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Typical output from running the above command might read as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Package: apache2'
  prefs: []
  type: TYPE_NORMAL
- en: 'Version: 2.4.52-1ubuntu4.5'
  prefs: []
  type: TYPE_NORMAL
- en: 'Priority: optional'
  prefs: []
  type: TYPE_NORMAL
- en: 'Section: web'
  prefs: []
  type: TYPE_NORMAL
- en: 'Origin: Ubuntu'
  prefs: []
  type: TYPE_NORMAL
- en: 'Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>'
  prefs: []
  type: TYPE_NORMAL
- en: 'Original-Maintainer: Debian Apache Maintainers <debian-apache@lists.debian.org>'
  prefs: []
  type: TYPE_NORMAL
- en: 'Bugs: https://bugs.launchpad.net/ubuntu/+filebug'
  prefs: []
  type: TYPE_NORMAL
- en: 'Installed-Size: 546 kB'
  prefs: []
  type: TYPE_NORMAL
- en: 'Provides: httpd, httpd-cgi'
  prefs: []
  type: TYPE_NORMAL
- en: 'Pre-Depends: init-system-helpers (>= 1.54~)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Depends: apache2-bin (= 2.4.52-1ubuntu4.5), apache2-data (= 2.4.52-1ubuntu4.5),
    apache2-utils (= 2.4.52-1ubuntu4.5), lsb-base, mime-support, perl:any, procps'
  prefs: []
  type: TYPE_NORMAL
- en: 'Recommends: ssl-cert'
  prefs: []
  type: TYPE_NORMAL
- en: 'Suggests: apache2-doc, apache2-suexec-pristine | apache2-suexec-custom, www-browser,
    ufw'
  prefs: []
  type: TYPE_NORMAL
- en: 'Conflicts: apache2.2-bin, apache2.2-common'
  prefs: []
  type: TYPE_NORMAL
- en: 'Replaces: apache2.2-bin, apache2.2-common'
  prefs: []
  type: TYPE_NORMAL
- en: 'Homepage: https://httpd.apache.org/'
  prefs: []
  type: TYPE_NORMAL
- en: 'Task: lamp-server'
  prefs: []
  type: TYPE_NORMAL
- en: 'Download-Size: 97.8 kB'
  prefs: []
  type: TYPE_NORMAL
- en: 'APT-Manual-Installed: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'APT-Sources: http://us.archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages'
  prefs: []
  type: TYPE_NORMAL
- en: 'Description: Apache HTTP Server'
  prefs: []
  type: TYPE_NORMAL
- en: The Apache HTTP Server Project's goal is to build a secure, efficient and
  prefs: []
  type: TYPE_NORMAL
- en: extensible HTTP server as standards-compliant open source software. The
  prefs: []
  type: TYPE_NORMAL
- en: result has long been the number one web server on the Internet.
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: Installing this package results in a full installation, including the
  prefs: []
  type: TYPE_NORMAL
- en: configuration files, init scripts and support scripts.
  prefs: []
  type: TYPE_NORMAL
- en: 11.4 Performing Updates
  prefs: []
  type: TYPE_NORMAL
- en: 'Over the lifetime of both the base operating system and the installed software
    packages, multiple updates will be issued to resolve problems and add functionality.
    To manually download and install any pending updates from the command-line, the
    first step is to update the package information stored on the local system using
    apt with the update option:'
  prefs: []
  type: TYPE_NORMAL
- en: apt update
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once the package information has been updated, the upgrade can be performed.
    This will download any updates for currently installed packages from the repositories
    configured in the sources.list file and install them on the system:'
  prefs: []
  type: TYPE_NORMAL
- en: apt upgrade
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As an alternative to the command-line, the system may be updated using the
    Software & Updates GNOME desktop app. If updates are available the dialog shown
    in [Figure 11-5](Ubuntu_Package_Management.xhtml#_idTextAnchor208) will appear
    providing the option to view information about the available updates and to perform
    the upgrade:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_software_updater1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11-5
  prefs: []
  type: TYPE_NORMAL
- en: 11.5 Enabling Automatic Updates
  prefs: []
  type: TYPE_NORMAL
- en: The previous section looked at how to manually install package upgrades. Ubuntu
    systems may also be configured to install upgrades automatically. This can be
    configured either from the command-line or from within the Software & Updates
    tool.
  prefs: []
  type: TYPE_NORMAL
- en: 'From within the Software & Updates tool, open the Settings screen as outlined
    previously and click on the Updates tab to display the screen shown in [Figure
    11-6](Ubuntu_Package_Management.xhtml#_idTextAnchor210):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_update_schedule.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11-6
  prefs: []
  type: TYPE_NORMAL
- en: Select how often the system should check for updates (daily, every other day,
    weekly, etc.). Next choose what is to be done when updates are available (download
    only, download and install, or display a notification on the desktop). You can
    also configure the updater to let you know when new versions of Ubuntu are available.
  prefs: []
  type: TYPE_NORMAL
- en: 'To configure automatic updates from the command-line, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '1\. Install the unattended-upgrades package:'
  prefs: []
  type: TYPE_NORMAL
- en: apt install unattended-upgrades
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '2\. Edit the /etc/apt/apt.conf.d/50unattended-upgrades file and locate the
    following lines:'
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: '"${distro_id}ESMApps:${distro_codename}-apps-security";'
  prefs: []
  type: TYPE_NORMAL
- en: '"${distro_id}ESM:${distro_codename}-infra-security";'
  prefs: []
  type: TYPE_NORMAL
- en: // "${distro_id}:${distro_codename}-updates";
  prefs: []
  type: TYPE_NORMAL
- en: // "${distro_id}:${distro_codename}-proposed";
  prefs: []
  type: TYPE_NORMAL
- en: // "${distro_id}:${distro_codename}-backports";
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Remove the // comment markers from the repository types for which updates
    are to be automatically installed.
  prefs: []
  type: TYPE_NORMAL
- en: '4\. Edit the /etc/apt/apt.conf.d/20auto-upgrades file and declare the frequency
    (in days) with which the system is to check for updates:'
  prefs: []
  type: TYPE_NORMAL
- en: APT::Periodic::Update-Package-Lists "1";
  prefs: []
  type: TYPE_NORMAL
- en: APT::Periodic::Download-Upgradeable-Packages "1";
  prefs: []
  type: TYPE_NORMAL
- en: APT::Periodic::AutocleanInterval "0";
  prefs: []
  type: TYPE_NORMAL
- en: APT::Periodic::Unattended-Upgrade "1";
  prefs: []
  type: TYPE_NORMAL
- en: '4\. Perform a dry run update to make sure the settings are valid:'
  prefs: []
  type: TYPE_NORMAL
- en: unattended-upgrades --dry-run --debug
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A few days after configuring automatic updates, check the log files to confirm
    that the updates are occurring as planned:'
  prefs: []
  type: TYPE_NORMAL
- en: cat /var/log/unattended-upgrades/unattended-upgrades.log
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 11.6 Summary
  prefs: []
  type: TYPE_NORMAL
- en: The Ubuntu operating system comprises thousands of software packages downloaded
    and installed from the main, restricted, universe, multiverse, partner, and third-party
    repositories.
  prefs: []
  type: TYPE_NORMAL
- en: Software packages are installed using the Advanced Package Tool (apt) or one
    of several graphical desktop tools and downloaded from the repositories defined
    within the sources.list file.
  prefs: []
  type: TYPE_NORMAL
- en: In addition to installing and removing software packages, apt may also be used
    to upgrade those packages with the latest updates. These software upgrades can
    be performed manually or configured to update automatically.
  prefs: []
  type: TYPE_NORMAL
