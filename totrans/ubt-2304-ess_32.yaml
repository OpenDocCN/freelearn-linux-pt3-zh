- en: 33\. Adding a New Disk Drive to an Ubuntu 23.04 System
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 33. 在Ubuntu 23.04系统中添加新硬盘驱动器
- en: One of the first problems users and system administrators encounter is that
    systems need more disk space to store data. Fortunately, disk space is now one
    of the cheapest IT commodities. In this and the next chapter, we will look at
    configuring Ubuntu to use the space provided when a new physical or virtual disk
    drive is installed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 用户和系统管理员遇到的第一个问题之一是，系统需要更多的磁盘空间来存储数据。幸运的是，磁盘空间现在是最便宜的IT商品之一。在本章及下一章中，我们将讨论如何配置Ubuntu使用新安装的物理或虚拟磁盘提供的空间。
- en: 33.1 Mounted File Systems or Logical Volumes
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 33.1 挂载的文件系统或逻辑卷
- en: There are two ways to configure a new disk drive on an Ubuntu system. One straightforward
    method is to create one or more Linux partitions on the new drive, create Linux
    file systems on those partitions and then mount them at specific mount points
    to be accessed. This approach will be covered in this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在Ubuntu系统上配置新硬盘有两种方式。一种直接的方法是，在新硬盘上创建一个或多个Linux分区，在这些分区上创建Linux文件系统，然后将它们挂载到特定的挂载点以便访问。本章将介绍这种方法。
- en: Another approach is adding new space to an existing volume group or creating
    a new one. When Ubuntu is installed, a volume group named is created. Within this
    volume group are three logical volumes named root, home, and swap, used to store
    the / and /home file systems and swap partitions, respectively. We can increase
    the disk space available to the existing logical volumes by configuring the new
    disk as part of a volume group. For example, using this approach, we can increase
    the size of the /home file system by allocating some or all of the space on the
    new disk to the home volume. This topic will be discussed in detail in [“Adding
    a New Disk to an Ubuntu 23.04 Volume Group and Logical Volume”](Volume_Groups.xhtml#_idTextAnchor506).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是将新空间添加到现有的卷组中，或者创建一个新的卷组。当Ubuntu安装时，会创建一个名为的卷组。在这个卷组中有三个逻辑卷，分别是root、home和swap，用于存储/和/home文件系统以及交换分区。我们可以通过将新硬盘配置为卷组的一部分，来增加现有逻辑卷的可用磁盘空间。例如，使用这种方法，我们可以通过将新硬盘上的部分或全部空间分配给home卷，来增加/home文件系统的大小。这个话题将在[“向Ubuntu
    23.04卷组和逻辑卷中添加新磁盘”](Volume_Groups.xhtml#_idTextAnchor506)中详细讨论。
- en: 33.2 Finding the New Hard Drive
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 33.2 查找新硬盘
- en: This tutorial assumes that a new physical or virtual hard drive has been installed
    and is visible to the operating system. Once added, the operating system should
    automatically detect the new drive. Typically, the disk drives in a system are
    assigned device names beginning hd, sd, or nvme, followed by a letter to indicate
    the device number. The first device might be /dev/sda, the second /dev/sdb, etc.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程假设已经安装了一个新的物理或虚拟硬盘，并且操作系统可以识别该硬盘。添加后，操作系统应该会自动检测到新硬盘。通常，系统中的磁盘驱动器会被分配以以hd、sd或nvme开头的设备名称，后面跟一个字母表示设备编号。第一个设备可能是/dev/sda，第二个是/dev/sdb，依此类推。
- en: 'The following is the output from a typical system with only one disk drive
    connected to a SATA controller:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个典型系统的输出，系统只连接了一个磁盘驱动器并通过SATA控制器连接：
- en: ls /dev/sd*
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ls /dev/sd*
- en: /dev/sda /dev/sda1 /dev/sda2
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda /dev/sda1 /dev/sda2
- en: This shows that the disk drive represented by /dev/sda is divided into two partitions,
    represented by /dev/sda1 and /dev/sda2\.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这表明由/dev/sda表示的硬盘驱动器被分成了两个分区，分别由/dev/sda1和/dev/sda2表示。
- en: 'The following output is from the same system after a second hard disk drive
    has been installed:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是安装第二块硬盘后，来自相同系统的输出：
- en: ls /dev/sd*
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ls /dev/sd*
- en: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb
- en: The new hard drive has been assigned to the device file /dev/sdb. The drive
    has no partitions shown (because we have yet to create any).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 新的硬盘已被分配到设备文件/dev/sdb。该硬盘没有显示任何分区（因为我们还没有创建分区）。
- en: At this point, we can create partitions and file systems on the new drive and
    mount them for access or add the disk as a physical volume as part of a volume
    group. To perform the former continue with this chapter; otherwise, read [“Adding
    a New Disk to an Ubuntu 23.04 Volume Group and Logical Volume”](Volume_Groups.xhtml#_idTextAnchor506)
    for details on configuring Logical Volumes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，我们可以在新硬盘上创建分区和文件系统，并将其挂载以便访问，或者将硬盘作为物理卷添加到卷组中。如果执行前者，请继续阅读本章；否则，请阅读[“向Ubuntu
    23.04卷组和逻辑卷中添加新磁盘”](Volume_Groups.xhtml#_idTextAnchor506)以了解如何配置逻辑卷。
- en: 33.3 Creating Linux Partitions
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 33.3 创建Linux分区
- en: 'The next step is to create one or more Linux partitions on the new disk drive.
    This is achieved using the fdisk utility, which takes as a command-line argument
    the device to be partitioned:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是在新磁盘上创建一个或多个 Linux 分区。这可以通过使用 fdisk 工具来完成，该工具接受要分区的设备作为命令行参数：
- en: fdisk /dev/sdb
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fdisk /dev/sdb
- en: Welcome to fdisk (util-linux 2.37.4).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎使用 fdisk（util-linux 2.37.4）。
- en: Changes will remain in memory only, until you decide to write them.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 变更仅会保存在内存中，直到您决定写入它们。
- en: Be careful before using the write command.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用写入命令之前请小心。
- en: Device does not contain a recognized partition table.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 设备不包含已识别的分区表。
- en: Created a new DOS disklabel with disk identifier 0x64d68d00.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用磁盘标识符 0x64d68d00 创建了一个新的 DOS 磁盘标签。
- en: 'Command (m for help):'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入 m 获取帮助）：
- en: 'To view the current partitions on the disk, enter the p command:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看磁盘当前的分区，请输入 p 命令：
- en: 'Command (m for help): p'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入 m 获取帮助）：p
- en: 'Disk /dev/sdb: 14.46 GiB, 15525216256 bytes, 30322688 sectors'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘 /dev/sdb：14.46 GiB，15525216256 字节，30322688 扇区
- en: 'Disk model: USB 2.0 FD'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘型号：USB 2.0 FD
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 单位：1 * 512 = 512 字节
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 扇区大小（逻辑/物理）：512 字节 / 512 字节
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: I/O 大小（最小/最佳）：512 字节 / 512 字节
- en: 'Disklabel type: dos'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘标签类型：dos
- en: 'Disk identifier: 0x64d68d00'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘标识符：0x64d68d00
- en: 'As we can see from the above fdisk output, the disk currently has no partitions
    because it was previously unused. The next step is to create a new partition on
    the disk, a task which is performed by entering n (for a new partition) and p
    (for a primary partition):'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的 fdisk 输出可以看出，磁盘当前没有分区，因为它之前未使用。下一步是在磁盘上创建一个新分区，可以通过输入 n（表示新分区）和 p（表示主分区）来完成：
- en: 'Command (m for help): n'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入 m 获取帮助）：n
- en: Partition type
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 分区类型
- en: p primary (0 primary, 0 extended, 4 free)
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: p 主分区（0 个主分区，0 个扩展分区，4 个空闲分区）
- en: e extended (container for logical partitions)
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: e 扩展分区（逻辑分区的容器）
- en: 'Select (default p): p'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 选择（默认 p）：p
- en: 'Partition number (1-4, default 1):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 分区号（1-4，默认 1）：
- en: 'In this example, we only plan to create one partition, which will be partition
    1\. Next, we need to specify where the partition will begin and end. Since this
    is the first partition, we need it to start at the first available sector, and
    since we want to use the entire disk, we specify the last sector as the end. Note
    that if you wish to create multiple partitions, you can specify the size of each
    partition by sectors, bytes, kilobytes, or megabytes:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们只打算创建一个分区，即分区 1。接下来，我们需要指定分区的起始和结束位置。由于这是第一个分区，我们需要它从第一个可用扇区开始，并且由于我们想使用整个磁盘，因此指定最后一个扇区作为结束位置。请注意，如果您希望创建多个分区，可以按扇区、字节、千字节或兆字节来指定每个分区的大小：
- en: 'Partition number (1-4, default 1): 1'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 分区号（1-4，默认 1）：1
- en: 'First sector (2048-30322687, default 2048):'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个扇区（2048-30322687，默认 2048）：
- en: 'Last sector, +/-sectors or +/-size{K,M,G,T,P} (2048-30322687, default 30322687):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一个扇区，+/- 扇区或 +/- 大小{K,M,G,T,P}（2048-30322687，默认 30322687）：
- en: Created a new partition 1 of type 'Linux' and of size 14.5 GiB.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 创建了一个新的 'Linux' 类型的分区 1，大小为 14.5 GiB。
- en: 'Command (m for help):'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入 m 获取帮助）：
- en: 'Now that we have specified the partition, we need to write it to the disk using
    the w command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已指定分区，接下来需要使用 w 命令将其写入磁盘：
- en: 'Command (m for help): w'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入 m 获取帮助）：w
- en: The partition table has been altered.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 分区表已被更改。
- en: Calling ioctl() to re-read partition table.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 正在调用 ioctl() 重新读取分区表。
- en: Syncing disks.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 正在同步磁盘。
- en: 'If we now look at the devices again, we will see that the new partition is
    visible as /dev/sdb1:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在再次查看设备，我们会看到新分区以 /dev/sdb1 可见：
- en: ls /dev/sd*
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ls /dev/sd*
- en: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb /dev/sdb1
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sda /dev/sda1 /dev/sda2 /dev/sdb /dev/sdb1
- en: The next step is to create a file system on our new partition.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是在新分区上创建文件系统。
- en: 33.4 Creating a File System on an Ubuntu Disk Partition
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 33.4 在 Ubuntu 磁盘分区上创建文件系统
- en: 'We now have a new disk installed, it is visible to Ubuntu, and we have configured
    a Linux partition on the disk. The next step is to create a Linux file system
    on the partition so that the operating system can use it to store files and data.
    The easiest way to create a file system on a partition is to use the mkfs.xfs
    utility:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已安装新磁盘，它在 Ubuntu 上可见，我们在磁盘上配置了一个 Linux 分区。接下来的步骤是在该分区上创建一个 Linux 文件系统，以便操作系统可以用它来存储文件和数据。创建文件系统的最简单方法是使用
    `mkfs.xfs` 工具：
- en: apt install xfsprogs
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: apt install xfsprogs
- en: umount /dev/sdb1
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: umount /dev/sdb1
- en: mkfs.xfs -f /dev/sdb1
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mkfs.xfs -f /dev/sdb1
- en: meta-data=/dev/sdb1 isize=512 agcount=4, agsize=947520 blks
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: meta-data=/dev/sdb1 isize=512 agcount=4, agsize=947520 blks
- en: = sectsz=512 attr=2, projid32bit=1
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: = sectsz=512 attr=2, projid32bit=1
- en: = crc=1 finobt=1, sparse=1, rmapbt=0
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: = crc=1 finobt=1, sparse=1, rmapbt=0
- en: = reflink=1 bigtime=1 inobtcount=1
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: = reflink=1 bigtime=1 inobtcount=1
- en: data = bsize=4096 blocks=3790080, imaxpct=25
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: data = bsize=4096 blocks=3790080, imaxpct=25
- en: = sunit=0 swidth=0 blks
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: = sunit=0 swidth=0 blks
- en: naming =version 2 bsize=4096 ascii-ci=0, ftype=1
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: naming =version 2 bsize=4096 ascii-ci=0, ftype=1
- en: log =internal log bsize=4096 blocks=2560, version=2
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: log =internal log bsize=4096 blocks=2560, version=2
- en: = sectsz=512 sunit=0 blks, lazy-count=1
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: = sectsz=512 sunit=0 blks, lazy-count=1
- en: realtime =none extsz=4096 blocks=0, rtextents=0
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: realtime =none extsz=4096 blocks=0, rtextents=0
- en: In this case, we have created an XFS file system. XFS is a high-performance
    file system that is the default filesystem type on Ubuntu and includes several
    advantages in terms of parallel I/O performance and the use of journaling.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们创建了一个XFS文件系统。XFS是一种高性能的文件系统，是Ubuntu的默认文件系统类型，并在并行I/O性能和日志使用方面具有多个优势。
- en: 33.5 An Overview of Journaled File Systems
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 33.5 日志文件系统概述
- en: A journaling filesystem keeps a journal or log of the changes being made to
    the filesystem during disk writing that can be used to rapidly reconstruct corruptions
    that may occur due to events such as a system crash or power outage.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 日志文件系统在每次磁盘写入过程中都会保持一个日志或记录，记录文件系统的变化，这些日志可以用来快速重建由于系统崩溃或断电等事件导致的文件系统损坏。
- en: There are several advantages to using a journaling file system. First, the size
    and volume of data stored on disk drives have grown exponentially over the years.
    The problem with a non-journaled file system is that following a crash, the fsck
    (filesystem consistency check) utility has to be run. The fsck utility will scan
    the entire filesystem validating all entries and ensuring that blocks are allocated
    and referenced correctly. It will attempt to fix the problem if it finds a corrupt
    entry. The issues here are two-fold. First, the fsck utility will not always be
    able to repair the damage, and you will end up with data in the lost+found directory.
    An application uses this data, but the system no longer knows where it was referenced
    from. The other problem is the issue of time. Completing the fsck process on an
    extensive file system can take a long time, potentially leading to unacceptable
    downtime.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 使用日志文件系统有几个优点。首先，存储在磁盘驱动器上的数据大小和容量在这些年来已经呈指数增长。非日志文件系统的问题在于，发生崩溃后必须运行fsck（文件系统一致性检查）工具。fsck工具会扫描整个文件系统，验证所有条目，并确保块被正确分配和引用。如果它发现损坏的条目，它将尝试修复问题。这里有两个问题。首先，fsck工具并不总是能够修复损坏，你最终会得到存储在lost+found目录中的数据。应用程序使用这些数据，但系统不再知道它来自哪里。另一个问题是时间问题。在一个庞大的文件系统上完成fsck过程可能需要很长时间，可能会导致不可接受的停机时间。
- en: On the other hand, a journaled file system records information in a log area
    on a disk (the journal and log do not need to be on the same device) during each
    write. This is essentially an “intent to commit” data to the filesystem. The amount
    of information logged is configurable and ranges from not logging anything to
    logging what is known as the “metadata” (i.e., ownership, date stamp information,
    etc.) to logging the “metadata” and the data blocks that are to be written to
    the file. Once the log is updated, the system writes the actual data to the appropriate
    filesystem areas and marks an entry to say the data is committed.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，日志文件系统在每次写入时都会将信息记录到磁盘上的日志区（日志和日志区不必在同一设备上）。这本质上是一个“提交意图”，用于将数据写入文件系统。记录的信息量是可配置的，范围从不记录任何内容到记录所谓的“元数据”（即所有者、日期戳信息等），再到记录“元数据”以及将写入文件的数据块。日志更新后，系统将实际数据写入相应的文件系统区域，并标记一个条目表示数据已提交。
- en: After a crash, the filesystem can quickly be brought back online using the journal
    log, thereby reducing what could take minutes using fsck to seconds with the added
    advantage that there is considerably less chance of data loss or corruption.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 崩溃后，可以使用日志文件迅速将文件系统恢复上线，从而将原本需要几分钟的fsck过程缩短为几秒钟，并且大大减少数据丢失或损坏的机会。
- en: 33.6 Mounting a File System
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 33.6 挂载文件系统
- en: 'Now that we have created a new file system on the Linux partition of our new
    disk drive, we need to mount it to be accessible and usable. To do this, we need
    to create a mount point. A mount point is simply a directory or folder into which
    the file system will be mounted. For this example, we will create a /backup directory
    to match our file system label (although these values don’t need to match):'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经在新磁盘的Linux分区上创建了新的文件系统，我们需要将其挂载以便访问和使用。为此，我们需要创建一个挂载点。挂载点只是一个目录或文件夹，文件系统将在其中挂载。对于本示例，我们将创建一个/backup目录，以匹配我们的文件系统标签（尽管这些值不需要匹配）：
- en: mkdir /backup
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mkdir /backup
- en: 'The file system may then be manually mounted using the mount command:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，文件系统可以通过mount命令手动挂载：
- en: mount /dev/sdb1 /backup
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mount /dev/sdb1 /backup
- en: 'Running the mount command with no arguments shows us all currently mounted
    file systems (including our new file system):'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 运行不带任何参数的mount命令将显示当前挂载的所有文件系统（包括我们新添加的文件系统）：
- en: mount
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mount
- en: proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)
- en: sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime,seclabel)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime,seclabel)
- en: .
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: .
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: .
- en: /dev/sdb1 on /backup type xfs (rw,relatime,seclabel,attr2,inode64,logbufs=8,logbsize=32k,noquota)
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sdb1 on /backup type xfs (rw,relatime,seclabel,attr2,inode64,logbufs=8,logbsize=32k,noquota)
- en: 33.7 Configuring Ubuntu to Mount a File System Automatically
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 33.7 配置Ubuntu自动挂载文件系统
- en: 'To set up the system so that the new file system is automatically mounted at
    boot time, an entry needs to be added to the /etc/fstab file. The format for an
    fstab entry is as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置系统，使新的文件系统在启动时自动挂载，需要在/etc/fstab文件中添加一条条目。fstab条目的格式如下：
- en: <device> <dir> <type> <options> <dump> <fsck>
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: <device> <dir> <type> <options> <dump> <fsck>
- en: 'These entries can be summarized as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这些条目可以总结如下：
- en: •<device> - The device on which the filesystem will be mounted.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: •<device> - 文件系统将被挂载到的设备。
- en: •<dir> - The directory that is to act as the mount point for the filesystem.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: •<dir> - 作为文件系统挂载点的目录。
- en: •<type> - The filesystem type (xfs, ext4 etc.)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: •<type> - 文件系统类型（如xfs、ext4等）
- en: •<options> - Additional filesystem mount options, for example, making the filesystem
    read-only or controlling whether any user can mount the filesystem. Run man mount
    to review a complete list of options. Setting this value to defaults will use
    the default settings for the filesystem (rw, suid, dev, exec, auto, nouser, async).
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: •<options> - 附加的文件系统挂载选项，例如，使文件系统只读或控制是否可以由任何用户挂载文件系统。运行man mount查看完整的选项列表。将此值设置为defaults将使用文件系统的默认设置（rw,
    suid, dev, exec, auto, nouser, async）。
- en: •<dump> - Dictates whether the content of the filesystem is to be included in
    any backups performed by the dump utility. This setting is rarely used and can
    be disabled with a 0 value.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '•<dump> - 指定文件系统的内容是否应包括在dump工具执行的任何备份中。此设置很少使用，可以通过设置为0来禁用。  '
- en: •<fsck> - Whether the filesystem is checked by fsck after a system crash and
    the order in which filesystems are to be checked. For journaled filesystems such
    as XFS this should be set to 0 to indicate that the check is not required.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: •<fsck> - 系统崩溃后是否通过fsck检查文件系统，以及文件系统检查的顺序。对于像XFS这样的日志文件系统，应将其设置为0，以表示不需要检查。
- en: 'The following example shows a fstab entry to automount our /backup partition
    on the /dev/sdb1 partition:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例展示了一个fstab条目，用于自动挂载我们位于/dev/sdb1分区上的/backup分区：
- en: /dev/sdb1 /backup xfs defaults 0 0
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sdb1 /backup xfs defaults 0 0
- en: The /backup filesystem will now automount each time the system restarts.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，每次系统重启时，/backup文件系统将自动挂载。
- en: 33.8 Adding a Disk Using Cockpit
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 33.8 使用Cockpit添加磁盘
- en: 'In addition to working with storage using the command-line utilities outlined
    in this chapter, it is also possible to configure a new storage device using the
    Cockpit web console. To view the current storage configuration, log into the Cockpit
    console and select the Storage option as shown in [Figure 33-1](Adding_New_DIsk.xhtml#_idTextAnchor503):'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 除了使用本章概述的命令行工具进行存储操作外，还可以使用Cockpit Web控制台配置新的存储设备。要查看当前的存储配置，请登录Cockpit控制台并选择“存储”选项，如[图33-1](Adding_New_DIsk.xhtml#_idTextAnchor503)所示：
- en: '![](img/centos_cockpit_storage1.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_cockpit_storage1.jpg)'
- en: Figure 33-1
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图33-1
- en: 'To locate the newly added storage, scroll to the bottom of the Storage page
    until the Drives section comes into view (note that the Drives section may also
    be located in the top right-hand corner of the screen):'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 要找到新添加的存储，滚动到存储页面的底部，直到“磁盘”部分出现在视野中（注意，“磁盘”部分也可能位于屏幕的右上角）：
- en: '![](img/cockpit_drives.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cockpit_drives.jpg)'
- en: Figure 33-2
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图33-2
- en: 'In the case of the above figure, the new drive is the 15.5 GB drive. Select
    the new drive to display the Drive screen as shown in [Figure 33-3](Adding_New_DIsk.xhtml#_idTextAnchor504):'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的图示中，新的驱动器是15.5 GB的驱动器。选择新驱动器以显示如[图33-3](Adding_New_DIsk.xhtml#_idTextAnchor504)所示的驱动器界面：
- en: '![](img/cockpit_drive_details.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cockpit_drive_details.jpg)'
- en: Figure 33-3
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图33-3
- en: 'Click on the Create partition button and use the dialog to specify how much
    space will be allocated to this partition, the filesystem type (XFS is recommended),
    and an optional label, filesystem mount point, and mount options. Note that additional
    partitions may be added to the drive if this new partition does not use all the
    available space. To change settings such as whether the filesystem is read-only
    or mounted at boot time, change the settings in the Mount options section:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 点击创建分区按钮，并使用对话框指定分配给此分区的空间大小、文件系统类型（推荐使用XFS）、以及可选的标签、文件系统挂载点和挂载选项。请注意，如果新分区没有使用所有可用空间，可以向驱动器添加其他分区。要更改如文件系统是否为只读或是否在启动时挂载等设置，请在挂载选项部分更改设置：
- en: '![](img/cockpit_drive_create_partition.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cockpit_drive_create_partition.jpg)'
- en: Figure 33-4
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图33-4
- en: Once the settings have been selected, click the Create partition button to commit
    the change. Upon completion of the creation process, the new partition will be
    added to the disk, the corresponding filesystem will be created and mounted at
    the designated mount point, and appropriate changes will be made to the /etc/fstab
    file.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 选择好设置后，点击创建分区按钮以提交更改。在创建过程完成后，新的分区将被添加到磁盘中，相应的文件系统将被创建并挂载到指定的挂载点，/etc/fstab文件也会做出相应的更改。
- en: 33.9 Summary
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 33.9 小结
- en: This chapter has covered adding a physical or virtual disk drive to an existing
    Ubuntu system. This is a relatively simple process of ensuring the new drive has
    been detected by the operating system, creating one or more partitions on the
    drive, and then making filesystems on those partitions. Although several filesystem
    types are available on Ubuntu, XFS is generally recommended. Once the filesystems
    are ready, they can be mounted using the mount command. So that the newly created
    filesystems mount automatically on system startup, additions can be made to the
    /etc/fstab configuration file.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍了如何将物理或虚拟磁盘驱动器添加到现有的Ubuntu系统中。这是一个相对简单的过程，确保新驱动器已被操作系统检测到，在驱动器上创建一个或多个分区，然后在这些分区上创建文件系统。虽然Ubuntu提供了多种文件系统类型，但通常推荐使用XFS。一旦文件系统准备好，可以使用mount命令将其挂载。为了使新创建的文件系统在系统启动时自动挂载，可以向/etc/fstab配置文件中添加条目。
