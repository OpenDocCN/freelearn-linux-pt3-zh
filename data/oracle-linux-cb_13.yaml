- en: '13'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '13'
- en: Let’s All Go to the Cloud
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一起走向云端
- en: 'We’ve come a long way when it comes to virtualization. From segmenting virtual
    slices and striping (precursor to virtualization) DNA sequencers across hundreds
    of university campuses to the most sophisticated virtual farms capable of hosting
    thousands of **virtual machines** (**VMs**) and petabytes of storage, they all
    have one thing in common: complexity. But does it really have to be complex? When
    I think about virtualization, I think of four resources: compute, memory, storage,
    and network. They all intertwine with one another to create that fabric. Without
    compute or memory, you can’t host a workload. Without storage, you can’t host
    or store application or workload components, and without a network, your workload
    can’t go anywhere. Imagine your car is your workload, the highway is your network,
    the passengers are your compute and memory, and the trunk is storage.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚拟化方面，我们已经走过了很长的路。从在数百个大学校园内将虚拟切片和条带（虚拟化的前身）DNA 测序仪分割到最先进的虚拟农场，能够托管数千个**虚拟机**（**VMs**）和数PB的存储，它们有一个共同点：复杂性。但这真的必须如此复杂吗？当我想到虚拟化时，我会想到四个资源：计算、内存、存储和网络。它们相互交织，共同构成了这个网络。没有计算或内存，你无法托管工作负载；没有存储，你无法托管或存储应用程序或工作负载组件；没有网络，你的工作负载无法流动。想象一下，你的车就是你的工作负载，高速公路是你的网络，乘客是你的计算和内存，行李厢就是存储。
- en: In this chapter, we will run through how to find, maximize, and use Oracle Linux
    to its full potential in a local environment as well as a public cloud, such as
    **Oracle Cloud Infrastructure** (**OCI**) or **Amazon Web Services** (**AWS**).
    We’ll run through exercises in building out a custom local Oracle Linux 8.x environment
    and walk through the process of moving that VM to OCI as an image, as well as
    to other **cloud service providers** (**CSPs**) including AWS as an AMI. *Cloud
    native* is a huge buzzword and a disruptive technology. The *Making Docker Desktop
    more manageable with Portainer* recipe will walk through creating a Portainer
    environment that can manage your container ecosystem around one application.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将演示如何在本地环境以及公共云中充分利用 Oracle Linux，诸如**Oracle Cloud Infrastructure**（**OCI**）或**Amazon
    Web Services**（**AWS**）。我们将演练在本地构建一个定制的 Oracle Linux 8.x 环境，并将其作为镜像迁移到 OCI，以及迁移到其他**云服务提供商**（**CSPs**），包括作为
    AMI 的 AWS。*云原生*是一个热门词汇，也是一个颠覆性技术。*使用 Portainer 管理 Docker Desktop*的配方将演示如何创建一个
    Portainer 环境，以管理围绕一个应用程序的容器生态系统。
- en: 'We will cover the following recipes in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: Oracle Linux in the cloud
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云中的 Oracle Linux
- en: Making Docker Desktop more manageable with Portainer
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Portainer 让 Docker Desktop 更易于管理
- en: Using VirtualBox to springboard VMs to OCI
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 VirtualBox 将虚拟机迁移到 OCI
- en: For everyone else, let’s make custom images for AWS
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于其他人，我们将为 AWS 创建自定义镜像
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'Generally, and in this case, it’s easier to build the OS being used with a
    **graphical user interface** (**GUI**). With this being said, you can still install
    a GUI if you didn’t build the server with a GUI originally. The following is a
    list of steps detailing how to add and configure a GUI:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，在这种情况下，使用带**图形用户界面**（**GUI**）的操作系统会更为简便。也就是说，即使最初没有使用 GUI 来构建服务器，你仍然可以安装
    GUI。以下是添加和配置 GUI 的详细步骤：
- en: 'Install the GUI packages:'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 GUI 软件包：
- en: '[PRE0]'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Set the GUI as the default target:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置 GUI 为默认目标：
- en: '[PRE1]'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Set the GUI as the default startup source:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置 GUI 为默认启动源：
- en: '[PRE2]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Restart the server:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启服务器：
- en: '[PRE3]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Oracle Linux in the cloud
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云中的 Oracle Linux
- en: We could list all the CSPs here and break apart their pros and cons, but ultimately,
    every CSP has a main competency. What Oracle Linux does is add to that competency,
    making the product stronger and more versatile. Much like any other (open source)
    Linux distribution, Oracle Linux is a versatile and powerful OS. In the case of
    Oracle Linux, the OS was designed with elements that are compatible with RHEL,
    not to compete, but to add functionality as well as a portal into Oracle functionality
    beyond RHEL.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以列出所有的 CSP 并详细分析它们的优缺点，但归根结底，每个 CSP 都有其主要竞争力。Oracle Linux 所做的是在此基础上进行扩展，使得产品更强大、更具多样性。就像任何其他（开源）Linux
    发行版一样，Oracle Linux 是一个多功能且强大的操作系统。就 Oracle Linux 而言，操作系统的设计兼容 RHEL 的元素，不是为了与之竞争，而是为了添加功能，同时为用户提供超越
    RHEL 的 Oracle 功能。
- en: The fluidity of Oracle Linux, much like RHEL, allows it to go beyond just being
    an OS. Oracle Linux extends the playing field, maximizing the Linux toolsets surrounding
    virtualization into VM management through **Oracle Linux Virtualization Manager**
    (**OLVM**), cross-functionality into cloud platforms, and automation, just to
    name a few. What Oracle aims to do is to offer the functionality of an RHEL OS
    but go beyond that and tie that OS into a global business network of toolsets
    to drive business success. Now, after all the fluff comes the real power and versatility
    of Oracle Linux, some of which was mentioned at the beginning of this chapter.
    This recipe is about which CSPs are most compatible with Oracle Linux; however,
    understanding what and how the OS operates is integral to understanding which
    CSPs are more compatible with Oracle Linux and thus maximizing its capability.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle Linux 的灵活性，类似于 RHEL，使其不仅仅是一个操作系统。Oracle Linux 扩展了操作系统的功能，最大化了围绕虚拟化的 Linux
    工具集，通过 **Oracle Linux 虚拟化管理器**（**OLVM**）进入虚拟机管理、跨平台的云功能，以及自动化等方面。Oracle 的目标是提供一个
    RHEL 操作系统的功能，但又超越这一点，将操作系统与全球业务网络中的工具集连接，以推动业务成功。现在，经过前面的铺垫，才是 Oracle Linux 的真正力量与多功能性，其中一些内容在本章开头已提到。本部分讲述了哪些
    CSP 与 Oracle Linux 最兼容；然而，了解操作系统的功能及其运作方式，对于理解哪些 CSP 与 Oracle Linux 更加兼容并最大化其能力是至关重要的。
- en: Oracle supports and promotes open source technologies for business-critical
    environments. Oracle is a founding member of the Linux Foundation, Eclipse Foundation,
    and Java Community Process, and contributes significantly to open source projects.
    Oracle software combined with open source technologies offers high performance,
    reliability, and data security while reducing computing costs.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle 支持并推广适用于业务关键环境的开源技术。Oracle 是 Linux 基金会、Eclipse 基金会和 Java 社区流程的创始成员，并为开源项目做出了重大贡献。将
    Oracle 软件与开源技术结合，能够提供高性能、可靠性和数据安全，同时降低计算成本。
- en: The following diagram provides a cost-benefit analysis of Oracle Linux “Free”
    (the only paid component is support) versus RHEL with the extended features added
    on, as mentioned previously.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 下图提供了对比 Oracle Linux 的“免费”版本（唯一收费组件是支持）与 RHEL 加上扩展功能的成本效益分析，如前文所述。
- en: '![Figure 13.1 – RHEL versus Oracle Linux](img/B18349_13_001.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.1 – RHEL 与 Oracle Linux](img/B18349_13_001.jpg)'
- en: Figure 13.1 – RHEL versus Oracle Linux
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.1 – RHEL 与 Oracle Linux
- en: As with any Linux distribution, each CSP has its own flavor or choice of Linux
    platform. For instance, AWS has **Amazon Linux 2** (**AL2**), Azure offers compatibility
    with anything RHEL or Ubuntu based, and Oracle has Oracle Linux, of course. There
    are so many differences between Ubuntu and Oracle Linux, AL2, and so on, but we’re
    not here to discuss the differences. Ultimately, all CSPs can run Linux distributions,
    but not all are optimized for Oracle Linux. With AWS and Azure, you have the option
    of **Buying Your Own Support** (**BYOS**) from Oracle (support includes access
    to patching, upgrades, and OS support) or using these services for free without
    tech support. With OCI Premier, support is included for free. The following diagram
    shows the main CSPs and their differing adoptions of Oracle Linux.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 和任何 Linux 发行版一样，每个 CSP（云服务提供商）都有自己的 Linux 平台版本。例如，AWS 有 **Amazon Linux 2**（**AL2**），Azure
    提供与任何基于 RHEL 或 Ubuntu 的平台兼容的服务，而 Oracle 自然也有 Oracle Linux。Ubuntu 和 Oracle Linux、AL2
    等之间有许多不同之处，但我们今天不讨论这些差异。归根结底，所有 CSP 都可以运行 Linux 发行版，但并非所有都针对 Oracle Linux 做了优化。使用
    AWS 和 Azure 时，你可以选择购买 Oracle 的技术支持（**BYOS**，即购买自己的支持），支持内容包括访问补丁、升级和操作系统支持，或者在没有技术支持的情况下免费使用这些服务。使用
    OCI Premier 服务时，支持是免费的。下图显示了主要的 CSP 及其对 Oracle Linux 的不同采用方式。
- en: '![Figure 13.2 – Cloud options](img/B18349_13_002.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.2 – 云选项](img/B18349_13_002.jpg)'
- en: Figure 13.2 – Cloud options
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.2 – 云选项
- en: Who’s the fairest of them all? Let’s walk through what Linux distributions are
    offered within AWS. We’ll briefly touch on AWS EC2 Image Builder to visualize
    the versatility of Linux within any environment on AWS and beyond. This will come
    into use later in this chapter, in the *Using VirtualBox to springboard VMs to*
    *OCI* recipe.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 谁是最美的？我们来看看 AWS 提供了哪些 Linux 发行版。我们将简要介绍 AWS EC2 镜像构建器，以展示 Linux 在 AWS 及其他环境中的多功能性。稍后在本章中，这将用于
    *使用 VirtualBox 将虚拟机导入 OCI* 这一部分。
- en: Getting ready
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: You’ll first have to have an AWS account, be it personal or through your organization;
    it doesn’t really matter so long as you have the correct authorization to access
    the account and build out the infrastructure. In this case, I selected **Root
    user**, as this is my personal account, and I have those rights.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要有一个 AWS 账户，无论是个人账户还是通过你的组织，关键是你拥有正确的授权来访问账户并构建基础设施。在这种情况下，我选择了**Root 用户**，因为这是我的个人账户，并且我拥有这些权限。
- en: '![Figure 13.3 – Root sign-in](img/B18349_13_003.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.3 – Root 登录](img/B18349_13_003.jpg)'
- en: Figure 13.3 – Root sign-in
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.3 – Root 登录
- en: After entering your user type, you’ll want to provide your password and continue
    through the authentication options. I’ve enabled **Multi-Factor Authentication**
    (**MFA**) and would strongly suggest using this method to protect your account.
    If MFA is enabled, you next walk through capturing that code, as shown in the
    following figure. Note that there are other two-factor authentication options,
    but using Google Authenticator is best practice. However, one could use any app,
    such as Microsoft, RSA, and so on.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 输入用户类型后，你需要提供密码并继续完成身份验证选项。我已启用**多重身份认证**（**MFA**），并强烈建议使用此方法来保护你的账户。如果启用了 MFA，接下来你将看到捕获验证码的步骤，如下图所示。注意，虽然还有其他双因素认证选项，但使用
    Google Authenticator 是最佳实践。当然，也可以使用其他应用，如 Microsoft、RSA 等。
- en: '![Figure 13.4 – MFA](img/B18349_13_004.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.4 – MFA](img/B18349_13_004.jpg)'
- en: Figure 13.4 – MFA
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.4 – MFA
- en: 'Once you’re past the login and MFA sections, you’ll find yourself on the AWS
    landing page. You’ll want to navigate to EC2, AWS Compute Resources in AWS speech
    (CPU, RAM), to understand the flavors of Linux available and what your options
    are beyond the default choices that come as standard Linux images (AMIs). Note
    that just because a flavor isn’t listed doesn’t mean it isn’t available: there
    are other options through the Marketplace or via custom images.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 完成登录和 MFA 部分后，你将进入 AWS 登陆页面。你需要进入 EC2，AWS 计算资源（CPU，RAM），以了解可用的 Linux 版本及其选择，超出标准
    Linux 镜像（AMI）的默认选项。请注意，虽然某些版本未列出，但并不意味着不可用：你可以通过 Marketplace 或自定义镜像找到其他选项。
- en: '![Figure 13.5 – Compute](img/B18349_13_005.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.5 – 计算](img/B18349_13_005.jpg)'
- en: Figure 13.5 – Compute
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.5 – 计算
- en: 'Once you’ve entered the world of AWS EC2, the easiest way to see what’s on
    offer is **EC2 Image Builder**. Image Builder translates the complex image world
    into easier-to-understand concepts that help transcribe your technical requirements
    into executions:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入 AWS EC2 世界，最简单的方式是查看 **EC2 镜像构建器**。镜像构建器将复杂的镜像世界转化为更容易理解的概念，帮助你将技术需求转化为执行：
- en: '![Figure 13.6 – Image Builder](img/B18349_13_006.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.6 – 镜像构建器](img/B18349_13_006.jpg)'
- en: Figure 13.6 – Image Builder
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.6 – 镜像构建器
- en: After entering **Image Builder**, you’ll want to navigate to **Image products**,
    under **Amazon Marketplace**. This is the portal to everything else offered under
    the AWS umbrella and will take you directly to the image products.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 进入 **镜像构建器** 后，你需要进入 **Amazon Marketplace** 下的 **镜像产品**。这是 AWS 提供的其他所有服务的入口，将直接带你进入镜像产品页面。
- en: '![Figure 13.7 – Image products](img/B18349_13_007.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.7 – 镜像产品](img/B18349_13_007.jpg)'
- en: Figure 13.7 – Image products
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.7 – 镜像产品
- en: Note
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Be careful when selecting Oracle AMIs. There are third parties that will charge
    you to use AMIs but will not provide Oracle tech support. Some of them can get
    very expensive, costing you hundreds of dollars per year.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 Oracle AMI 时需要小心。有些第三方会收取费用使用 AMI，但不会提供 Oracle 技术支持。它们中的一些可能会非常昂贵，每年花费数百美元。
- en: As mentioned in the preceding note, you will not find official Oracle Linux
    images on the **AWS Marketplace** tab. Follow the instructions in this recipe
    in the *How to do it…* section to access the official Oracle Linux images.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，你不会在**AWS Marketplace**标签下找到官方的 Oracle Linux 镜像。请按照*如何操作...*部分中的说明，访问官方的
    Oracle Linux 镜像。
- en: '![Figure 13.8 – Search in Marketplace for Oracle Linux](img/B18349_13_008.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.8 – 在 Marketplace 中搜索 Oracle Linux](img/B18349_13_008.jpg)'
- en: Figure 13.8 – Search in Marketplace for Oracle Linux
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.8 – 在 Marketplace 中搜索 Oracle Linux
- en: If you search for `oracle linux` on AWS Marketplace as in the preceding screenshot,
    you will only see offerings of Oracle Linux distributions built by other organizations
    and offered to the public through AWS Marketplace. *These are not official Oracle
    Linux images.* Later in this chapter, we’ll walk through building a VM in Oracle
    VirtualBox and converting that image, through AWS, into an AMI.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你像前面的截图那样在AWS Marketplace中搜索`oracle linux`，你将只看到其他组织构建并通过AWS Marketplace公开提供的Oracle
    Linux发行版。*这些不是官方的Oracle Linux镜像。* 本章稍后我们将介绍如何在Oracle VirtualBox中构建虚拟机，并通过AWS将该镜像转换为AMI。
- en: How to do it…
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'Here are the steps you need to follow to find Oracle AMIs:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是找到Oracle AMI的步骤：
- en: Point your browser to [https://console.aws.amazon.com/ec2/](https://console.aws.amazon.com/ec2/).
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开[https://console.aws.amazon.com/ec2/](https://console.aws.amazon.com/ec2/)。
- en: '![Figure 13.9 – Find AMIs under the Images dropdown](img/B18349_13_009.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.9 – 在镜像下拉菜单中查找AMI](img/B18349_13_009.jpg)'
- en: Figure 13.9 – Find AMIs under the Images dropdown
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.9 – 在镜像下拉菜单中查找AMI
- en: 'In the left navigation panel, select **AMIs**, then **Public images** from
    the window that appears:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧导航面板中，选择**AMIs**，然后从弹出的窗口中选择**公共镜像**：
- en: '![Figure 13.10 – Public images](img/B18349_13_010.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.10 – 公共镜像](img/B18349_13_010.jpg)'
- en: Figure 13.10 – Public images
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.10 – 公共镜像
- en: 'Filter by owner using the ID `131827586825`. The ID is related to official
    Oracle images, and will only show official Oracle Linux AMIs created by Oracle:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用ID `131827586825`按所有者筛选。该ID与官方Oracle镜像相关，只会显示由Oracle创建的官方Oracle Linux AMI：
- en: '![Figure 13.11 – Oracle AMIs](img/B18349_13_011.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.11 – Oracle AMI](img/B18349_13_011.jpg)'
- en: Figure 13.11 – Oracle AMIs
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.11 – Oracle AMI
- en: 'Select the official Oracle AMI you wish to use. After choosing the AMI, simply
    launch the AMI to continue the configuration of resources and the OS:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你希望使用的官方Oracle AMI。选择AMI后，直接启动该AMI以继续配置资源和操作系统：
- en: '![Figure 13.12 – Instance launch](img/B18349_13_012.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.12 – 实例启动](img/B18349_13_012.jpg)'
- en: Figure 13.12 – Instance launch
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.12 – 实例启动
- en: After launching, this will bring you to the OS image and VM buildout page (see
    the following figure). Here, you add a suitable name for your VM and choose the
    OS and network keypair for your VM, as shown in the following instance launch
    window.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动后，这将引导你进入操作系统镜像和虚拟机构建页面（见下图）。在这里，你为虚拟机添加一个合适的名称，并选择虚拟机的操作系统和网络密钥对，如下所示的实例启动窗口所示。
- en: '![Figure 13.13 – Instance configuration](img/B18349_13_013.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.13 – 实例配置](img/B18349_13_013.jpg)'
- en: Figure 13.13 – Instance configuration
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.13 – 实例配置
- en: 'Once you’ve launched your new VM from the chosen AMI, you’ll see the launch
    status:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你从选定的AMI启动了新的虚拟机，你将看到启动状态：
- en: '![Figure 13.14 – Launch status](img/B18349_13_014.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.14 – 启动状态](img/B18349_13_014.jpg)'
- en: Figure 13.14 – Launch status
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.14 – 启动状态
- en: Once your new Oracle Linux VM is created, you can visualize that VM on the **Compute**
    | **EC2** | **Images** tab in OCI. Then, click on the instance ID and copy the
    public IP address.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你的新Oracle Linux虚拟机创建完成，你可以在OCI的**计算** | **EC2** | **镜像**选项卡中查看该虚拟机。然后，点击实例ID并复制公共IP地址。
- en: '![Figure 13.15 – Public IP](img/B18349_13_015.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.15 – 公共IP](img/B18349_13_015.jpg)'
- en: Figure 13.15 – Public IP
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.15 – 公共IP
- en: 'Open either PuTTY or a terminal, depending on whether you’re on a Windows machine
    or a Mac, and `ssh` to your machine using OPC as the user (this is the default
    Oracle user; these terms are changeable, but we won’t go into this here). The
    first time, running the `ssh` command will add the key pair permanently for authentication
    to the list of known hosts:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开PuTTY或终端，具体取决于你是使用Windows机器还是Mac，然后使用OPC作为用户通过`ssh`连接到你的机器（这是默认的Oracle用户；这些术语是可以更改的，但这里我们不讨论）。第一次运行`ssh`命令时，将会永久添加密钥对到已知主机的身份验证列表中：
- en: '[PRE4]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Making Docker Desktop more manageable with Portainer
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Portainer使Docker Desktop更易于管理
- en: 'Portainer is a container management platform, as mentioned in the introduction
    to this chapter. Portainer was originally designed as a UI for Docker, but now
    it supports several other container environments as well. With over 1 million
    users and a significant presence on GitHub, Portainer offers two versions: the
    free and open source **Community Edition** (**CE**) and a paid **Enterprise Edition**
    (**EE**). In this recipe, we will be working with the free and open source version.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Portainer 是一个容器管理平台，如本章介绍中所提到的。Portainer 最初是作为 Docker 的用户界面设计的，但现在它也支持其他几个容器环境。Portainer
    拥有超过 100 万用户，并在 GitHub 上有着显著的存在。Portainer 提供两个版本：免费且开源的 **Community Edition**
    (**CE**) 和收费的 **Enterprise Edition** (**EE**)。在本食谱中，我们将使用免费和开源版本。
- en: If you prefer managing your containers through a GUI, Portainer is an excellent
    option. While CLI commands and API endpoints are great for development, a GUI
    is often more user-friendly for managing production applications. With Portainer,
    you can easily monitor multiple endpoints and grant team members access to a shared
    deployment environment. The following figure shows how Portainer and the container
    images align with Docker, and how Portainer makes managing images simpler. Portainer
    offers a UI over the Docker CLI, making it easier for the layman and seasoned
    engineer alike to navigate container management.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你更喜欢通过图形界面（GUI）管理容器，Portainer 是一个极好的选择。尽管命令行界面（CLI）和 API 端点对于开发很有用，但 GUI 往往更适合用于管理生产应用。通过
    Portainer，你可以轻松监控多个端点，并授予团队成员访问共享部署环境的权限。下图展示了 Portainer 如何与 Docker 的容器镜像对齐，以及
    Portainer 如何简化镜像管理。Portainer 提供了一个 Docker CLI 上的用户界面，使得无论是普通用户还是资深工程师，都能更轻松地管理容器。
- en: "![Figure 13.16 – Portainer container mana\uFEFF\uFEFFgement](img/B18349_13_016.jpg)"
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.16 – Portainer 容器管理](img/B18349_13_016.jpg)'
- en: Figure 13.16 – Portainer container management
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.16 – Portainer 容器管理
- en: 'Portainer is usually deployed within its own container. If you are using Docker,
    this guide will help you get Portainer up and running. However, if you prefer
    to use Kubernetes, you can also run Portainer directly using the official Helm
    chart. Here’s a brief overview of the steps you need to take to set up Portainer:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: Portainer 通常部署在自己的容器内。如果你使用的是 Docker，本指南将帮助你启动和运行 Portainer。然而，如果你更喜欢使用 Kubernetes，也可以使用官方的
    Helm 图表直接运行 Portainer。以下是设置 Portainer 所需步骤的简要概述：
- en: Install Docker.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Docker。
- en: Create and configure a container for Portainer.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建并配置 Portainer 的容器。
- en: Open the necessary ports and configure OCI accordingly.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开必要的端口并相应地配置 OCI。
- en: Log in to the Portainer interface and set up the UI.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录 Portainer 界面并设置 UI。
- en: The following sections will provide a detailed explanation of each step. Before
    proceeding, make sure you have installed Docker. If you’re using a Windows or
    Mac computer, you can download and install the latest version of the Docker Desktop
    installer. Linux users can experiment with the beta version of Docker Desktop
    for Linux or use the following instructions to install Docker Engine. For this
    guide, we’ll be creating an Oracle Linux VM in the OCI cloud and installing Portainer
    on that VM, rather than in a local environment.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将详细解释每个步骤。继续之前，请确保已经安装 Docker。如果你使用的是 Windows 或 Mac 计算机，可以下载并安装最新版本的 Docker
    Desktop 安装程序。Linux 用户可以试用 Docker Desktop for Linux 的测试版，或者使用以下说明安装 Docker Engine。对于本指南，我们将在
    OCI 云中创建一个 Oracle Linux 虚拟机，并在该虚拟机上安装 Portainer，而不是在本地环境中安装。
- en: Getting ready
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: There’s some initial work to carry out. As mentioned previously, Docker is a
    container management environment. Portainer, in this recipe, will reside in a
    Docker container, so we will need to install and configure Docker. You’ll reuse
    some of these skills again later on in this chapter when it comes to creating
    images. Indeed, this foundational work we’re doing here will help you throughout
    this chapter, as these skills lay the groundwork for managing Oracle Linux environments,
    whether they’re in the cloud or on-premises.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 需要进行一些初步工作。如前所述，Docker 是一个容器管理环境。在本食谱中，Portainer 将位于 Docker 容器中，因此我们需要安装并配置
    Docker。你将在本章稍后创建镜像时再次使用其中一些技能。实际上，我们在这里做的基础工作将帮助你贯穿整个章节，因为这些技能为管理 Oracle Linux
    环境打下了基础，无论它们是在云中还是本地。
- en: '![Figure 13.17 – Portainer VM creation](img/B18349_13_017.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.17 – Portainer 虚拟机创建](img/B18349_13_017.jpg)'
- en: Figure 13.17 – Portainer VM creation
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.17 – Portainer 虚拟机创建
- en: The information required to log in to the Portainer VM is located in the image
    data, as shown previously. Remember, just like in the previous chapters related
    to creating VMs in OCI, to create and add the public key. As we saw previously,
    this is the only way you’ll be able to log in to this environment.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 登录 Portainer 虚拟机所需的信息位于前面显示的镜像数据中。记住，就像前面在创建 OCI 虚拟机时提到的那样，需要创建并添加公钥。正如我们之前所看到的，这是你能够登录到这个环境的唯一方式。
- en: 'Log in to the VM as shown, using the default OPC user:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，使用默认的 OPC 用户登录到虚拟机：
- en: '[PRE5]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After logging in, you’ll want to update the repositories. To do this, as in
    the other recipes in this cookbook, you’ll need superuser privileges. The following
    output from the update was truncated for length:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，你需要更新仓库。与本书中其他食谱类似，你需要超级用户权限。由于输出内容较长，更新的输出已被截断：
- en: '[PRE6]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'After updating the repositories, we’re ready to start installing Docker and
    begin our container journey. In order to install Docker, we’ll need to install
    the ZIP utilities to unzip the required files that we have downloaded. To do this,
    we’ll use the `dnf` command:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 更新仓库后，我们准备好开始安装 Docker 并开启我们的容器之旅。为了安装 Docker，我们需要安装 ZIP 工具以解压我们已下载的所需文件。为此，我们将使用
    `dnf` 命令：
- en: '[PRE7]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After installing the ZIP utilities, we’ll have to enable the Docker repository
    in order to download Docker. The following is the command to enable the repo and
    add it to the repo list:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 ZIP 工具后，我们需要启用 Docker 仓库，以便下载 Docker。以下是启用仓库并将其添加到仓库列表的命令：
- en: '[PRE8]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'We need to eliminate a vulnerability that allows attackers to overwrite the
    host `runc` binary by executing a root command with any type of container. Attackers
    can exploit this vulnerability to use a new container with an attacker-controlled
    image or infiltrate an existing container if they have previous write access:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要消除一个漏洞，该漏洞允许攻击者通过执行任何类型的容器中的 root 命令来覆盖主机的 `runc` 二进制文件。攻击者可以利用这个漏洞，通过使用攻击者控制的镜像启动新容器，或者如果他们之前拥有写入权限，还可以渗透到现有容器中：
- en: '**[root@portainer2 ~]# dnf remove -****y runc**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**[root@portainer2 ~]# dnf remove -****y runc**'
- en: 'Install Docker using the following `dnf` command. The following output has
    been truncated for length:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下 `dnf` 命令安装 Docker。由于输出内容较长，已被截断：
- en: '[PRE9]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Once Docker is installed, we can move on to enabling the Docker service and
    starting Docker Engine. In order to enable the Docker service, we need to use
    `systemctl`, as shown in the following snippet:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 Docker 安装完成，我们可以继续启用 Docker 服务并启动 Docker 引擎。为了启用 Docker 服务，我们需要使用 `systemctl`，如下所示：
- en: '[PRE10]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Once the service is enabled, we can move to start the Docker service/Docker
    Engine. We’ll once again be using `systemctl` to call Docker Engine to start:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦服务启用，我们可以继续启动 Docker 服务/Docker 引擎。我们将再次使用 `systemctl` 调用 Docker 引擎启动：
- en: '[PRE11]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'After starting the service, we’ll want to ascertain the status of the service
    to be assured that Docker has started properly and the service is running and
    healthy:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 启动服务后，我们需要检查服务的状态，以确保 Docker 已正确启动且服务正在运行且健康：
- en: '[PRE12]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Now that our Docker Engine is up and running, we want to see what Docker version
    is running, as well as its health and all other Docker Engine-related data:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的 Docker 引擎已启动并运行，我们想查看正在运行的 Docker 版本，以及其健康状态和所有其他与 Docker 引擎相关的数据：
- en: '[PRE13]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Since Portainer requires a later Python environment, we’ll want to be sure
    that the correct version is installed. Python is a prerequisite to the installation.
    The following command output has been truncated for length:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Portainer 需要更高版本的 Python 环境，我们需要确保安装了正确的版本。Python 是安装的前提条件。以下命令的输出由于内容较长，已被截断：
- en: '[PRE14]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: To install Python, we use PIP, which is the standard package manager for Python.
    PIP allows you to manage and install all packages that aren’t typically part of
    the standard Python library. Installing Python is an underlying requirement for
    the Portainer installation.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Python 时，我们使用 PIP，这是 Python 的标准包管理器。PIP 允许你管理和安装所有非标准 Python 库中的包。安装 Python
    是 Portainer 安装的基础要求。
- en: 'You’ll want to exit out of root to install this version of Python:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要退出 root 用户来安装此版本的 Python：
- en: '[PRE15]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You’ll want to be root again here to install and update yum packages. Yum requires
    root privileges to execute, so you’ll want to `sudo` or `su` to root.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要再次以 root 身份登录来安装和更新 yum 包。Yum 需要 root 权限来执行，所以你需要使用 `sudo` 或 `su` 切换到 root
    用户。
- en: 'After we’ve updated the Python installation, we need to install and update
    the Python library requirements for Docker and Portainer:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 更新Python安装后，我们需要安装并更新Docker和Portainer的Python库要求：
- en: '[PRE16]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You’ll want to exit out of root here to install `docker-compose`, using Python
    pip to execute. Python pip is the standard for installing any Python package and
    is the go-to method for installing those packages in a secure manner:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要退出root账户以安装`docker-compose`，并使用Python pip来执行。Python pip是安装任何Python包的标准方法，是以安全方式安装这些包的首选方法：
- en: '[PRE17]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: How to do it…
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'Now we’re ready to start installing and configuring our Portainer environment.
    We’ll have to first create a volume for Portainer. We do this by telling Docker
    to create that volume:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们准备开始安装和配置Portainer环境。我们首先需要为Portainer创建一个卷。我们通过告诉Docker创建该卷来完成此操作：
- en: '[PRE18]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'After creating the volume, we install the Portainer container and expose the
    port that the Portainer UI will use, and through which we will access that UI:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建卷后，我们安装Portainer容器并暴露Portainer UI将使用的端口，通过该端口我们将访问UI：
- en: '[PRE19]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![Figure 13.18 – Docker containers running](img/B18349_13_018.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.18 – Docker容器运行](img/B18349_13_018.jpg)'
- en: Figure 13.18 – Docker containers running
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.18 – Docker容器运行
- en: Once Portainer is installed, and `docker ps` shows Portainer is up and running,
    we’ll have to make sure OCI is configured to allow port `9000` to be visible.
    In order to expose this port, we’ll have to inform OCI of the **Virtual Cloud
    Network** (**VCN**) we’re working in to allow that port to open.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦Portainer安装完成，并且`docker ps`显示Portainer已经启动，我们需要确保OCI已配置为允许端口`9000`可见。为了暴露这个端口，我们需要告诉OCI我们正在使用的**虚拟云网络**（**VCN**），以允许该端口开放。
- en: '![Figure 13.19 – Security list navigation](img/B18349_13_019.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.19 – 安全列表导航](img/B18349_13_019.jpg)'
- en: Figure 13.19 – Security list navigation
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.19 – 安全列表导航
- en: After we have navigated to the relevant security list, we’ll want to create
    a rule like that shown in the following screenshot.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们导航到相关的安全列表后，我们将创建一个如以下截图所示的规则。
- en: '![Figure 13.20 – VCN security list rule creation](img/B18349_13_020.jpg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.20 – VCN安全列表规则创建](img/B18349_13_020.jpg)'
- en: Figure 13.20 – VCN security list rule creation
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.20 – VCN安全列表规则创建
- en: Once the rule is created, we can see the port exposed outside of OCI.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦规则创建完成，我们可以看到端口已暴露在OCI之外。
- en: '![Figure 13.21 – Security list rule](img/B18349_13_021.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.21 – 安全列表规则](img/B18349_13_021.jpg)'
- en: Figure 13.21 – Security list rule
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.21 – 安全列表规则
- en: We’re able to open a browser and access the Portainer UI. In order to reach
    the UI, we need two items, the VM’s public IP and the port. The following screenshot
    shows the port, `9000`, and the IP is the same IP we used to access the VM when
    we used `ssh` to log in to the VM.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以打开浏览器并访问Portainer UI。为了访问该UI，我们需要两个信息：虚拟机的公网IP和端口。以下截图显示了端口`9000`，IP地址与我们使用`ssh`登录虚拟机时使用的IP相同。
- en: You can also find the IP on the OCI console. Navigate to your VM from the **Compute**
    menu, then go to **Instance**, which will take you to all your created VMs in
    the OCI console menu. Then, copy the IP address of the VM, as shown in the following
    screenshot.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以在OCI控制台找到该IP。通过**计算**菜单导航到你的虚拟机，然后进入**实例**，这将带你到OCI控制台菜单中所有已创建的虚拟机。然后，复制虚拟机的IP地址，如下图所示。
- en: '![Figure 13.22 – IP of the VM](img/B18349_13_022.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.22 – 虚拟机的IP](img/B18349_13_022.jpg)'
- en: Figure 13.22 – IP of the VM
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.22 – 虚拟机的IP
- en: Once you have the address, open your browser and enter that information in the
    form of `https://<IP>:9000`. In our case, this is `https://132.226.58.24:9000`.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获得地址后，打开浏览器并以`https://<IP>:9000`的形式输入该信息。在我们的例子中，这是`https://132.226.58.24:9000`。
- en: 'Note: You may have to refresh the Portainer environment if you get a stale
    page like the following:'
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 注意：如果你遇到过时的页面，可能需要刷新Portainer环境，像下面这样：
- en: '![Figure 13.23 – Portainer landing page](img/B18349_13_023.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.23 – Portainer登录页面](img/B18349_13_023.jpg)'
- en: Figure 13.23 – Portainer landing page
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.23 – Portainer登录页面
- en: 'In order to refresh, you’ll need to restart the Portainer environment by running
    the `docker` `restart` command:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了刷新，你需要通过运行`docker`的`restart`命令来重启Portainer环境：
- en: '[PRE20]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: After you’ve restarted Portainer, you can go back to the browser and refresh
    the page. You should be able to hit the Portainer welcome page now.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启Portainer后，你可以返回浏览器并刷新页面。现在应该能够进入Portainer欢迎页面。
- en: '![Figure 13.24 – Portainer initial configuration](img/B18349_13_024.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.24 – Portainer初始配置](img/B18349_13_024.jpg)'
- en: Figure 13.24 – Portainer initial configuration
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.24 – Portainer初始配置
- en: Portainer will make you set a 12-digit alphanumeric password for the environment.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Portainer将要求你设置一个12位字母数字密码以保护环境安全。
- en: '![Figure 13.25 – Portainer password creation](img/B18349_13_025.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.25 – Portainer 密码创建](img/B18349_13_025.jpg)'
- en: Figure 13.25 – Portainer password creation
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.25 – Portainer 密码创建
- en: You now have a working Portainer environment running inside a container in Docker,
    hosted by a VM in OCI.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你的工作Portainer环境正在OCI中的VM中的Docker容器内运行。
- en: Using VirtualBox to springboard VMs to OCI
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用VirtualBox将VM跳板到OCI
- en: Working 9 to 5 with workloads?
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 工作时间从早上 9 点到下午 5 点？
- en: One common factor in a number of these recipes is moving workloads from one
    environment to another. Working between different hypervisor types (e.g., VMware,
    KVM, and Xen) is done using common formats, such as the **Open Virtualization
    Format**/**Open Virtualization Appliance** (**OVF**/**OVA**). Essentially, this
    puts components into a centrally understandable format that most virtualization
    host environments can understand. Images are transferable and interchangeable
    between virtualization formats. In this case, there are a few more puzzle pieces
    that need to be in place, such as network, storage, and a limitation on the number
    of attached drives.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多这些步骤中的一个共同因素是将工作负载从一个环境移动到另一个环境。使用通用格式（例如**开放虚拟化格式**/**开放虚拟化设备**（**OVF**/**OVA**）），可以在不同的虚拟化主机环境之间完成不同类型的虚拟化（例如VMware、KVM和Xen）。基本上，这将组件放入一个大多数虚拟化主机环境可以理解的中心化可理解格式中。图像可以在虚拟化格式之间进行传输和交换。在这种情况下，还需要一些拼图块，如网络、存储和连接的驱动器数量限制。
- en: Imagine a world where any workload (be it application- or database-based) can
    stay with you throughout the project life cycle, and be transferable between different
    virtualization farms, or CSPs. You can carry these created environments with you
    throughout your environments.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一个世界，在这个世界中，任何工作负载（无论是基于应用程序还是数据库的）都可以在整个项目生命周期中与你同在，并且可以在不同的虚拟化农场或云服务提供商之间转移。你可以在你的不同环境中携带这些创建的环境。
- en: VirtualBox resides on your system as a host and is classified as a “type 2”
    hypervisor, allowing you to host multiple guest machines on your host environment.
    Your host environment, VirtualBox, has every aspect of a virtual farm that one
    would expect from a larger enterprise product, just broken down into much smaller
    and simpler parts. The compute and memory aspects are carved out from your host
    environment (your computer). The storage components are comprised of parts of
    your local hard drive, or external storage environments such as an externally
    attached NVMe drives. Lastly, the network is made up of bridge components, which
    are virtual networks that sit above your physical interfaces.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: VirtualBox作为主机存在于你的系统上，并被归类为“类型2”虚拟化监视程序，允许你在主机环境上托管多个客户机。你的主机环境，VirtualBox，拥有大企业产品所期望的每个虚拟农场的方面，只是将其分解为更小、更简单的部分。计算和内存方面从主机环境（你的计算机）中划分出来。存储组件由你的本地硬盘部分或外部存储环境（如外部连接的NVMe驱动器）组成。最后，网络由桥接组件组成，这些虚拟网络位于你的物理接口之上。
- en: What comes first, the VM or the OS?
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机和操作系统，哪个先来？
- en: Every evolution begins with a foundation. Before we can even consider migrating
    a VM from VirtualBox to OCI, we must prepare that VM for migration. In the case
    of VirtualBox, there are just a couple of prework items to complete before you
    build a VM to migrate to a cloud environment, such as OCI. We’ll walk through
    these prerequisites throughout this recipe. The following diagram describes the
    stages of configuring, installing, and migrating a VM to a CSP.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 每一次进化都从一个基础开始。在我们考虑将虚拟机从VirtualBox迁移到OCI之前，我们必须准备好这个虚拟机进行迁移。在VirtualBox的情况下，建立云环境（如OCI）中可以迁移的虚拟机之前，只需要完成一些预先工作。我们将在这个步骤中详细介绍这些先决条件。以下图解释了配置、安装和迁移VM到云服务提供商的阶段。
- en: '![Figure 13.26 – VM configuration stages](img/B18349_13_026.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.26 – 虚拟机配置阶段](img/B18349_13_026.jpg)'
- en: Figure 13.26 – VM configuration stages
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.26 – 虚拟机配置阶段
- en: Getting ready
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Preparing the OS isn’t any different from setting the foundation before building
    a house. I find it easier to initially configure the OS on the VirtualBox user
    interface configuration, then `ssh` after you bring up networking and have established
    communication, meaning you have connectivity into the virtual machine.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 准备操作系统与建房子前的基础设置没有什么不同。我发现最好在VirtualBox用户界面配置操作系统，然后在网络设置并建立通信后使用`ssh`，这意味着你可以连接到虚拟机。
- en: 'There are five stages in preparing a VM image to be imported into OCI as an
    image. These are as follows:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备将VM镜像导入OCI作为镜像时，有五个阶段。如下所示：
- en: '**Interface names**: This involves standardization to ensure interface names
    are recognized by the host environment. This is translatable to how the host system
    implements networking.'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**接口名称**：这涉及标准化，以确保接口名称被主机环境识别。这可以转化为主机系统如何实现网络连接。'
- en: '**Interface configuration**: Here, we confirm there are no MAC addresses shown,
    among other pre-configuration tasks. Duplicate MAC addresses lead to extra complexity,
    making this a key point in configuration.'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**接口配置**：在这里，我们确认没有显示MAC地址，及其他预配置任务。重复的MAC地址会导致额外的复杂性，这使得它在配置中成为一个关键点。'
- en: '**GRUB(2) configuration**: This involves preparing the kernel.'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**GRUB(2)配置**：这涉及准备内核。'
- en: '**Serial console configuration**: This step is pretty much the number-one error
    on import and use. Without it, your OCI environment will fail on import, or the
    VM will not boot.'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**串口控制台配置**：这是导入和使用过程中最常见的错误之一。没有这个配置，OCI环境将在导入时失败，或者虚拟机无法启动。'
- en: '**Rebooting the OS**; that is, restarting your machine.'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**重启操作系统**；即重新启动你的机器。'
- en: 'The following diagram walks through the configuration stages of the OS from
    boot to reboot:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示展示了操作系统从启动到重启的配置阶段：
- en: '![Figure 13.27 – OS configuration stages](img/B18349_13_027.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图13.27 – 操作系统配置阶段](img/B18349_13_027.jpg)'
- en: Figure 13.27 – OS configuration stages
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.27 – 操作系统配置阶段
- en: 'Notice the interface names after the change:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 注意更改后的接口名称：
- en: '[PRE21]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We’ll need to execute the change on the kernel with the changes shown in the
    following code block, renaming the interface to match. This will require GRUB(2),
    as GRUB is the middleman between the kernel and the OS. We have the current interface
    names now, so where do we go from here? What we’re doing here is renaming the
    interfaces to reflect a more acceptable name, such as `net0` or `Eth0`. So, we
    have to move (`mv`) or rename the interface filenames:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在内核上执行以下代码块中显示的更改，重命名接口以进行匹配。这将需要GRUB(2)，因为GRUB是内核和操作系统之间的中介。现在我们有了当前的接口名称，那么接下来怎么办呢？我们这里做的事情是将接口重命名为更合适的名称，如`net0`或`Eth0`。因此，我们需要移动（`mv`）或重命名接口文件名：
- en: '[PRE22]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'After we rename the interfaces, we need to change the entries in the configuration
    files themselves to match the filename. In the following code, we’re renaming
    the configuration of `net0`:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 重命名接口后，我们需要在配置文件中更改相应的条目以匹配文件名。在以下代码中，我们重命名了`net0`的配置：
- en: '[PRE23]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We’re doing the same thing here as previously, but in this case, we’re changing
    `net1`:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里做的与之前相同，不过这次我们更改的是`net1`：
- en: '[PRE24]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'In the following code block, we’re using `ip a` to identify the interfaces
    and make sure our changes have taken effect:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码块中，我们使用`ip a`来识别接口，并确保我们的更改已生效：
- en: '[PRE25]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'What does GRUB configuration do? It alters the way the OS boots and loads kernels.
    For example, let’s look at what changing the serial connection details accomplishes.
    (We’re getting a little off-subject here; however, it’s important to understand
    how OCI works in worse-case scenarios.) Imagine you can’t reach your server; the
    network is down, but the server is green and up. You can use a serial connection
    as a back door. The following `console` edit instructs the OS to allow an out-of-band
    connection to the VM:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: GRUB配置有什么作用？它改变了操作系统的启动方式和加载内核的方式。例如，我们来看看改变串口连接详情的作用。（我们有点跑题了；不过，了解OCI在最坏情况下的工作方式是很重要的。）假设你无法连接到你的服务器，网络中断了，但服务器却是绿色的并且在线。你可以使用串口连接作为后门。以下`console`编辑指示操作系统允许与虚拟机的带外连接：
- en: '[PRE26]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The following command reloads GRUB. As we can’t edit GRUB directly, we edit
    it through a configuration file, and use this to execute edits on GRUB. This tells
    the OS that we’re ready to reload and have entered new data:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令重新加载GRUB。由于我们不能直接编辑GRUB，所以通过配置文件来编辑它，并使用此文件执行GRUB上的修改。这告诉操作系统我们已准备好重新加载并输入了新的数据：
- en: '[PRE27]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Since we edited GRUB and made a couple of other OS changes, it’s good to get
    a fresh start with things:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们编辑了GRUB并进行了其他一些操作系统更改，重新开始是个不错的选择：
- en: '[PRE28]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Going through these configuration changes can be confusing. When it comes down
    to it, we’re narrowing the differences between OCI-born instances and the instance
    we’re configuring in this recipe. The GRUB changes are getting the environment
    ready to operate within the OCI tenancy.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些配置更改可能会让人感到困惑。归根结底，我们是在缩小OCI创建的实例和我们在此食谱中配置的实例之间的差异。GRUB 更改是为了使环境准备好在 OCI
    租户中运行。
- en: There are a few more steps you’ll have to configure on your host machine for
    connectivity between VirtualBox and OCI. The way VirtualBox communicates with
    OCI is through an **Application Programming Interface** (**API**). This connectivity
    requires public and private API keys to be created, and that public key to be
    uploaded to OCI.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要在主机机器上配置几个步骤，以便实现 VirtualBox 和 OCI 之间的连接。VirtualBox 与 OCI 之间的通信通过**应用程序编程接口**（**API**）实现。此连接需要创建公钥和私钥，并将公钥上传到
    OCI。
- en: 'There are several steps in the authentication between VirtualBox and OCI. The
    following are the components, and their OCID/outputs are what will be needed for
    connectivity to OCI:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: VirtualBox 和 OCI 之间的身份验证过程包含多个步骤。以下是组件及其 OCID/输出，它们是与 OCI 连接所必需的。
- en: 'OCI account:'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OCI 账户：
- en: Tenancy
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 租户
- en: Compartment
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分区
- en: VCN
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: VCN
- en: Storage bucket
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储桶
- en: API keys
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: API 密钥
- en: 'VirtualBox – make sure to create and capture the required keys, as shown after
    this list:'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VirtualBox —— 确保创建并保存所需的密钥，如下所示：
- en: API keys
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: API 密钥
- en: 'Host OS (your computer) – make sure to create and capture the required keys,
    as detailed after this list:'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机操作系统（你的计算机）——确保创建并保存所需的密钥，如下所示：
- en: API keys
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: API 密钥
- en: Private and public keys are the gateway components to sharing information from
    one environment with another. A public key can be shared and is used as an encryption
    method to keep a packet. The private key is kept local, is not shared beyond that
    user, and is used to decrypt the packet. When placed together, the private and
    public keys create a lockbox, keeping the packets flowing between two systems
    secret while in transit. `openssl` is used to generate the keys, both public and
    private.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 私钥和公钥是从一个环境共享信息到另一个环境的关键信息。公钥可以共享，并用作加密方法来保护数据包。私钥保留在本地，不会被共享，仅由该用户使用，用于解密数据包。当公钥和私钥一起使用时，它们形成一个锁箱，在传输过程中保护数据包在两个系统之间流动的安全性。`openssl`
    被用来生成公钥和私钥。
- en: '![Figure 13.28 – OpenSSL key creation](img/B18349_13_028.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.28 – OpenSSL 密钥创建](img/B18349_13_028.jpg)'
- en: Figure 13.28 – OpenSSL key creation
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.28 – OpenSSL 密钥创建
- en: After creating the preceding key, you need to change the permissions so the
    key can be used only by you. We’ll use `chmod` to configure those permissions
    and allow the key to be used by the user.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建上述密钥后，你需要更改权限，使得该密钥只能由你使用。我们将使用`chmod`来配置这些权限，允许该密钥由用户使用。
- en: '![Figure 13.29 – OpenSSL key permissions](img/B18349_13_029.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.29 – OpenSSL 密钥权限](img/B18349_13_029.jpg)'
- en: Figure 13.29 – OpenSSL key permissions
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.29 – OpenSSL 密钥权限
- en: After creating the private key, we need to create the public key. This is the
    key you’ll be uploading to OCI so VirtualBox and OCI can communicate with one
    another. We use the private key to create a public key so the two environments
    can communicate with one another.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建私钥之后，我们需要创建公钥。这个公钥将上传到 OCI，以便 VirtualBox 和 OCI 进行通信。我们使用私钥来创建公钥，从而使两个环境能够互相通信。
- en: '![Figure 13.30 – Public key creation](img/B18349_13_030.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.30 – 公钥创建](img/B18349_13_030.jpg)'
- en: Figure 13.30 – Public key creation
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.30 – 公钥创建
- en: The next steps are to collect the required data from your OCI cloud account
    to enter the VirtualBox configuration. The information entered will help VirtualBox
    integrate, through the OCI API, your OCI tenancy and compartments through your
    VCN. Imagine this as building a highway between VirtualBox and OCI. The keys,
    both public and private, are the keys to the kingdom, allowing packets to traverse
    that highway.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是从 OCI 云账户中收集必要的数据，以便输入到 VirtualBox 配置中。所输入的信息将帮助 VirtualBox 通过 OCI API 集成你的
    OCI 租户和分区，通过你的 VCN。可以将其想象为在 VirtualBox 和 OCI 之间架设一条高速公路。公钥和私钥就像是这条公路的钥匙，允许数据包在高速公路上穿行。
- en: How to do it…
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'The following steps walk through uploading the key and configuring VirtualBox
    to communicate with OCI:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤将介绍如何上传密钥并配置 VirtualBox 与 OCI 的通信：
- en: First, just as with any other CSP, we need to log in to our account.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，就像任何其他云服务提供商（CSP）一样，我们需要登录到我们的账户。
- en: '![Figure 13.31 – Log in to your account](img/B18349_13_031.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.31 – 登录到你的账户](img/B18349_13_031.jpg)'
- en: Figure 13.31 – Log in to your account
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.31 – 登录到你的账户
- en: And this is where we wait for OCI to log us in…
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们就等着OCI登录我们了……
- en: '![Figure 13.32 – Logging in](img/B18349_13_032.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.32 – 登录中](img/B18349_13_032.jpg)'
- en: Figure 13.32 – Logging in
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.32 – 登录中
- en: Once you’ve logged in to your account, you’re ready to log in to the tenancy
    itself. This is where the action begins, and you’ll start to see your efforts
    pay off. We start by identifying our tenancy and continue from there.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的账户后，你就准备好登录到租户了。这是操作的起点，你将开始看到自己的努力得到回报。我们从识别租户开始，然后继续进行。
- en: '![Figure 13.33 – Choose and log in to verify your identity provider](img/B18349_13_033.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.33 – 选择并登录以验证身份提供者](img/B18349_13_033.jpg)'
- en: Figure 13.33 – Choose and log in to verify your identity provider
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.33 – 选择并登录以验证身份提供者
- en: Once you’re logged in and inside the tenancy, most of the data needed will be
    in the user settings and is linked to the public key upload. The keys themselves
    generate a fingerprint, which is the pathway between OCI and VirtualBox.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦登录并进入租户，你需要的大部分数据将会出现在用户设置中，并且与公钥上传相关联。密钥本身会生成一个指纹，这个指纹是OCI与VirtualBox之间的通道。
- en: You’ll see your user icon on the right-hand side of the OCI portal. This will
    take you into the area with all your account, tenancy, and personal data. This
    is also where you’ll configure your key access.
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你将在OCI门户的右侧看到你的用户图标。点击它将带你进入包含账户、租户和个人数据的区域。这里也是你配置密钥访问权限的地方。
- en: '![Figure 13.34 – OCI profile](img/B18349_13_034.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.34 – OCI配置文件](img/B18349_13_034.jpg)'
- en: Figure 13.34 – OCI profile
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.34 – OCI配置文件
- en: Once you expand that menu, you’ll see **User settings**. This is the access
    point for all your user access to OCI.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 展开该菜单后，你将看到**用户设置**。这是你访问OCI的所有用户设置的入口。
- en: '![Figure 13.35 – User settings](img/B18349_13_035.jpg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.35 – 用户设置](img/B18349_13_035.jpg)'
- en: Figure 13.35 – User settings
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.35 – 用户设置
- en: The **API Keys** section will allow you to enter key values for access.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**API密钥**部分将允许你输入用于访问的密钥值。'
- en: '![Figure 13.36 – Administrators’ privileges and API keys](img/B18349_13_036.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.36 – 管理员权限和API密钥](img/B18349_13_036.jpg)'
- en: Figure 13.36 – Administrators’ privileges and API keys
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.36 – 管理员权限和API密钥
- en: In the following screenshot, you can see all the keys currently uploaded to
    OCI, reflecting your specific user. If you click **Add API Key**, this will bring
    up the options for adding a key.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下面的截图中，你可以看到所有当前上传到OCI的密钥，显示的是你的特定用户。如果点击**添加API密钥**，将会弹出添加密钥的选项。
- en: '![Figure 13.37 – API keys](img/B18349_13_037.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.37 – API密钥](img/B18349_13_037.jpg)'
- en: Figure 13.37 – API keys
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.37 – API密钥
- en: Select **Choose Public Key File** and then select the file from your local environment.
    Remember we created a public key in the last section. We’re going to select that
    public key here.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**选择公钥文件**，然后从本地环境中选择文件。记得我们在上一节中创建了一个公钥。我们将在这里选择那个公钥。
- en: '![Figure 13.38 – Public key](img/B18349_13_038.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.38 – 公钥](img/B18349_13_038.jpg)'
- en: Figure 13.38 – Public key
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.38 – 公钥
- en: 'Once you’ve chosen the key and it’s uploaded to OCI, you’ll see that key on
    screen. Click **Add**:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦选择了密钥并将其上传到OCI，你将在屏幕上看到该密钥。点击**添加**：
- en: '![Figure 13.39 – Added key committed](img/B18349_13_039.jpg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.39 – 已提交的已添加密钥](img/B18349_13_039.jpg)'
- en: Figure 13.39 – Added key committed
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.39 – 已提交的已添加密钥
- en: Now that we’ve got past the key imports, we’ve arrived at a point where we can
    start to configure access. A configuration screen will appear after you’ve officially
    added the key. This configuration file is all that you need, aside from a compartment
    OCID, which we’ll talk about later, to configure the VirtualBox/OCI interface.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经完成了密钥导入，我们来到了可以开始配置访问权限的阶段。在你正式添加密钥后，将会显示一个配置界面。这个配置文件就是你所需要的一切，除了一个我们稍后会讨论的**分区OCID**，用于配置VirtualBox/OCI接口。
- en: '![Figure 13.40 – Configuration displayed](img/B18349_13_040.jpg)'
  id: totrans-247
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.40 – 显示的配置](img/B18349_13_040.jpg)'
- en: Figure 13.40 – Configuration displayed
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.40 – 显示的配置
- en: Copy the information under **Configuration File Preview**. You’ll need it to
    configure VirtualBox to communicate with OCI.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 复制**配置文件预览**下的信息。你将需要这些信息来配置VirtualBox与OCI的通信。
- en: 'We’re heading back to VirtualBox now. Near the thumbtack icon will be a menu
    bar. This menu is the heart of VirtualBox and allows you to alter everything from
    vdisks, as shown in the following screenshot, to network configurations and, of
    course, settings relating to the cloud. Expand the **Cloud** menu item to access
    the OCI settings:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们回到 VirtualBox。接近图钉图标的地方会有一个菜单栏。这个菜单是 VirtualBox 的核心，允许您更改从 vdisk（如以下截图所示）到网络配置，当然也包括与云相关的设置。展开
    **Cloud** 菜单项以访问 OCI 设置：
- en: '![Figure 13.41 – VirtualBox OCI cloud configuration settings](img/B18349_13_041.jpg)'
  id: totrans-251
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.41 – VirtualBox OCI 云配置设置](img/B18349_13_041.jpg)'
- en: Figure 13.41 – VirtualBox OCI cloud configuration settings
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.41 – VirtualBox OCI 云配置设置
- en: Once you’ve selected this option, you’ll have to enter a name. I will enter
    `OCI`, since we are using OCI.
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择此选项后，您需要输入一个名称。我将输入 `OCI`，因为我们正在使用 OCI。
- en: '![Figure 13.42 – Configuration name](img/B18349_13_042.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.42 – 配置名称](img/B18349_13_042.jpg)'
- en: Figure 13.42 – Configuration name
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.42 – 配置名称
- en: Now, under **Oracle Cloud Infrastructure**, you’ll see your new profile, **OCI**.
    You can click on **Properties**, which will allow you to configure that OCI profile.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在 **Oracle Cloud Infrastructure** 下，您会看到您的新配置文件 **OCI**。您可以点击 **属性**，这将允许您配置该
    OCI 配置文件。
- en: '![Figure 13.43 – Name committed](img/B18349_13_043.jpg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.43 – 名称已提交](img/B18349_13_043.jpg)'
- en: Figure 13.43 – Name committed
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.43 – 名称已提交
- en: This is where it’s handy to have the OCI portal open in another window, or cut
    and paste the variables in a notepad. You’ll need all the info we went over a
    couple of sections ago in *Figure 13**.40*.
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这时，打开另一个窗口中的 OCI 门户，或者将变量复制粘贴到记事本中会非常方便。您需要我们在几节前的 *图 13.40* 中讲解的所有信息。
- en: 'The first OCID you’ll want to copy is that of `user`:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要复制的第一个 OCID 是 `user` 的：
- en: '![Figure 13.44 – User OCID](img/B18349_13_044.jpg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.44 – 用户 OCID](img/B18349_13_044.jpg)'
- en: Figure 13.44 – User OCID
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.44 – 用户 OCID
- en: Paste that OCID into the **user** property on the OCI profile, shown in the
    preceding screenshot, into VirtualBox. Hopefully, you’ll now see where we’re going
    with this.
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将该 OCID 粘贴到 OCI 配置文件中的 **user** 属性中，如前面的截图所示，再粘贴到 VirtualBox 中。希望您现在能明白我们要做什么。
- en: '![Figure 13.45 – Configuring the user OCID](img/B18349_13_045.jpg)'
  id: totrans-264
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.45 – 配置用户 OCID](img/B18349_13_045.jpg)'
- en: Figure 13.45 – Configuring the user OCID
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.45 – 配置用户 OCID
- en: As previously, but this time with `tenancy`, copy the OCID and go back to VirtualBox.
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如之前所示，这次复制 `tenancy` 的 OCID 并返回到 VirtualBox。
- en: '![Figure 13.46 – Tenancy OCID](img/B18349_13_046.jpg)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.46 – 租户 OCID](img/B18349_13_046.jpg)'
- en: Figure 13.46 – Tenancy OCID
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.46 – 租户 OCID
- en: Again, as previously, paste the tenancy OCID in the **tenancy** field.
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次，如之前所示，将租户 OCID 粘贴到 **tenancy** 字段中。
- en: '![Figure 13.47 – Configuring the tenancy OCID](img/B18349_13_047.jpg)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.47 – 配置租户 OCID](img/B18349_13_047.jpg)'
- en: Figure 13.47 – Configuring the tenancy OCID
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.47 – 配置租户 OCID
- en: Go back to your notepad or OCI portal and copy the `region` value, in this case,
    `us-asburn-1`, as the following screenshot will show. Remember, all this will
    make sense shortly. Essentially, what we’re doing is instructing VirtualBox where
    to go, how to get there, and what region, tenancy, user, and key to use for access.
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到您的记事本或 OCI 门户并复制 `region` 值，在本例中是 `us-asburn-1`，如下截图所示。记住，所有这些很快就会变得清晰。基本上，我们正在指示
    VirtualBox 去哪里，如何到达那里，并使用哪些区域、租户、用户和密钥来进行访问。
- en: '![Figure 13.48 – Region](img/B18349_13_048.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.48 – 区域](img/B18349_13_048.jpg)'
- en: Figure 13.48 – Region
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.48 – 区域
- en: As previously, paste the region in the correct field.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如之前所示，将区域粘贴到正确的字段中。
- en: '![Figure 13.49 – Configuring the region](img/B18349_13_049.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.49 – 配置区域](img/B18349_13_049.jpg)'
- en: Figure 13.49 – Configuring the region
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.49 – 配置区域
- en: Next, you’ll need to go to the OCI console or notepad and copy the `fingerprint`
    value to input into VirtualBox.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您需要进入 OCI 控制台或记事本，并复制 `fingerprint` 值以输入到 VirtualBox 中。
- en: '![Figure 13.50 – Fingerprint](img/B18349_13_050.jpg)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.50 – Fingerprint](img/B18349_13_050.jpg)'
- en: Figure 13.50 – Fingerprint
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.50 – Fingerprint
- en: Again, paste that fingerprint value into the appropriate field.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次将该 fingerprint 值粘贴到相应字段中。
- en: '![Figure 13.51 – Configuring the fingerprint](img/B18349_13_051.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.51 – 配置 fingerprint](img/B18349_13_051.jpg)'
- en: Figure 13.51 – Configuring the fingerprint
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.51 – 配置 fingerprint
- en: One of the last entries is the location of the private key you created. This
    is not in OCI, but rather in your local system, where you created it. Remember,
    the private key is the local key, which shouldn’t be shared. You’ll want to capture
    that path and go back to VirtualBox.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一个条目是你创建的私钥的位置。这个位置不在 OCI 中，而是在你本地系统中创建它的地方。记住，私钥是本地密钥，不应与他人共享。你需要记录该路径并返回
    VirtualBox。
- en: '![Figure 13.52 – API key location](img/B18349_13_052.jpg)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.52 – API 密钥位置](img/B18349_13_052.jpg)'
- en: Figure 13.52 – API key location
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.52 – API 密钥位置
- en: As shown previously, paste the path into the appropriate field.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前所示，将路径粘贴到相应的字段中。
- en: '![Figure 13.53 – Configuration key location](img/B18349_13_053.jpg)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.53 – 配置密钥位置](img/B18349_13_053.jpg)'
- en: Figure 13.53 – Configuration key location
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.53 – 配置密钥位置
- en: Last but not least, you’ll want to go back to your OCI portal and find the **Compartments**
    menu. I find a simple search to be the easiest way of locating this option, but
    if you want to go directly to it, you’ll find it under **Identity**.
  id: totrans-290
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你需要回到 OCI 门户并找到 **隔离区** 菜单。我发现简单搜索是定位此选项的最简便方法，但如果你想直接前往，可以在 **身份** 下找到它。
- en: '![Figure 13.54 – Compartments](img/B18349_13_054.jpg)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.54 – 隔离区](img/B18349_13_054.jpg)'
- en: Figure 13.54 – Compartments
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.54 – 隔离区
- en: Expand the compartment you want to use and copy the OCID to enter it into the
    VirtualBox OCI configuration.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展开你想使用的隔离区并复制 OCID，将其输入到 VirtualBox OCI 配置中。
- en: '![Figure 13.55 – Compartment selection](img/B18349_13_055.jpg)'
  id: totrans-294
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.55 – 隔离区选择](img/B18349_13_055.jpg)'
- en: Figure 13.55 – Compartment selection
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.55 – 隔离区选择
- en: As shown previously, paste that OCID into the appropriate field.
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前所示，将该 OCID 粘贴到相应字段中。
- en: '![Figure 13.56 – Configuring the compartment](img/B18349_13_056.jpg)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.56 – 配置隔离区](img/B18349_13_056.jpg)'
- en: Figure 13.56 – Configuring the compartment
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.56 – 配置隔离区
- en: After all the data is entered, you should see that OCID’s region, user, tenancy,
    key file location, compartment, and fingerprint properties are all populated.
  id: totrans-299
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在输入所有数据后，你应该能看到 OCID 的区域、用户、租户、密钥文件位置、隔离区和指纹属性都已填充。
- en: '![Figure 13.57 – Completed configuration](img/B18349_13_057.jpg)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.57 – 完成的配置](img/B18349_13_057.jpg)'
- en: Figure 13.57 – Completed configuration
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.57 – 完成的配置
- en: Once you’ve confirmed that everything is complete, apply the settings. You’ll
    see the new profile show up; we named it **OCI**.
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦确认一切已完成，应用设置。你会看到新配置文件出现；我们将其命名为 **OCI**。
- en: '![Figure 13.58 – VirtualBox OCI](img/B18349_13_058.jpg)'
  id: totrans-303
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.58 – VirtualBox OCI](img/B18349_13_058.jpg)'
- en: Figure 13.58 – VirtualBox OCI
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.58 – VirtualBox OCI
- en: If you expand that profile, you’ll see the tenancy is now empty. If you already
    had infrastructure deployed there, you would see those resources show up here,
    provided they are running in the same compartment as the OCID entered in the profile.
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你展开该配置文件，你会看到租户现在是空的。如果你之前在该租户下部署了基础设施，你会看到那些资源显示在这里，前提是它们运行在与配置文件中输入的 OCID
    相同的隔离区。
- en: '![Figure 13.59 – Expanded OCI](img/B18349_13_059.jpg)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.59 – 扩展的 OCI](img/B18349_13_059.jpg)'
- en: Figure 13.59 – Expanded OCI
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.59 – 扩展的 OCI
- en: 'You’re now ready to start moving over the VM we built earlier in this section:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经准备好开始移动我们在本节中创建的虚拟机：
- en: The first step in exporting your VM to OCI, once the VirtualBox OCI profile
    is configured, is to click on **Export** in the VirtualBox main welcome menu.
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导出虚拟机到 OCI 的第一步，一旦配置好 VirtualBox OCI 配置文件，就是在 VirtualBox 主欢迎菜单中点击 **导出**。
- en: '![Figure 13.60 – Export](img/B18349_13_060.jpg)'
  id: totrans-310
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.60 – 导出](img/B18349_13_060.jpg)'
- en: Figure 13.60 – Export
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.60 – 导出
- en: You’ll next need to select the VM to be exported to OCI, as shown in the following
    screenshot – in this case, it’s called **small-ol8.8**. This will vary depending
    on what you named your VM.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你需要选择要导出到 OCI 的虚拟机，如下截图所示——在此例中，虚拟机名称为 **small-ol8.8**。这将根据你为虚拟机命名的不同而有所变化。
- en: '![Figure 13.61 – Image selection](img/B18349_13_061.jpg)'
  id: totrans-313
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.61 – 镜像选择](img/B18349_13_061.jpg)'
- en: Figure 13.61 – Image selection
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.61 – 镜像选择
- en: After you choose your VM, you must configure the format in which to export the
    VM. We’re going to expand the `.ova` as the file extension.
  id: totrans-315
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择虚拟机后，你必须配置导出虚拟机的格式。我们将扩展 `.ova` 文件扩展名。
- en: '![Figure 13.62 – Image format configuration](img/B18349_13_062.jpg)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.62 – 镜像格式配置](img/B18349_13_062.jpg)'
- en: Figure 13.62 – Image format configuration
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.62 – 镜像格式配置
- en: As shown previously, choose **Oracle Cloud Infrastructure** for the format and
    **OCI** as the VirtualBox profile, as highlighted in red in the following screenshot.
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前所示，选择**Oracle Cloud Infrastructure**作为格式，选择**OCI**作为 VirtualBox 配置文件，正如下面截图中的红色高亮所示。
- en: '![Figure 13.63 – Profile](img/B18349_13_063.jpg)'
  id: totrans-319
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.63 – 配置文件](img/B18349_13_063.jpg)'
- en: Figure 13.63 – Profile
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.63 – 配置文件
- en: 'You’ll want to make sure all your variables are correct, as shown in the following
    screenshot, as well as confirming you have an available storage bucket:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要确保所有变量都是正确的，如以下截图所示，并确认你有一个可用的存储桶：
- en: '![Figure 13.64 – Image output](img/B18349_13_064.jpg)'
  id: totrans-322
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.64 – 镜像输出](img/B18349_13_064.jpg)'
- en: Figure 13.64 – Image output
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.64 – 镜像输出
- en: 'You’ll want to expand the `VM.Optimized.Flex` will not be recognized by OCI.
    I identified a usable shape, as shown in the following figure, that is available
    and lightweight. Follow the following image for shape selection:'
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要展开`VM.Optimized.Flex`，它不会被 OCI 识别。我在以下图中识别了一个可用且轻量的形状，它是可用的。请按照以下图片选择形状：
- en: '![Figure 13.65 – Shape selection](img/B18349_13_065.jpg)'
  id: totrans-325
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.65 – 形状选择](img/B18349_13_065.jpg)'
- en: Figure 13.65 – Shape selection
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.65 – 形状选择
- en: 'As shown previously, expanding this section will give you several shape choices.
    As a note, a shape is a predetermined size, reflecting a set number of resources.
    In this case, we’re choosing **VM.Standard.E2.1**:'
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前所示，展开此部分将为你提供多个形状选择。需要注意的是，形状是预设的大小，反映了一个固定数量的资源。在这种情况下，我们选择**VM.Standard.E2.1**：
- en: '![Figure 13.66 – Image shape](img/B18349_13_066.jpg)'
  id: totrans-328
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.66 – 镜像形状](img/B18349_13_066.jpg)'
- en: Figure 13.66 – Image shape
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.66 – 镜像形状
- en: Note
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`VM.Optimized3.Flex` is not a recognized shape and will not import. You can
    always change the shape after the VM is deployed.'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '`VM.Optimized3.Flex` 不是一个被认可的形状，无法导入。你可以在虚拟机部署后随时更改形状。'
- en: Once you’ve chosen the appropriate shape, finish configuring the export, then
    click **Finish** to execute the migration to OCI.
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦选择了合适的形状，完成配置导出，然后点击**完成**以执行迁移到 OCI。
- en: '![Figure 13.67 – Image shape committed](img/B18349_13_067.jpg)'
  id: totrans-333
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.67 – 镜像形状提交](img/B18349_13_067.jpg)'
- en: Figure 13.67 – Image shape committed
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.67 – 镜像形状提交
- en: 'Make sure your image shape is identified and the correct shape was selected:'
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你的镜像形状已经识别并且选择了正确的形状：
- en: '![Figure 13.68 – Image writing](img/B18349_13_068.jpg)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.68 – 镜像写入](img/B18349_13_068.jpg)'
- en: Figure 13.68 – Image writing
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.68 – 镜像写入
- en: Once the export is completed, you’ll see your VM running in OCI, and you’ll
    be able to log in to your portal and see that same VM running within your OCI
    tenancy as well.
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦导出完成，你将看到你的虚拟机在 OCI 中运行，并且你可以登录到你的门户，看到该虚拟机在你的 OCI 租户中运行。
- en: '![Figure 13.69 – Image running](img/B18349_13_069.jpg)'
  id: totrans-339
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.69 – 镜像运行](img/B18349_13_069.jpg)'
- en: Figure 13.69 – Image running
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.69 – 镜像运行
- en: As shown in the preceding screenshot, the image is now running as a VM in OCI.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 如前面的截图所示，镜像现在作为虚拟机在 OCI 中运行。
- en: For everyone else, let’s make custom images for AWS
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对于其他人来说，让我们为 AWS 创建自定义镜像
- en: 'It seems very simple: build an image, export the image, and import the image
    (wash, rinse, and repeat). The concept isn’t much more complicated than that.
    However, there are steps to go through, and some of those steps have catches.'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来非常简单：构建镜像，导出镜像，然后导入镜像（洗净，冲洗，再重复）。这个概念并不比这更复杂。然而，还是有一些步骤需要走，而且其中有些步骤是有陷阱的。
- en: You’ll first have to walk through the steps of setting up and configuring the
    AWS CLI. Much like the OCI CLI, AWS’s CLI is a direct command line executing against
    the AWS API. After the CLI is installed and configured, we’ll walk through setting
    up an S3 bucket, configuring that bucket, and changing access to allow upload.
    The following figure shows the stages and their touchpoints throughout this recipe.
    The AWS CLI is the common thread in staging and executing, along with the GUI.
    The storage factors in AWS are managed by access control and authentication, which
    allow us to create, store, and manipulate stored objects and buckets.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 你首先需要完成设置和配置 AWS CLI 的步骤。类似于 OCI CLI，AWS 的 CLI 是一个直接通过命令行执行 AWS API 的工具。安装并配置
    CLI 后，我们将通过设置 S3 存储桶、配置存储桶以及更改访问权限以允许上传的步骤。下图展示了本教程中各个阶段及其触点。AWS CLI 是在分阶段和执行过程中与图形用户界面共同使用的核心工具。AWS
    中的存储由访问控制和身份验证管理，这使得我们能够创建、存储和操作存储的对象和存储桶。
- en: '![Figure 13.70 – AWS CLI storage connections](img/B18349_13_070.jpg)'
  id: totrans-345
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.70 – AWS CLI 存储连接](img/B18349_13_070.jpg)'
- en: Figure 13.70 – AWS CLI storage connections
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.70 – AWS CLI 存储连接
- en: Getting ready
  id: totrans-347
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Before we can start using the CLI, we must download and install the requisite
    package. For this recipe, I am using a Mac. You can easily navigate to AWS and
    download the CLI for Windows or Linux. Regardless, once the CLI is installed,
    the commands do not differ other than the locations and some other OS-specific
    changes, which really only apply to Windows:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用CLI之前，我们必须下载并安装必要的包。对于本教程，我使用的是Mac。你可以轻松地访问AWS并下载适用于Windows或Linux的CLI。不管怎样，一旦CLI安装完成，命令的使用没有区别，唯一不同的是位置和一些操作系统特定的更改，这些更改仅适用于Windows：
- en: '[PRE29]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'After downloading the package, you’ll have to install the CLI. This is done
    by executing the install package, as shown:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完包后，你需要安装CLI。执行安装包时，如下所示：
- en: '[PRE30]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'In this case, we upgraded the Python version to match what the AWS CLI requires.
    You can check this by running a `which` command at the end, which will show the
    location of the AWS CLI install, and `--version`, which will list the version
    of the AWS CLI, as well as Python:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们将Python版本升级到与AWS CLI所要求的版本匹配。你可以通过在终端中运行`which`命令来检查AWS CLI的安装位置，再使用`--version`命令查看AWS
    CLI和Python的版本：
- en: '[PRE31]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'After you’ve installed the AWS CLI, we’ll move on to configuring the Oracle
    Linux OS. We’ll later configure the AWS CLI with the details of our AWS account
    and data center location:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 安装好AWS CLI之后，我们将继续配置Oracle Linux操作系统。接下来，我们会用我们的AWS账户信息和数据中心位置来配置AWS CLI：
- en: '![Figure 13.71 – Create a new VM](img/B18349_13_077.jpg)'
  id: totrans-355
  prefs: []
  type: TYPE_IMG
  zh: '![图13.71 – 创建一个新的虚拟机](img/B18349_13_077.jpg)'
- en: Figure 13.71 – Create a new VM
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.71 – 创建一个新的虚拟机
- en: You’ll want to fill in all the fields as we did in previous sections. Make sure
    to name your VM by referencing the disk you created (`/Users/USER/Desktop/<NAME>`).
    This will help keep things in place later. You can always go back to the VM in
    VirtualBox and find the associated media, but it’s easier to name the disk now,
    while creating the VM.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要像前面章节那样填写所有字段。确保通过引用你创建的磁盘（`/Users/USER/Desktop/<NAME>`）来命名你的虚拟机。这样可以帮助你稍后保持文件的整洁。你可以随时返回VirtualBox中的虚拟机并找到关联的介质，但现在命名磁盘会更容易。
- en: '![Figure 13.72 – ISO selection](img/B18349_13_078.jpg)'
  id: totrans-358
  prefs: []
  type: TYPE_IMG
  zh: '![图13.72 – ISO选择](img/B18349_13_078.jpg)'
- en: Figure 13.72 – ISO selection
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.72 – ISO选择
- en: If you remember, in the previous section, we allocated CPU and memory. Just
    like in any other build environment, we need to specify, install, and configure
    resources. Whether they are virtual or physical, we’re still installing resources.
    In this case, we’re configuring this VM with 4 GB of RAM and two vCPUs. Remember,
    a vCPU is the equivalent of a processor thread. So, here we’re installing two
    vCPUs, which is the equivalent of one physical core (two threads (vCPUs) = one
    processor core).
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你记得，在前一部分中，我们已分配了CPU和内存。就像在其他任何构建环境中一样，我们需要指定、安装和配置资源。无论它们是虚拟的还是物理的，我们都在安装资源。在这种情况下，我们为这台虚拟机配置了4
    GB的RAM和两个vCPU。记住，vCPU相当于一个处理器线程。所以，这里我们安装了两个vCPU，相当于一个物理核心（两个线程（vCPU）=一个处理器核心）。
- en: '![Figure 13.73 – Resources](img/B18349_13_079.jpg)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
  zh: '![图13.73 – 资源](img/B18349_13_079.jpg)'
- en: Figure 13.73 – Resources
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.73 – 资源
- en: After we’ve configured the CPU and memory resources, we’re ready to move on
    to choosing the media (disk) we’re attaching to our VM. In this case, we’re not
    going to choose the default of creating a disk, instead using an existing one.
    Remember, we created our own drive in `.vmdk` format, so let’s select to use an
    existing virtual hard disk file here.
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 配置完CPU和内存资源后，我们准备选择要附加到虚拟机的介质（磁盘）。在这种情况下，我们不会选择默认的创建磁盘选项，而是使用现有的磁盘。记得，我们已经创建了自己的`.vmdk`格式磁盘文件，所以在这里选择使用现有的虚拟硬盘文件。
- en: '![Figure 13.74 – Options to create or use an existing disk](img/B18349_13_080.jpg)'
  id: totrans-364
  prefs: []
  type: TYPE_IMG
  zh: '![图13.74 – 创建或使用现有磁盘的选项](img/B18349_13_080.jpg)'
- en: Figure 13.74 – Options to create or use an existing disk
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.74 – 创建或使用现有磁盘的选项
- en: Remember to select the drive (assuming you created one before) that matches
    the name of the VM, or create a new one. Note that the `.vmdk` extension should
    be used again in order for it to be recognized.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 记得选择与你的虚拟机名称匹配的驱动器（假设你之前已经创建了），或者创建一个新的驱动器。注意，`.vmdk`扩展名必须再次使用，才能被识别。
- en: '![Figure 13.75 – Disk selection](img/B18349_13_081.jpg)'
  id: totrans-367
  prefs: []
  type: TYPE_IMG
  zh: '![图13.75 – 磁盘选择](img/B18349_13_081.jpg)'
- en: Figure 13.75 – Disk selection
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.75 – 磁盘选择
- en: As in past recipes, we confirm our selections on the **Summary** screen and
    execute the configuration by selecting **Finish**. We won’t be walking through
    the build, as we have other recipes that take you through configuring OSs.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 和之前的步骤一样，我们在 **摘要** 屏幕上确认我们的选择，并通过选择 **完成** 执行配置。我们不会深入讲解构建过程，因为我们有其他教程可以引导你配置操作系统。
- en: '![Figure 13.76 – Configuration summary](img/B18349_13_082.jpg)'
  id: totrans-370
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.76 – 配置总结](img/B18349_13_082.jpg)'
- en: Figure 13.76 – Configuration summary
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.76 – 配置总结
- en: Once we have built the Linux OS, we can walk through configuring our AWS environment,
    including setting up the CLI to upload and execute our AMI upon its creation,
    from our OVA. Remember, in the previous recipe, we built out a VM and created
    an OCI from that OVA image in VirtualBox. We’ll be doing the same here, exporting
    from VirtualBox and importing into AWS. The difference here is that there isn’t
    a fancy VirtualBox environment to work from. We’ll be using the AWS CLI to import
    that OVA image into our S3 environment. However, as mentioned previously, in order
    to do that, we need to configure that connection and have it in place. We’ll walk
    through those settings on AWS to migrate from VirtualBox to AWS, and see what
    that transformation entails.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们构建了 Linux 操作系统，就可以通过配置我们的 AWS 环境来执行操作，包括设置 CLI 上传并在创建后执行我们的 AMI（亚马逊机器镜像），从
    OVA 文件导入。记住，在前面的步骤中，我们在 VirtualBox 中构建了一个虚拟机，并从该 OVA 镜像创建了一个 OCI。我们在这里也会做同样的事情，从
    VirtualBox 导出并导入到 AWS。这里的区别在于，我们没有一个复杂的 VirtualBox 环境可供操作。我们将使用 AWS CLI 将该 OVA
    镜像导入到我们的 S3 环境中。然而，如前所述，为了做到这一点，我们需要配置连接并确保其到位。我们将一步步展示如何在 AWS 上进行这些设置，并迁移 VirtualBox
    到 AWS，看看这个过程需要哪些步骤。
- en: While the OVA is exporting, you’ll want to start preparing the AWS CLI configuration.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 在导出 OVA 文件时，你需要开始准备 AWS CLI 配置。
- en: How to do it…
  id: totrans-374
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: You can upload the exported OVA in one of two ways, either via the command line
    or through the S3 console. Either way, it’s simply an upload to AWS S3 and it
    doesn’t really matter how you do it.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过两种方式上传导出的 OVA，一种是通过命令行，另一种是通过 S3 控制台。无论哪种方式，实际上都是将文件上传到 AWS S3，方式并不重要。
- en: 'Uploading through the S3 console is a fairly straightforward process:'
  id: totrans-376
  prefs: []
  type: TYPE_NORMAL
  zh: 通过 S3 控制台上传是一个相当简单的过程：
- en: 'Log in to your AWS console, as shown:'
  id: totrans-377
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到你的 AWS 控制台，如下所示：
- en: '![Figure 13.77 – Sign in as root user](img/B18349_13_083.jpg)'
  id: totrans-378
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.77 – 以 root 用户登录](img/B18349_13_083.jpg)'
- en: Figure 13.77 – Sign in as root user
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.77 – 以 root 用户登录
- en: After signing in, navigate to S3.
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，导航到 S3。
- en: '![Figure 13.78 – AWS menu](img/B18349_13_084.jpg)'
  id: totrans-381
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.78 – AWS 菜单](img/B18349_13_084.jpg)'
- en: Figure 13.78 – AWS menu
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.78 – AWS 菜单
- en: If S3 isn’t on your most recently visited list, navigate to `S3` in the search
    bar.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 S3 不在你最近访问的列表中，可以在搜索栏中导航到 `S3`。
- en: '![Figure 13.79 – S3 storage](img/B18349_13_085.jpg)'
  id: totrans-384
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.79 – S3 存储](img/B18349_13_085.jpg)'
- en: Figure 13.79 – S3 storage
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.79 – S3 存储
- en: After navigating to S3, you’ll want to create a bucket for your OVA to be uploaded
    to. A bucket is essentially object storage and a great place to store images and
    the like.
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 S3 后，你需要为上传的 OVA 创建一个存储桶。存储桶本质上是对象存储，是存储图片等内容的理想位置。
- en: '![Figure 13.80 – S3 bucket](img/B18349_13_086.jpg)'
  id: totrans-387
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.80 – S3 存储桶](img/B18349_13_086.jpg)'
- en: Figure 13.80 – S3 bucket
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.80 – S3 存储桶
- en: After selecting **Create bucket**, you’ll want to name that bucket and configure
    other aspects of it.
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 **创建存储桶** 后，你需要为存储桶命名并配置其他方面的内容。
- en: '![Figure 13.81 – Bucket name and region](img/B18349_13_087.jpg)'
  id: totrans-390
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.81 – 存储桶名称和区域](img/B18349_13_087.jpg)'
- en: Figure 13.81 – Bucket name and region
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.81 – 存储桶名称和区域
- en: After naming, choose which region, as per the AWS docs, the bucket should be
    created under. Remember to create the bucket in the same region you’re operating
    in and will be using for this exercise. In this case, we’ll be deploying into
    US East 2 - Ohio.
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命名后，根据 AWS 文档选择存储桶应创建的区域。记得在与你操作的区域相同的区域创建存储桶，并且在这个练习中使用该区域。在这个例子中，我们将在美国东部
    2 - 俄亥俄地区部署。
- en: 'We won’t be enabling any ACLs here:'
  id: totrans-393
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在这里不会启用任何 ACLs。
- en: '![Figure 13.82 – ACLs](img/B18349_13_088.jpg)'
  id: totrans-394
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.82 – ACLs](img/B18349_13_088.jpg)'
- en: Figure 13.82 – ACLs
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.82 – ACLs
- en: As mentioned previously concerning AWS access control, we’re going to uncheck
    **Block all public access** and open the S3 bucket up to direct public (i.e.,
    external) access.
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前所述，关于 AWS 访问控制，我们将取消勾选 **阻止所有公共访问**，并允许直接公共（即外部）访问 S3 存储桶。
- en: Note
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This is not generally a best practice; we are just doing this for testing purposes.
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常不是最佳实践，我们这样做只是为了测试目的。
- en: '![Figure 13.83 – Public access](img/B18349_13_089.jpg)'
  id: totrans-399
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.83 – 公共访问](img/B18349_13_089.jpg)'
- en: Figure 13.83 – Public access
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.83 – 公共访问
- en: We’re going to keep versioning disabled (the default), as shown in the following
    screenshot, as this is a one-time bucket and will not be kept perpetually. You’ll
    want to enable versioning when you’re working through the life cycle of a project
    with multiple versions, for example, multiple iterations of an image.
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将保持禁用版本管理（默认设置），如以下截图所示，因为这是一个一次性桶，不会永久保留。当您在多个版本的项目生命周期中工作时，您可能会启用版本管理，例如图像的多个版本。
- en: '![Figure 13.84 – Versioning](img/B18349_13_090.jpg)'
  id: totrans-402
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.84 – 版本管理](img/B18349_13_090.jpg)'
- en: Figure 13.84 – Versioning
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.84 – 版本管理
- en: Again, since we’re keeping this basic, we will not be associating any tags either.
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们保持操作的基础性，我们不会关联任何标签。
- en: '![Figure 13.85 – Tags](img/B18349_13_091.jpg)'
  id: totrans-405
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.85 – 标签](img/B18349_13_091.jpg)'
- en: Figure 13.85 – Tags
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.85 – 标签
- en: We’re going to use standard server-side encryption with S3-managed keys.
  id: totrans-407
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用标准的服务器端加密，使用S3托管的密钥。
- en: '![Figure 13.86 – Encryption](img/B18349_13_092.jpg)'
  id: totrans-408
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.86 – 加密](img/B18349_13_092.jpg)'
- en: Figure 13.86 – Encryption
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.86 – 加密
- en: Ignore the advanced options as well and go ahead with creating the bucket.
  id: totrans-410
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样忽略高级选项，直接创建桶。
- en: '![Figure 13.87 – Bucket display](img/B18349_13_093.jpg)'
  id: totrans-411
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.87 – 桶显示](img/B18349_13_093.jpg)'
- en: Figure 13.87 – Bucket display
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.87 – 桶显示
- en: Navigate to the newly created `vb-aws-us-east-2` bucket and click on **Upload**.
  id: totrans-413
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到新创建的`vb-aws-us-east-2`桶，点击**上传**。
- en: '![Figure 13.88 – Object upload](img/B18349_13_094.jpg)'
  id: totrans-414
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.88 – 对象上传](img/B18349_13_094.jpg)'
- en: Figure 13.88 – Object upload
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.88 – 对象上传
- en: Click **Add files**. This will allow you to choose the correct OVA to upload
    to the bucket from your own filesystem.
  id: totrans-416
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加文件**。这将允许您从本地文件系统中选择正确的OVA文件上传到桶中。
- en: '![Figure 13.89 – Add files](img/B18349_13_095.jpg)'
  id: totrans-417
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.89 – 添加文件](img/B18349_13_095.jpg)'
- en: Figure 13.89 – Add files
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.89 – 添加文件
- en: We’re going to choose the OVA we created at the beginning of this recipe.
  id: totrans-419
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将选择在本教程开始时创建的OVA。
- en: '![Figure 13.90 – File selection](img/B18349_13_096.jpg)'
  id: totrans-420
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.90 – 文件选择](img/B18349_13_096.jpg)'
- en: Figure 13.90 – File selection
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.90 – 文件选择
- en: Once you’ve added the file, carry out the upload.
  id: totrans-422
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您添加了文件，进行上传。
- en: '![Figure 13.91 – File destination](img/B18349_13_097.jpg)'
  id: totrans-423
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.91 – 文件目标](img/B18349_13_097.jpg)'
- en: Figure 13.91 – File destination
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.91 – 文件目标
- en: The status bar will show the progress and the **Summary** section will show
    the destination in S3, as shown in the following screenshot.
  id: totrans-425
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 状态栏将显示进度，**摘要**部分将显示S3中的目标位置，如下图所示。
- en: '![Figure 13.92 – Uploading](img/B18349_13_098.jpg)'
  id: totrans-426
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.92 – 上传](img/B18349_13_098.jpg)'
- en: Figure 13.92 – Uploading
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.92 – 上传
- en: Note
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you navigate away from this status page, you will not be able to get back
    to it, so stay on the page until the upload is complete.
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您离开此状态页面，您将无法返回，所以请停留在页面上，直到上传完成。
- en: After the upload is complete – or, if you’re up for multitasking, open another
    AWS console session in the meantime – you’ll have to set up roles and access for
    the bucket you just created. Navigate to **Identity and Access Management** (**IAM**)
    to access the role data.
  id: totrans-430
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传完成后——或者，如果您喜欢多任务处理，可以在此期间打开另一个AWS控制台会话——您需要为刚创建的桶设置角色和访问权限。转到**身份与访问管理**（**IAM**）以访问角色数据。
- en: Under **Roles**, you can create customized roles for access, authentication,
    or any other IAM-related criteria.
  id: totrans-431
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**角色**下，您可以创建自定义角色以用于访问、认证或其他与IAM相关的标准。
- en: '![Figure 13.93 – AWS Roles](img/B18349_13_0931.jpg)'
  id: totrans-432
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.93 – AWS角色](img/B18349_13_0931.jpg)'
- en: Figure 13.93 – AWS Roles
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.93 – AWS角色
- en: We’ll be configuring roles and permissions from the command line. We must create
    an IAM user and secret as without access or authentication, the CLI won’t operate.
    Then we can configure the CLI to be connected to our account.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过命令行配置角色和权限。我们必须创建一个IAM用户和密钥，因为没有访问权限或认证，CLI将无法操作。然后，我们可以配置CLI与我们的账户连接。
- en: To configure and associate the user with that access key, you have to navigate
    back to IAM, as the following steps will walk through.
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置并将用户与该访问密钥关联，您需要返回到IAM，接下来的步骤将引导您完成。
- en: '![Figure 13.94 – Security, Identity, & Compliance menu](img/B18349_13_100.jpg)'
  id: totrans-436
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.94 – 安全、身份与合规菜单](img/B18349_13_100.jpg)'
- en: Figure 13.94 – Security, Identity, & Compliance menu
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.94 – 安全、身份与合规菜单
- en: Once you’ve expanded `IAM` in the search bar. As we’re trying to help you become
    familiar with the console, we will detail the specific steps to get to this option.
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你在搜索栏中展开了`IAM`，为了帮助你熟悉控制台，我们将详细说明获取此选项的具体步骤。
- en: '![Figure 13.95 – IAM](img/B18349_13_101.jpg)'
  id: totrans-439
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.95 – IAM](img/B18349_13_101.jpg)'
- en: Figure 13.95 – IAM
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.95 – IAM
- en: In order to access and create keys, we must understand what a key is for, and
    how it related to a user. So, let’s navigate to **Users**. We’ll walk through
    key creation as follows.
  id: totrans-441
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了访问和创建密钥，我们必须了解密钥的用途以及它如何与用户相关联。所以，让我们导航到**用户**。我们将按以下步骤创建密钥。
- en: '![Figure 13.96 – Users](img/B18349_13_102.jpg)'
  id: totrans-442
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.96 – 用户](img/B18349_13_102.jpg)'
- en: Figure 13.96 – Users
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.96 – 用户
- en: 'You’ll want to create the user as shown in the following screenshot, which
    you can do by navigating to `user-admin`:'
  id: totrans-444
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要按照以下截图所示创建用户，你可以通过进入`user-admin`来做到这一点：
- en: '![Figure 13.97 – User name](img/B18349_13_103.jpg)'
  id: totrans-445
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.97 – 用户名](img/B18349_13_103.jpg)'
- en: Figure 13.97 – User name
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.97 – 用户名
- en: Now that we’ve named our user, just like with any other system, we need to define
    the user, add them to a group, and assign privileges.
  id: totrans-447
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经命名了用户，就像任何其他系统一样，我们需要定义用户，将他们加入一个组，并分配权限。
- en: '![Figure 13.98 – User definition](img/B18349_13_104.jpg)'
  id: totrans-448
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.98 – 用户定义](img/B18349_13_104.jpg)'
- en: Figure 13.98 – User definition
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.98 – 用户定义
- en: We’ll assign this user to the admin group and click **Next** to continue. You
    can define permissions by creating a group that more closely aligns with your,
    or your organization’s, policies. After creating the user, this is where we can
    generate a key, as shown in the following screenshot, with the secret attached.
    The following steps walk through how to do this.
  id: totrans-450
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将把此用户分配到管理员组，然后点击**下一步**继续。你可以通过创建一个与您的政策或组织政策更为贴切的组来定义权限。创建用户后，我们可以在此生成一个密钥，正如以下截图所示，附带密钥。以下步骤将演示如何操作。
- en: '![Figure 13.99 – Credentials](img/B18349_13_105.jpg)'
  id: totrans-451
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.99 – 凭证](img/B18349_13_105.jpg)'
- en: Figure 13.99 – Credentials
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.99 – 凭证
- en: The **Security credentials** tab is where you create the access key.
  id: totrans-453
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**安全凭证**选项卡是创建访问密钥的地方。'
- en: '![Figure 13.100 – CLI access control and credentials creation](img/B18349_13_106.jpg)'
  id: totrans-454
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.100 – CLI 访问控制和凭证创建](img/B18349_13_106.jpg)'
- en: Figure 13.100 – CLI access control and credentials creation
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.100 – CLI 访问控制和凭证创建
- en: This access key is specifically for the CLI, so that’s the option we’ll want
    to select, as shown in the preceding screenshot, and then click **Next**. We’re
    not creating any tags in this recipe, so feel free to skip that step and create
    the access key.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 这个访问密钥是专门为 CLI 创建的，因此我们需要选择这个选项，如前面的截图所示，然后点击**下一步**。我们在这个步骤中不会创建任何标签，所以可以跳过这一步，直接创建访问密钥。
- en: Note
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Download the `.csv` file (the credential document), or show and copy the secret
    access key by clicking on the two squares next to the secret access key. This
    is the only place where you can copy these keys, whether you write them down or
    paste them into a notepad. **Once you close this page, you won’t be able to recover
    this information.** You could create and reconfigure the CLI without losing the
    data, but that would be a lot of unnecessary work, so just make sure to write
    down the secret.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: 下载`.csv`文件（凭证文档），或通过点击密钥旁边的两个方框来显示并复制密钥。这是唯一可以复制这些密钥的地方，无论是写下来还是粘贴到记事本中。**一旦你关闭此页面，将无法恢复这些信息。**
    你可以重新创建并重新配置 CLI 而不丢失数据，但这会是很多不必要的工作，所以请确保写下密钥。
- en: '![Figure 13.101 – Secret](img/B18349_13_107.jpg)'
  id: totrans-459
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.101 – 密钥](img/B18349_13_107.jpg)'
- en: Figure 13.101 – Secret
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.101 – 密钥
- en: 'Make sure to copy the secret access key, which in our case is shown below –
    yours will differ from the one we have here: `eZ5mZxzGhEYM0AfyBznLDqIT6TMsUz//AO2DMQst`.'
  id: totrans-461
  prefs: []
  type: TYPE_NORMAL
  zh: 确保复制密钥，如下所示——你将看到不同的密钥：`eZ5mZxzGhEYM0AfyBznLDqIT6TMsUz//AO2DMQst`。
- en: Once you’ve created the key and noted down the secret access key, the access
    key will be active.
  id: totrans-462
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你创建了密钥并记录下了秘密访问密钥，访问密钥将变为有效。
- en: '![Figure 13.102 – Access key](img/B18349_13_1021.jpg)'
  id: totrans-463
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.102 – 访问密钥](img/B18349_13_1021.jpg)'
- en: Figure 13.102 – Access key
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.102 – 访问密钥
- en: 'After you’ve added the access key, you’ll be able to run `aws configure` in
    the CLI:'
  id: totrans-465
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在添加了访问密钥后，你将能够在 CLI 中运行`aws configure`：
- en: '[PRE32]'
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Note
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you put `JSON` in all caps, this will fail. It will not report a failure,
    but your command will fail when run against the API.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将`JSON`写成全大写字母，这将导致失败。它不会报告失败，但当你运行命令时，会在 API 中失败。
- en: 'After you’ve configured the CLI, you can execute the following to convert your
    image from an OVA to an AMI:'
  id: totrans-469
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置 CLI 后，你可以执行以下命令将你的镜像从 OVA 转换为 AMI：
- en: '[PRE33]'
  id: totrans-470
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The following command will ascertain the status of the conversion:'
  id: totrans-471
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下命令将确认转换状态：
- en: Note
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '`import-ami-xxxxxxxx` will change every time you execute a conversion.'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: '`import-ami-xxxxxxxx` 每次执行转换时都会变化。'
- en: '[PRE34]'
  id: totrans-474
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: I’ve executed the command and run it several times to show each step of the
    process. After the following steps, you’ll be able to use your newly created AMI
    in your AWS tenancy. When walking through the import tasks, I refreshed here to
    show all the versions of the updates.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经执行了这个命令并多次运行，以展示每个过程步骤。完成以下步骤后，你将能够在你的 AWS 租户中使用新创建的 AMI。在执行导入任务时，我刷新了页面以展示所有版本的更新。
- en: 'Run the following command to show the status of the import:'
  id: totrans-476
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令查看导入状态：
- en: '[PRE35]'
  id: totrans-477
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '`converting`: The image is being converted into an AMI'
  id: totrans-478
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`converting`: 镜像正在转换为 AMI'
- en: '`updating`: The AMI import is being updated'
  id: totrans-479
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`updating`: 正在更新 AMI 导入'
- en: '`validating`: The import is being validated'
  id: totrans-480
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`validating`: 正在验证导入'
- en: '`validated`: Validation is completed'
  id: totrans-481
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`validated`: 验证已完成'
- en: '`completed`: The AMI is ready to use'
  id: totrans-482
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`completed`: AMI 准备好使用'
- en: '`deleted`: The import task has been canceled'
  id: totrans-483
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`deleted`: 导入任务已取消'
- en: 'When the AMI is complete, the following will be the end status:'
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 当 AMI 完成时，以下将是最终状态：
- en: '[PRE36]'
  id: totrans-485
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: After the process has completed, you will be able to log back in to the AWS
    console and navigate to your EC2 environment. In order to launch a new VM with
    the ability to select your AMI as the template, click **Launch instance**.
  id: totrans-486
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 处理完成后，你将能够重新登录 AWS 控制台并导航到你的 EC2 环境。为了启动一个新的虚拟机并选择你的 AMI 作为模板，请点击**启动实例**。
- en: '![Figure 13.103 – Launching an instance](img/B18349_13_109.jpg)'
  id: totrans-487
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.103 – 启动实例](img/B18349_13_109.jpg)'
- en: Figure 13.103 – Launching an instance
  id: totrans-488
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.103 – 启动实例
- en: Once you’re in the launch menu, you can drill down into other AMIs available.
  id: totrans-489
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦进入启动菜单，你可以深入浏览其他可用的 AMI。
- en: '![Figure 13.104 – Browse AMIs](img/B18349_13_110.jpg)'
  id: totrans-490
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.104 – 浏览 AMI](img/B18349_13_110.jpg)'
- en: Figure 13.104 – Browse AMIs
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.104 – 浏览 AMI
- en: This will take you to your customized AMIs and (as shown earlier in *Figure
    13**.7, Image products*), the Marketplace. The Marketplace is where you can share
    your own AMIs with the community or use ones that others have uploaded.
  id: totrans-492
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带你进入自定义的 AMI（如前所示在*图 13.7，镜像产品*中），以及市场。市场是你可以与社区分享自己创建的 AMI，或者使用他人上传的 AMI
    的地方。
- en: '![Figure 13.105 – Created AMI](img/B18349_13_111.jpg)'
  id: totrans-493
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.105 – 创建的 AMI](img/B18349_13_111.jpg)'
- en: Figure 13.105 – Created AMI
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.105 – 创建的 AMI
- en: As shown previously, you’ll see the available AMI, created in this recipe, reflected.
    Also as an aside, besides the AMIs on offer in the Marketplace, you can also find
    a number of OSs, including Oracle Linux.
  id: totrans-495
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前所示，你将看到在本指南中创建的可用 AMI。同时，顺便提一下，除了市场中提供的 AMI，你还可以找到许多操作系统，包括 Oracle Linux。
- en: If you navigate to the newly created AMI, you’ll see that you can select that
    image as your AMI to execute and create a VM.
  id: totrans-496
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你导航到新创建的 AMI，你会看到你可以选择该镜像作为 AMI 来执行并创建虚拟机。
- en: '![Figure 13.106 – AMI selection](img/B18349_13_1061.jpg)'
  id: totrans-497
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.106 – 选择 AMI](img/B18349_13_1061.jpg)'
- en: Figure 13.106 – AMI selection
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.106 – 选择 AMI
- en: By selecting the AMI, you’re attaching that AMI as your image and executing
    the creation of a VM from the selected image (the AMI).
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 通过选择 AMI，你将该 AMI 附加为镜像，并执行从所选镜像（AMI）创建虚拟机的操作。
- en: '![Figure 13.107 – Instance launch configuration](img/B18349_13_113.jpg)'
  id: totrans-500
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.107 – 实例启动配置](img/B18349_13_113.jpg)'
- en: Figure 13.107 – Instance launch configuration
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.107 – 实例启动配置
- en: After selecting the AMI and executing the launch, you’ll enter into the standard
    launch protocols for creating an AWS VM, including creating a key pair, naming
    the pair, and downloading the key. You can pre-create these keys as well.
  id: totrans-502
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择 AMI 并执行启动后，你将进入标准的 AWS 虚拟机创建流程，包括创建密钥对、命名密钥对并下载密钥。你也可以事先创建这些密钥。
- en: '![Figure 13.108 – Key pair](img/B18349_13_108.jpg)'
  id: totrans-503
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.108 – 密钥对](img/B18349_13_108.jpg)'
- en: Figure 13.108 – Key pair
  id: totrans-504
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.108 – 密钥对
- en: Once you create the key pair, the private key will download to your local machine
    and you can go ahead and launch your VM.
  id: totrans-505
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦创建了密钥对，私钥将下载到你的本地机器上，你可以继续启动虚拟机。
- en: '![Figure 13.109 – Success status](img/B18349_13_115.jpg)'
  id: totrans-506
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.109 – 成功状态](img/B18349_13_115.jpg)'
- en: Figure 13.109 – Success status
  id: totrans-507
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.109 – 成功状态
- en: You can navigate to your VM by clicking on the instance ID. Once you’re in the
    instance, you’ll be able to capture the IP and log in to your new VM.
  id: totrans-508
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过点击实例 ID 来导航到你的虚拟机。进入实例后，你将能够捕获 IP 并登录到你的新虚拟机。
- en: '![Figure 13.110 – Public IP](img/B18349_13_116.jpg)'
  id: totrans-509
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.110 – 公共 IP](img/B18349_13_116.jpg)'
- en: Figure 13.110 – Public IP
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.110 – 公共 IP
- en: 'To log in to the machine, you can use the key pair or the passwords created
    when you built the machine; either will work:'
  id: totrans-511
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要登录到机器，你可以使用在创建机器时生成的密钥对或密码；两者都可以使用：
- en: '[PRE37]'
  id: totrans-512
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
