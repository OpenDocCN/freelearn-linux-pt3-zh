- en: '*Chapter 17*: Advanced Shell Script Examples'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第17章*：高级Shell脚本示例'
- en: So far, we have done all we could to show you different ways scripts can be
    written, and we went through a lot of examples of how different tasks can be accomplished.
    In this chapter, we are going to implement all this in a much more complex way
    in **scripts** that can be used in real life.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经尽力展示了编写脚本的不同方式，并且我们通过许多示例演示了如何完成不同的任务。在本章中，我们将以更复杂的方式在**实际生活**中可以使用的**脚本**中实现所有这些。
- en: The scripts we are going to show you in this chapter solve everyday problems
    for system administrators, from dealing with creating new users to working with
    **virtual machines** (**VMs**). By walking you through these examples, our aim
    is not only to show you how scripts should work but also what they should look
    like and how to approach writing them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中要展示的脚本解决了系统管理员的日常问题，从创建新用户到处理**虚拟机**（**VMs**）。通过这些示例的演示，我们的目标不仅是展示脚本的工作原理，还包括其应该如何编写和处理的方法。
- en: 'In this chapter, we are going to cover the following shell script examples:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下Shell脚本示例：
- en: Implementing a web server service and security settings
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实施Web服务器服务和安全设置
- en: Creating users and groups from a standardized input file and a standardized
    password and forcing users to change them on the next login
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从标准化输入文件中创建用户和组，使用标准化密码，并强制用户在下次登录时更改密码
- en: Creating users and groups from a standardized input file and a random password
    for every user
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从标准化输入文件中创建用户和组，并为每个用户生成一个随机密码
- en: Scripted VM installation on **Kernel-based Virtual Machine** (**KVM**)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**基于内核的虚拟机**（**KVM**）上进行脚本化的虚拟机安装
- en: A shell script to provision `sudo` configuration
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于配置`sudo`权限的shell脚本
- en: A shell script for VM administration
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于VM管理的Shell脚本
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'In almost all the other chapters, we were working with a generic setup that
    simply required any Linux distribution, as long as it could run a Bash shell.
    In this chapter, we are going to change things a bit—by necessity, these scripts
    will have to run on Ubuntu or any other Debian-based distribution. We are going
    to mention the reasons for this in the following recipes when something has to
    be done differently in order to make it happen on any other Linux distribution.
    So, in order to run scripts in this chapter, you need the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在几乎所有其他章节中，我们都在使用一个通用的设置，只需要任何能够运行Bash shell的Linux发行版。在本章中，我们将稍作改变——必须这样做，这些脚本将必须在Ubuntu或任何其他基于Debian的发行版上运行。我们将在后续的示例中提到这些原因，当需要在其他Linux发行版上执行某些不同的操作时。因此，为了在本章中运行脚本，您需要以下内容：
- en: A VM with Linux installed—we are using *Ubuntu 20.10*, but any Debian-based
    distribution will work
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装了Linux的VM——我们使用*Ubuntu 20.10*，但任何基于Debian的发行版都可以工作
- en: Understanding of all the things we did in the previous chapters since we are
    going to presume you understand how Bash scripting works
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解我们在前几章中所做的所有事情，因为我们假设您已经理解了Bash脚本的工作原理
- en: So, start your VM for us to start doing many useful things!
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，请启动您的虚拟机，以便我们可以开始执行许多有用的操作！
- en: Implementing a web server service and security settings
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实施Web服务器服务和安全设置
- en: In this particular recipe, the idea is to use a small `shell` script to help
    us configure an already installed web server. We are going to enable our script
    to change where the web pages served by the server are located, but you will quickly
    see that changing any other option is easily added to this script.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个特定的示例中，我们的想法是使用一个小的`shell`脚本来帮助我们配置已安装的Web服务器。我们将使我们的脚本能够更改服务器提供的网页所在位置，但您很快会发现，可以轻松地将任何其他选项添加到这个脚本中。
- en: 'By using this script, all users would have to do to get the system running
    is this:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用这个脚本，所有用户只需执行以下操作即可使系统运行起来：
- en: Install the web server
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Web服务器
- en: Run the script to change where website files are located
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行脚本以更改网站文件位置
- en: As always, the main problem when preparing something that will be a simple operation
    for the user is understanding and hiding all the complexity while making it reasonably
    easy for the administrator to add new features. How do we do this? Read on.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 就像往常一样，当准备为用户进行简单操作时，主要问题是理解和隐藏所有复杂性，同时使管理员能够相对容易地添加新功能。我们如何做到这一点？继续阅读。
- en: Getting ready
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'This is our scenario:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的场景：
- en: A user has installed an Apache web server on their Ubuntu machine. They want
    to change the location of files that make up their website.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 用户已经在他们的 Ubuntu 机器上安装了 Apache web 服务器。他们想要更改构成网站的文件的位置。
- en: Before we go into this, we must work on our presumptions for this task, as is
    usual with almost any script.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入讨论之前，我们必须明确这个任务的假设，就像几乎所有脚本一样。
- en: 'First, we expect the web server to be already installed before we run the script,
    and we expect it to be Apache. The simplest way to do it is to use the following
    command:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们希望在运行脚本之前，web 服务器已经安装，并且我们假设它是 Apache。最简单的方法是使用以下命令：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now, we wait for the package manager to do its job.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们等待包管理器完成它的工作。
- en: Our script will not work with nginx or `lighttpd` nor any other web server since
    the configuration is parsed directly and there is no common way to set the parameters
    we require. Having said that, since the parsing we are using to change the configuration
    is pretty basic, if you need to modify this script to work with another server,
    it will probably take just a few minutes.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的脚本无法与 nginx 或 `lighttpd` 等其他 web 服务器一起使用，因为配置是直接解析的，并且没有一种通用方式来设置我们所需要的参数。话虽如此，由于我们使用的解析方式非常基础，如果你需要修改这个脚本以使其与其他服务器兼容，可能只需要几分钟。
- en: Next, we are presuming that the user is changing the default website, one called
    `000-default.conf` in the configuration directory. This value is hardcoded in
    our script, which means that if you have multiple websites on the same server,
    this script will only change the one configured as default.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们假设用户正在更改默认网站，即配置目录中的 `000-default.conf` 文件。这个值在我们的脚本中是硬编码的，这意味着如果你在同一台服务器上有多个网站，脚本只会更改被配置为默认的网站。
- en: Sometimes, administrators just add websites directly into this part of the configuration
    instead of creating new files for every site, as it should be done. Our script
    accomplishes its task by finding and replacing any mention of the `DocumentRoot`
    directive in the file. If we specify multiple `DocumentRoot` directives, the script
    is going to change all of them to the same value.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，管理员直接将网站添加到配置的这一部分，而不是为每个网站创建新的文件，这本应是应该做的。我们的脚本通过查找并替换文件中所有关于 `DocumentRoot`
    指令的内容来完成任务。如果我们指定了多个 `DocumentRoot` 指令，脚本会将它们全部更改为相同的值。
- en: Another thing we must think about is error checking. Inside the script itself,
    we are trying to catch if there was an error in the configuration, but the way
    we do it leaves a lot to be desired. Although our script will try to restore files
    to the state that it was before we changed their content, we are not trying to
    do any real syntax checking in the values that we are changing. This can prove
    to be a problem if the user makes an error when specifying the path they want
    to use, but there is no easy way to solve this; implementing a check that will
    be smart enough to scan for a valid path is too complicated for a task such as
    this.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个我们必须考虑的问题是错误检查。在脚本本身中，我们试图捕捉配置中是否有错误，但我们处理的方式仍有改进空间。虽然我们的脚本会尝试将文件恢复到修改前的状态，但我们并没有对更改的内容做任何真正的语法检查。如果用户在指定路径时出现错误，这可能会成为一个问题，但没有简单的解决办法；实现一个足够智能的检查来扫描有效路径，对于这样的任务来说过于复杂。
- en: How to do it…
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: In the recipes in this chapter, we are going to first give you our version of
    the script and then explain the details we think are important. All the scripts
    are going to have plenty of comments inside them, and we strongly advise you to
    do the same if possible. Comments can also be used when creating a script to define
    a rough outline of all the things you want to do before you type out a single
    command.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的操作步骤中，我们将首先给出我们的脚本版本，然后解释我们认为重要的细节。所有的脚本中都会有大量的注释，我们强烈建议你在可能的情况下也这样做。注释也可以用于在创建脚本时，定义你想要做的所有事项的大致框架，然后再开始输入命令。
- en: 'First, let''s start with the script itself:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们从脚本本身开始：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We need to note a few things here. Apache as a web server is right now the most
    used web server in all the distributions by default, but nginx is slowly becoming
    more and more popular. The thing to remember is that depending on the distribution
    package containing `apache`, this is called either `apache2` (on Debian-based
    distributions such as Ubuntu) or `httpd` (on Red Hat-based distributions such
    as **Red Hat Enterprise Linux** (**RHEL**) or CentOS). Other than the package
    name, there is a small difference in the placement of the configuration files
    for the server itself, although the syntax is exactly the same.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里需要注意几件事。Apache 作为一个 Web 服务器，目前在所有发行版中默认是最常用的 Web 服务器，但 nginx 正在逐渐变得越来越受欢迎。需要记住的是，根据包含
    `apache` 的发行版包的不同，它被称为 `apache2`（在基于 Debian 的发行版如 Ubuntu 上）或 `httpd`（在基于 Red Hat
    的发行版如 **Red Hat Enterprise Linux**（**RHEL**）或 CentOS 上）。除了包名之外，配置文件在服务器本身的位置也有一点小差异，尽管语法完全相同。
- en: Another thing is the firewall. Ubuntu uses `ufw` while CentOS uses `firewalld`.
    The third big thing to note is `apparmor` (Ubuntu) and `SELinux` (CentOS).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个问题是防火墙。Ubuntu 使用 `ufw`，而 CentOS 使用 `firewalld`。第三个需要注意的大点是 `apparmor`（Ubuntu）和
    `SELinux`（CentOS）。
- en: Our version of the script works on Debian-based machines. Slight modifications
    are needed if we want to use it on, for example, CentOS.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们版本的脚本适用于基于 Debian 的机器。如果我们想在例如 CentOS 上使用它，则需要做一些轻微的修改。
- en: See also
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: https://www.digitalocean.com/community/questions/which-ufw-service-to-use-for-apache2
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.digitalocean.com/community/questions/which-ufw-service-to-use-for-apache2](https://www.digitalocean.com/community/questions/which-ufw-service-to-use-for-apache2)'
- en: https://www.tecmint.com/setup-ufw-firewall-on-ubuntu-and-debian/
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.tecmint.com/setup-ufw-firewall-on-ubuntu-and-debian/](https://www.tecmint.com/setup-ufw-firewall-on-ubuntu-and-debian/)'
- en: Creating users and groups and forcing users to change them on the next login
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建用户和组，并强制用户在下次登录时更改密码
- en: One of the most common things you are going to do on Linux machines is create
    a lot of users. There is a way to avoid this by using a centralized database for
    user authentication, but in reality, this is used only on machines in large deployments,
    so local users are still prevalent in most cases.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 机器上，你最常做的事情之一就是创建大量用户。虽然有一种通过使用集中式数据库进行用户认证的方式可以避免这种情况，但实际上，这种方法通常只在大型部署的机器上使用，因此本地用户在大多数情况下仍然是常见的。
- en: Having a way to deploy users and assign them passwords is something every admin
    needs whenever deploying a new server or desktop.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 部署用户并为其分配密码是每个管理员在部署新服务器或桌面时都需要的功能。
- en: Getting ready
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: This recipe calls for two things.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱需要做两件事。
- en: The `script` has to be used with administrative privileges since it changes
    users on the system. Also, we need to prepare a file containing a user list in
    advance.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 由于脚本会更改系统上的用户，因此必须以管理员权限使用此脚本。同时，我们还需要提前准备一个包含用户列表的文件。
- en: Before we show you our script, we must also mention that there is more than
    one way to read and parse a file when getting values for our scripts. It makes
    sense to try to understand different ways of doing this in order to up your scripting
    game. For this exact reason, in this recipe and the next one, we decided to avoid
    using a `for` loop but instead opted to parse a file using arrays and delimiters.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在展示我们的脚本之前，我们还必须提到，在获取脚本值时，读取和解析文件的方式不止一种。理解不同的做法对提升你的脚本能力非常有帮助。正因如此，在本食谱和下一个食谱中，我们决定避免使用
    `for` 循环，而是选择使用数组和分隔符来解析文件。
- en: How to do it…
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何实现……
- en: 'As we have become accustomed to, we are starting with our script before we
    note things to remember:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们已习惯的那样，我们在记录需要记住的事项之前，先开始编写脚本：
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: There are a couple of concepts that we need to mention here. The first is dealing
    with passwords. Having any password readable in plaintext for any amount of time
    is a security risk, so the idea of making the user change their password as soon
    as possible is wise.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个概念需要提及。第一个是处理密码。任何密码在纯文本下可读的时间过长都会成为安全隐患，因此让用户尽早更改密码的想法是明智的。
- en: When creating passwords for new users, we basically have two choices—one is
    to create a list of users and passwords in advance, as we did in this example,
    and the other is to create a list of users and then assign them random passwords,
    as we will do in the next recipe.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为新用户创建密码时，我们基本上有两种选择——一种是提前创建用户和密码的列表，就像我们在这个示例中所做的，另一种是先创建用户列表，然后为他们分配随机密码，正如我们将在下一个食谱中做的那样。
- en: Whenever you are dealing with any password, always remember that once a single
    user is compromised, you have a big security problem because a lot of ways to
    break into the system are depending on being able to run an application locally.
    Minimize the time anybody other than the user knows the password for the account,
    and never store passwords in a plain, readable format.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你处理任何密码时，始终记住，一旦一个用户被攻破，你就面临着一个大大的安全问题，因为许多侵入系统的方法依赖于能够在本地运行应用程序。尽量减少除了用户之外的其他人知道账户密码的时间，绝不要以明文、可读的格式存储密码。
- en: See also
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: https://linuxconfig.org/linux-reset-password-expiration-age-and-history
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: https://linuxconfig.org/linux-reset-password-expiration-age-and-history
- en: '[https://www.tecmint.com/force-user-to-change-password-next-login-in-linux/](https://www.tecmint.com/force-user-to-change-password-next-login-in-linux/%0D)'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.tecmint.com/force-user-to-change-password-next-login-in-linux/](https://www.tecmint.com/force-user-to-change-password-next-login-in-linux/%0D)'
- en: Creating users and groups from a standardized input file and a random password
    for each user
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从标准化输入文件创建用户和组，并为每个用户分配随机密码
- en: In the previous recipe, we dealt with a way of creating new users. In this one,
    we are going to expand on this using a similar script to not only create new users
    but also assign them groups provided with the user, giving the administrator information
    on new user passwords.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的示例中，我们探讨了创建新用户的一种方式。在这一部分，我们将基于相似的脚本，不仅创建新用户，还为其分配与用户一起提供的组，给管理员提供新用户密码的信息。
- en: Getting ready
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We are creating users, so this script has to be run under an administrator account.
    In this particular case, we also probably want to redirect the output of the script
    to some file since passwords for new users are created when the script is run,
    and passwords are not stored anywhere. If we don't save them somewhere, they are
    going to be lost and recreated.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在创建用户，因此这个脚本必须在管理员账户下运行。在这种情况下，我们可能还希望将脚本的输出重定向到某个文件，因为新用户的密码是在脚本运行时创建的，而密码并没有存储在任何地方。如果我们不把它们保存到某处，它们就会丢失，并且在下次运行时重新创建。
- en: How to do it…
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'In the previous recipe, we mentioned that passwords should never be stored
    anywhere, but when creating new users, this is completely inevitable. We feel
    that the way we deal with passwords in this recipe is better than having them
    ready in advance since passwords in this script are created while the script is
    running so that the administrator can establish more control over them from the
    start:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的示例中，我们提到过密码不应该存储在任何地方，但在创建新用户时，这是完全不可避免的。我们认为，处理密码的方式比提前准备密码更好，因为脚本运行时会生成密码，这样管理员可以从一开始就更好地控制它们：
- en: '[PRE3]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'One thing to note in this script is that we are relying on a lot of messages
    from the commands we are using instead of checking things by ourselves. For example,
    if the user is already created, an error message is going to be created by `useradd`
    instead of us:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，这个脚本中我们依赖于许多命令返回的消息，而不是自己去检查。例如，如果用户已经创建，`useradd` 会生成一个错误信息，而不是由我们来处理：
- en: '![Figure 17.1 – Error messages provided by commands inside the script'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 17.1 – 脚本中命令提供的错误信息'
- en: '](img/Figure_17.1_B16269.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_17.1_B16269.jpg)'
- en: Figure 17.1 – Error messages provided by commands inside the script
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17.1 – 脚本中命令提供的错误信息
- en: See also
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: '[https://superuser.com/questions/533126/how-to-execute-command-and-if-it-fails-execute-another-command-and-return-1](https://superuser.com/questions/533126/how-to-execute-command-and-if-it-fails-execute-another-command-and-return-1)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://superuser.com/questions/533126/how-to-execute-command-and-if-it-fails-execute-another-command-and-return-1](https://superuser.com/questions/533126/how-to-execute-command-and-if-it-fails-execute-another-command-and-return-1)'
- en: '[https://linux.die.net/man/4/urandom](https://linux.die.net/man/4/urandom)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://linux.die.net/man/4/urandom](https://linux.die.net/man/4/urandom)'
- en: Scripted VM installation on KVM
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 KVM 上进行脚本化的虚拟机安装
- en: Another common task done in some environments is creating new VMs from the command
    line. The reason we do this is usually flexibility and speed—using a **graphical
    user interface** (**GUI**) can be an **order of magnitude** (**OOM**) slower than
    using a **command-line interface** (**CLI**).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些环境中，另一个常见的任务是通过命令行创建新虚拟机。我们通常这样做的原因是灵活性和速度——使用**图形用户界面**（**GUI**）比使用**命令行界面**（**CLI**）慢**一个数量级**（**OOM**）。
- en: KVM provides a very simple solution for creating machines in the command line.
    All the user needs to know are some basic parameters.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: KVM 提供了一个非常简单的命令行创建虚拟机的解决方案。用户只需要了解一些基本参数。
- en: Getting ready
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We, of course, need a functioning KVM on the server we are running this script
    on. Other than that, our script presumes the user understands all the different
    options that KVM requires to be able to create a machine. Before trying to understand
    how the script works, be sure to go through as much information as possible about
    creating VMs from the command line in order to be sure what the different options
    do. Also, refresh your knowledge about using the `dialog` toolkit for graphical
    interfaces since this script relies on this for input.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们需要在运行这个脚本的服务器上有一个有效的KVM。除此之外，我们的脚本假设用户理解KVM创建虚拟机所需的所有不同选项。在尝试理解脚本如何工作之前，请务必尽可能多地了解从命令行创建虚拟机的相关信息，以便了解不同选项的作用。同时，回顾一下`dialog`工具包的使用知识，因为这个脚本依赖于此进行输入。
- en: How to do it…
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'The only big thing in this small script is the way we are assigning values
    using `dialog`. As always, there are a couple of ways to do it. We are using the
    most logical one, for us at least:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这个小脚本中的唯一亮点是我们使用`dialog`分配值的方式。像往常一样，有几种方式可以做到这一点。我们使用的是最合乎逻辑的一种，至少对我们来说是这样：
- en: '[PRE4]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: When using `dialog`, you must handle the way input from the user is redirected.
    In this example, we are using `–output-fd 1` in order to tell `dialog` to get
    everything redirected to **standard output** (**stdout**) where we can directly
    assign the values to variables.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`dialog`时，必须处理用户输入的重定向方式。在这个示例中，我们使用`–output-fd 1`来告诉`dialog`将所有内容重定向到**标准输出**（**stdout**），我们可以在这里直接将值分配给变量。
- en: See also
  id: totrans-81
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: '[https://linux.die.net/man/1/dialog](https://linux.die.net/man/1/dialog)'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://linux.die.net/man/1/dialog](https://linux.die.net/man/1/dialog)'
- en: '[https://www.geeksforgeeks.org/creating-dialog-boxes-with-the-dialog-tool-in-linux/](https://www.geeksforgeeks.org/creating-dialog-boxes-with-the-dialog-tool-in-linux/)'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.geeksforgeeks.org/creating-dialog-boxes-with-the-dialog-tool-in-linux/](https://www.geeksforgeeks.org/creating-dialog-boxes-with-the-dialog-tool-in-linux/)'
- en: Using a shell script to provision SSH keys
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Shell脚本配置SSH密钥
- en: The safest way to deal with passwords is to not use them at all. Using SSH keys
    is a great way of avoiding passwords completely if we are able to get a public
    key connected to a user account that the user can log in to without using the
    password, and since only their private key enables login, this makes the whole
    transaction much safer.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 处理密码的最安全方法是根本不使用它们。如果我们能够获取一个与用户账户相连接的公共密钥，且该用户可以在不使用密码的情况下登录，那么使用SSH密钥是一种避免使用密码的绝佳方式，并且由于只有他们的私钥能启用登录，这使得整个交易更加安全。
- en: This recipe deals with just such a task, installing a new machine that is going
    to serve as a LAMP server and that will enable users to log in using no passwords
    at all.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这个方案正是处理这样的任务，安装一台新的机器，这台机器将作为LAMP服务器，并允许用户完全不使用密码登录。
- en: Getting ready
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In reality, a script such as this will be used if we have a few servers to install
    and not too much time. An alternative to something like this would be to use a
    proper orchestration tool such as Ansible, but although it is an enormously powerful
    tool, Ansible is too complicated for small deployments.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，如果我们有一些服务器需要安装且时间不多，像这样的脚本会被使用。与此类似的替代方案是使用像Ansible这样的适当编排工具，但尽管它是一个功能强大的工具，Ansible对于小型部署来说太复杂了。
- en: In any case, this script presumes only that our server has a working internet
    connection to be able to get the packages that need to be installed and that we
    have acquired a public SSH key from the user we plan on creating.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，这个脚本仅假设我们的服务器有一个有效的互联网连接，以便能够获取需要安装的软件包，并且我们已经从计划创建的用户那里获得了一个公共SSH密钥。
- en: How to do it…
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: We are transferring the key by using a regular plaintext file. This is completely
    fine since it actually contains no information that can pose a security problem—in
    order to use SSH to connect, a user has to have a private key that corresponds
    to the public key we are using.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过使用常规的明文文件来传输密钥。这是完全可以接受的，因为它实际上不包含任何可能带来安全问题的信息——为了使用SSH连接，用户必须拥有与我们正在使用的公共密钥对应的私钥。
- en: 'Since this key is—or should be—controlled by only one particular user, we are
    not worried about safety here:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这个密钥是——或者应该是——由唯一的一个特定用户控制的，因此我们在这里不担心安全性：
- en: '[PRE5]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: See also
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另见
- en: '[https://www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work](https://www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work](https://www.hostinger.com/tutorials/ssh-tutorial-how-does-ssh-work)'
- en: '[https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-20-04](https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-20-04)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-20-04](https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-20-04)'
- en: A shell script for VM administration
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个用于虚拟机管理的 shell 脚本
- en: Some tasks are complicated to do from the command line, simply because we have
    a lot of commands that we have to repeat over and over again and then reuse the
    values that we got in one step in the step that follows it.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 有些任务从命令行操作起来比较复杂，原因是我们有许多命令需要一遍又一遍地执行，并且还需要在后续步骤中重复使用某一步骤得到的值。
- en: In this recipe, we are going to deal with such a task, doing basic maintenance
    on a VM. What we plan to do is create a script that will enable the user to do
    a couple of standard tasks on VMs running on the local server, simplifying administration
    tasks and removing the need to remember long commands. Our plan is to enable the
    user to start, stop, check status, and revert a VM running on the local server.
    The script is going to provide the user with the list of machines and give them
    the opportunity to choose any available machines or apply the command to all of
    them.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将处理这样的任务，即对虚拟机进行基本的维护。我们的计划是创建一个脚本，帮助用户在本地服务器上运行的虚拟机上执行几个标准任务，简化管理任务，并避免记住长命令。我们的计划是让用户能够启动、停止、检查状态并恢复本地服务器上运行的虚拟机。该脚本将向用户提供虚拟机列表，并让他们有机会选择任何可用的虚拟机，或者将命令应用于所有虚拟机。
- en: Let's see what is needed for this task.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个任务需要什么。
- en: Getting ready
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: By this point, you have become accustomed to our disclaimers and requirements
    that we have to enable our script to run. This one is no different. First, this
    script requires one important thing—the server has to have support for KVM installed
    on it before we even begin to do anything. In the script itself, we are using
    a single command to accomplish all the tasks, but in reality, all of KVM needs
    to be installed and configured.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 到此为止，你应该已经习惯了我们需要启用脚本运行的免责声明和要求。这次也不例外。首先，这个脚本需要一项重要的前提——服务器上必须安装支持 KVM 的软件，然后我们才能进行其他操作。在脚本中，我们使用一个命令来完成所有任务，但实际上，KVM
    的安装和配置是必需的。
- en: Another option is that this script can be, with minor modifications, used to
    perform tasks on other KVM hosts, but we will leave this as an exercise for you.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种选择是，这个脚本经过少量修改后，可以用于在其他 KVM 主机上执行任务，但我们将把这个作为一个练习留给你。
- en: 'So, before you start the script, do a small check if everything works, with
    a simple command:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，在你开始运行脚本之前，先做一个简单的检查，确认一切正常，可以通过以下简单命令来实现：
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This should return a list of all the VMs running on your server. If there is
    any error, it needs to be sorted out before you even try to run the script itself
    since the script is based on this command working.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会返回服务器上所有虚拟机的列表。如果有任何错误，需要在你尝试运行脚本之前解决，因为该脚本依赖于这个命令的正常工作。
- en: How to do it…
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'First, we are going to start with the script itself:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将从脚本本身开始：
- en: '[PRE7]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'In this particular script, the main thing that we needed to decide on is how
    to handle two different conditions. The first condition is: *Are we dealing with
    a particular VM or all of them?* The second condition is: *What operation is needed?*'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个具体的脚本中，我们需要决定的主要事项是如何处理两种不同的情况。第一种情况是：*我们是处理某个特定的虚拟机，还是所有虚拟机？* 第二种情况是：*需要执行什么操作？*
- en: There are a couple of ways we can do this—we chose this one because it looks
    the most logical. We first give the user a list of all the machines on the host,
    and after they have decided which machine they want to run the command on, we
    ask them to select what they want to do.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有几种方法可以做到这一点——我们选择了这种方法，因为它看起来最为合乎逻辑。我们首先给用户提供一份主机上所有虚拟机的列表，然后在他们决定要在哪台虚拟机上运行命令之后，我们再询问他们想要执行什么操作。
- en: We could have easily done this the other way around and let them choose the
    command first and then let them select the VM they want to perform it on.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们本可以反过来做，先让用户选择命令，再让他们选择想要执行命令的虚拟机。
- en: Another thing that we decided on was how to display the names of the machines.
    We are leaving it to the user to get the machine name right, and we are not doing
    any checks. One thing that could be done is to try to compare user input to the
    list of actual machine names. This way, if a user makes a mistake, we can catch
    it before the script tries to perform an operation on the invalid machine.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们决定的另一件事是如何显示机器的名称。我们将让用户自己正确输入机器名称，并且我们不做任何检查。可以做的一件事是尝试将用户输入与实际机器名称列表进行比较。这样，如果用户犯了错误，我们可以在脚本尝试对无效机器进行操作之前捕获这个错误。
- en: Another thing that can be done in this, and in pretty much any script that has
    a lot of logical decisions and not enough checks, is to do a `try`-`catch` loop
    for the entire script so that we can deal with any possible errors without the
    script breaking completely and leaving us in an unknown state.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个脚本中，以及几乎所有有很多逻辑判断且缺少足够检查的脚本中，可以做的一件事是对整个脚本进行`try`-`catch`循环，这样我们就可以在不让脚本完全崩溃、也不让我们陷入未知状态的情况下处理任何可能的错误。
- en: See also
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 另请参见
- en: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/virtualization_administration_guide/chap-virtualization_administration_guide-managing_guests_with_virsh
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/virtualization_administration_guide/chap-virtualization_administration_guide-managing_guests_with_virsh
- en: '[https://help.ubuntu.com/community/KVM/Virsh](https://help.ubuntu.com/community/KVM/Virsh)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://help.ubuntu.com/community/KVM/Virsh](https://help.ubuntu.com/community/KVM/Virsh)'
