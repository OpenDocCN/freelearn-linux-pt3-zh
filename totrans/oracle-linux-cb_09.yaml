- en: '9'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '9'
- en: Keeping the Data Safe – Securing a System
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持数据安全 – 保护系统
- en: No one wants to be the headline news story, especially when their data is stolen.
    One of the best ways to help protect your data is to secure the operating system
    and its services. Securing is often compared to an onion, as there are multiple
    layers that are difficult to peel open, each providing some defense against bad
    actors. When bad actors attack your data, it’s not always to steal it; it’s often
    to change it as well. To make matters worse, when you move to the cloud, you will
    have to protect not only against internal threats, such as rogue contractors or
    employees, and external threats, such as hackers attacking the systems, but you
    also have to protect your data against your cloud provider as well. In security,
    you never know who is the bad actor!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 没有人希望成为头条新闻，尤其是在他们的数据被盗时。保护数据的最佳方式之一是确保操作系统及其服务的安全。安全通常被比作洋葱，因为它有多层防护，很难被剥开，每一层都能提供对恶意行为者的防御。当恶意行为者攻击你的数据时，目的并不仅仅是窃取数据；他们往往也会修改数据。更糟的是，当你迁移到云端时，你不仅要保护系统免受内部威胁（如不良承包商或员工）和外部威胁（如黑客攻击），还要保护你的数据免受云服务提供商的威胁。在安全领域，你永远不知道谁是恶意行为者！
- en: It is not just protecting your systems against bad actors; many industries also
    require a strong security stance. This is common with healthcare, which often
    requires security controls for compliance with the **Health Insurance Portability
    and Accountability Act** (**HIPAA**). Businesses that process credit cards must
    meet the **Payment Card Industry Data Security Standard** (**PCI-DSS**) principles,
    and many governmental organizations must implement security standards to be compliant
    with the **Federal Risk and Authorization Management Program** (**FedRAMP**) for
    their cloud workloads.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这不仅仅是保护你的系统免受恶意行为者的攻击；许多行业也要求有强大的安全措施。尤其在医疗行业，通常需要实施安全控制，以符合**健康保险流通与责任法案**（**HIPAA**）的要求。处理信用卡的企业必须遵守**支付卡行业数据安全标准**（**PCI-DSS**）的原则，许多政府机构也必须实施安全标准，以符合**联邦风险与授权管理计划**（**FedRAMP**）的要求，确保其云端工作负载的合规性。
- en: Note
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Security teams have their own language! The term “bad actors” refers to hackers
    — the folks trying to modify or steal the data. They do this by attacking the
    systems against attack surfaces, basic system components, and services that are
    reachable by the bad guys.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 安全团队有自己的术语！“恶意行为者”指的是黑客——那些试图修改或窃取数据的人。他们通过攻击系统的攻击面、基本的系统组件和可以被恶意行为者接触到的服务来实现这一目的。
- en: When you secure systems, you must cover more than just one attack surface. These
    attack surfaces can be data at rest, data in motion, services such as HTTP, or
    even the Linux kernel. You also need to use tools that can help identify how the
    system is configured to best protect the data. In this chapter, the goal is to
    give you several recipes to help you identify risks and protect your data.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当你保护系统时，必须涵盖不止一个攻击面。这些攻击面可能是静态数据、动态数据、像 HTTP 这样的服务，甚至是 Linux 内核。你还需要使用可以帮助识别系统配置的工具，以最佳方式保护数据。在本章中，目标是为你提供几个方法，帮助你识别风险并保护你的数据。
- en: 'We will cover the following main recipes in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要方法：
- en: Signing Git commits with GPG
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 GPG 签名 Git 提交
- en: Encrypting all web traffic
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密所有 Web 流量
- en: Encrypting all data at rest
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密所有静态数据
- en: Validating adherence to a compliance policy
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证是否遵守合规政策
- en: Port protection and restricting network access
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口保护和限制网络访问
- en: Keeping SELinux active
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保持 SELinux 活跃
- en: Technical requirements
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this recipe, you will need an Oracle Linux 8 system. As with most of these
    recipes, a VM on your desktop using a desktop virtualization product such as Oracle
    VirtualBox is recommended. A small VM with 2 cores, 2 GB RAM, and a few free gigabytes
    of disk space is fine. Ideally, before you start, you should update your system
    to the latest packages available. This only takes a few minutes and can save you
    a ton of time when troubleshooting issues caused by a bug.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个方法，你需要一台 Oracle Linux 8 系统。和大多数方法一样，推荐使用桌面虚拟化产品（如 Oracle VirtualBox）在桌面上运行虚拟机。一个拥有
    2 个核心、2GB 内存和几个可用 GB 磁盘空间的小型虚拟机就足够了。理想情况下，在开始之前，你应该将系统更新到最新的可用包。这只需几分钟，并且在排除由于错误导致的问题时能节省大量时间。
- en: Many of the recipes in this book have their related configuration files available
    in GitHub at [https://github.com/PacktPublishing/Oracle-Linux-Cookbook](https://github.com/PacktPublishing/Oracle-Linux-Cookbook).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的许多食谱相关的配置文件可以在GitHub上的[https://github.com/PacktPublishing/Oracle-Linux-Cookbook](https://github.com/PacktPublishing/Oracle-Linux-Cookbook)找到。
- en: Signing Git commits with GPG
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用GPG签署Git提交
- en: 'This recipe will show you how to digitally sign Git commits and RPM packages
    using a **GNU Privacy Guard** (**GPG**) keypair. A GPG keypair consists of two
    parts: the public key and the private key.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱将展示如何使用**GNU 隐私保护**（**GPG**）密钥对来为Git提交和RPM包进行数字签名。一个GPG密钥对由两部分组成：公钥和私钥。
- en: This is done by creating a GPG keypair and using it to sign Git commits and
    RPM packages.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过创建一个GPG密钥对并使用它来签署Git提交和RPM包完成的。
- en: Getting ready
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: In order to work with GPG and Git, you first need to install a few packages.
    Normally GPG is installed by default when the package `gnupg2` is installed.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用GPG和Git，首先需要安装一些软件包。通常，当安装`gnupg2`包时，GPG会默认安装。
- en: Git should be installed using `dnf install` `git -y`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Git应使用`dnf install git -y`命令安装。
- en: How to do it…
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: The first step is to create a GPG key if you do not already have one. This key
    will be used to sign both your Git commits and RPM packages. To work with the
    GPG key, you can use the `gpg` or `gpg2` commands; both are the same thing, as
    `gpg` links to `gpg2`.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是创建一个GPG密钥，如果你还没有的话。这个密钥将用于签署你的Git提交和RPM包。你可以使用`gpg`或`gpg2`命令来操作GPG密钥；这两个命令是相同的，因为`gpg`链接到`gpg2`。
- en: 'The GPG key is created via the command line:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: GPG密钥是通过命令行创建的：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The command will ask for some information, mainly your real name and email
    address. After you enter the information and continue, it will ask you to set
    a passphrase to use the key. Do not forget the passphrase! If you do, the key
    will become unusable and you will lose all data encrypted with the key. You can
    choose not to use a passphrase, but if you do this, you will be asked to verify
    this several times. The output of the key creation should be similar to the following
    screenshot:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令会要求输入一些信息，主要是你的真实姓名和电子邮件地址。输入信息并继续后，它会要求你设置一个密码短语以保护密钥。不要忘记密码短语！如果忘记了，密钥将无法使用，所有用该密钥加密的数据将丢失。你可以选择不使用密码短语，但如果这样做，你会多次被要求验证。密钥创建的输出应该类似于以下截图：
- en: '![Figure 9.1 – GPG keys created](img/B18349_09_01.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.1 – 创建的GPG密钥](img/B18349_09_01.jpg)'
- en: Figure 9.1 – GPG keys created
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.1 – 创建的GPG密钥
- en: Optionally, you can use the `--full-generate-key` option, which can be used
    to create keys stored on hardware devices, among other uses.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，你可以使用`--full-generate-key`选项，它可用于创建存储在硬件设备上的密钥等用途。
- en: Once the key is created, it is put in your keyring, the `pubring.kbx` file in
    the `.gnupg` directory in your home directory. To see all the keys in the file,
    run the `gpg2 --list-keys --``keyid-format=long` command.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦密钥被创建，它会被放入你的密钥环中，也就是位于你的主目录中的`.gnupg`目录下的`pubring.kbx`文件。要查看文件中的所有密钥，运行命令`gpg2
    --list-keys --keyid-format=long`。
- en: 'The `gpg --list-secret-keys` command is used to list the secret keys (i.e.,
    private keys) stored in your GPG keyring. Running the command will show output
    similar to the following figure for GPG keys:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`gpg --list-secret-keys`命令用于列出存储在GPG密钥环中的私密密钥（即私钥）。运行该命令会显示类似于以下图示的GPG密钥输出：'
- en: '![Figure 9.2 – GPG keys](img/B18349_09_02.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.2 – GPG 密钥](img/B18349_09_02.jpg)'
- en: Figure 9.2 – GPG keys
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.2 – GPG 密钥
- en: 'The output gives several columns of information for each key:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 输出会显示每个密钥的多个信息列：
- en: '`sec`: This column indicates that the key is a secret key.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sec`：这一列表示该密钥是一个私密密钥。'
- en: '`rsa2048/4096/...`: This column shows the algorithm and key length used by
    the key. For example, `rsa2048` indicates that the key uses the RSA algorithm
    with a key length of 2,048 bits. If the long format is used, this will also contain
    the key fingerprint after the key length.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rsa2048/4096/...`：这一列显示密钥所使用的算法和密钥长度。例如，`rsa2048`表示密钥使用RSA算法，密钥长度为2048位。如果使用长格式，它还会在密钥长度后显示密钥指纹。'
- en: '`[creation date]`: This column shows the date on which the key was created.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[创建日期]`：这一列显示密钥创建的日期。'
- en: '`[expiration date]`: If the key has an expiration date set, it will be shown
    in this column. If not, this column will be empty.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[过期日期]`：如果密钥设置了过期日期，这一列会显示该日期。如果没有设置，则该列为空。'
- en: '`[uid]`: This column shows the user ID associated with the key. This is usually
    the name and email address of the key’s owner.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[用户ID]`：这一列显示与密钥相关的用户ID，通常是密钥拥有者的名字和电子邮件地址。'
- en: '`[ssb]`: This column indicates that the key has a corresponding subkey (i.e.,
    a separate key used for encryption, signing, or authentication).'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[ssb]`：此列表示该密钥有一个对应的子密钥（即用于加密、签名或认证的独立密钥）。'
- en: '`[expires]`: If the subkey has an expiration date set, it will be shown in
    this column. If not, this column will be empty.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`[expires]`：如果子密钥设置了过期日期，它将在此列显示。如果没有设置，则此列将为空。'
- en: The key fingerprint is a shortened digital representation of the key. It allows
    other people to validate that your public key was sent with no tampering. The
    long key ID format for the GPG command is a 16-character hexadecimal string that
    uniquely identifies a public or private key in GPG. It is often used to refer
    to a specific key when working with GPG.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥指纹是密钥的简化数字表示。它允许其他人验证您的公钥在传输过程中没有被篡改。GPG 命令的长密钥 ID 格式是一个 16 个字符的十六进制字符串，用于唯一标识
    GPG 中的公钥或私钥。在与 GPG 一起工作时，它通常用于引用特定的密钥。
- en: The long key ID is derived from the full 40-character fingerprint of the key.
    The fingerprint is a cryptographic hash of the key’s public key material, and
    it is used to verify the authenticity of the key. The long key ID is the last
    16 characters of the fingerprint.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 长密钥 ID 是从密钥的完整 40 字符指纹派生的。指纹是密钥公钥材料的加密哈希值，用于验证密钥的真实性。长密钥 ID 是指纹的最后 16 个字符。
- en: 'Now that you have a key, we need to import it into Git. In the following example,
    we will use the key `E921BF9E922221B6`. To import the key, we will use the following
    command:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经有了密钥，我们需要将其导入到 Git 中。在以下示例中，我们将使用密钥`E921BF9E922221B6`。要导入密钥，我们将使用以下命令：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, we can set Git to sign all commits by default using the following command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用以下命令设置 Git 默认签署所有提交：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: How it works…
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: Git can sign both commits and tags using the GPG key. Be careful with Git though,
    as it isn’t consistent. `git tag` uses `-s` to sign tags, but `git commit` uses
    `-s` to add the `-S` actually signs the commit using GPG.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Git 可以使用 GPG 密钥签署提交和标签。但要小心使用 Git，因为它并不一致。`git tag` 使用 `-s` 来签署标签，而 `git commit`
    使用 `-s` 添加 `-S`，实际上是使用 GPG 签署提交。
- en: 'To set up a new tag, we will use the Git tag `-s $TAG -``m $TAG_DESCRIPTION`:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置一个新的标签，我们将使用 Git 标签命令 `-s $TAG -m $TAG_DESCRIPTION`：
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: You can also set `tag.gpgsign` either globally or per-repo to ensure all tags
    are automatically signed.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以全局或针对每个仓库设置`tag.gpgsign`，以确保所有标签自动签署。
- en: 'Next, we can show the tag with `git` `show v1.0`:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以使用 `git` `show v1.0` 显示标签：
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After this, when we check code using Git, add a `-S` option to the command
    to automatically sign the commit with the tag:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，当我们使用 Git 检查代码时，添加`-S`选项到命令中，以自动使用标签签署提交：
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This is not needed if `commit.gpgsign=true` is set either globally or in the
    active Git repo.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果全局或在当前 Git 仓库中设置了`commit.gpgsign=true`，则无需此操作。
- en: Encrypting all web traffic
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加密所有的网络流量
- en: 'It’s important to encrypt the communication to and from your web servers. Even
    a simple blog or company website with no login has several advantages of being
    encrypted:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 加密与您的 Web 服务器之间的通信非常重要。即使是一个没有登录功能的简单博客或公司网站，进行加密也有很多优势：
- en: '**Maintaining user trust**: Encrypting your web pages with HTTPS helps establish
    trust between your website and your users. When a user sees the padlock icon in
    their web browser indicating that the connection is secure, they can be more confident
    that their data is being transmitted securely. Browsers will show sites that are
    not encrypted. Chrome and Edge browsers will show text as *not secure* next to
    the URL or as Mozilla’s red slashed padlock.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**维护用户信任**：使用 HTTPS 加密您的网页有助于建立您网站与用户之间的信任。当用户看到浏览器中的锁形图标，表示连接是安全的时，他们可以更加放心地认为他们的数据是安全传输的。浏览器会显示未加密的网站。Chrome
    和 Edge 浏览器会在 URL 旁边显示 *不安全*，或者像 Mozilla 浏览器一样显示红色斜线的锁图标。'
- en: '**SEO benefits**: Google has stated that HTTPS is a ranking factor in their
    search algorithm. This means that websites that use HTTPS may rank higher in search
    results than those that do not.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SEO 好处**：谷歌曾表示 HTTPS 是其搜索算法中的一个排名因素。这意味着使用 HTTPS 的网站可能在搜索结果中排名高于不使用 HTTPS
    的网站。'
- en: '**Browser warnings**: Modern web browsers such as Chrome and Firefox now display
    warning messages when a user visits a non-HTTPS website that collects sensitive
    information. This can discourage users from using your website and negatively
    impact your business.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**浏览器警告**：现代 Web 浏览器（如 Chrome 和 Firefox）现在会在用户访问收集敏感信息的非 HTTPS 网站时显示警告信息。这可能会阻止用户使用您的网站，从而对您的业务产生负面影响。'
- en: '**Compliance**: If your website is subject to certain regulations or standards,
    such as PCI DSS or HIPAA, encrypting your web pages with HTTPS may be required
    to comply with those regulations.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性**：如果你的网站需要遵守某些法规或标准，如PCI DSS或HIPAA，则可能需要通过HTTPS加密网页，以遵守这些法规。  '
- en: Note
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '注意  '
- en: While SSL is a term that is commonly used, modern systems actually use **Transport
    Layer Security** (**TLS**) as the encryption technology. SSL, being an older technology,
    has some security flaws, which is why TLS was developed as an upgraded version
    of SSL. TLS addresses the existing vulnerabilities of SSL, making it a much safer
    option.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '虽然SSL是一个常用的术语，但现代系统实际上使用**传输层安全性**（**TLS**）作为加密技术。SSL作为一种较旧的技术存在一些安全漏洞，这也是TLS作为SSL的升级版被开发出来的原因。TLS解决了SSL存在的漏洞，使其成为一个更安全的选择。  '
- en: Overall, encrypting web pages with HTTPS is important for protecting sensitive
    data, maintaining user trust, and complying with regulations and standards. It
    is also becoming increasingly important for SEO and avoiding browser warnings
    that may negatively impact your website’s reputation. It’s also easy to do and
    free with services such as Let’s Encrypt ([https://letsencrypt.org/](https://letsencrypt.org/))
    and ZeroSSL ([https://zerossl.com/](https://zerossl.com/)).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '总体而言，使用HTTPS加密网页对于保护敏感数据、维护用户信任、遵守法规和标准非常重要。它对SEO也越来越重要，可以避免浏览器警告，这些警告可能会对你的网站声誉产生负面影响。而且通过像Let’s
    Encrypt（[https://letsencrypt.org/](https://letsencrypt.org/)）和ZeroSSL（[https://zerossl.com/](https://zerossl.com/)）这样的服务来实现这一点既简单又免费。  '
- en: Both Let’s Encrypt and ZeroSSL provide free security certificates, including
    SSL/TLS certificates, that are used to encrypt HTTP traffic. SSL/TLS certificates
    are used to encrypt web traffic, allowing for encrypted communication between
    web servers and web browsers. Let’s Encrypt was created to make it easier for
    website owners to obtain SSL/TLS certificates and enable HTTPS on their websites.
    Prior to Let’s Encrypt, obtaining SSL/TLS certificates was often a complicated
    and expensive process involving manual verification and payment to certificate
    authorities. Let’s Encrypt streamlines this process by automating the verification
    process and providing certificates for free.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 'Let’s Encrypt和ZeroSSL都提供免费的安全证书，包括用于加密HTTP流量的SSL/TLS证书。SSL/TLS证书用于加密Web流量，允许Web服务器和Web浏览器之间进行加密通信。Let’s
    Encrypt的创建旨在让网站所有者更容易获得SSL/TLS证书并在他们的网站上启用HTTPS。在Let’s Encrypt出现之前，获取SSL/TLS证书通常是一个复杂且昂贵的过程，需要手动验证并支付证书颁发机构的费用。Let’s
    Encrypt通过自动化验证过程并提供免费的证书，简化了这一过程。  '
- en: Let’s Encrypt certificates are trusted by all major web browsers and operating
    systems. They are issued for a period of 90 days and can be renewed automatically
    using an automated client software. Let’s Encrypt also provides an **Automated
    Certificate Management Environment** (**ACME**) protocol that allows web servers
    to automate the process of obtaining, renewing, and revoking certificates.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 'Let’s Encrypt证书被所有主流浏览器和操作系统信任。它们的有效期为90天，并可以通过自动客户端软件自动续期。Let’s Encrypt还提供了一个**自动证书管理环境**（**ACME**）协议，允许Web服务器自动化获取、续期和吊销证书的过程。  '
- en: Getting ready
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '准备工作  '
- en: For this example, you will need a web server running Oracle Linux. The server
    needs to be accessible over the internet so that the Let’s Encrypt system can
    verify the URL. In this example, I will be using a VM on Oracle Cloud, using their
    free tier of service. This VM is running on an Arm-based CPU with 2 cores and
    12 GB RAM. Both ports `80` and `443` are opened up to this server. This process
    works the same regardless of processor type or cloud. The system is running Oracle
    Linux 8 with the latest patches.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '对于本示例，你需要一台运行Oracle Linux的Web服务器。该服务器需要能够通过互联网访问，以便Let’s Encrypt系统能够验证URL。在这个示例中，我将使用Oracle
    Cloud上的虚拟机，并使用他们的免费服务层。这台虚拟机运行在一颗基于Arm架构的CPU上，拥有2个核心和12GB内存。`80`和`443`端口都已开放给这台服务器。无论处理器类型或云平台如何，这个过程都相同。系统运行的是带有最新补丁的Oracle
    Linux 8。  '
- en: How to do it…
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '如何操作…  '
- en: 'To do this, we need to do a few things:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '为了实现这一目标，我们需要做一些事情：  '
- en: Install Apache with `mod_ssl` and all its requirements.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装带有`mod_ssl`的Apache及其所有依赖项。
- en: Get `acme.sh` from Git.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '从Git获取`acme.sh`。  '
- en: Create a cert using the webroot mode. Webroot mode requires that the site is
    accessible from the internet on both ports `80` and `443`. While it is easy to
    implement, there is another verification method using DNS. For more information
    about different challenge types, refer to [https://letsencrypt.org/docs/challenge-types/](https://letsencrypt.org/docs/challenge-types/).
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 webroot 模式创建证书。Webroot 模式要求站点可以通过 `80` 和 `443` 端口从互联网访问。虽然这种方法易于实现，但还有另一种使用
    DNS 的验证方法。有关不同挑战类型的更多信息，请参阅 [https://letsencrypt.org/docs/challenge-types/](https://letsencrypt.org/docs/challenge-types/)。
- en: Conduct testing.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行测试。
- en: Installing Apache with mod_ssl and all its requirements
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 安装 Apache 并配置 mod_ssl 及其所有依赖项
- en: 'So let’s get started as the root user. First, we need to add some packages:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所以我们作为 root 用户开始吧。首先，我们需要安装一些软件包：
- en: '`httpd` – Apache web server'
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`httpd` – Apache Web 服务器'
- en: '`mod_ssl` – enables SSL on Apache'
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mod_ssl` – 在 Apache 上启用 SSL'
- en: 'You can do this with the following command:'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以使用以下命令来执行此操作：
- en: '[PRE6]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: firewall-cmd --zone=public --permanent --add-service=http
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: firewall-cmd --zone=public --permanent --add-service=http
- en: firewall-cmd --zone=public --permanent --add-service=https
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: firewall-cmd --zone=public --permanent --add-service=https
- en: 'ssltest.talesfromthedatacenter.com. This way, we can later add the SSL certs
    just for this virtual server. As the root, let’s make a directory for the files
    and chown them to the apache user:'
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ssltest.talesfromthedatacenter.com。这样，我们可以为这个虚拟服务器单独添加 SSL 证书。作为 root 用户，让我们为文件创建一个目录，并将其所有权更改为
    apache 用户：
- en: '[PRE7]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: <VirtualHost *:80>
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <VirtualHost *:80>
- en: '# Put this in /etc/httpd/conf.d/ssltest.conf'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '# 将此内容放入 /etc/httpd/conf.d/ssltest.conf'
- en: Alias /.well-known/acme-challenge/ /var/www/ssltest/.well-known/acme-challenge/
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Alias /.well-known/acme-challenge/ /var/www/ssltest/.well-known/acme-challenge/
- en: <Directory "/var/www/ssltest/.well-known/acme-challenge/">
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <Directory "/var/www/ssltest/.well-known/acme-challenge/">
- en: Options None
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Options None
- en: AllowOverride None
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: AllowOverride None
- en: ForceType text/plain
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ForceType text/plain
- en: RedirectMatch 404 "^(?!/\.well-known/acme-challenge/[\w-]{43}$)"
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RedirectMatch 404 "^(?!/\.well-known/acme-challenge/[\w-]{43}$)"
- en: </Directory>
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </Directory>
- en: RewriteEngine On
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RewriteEngine On
- en: RewriteCond %{REQUEST_URI} !^/.well-known/acme-challenge [NC]
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RewriteCond %{REQUEST_URI} !^/.well-known/acme-challenge [NC]
- en: RewriteCond %{HTTPS} off
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RewriteCond %{HTTPS} off
- en: RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
- en: </VirtualHost>
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </VirtualHost>
- en: '[PRE8]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: After you save the file, run an `apachctl configtest`. It is good practice to
    always run this test when you modify the config files.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件后，运行 `apachctl configtest`。每次修改配置文件时，最好始终运行此测试。
- en: '[PRE10]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '80. You should see the default Apache page. Notice, the Not secure flag in
    the upper-left corner! The site is *not* using SSL:'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 80。您应该看到默认的 Apache 页面。注意，左上角显示“未加密”标志！站点*未*使用 SSL：
- en: '[PRE11]'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Figure 9.3 – Apache test page with no SSL](img/B18349_09_03.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.3 – 没有 SSL 的 Apache 测试页面](img/B18349_09_03.jpg)'
- en: Figure 9.3 – Apache test page with no SSL
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.3 – 没有 SSL 的 Apache 测试页面
- en: Getting acme.sh from Git
  id: totrans-112
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从 Git 获取 acme.sh
- en: 'Now, we need to grab the `acme.sh` script from Git:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要从 Git 获取 `acme.sh` 脚本：
- en: 'First, we need to install Git with the following command:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要使用以下命令安装 Git：
- en: '[PRE12]'
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: mkdir acme
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: mkdir acme
- en: '[PRE13]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, we can clone from the official Git site ([https://github.com/acmesh-official/acme.sh](https://github.com/acmesh-official/acme.sh))
    with the following command:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以使用以下命令从官方 Git 网站克隆（[https://github.com/acmesh-official/acme.sh](https://github.com/acmesh-official/acme.sh)）：
- en: '[PRE14]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: And then run the installer, updating your direcotry and email address as needed.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行安装程序，根据需要更新您的目录和电子邮件地址。
- en: '[PRE15]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Creating a cert using the webroot mode
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用 webroot 模式创建证书
- en: 'Next, let’s register for an account, passing an email address as the variable:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，让我们注册一个账户，传递一个电子邮件地址作为变量：
- en: '[PRE16]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now, we can run the script, passing the URL and the `apache` home directory
    for the site:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以运行脚本，传递 URL 和站点的 `apache` 主目录：
- en: '[PRE17]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The following figure shows the command running with the new certificate being
    installed by the script.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下图显示了脚本安装新证书时运行的命令。
- en: '![Figure 9.4 – Certificate to be installed](img/B18349_09_04.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.4 – 待安装证书](img/B18349_09_04.jpg)'
- en: Figure 9.4 – Certificate to be installed
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.4 – 待安装证书
- en: The script will restart Apache.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本将重启 Apache。
- en: Testing
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 测试
- en: 'You can now go to the site with an HTTPS. You will see a padlock in the left
    side of the address bar. The site is now secure. This is seen in the following
    figure:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以通过 HTTPS 访问该站点。您会在地址栏的左侧看到一个锁形图标，表示站点已加密安全。下图显示了这一点：
- en: '![Figure 9.5 – SSL keys installed](img/B18349_09_05.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.5 – 安装的 SSL 密钥](img/B18349_09_05.jpg)'
- en: Figure 9.5 – SSL keys installed
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.5 – 安装的 SSL 密钥
- en: How it works…
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它的工作原理…
- en: The way this works is the `acme.sh` script generates a temporary key file and
    places it in the `.well-know/acme-challenge` directory. The system then queries
    from the internet to the server to get the file. If it can get to the file, the
    test passes and new keys are issued. It is important to monitor this, as third-party
    security software or SELinux can impact your ability to get to the temporary key
    file.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程的工作原理是，`acme.sh` 脚本生成一个临时密钥文件，并将其放置在 `.well-know/acme-challenge` 目录中。系统然后从互联网查询服务器以获取该文件。如果能获取到该文件，则测试通过，新的密钥会被发放。需要注意的是，要监控这一过程，因为第三方安全软件或
    SELinux 可能会影响你获取临时密钥文件的能力。
- en: 'Now that the certificate is set up, there is one task left to do to make this
    a refresh. You can easily have the system check daily for a new certificate by
    adding in the following cron job. As a note, you will need to adjust the location
    of the script based on where you installed it. In this case, it was installed
    in `/home/acme/.acme.sh`:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在证书已经设置完毕，还有一项任务需要做，以使其定期更新。你可以通过添加以下 cron 任务，轻松地让系统每天检查一次新证书。需要注意的是，你需要根据实际安装位置调整脚本路径。在本例中，脚本安装在
    `/home/acme/.acme.sh`：
- en: '[PRE18]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When using keys that automatically update, it is highly recommended to monitor
    your sites consistently for SSL errors. Ideally, you are checking for SSL errors
    once an hour just in case things break. Look in the web server’s SSL logs and
    also run a check with a tool such as wget or curl to verify that the site is running.
    Both wget and curl will fail with an error if the SSL key is invalid.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用自动更新的密钥时，强烈建议定期监控你的网站是否出现 SSL 错误。理想情况下，你应该每小时检查一次 SSL 错误，以防万一出现问题。查看 Web
    服务器的 SSL 日志，并使用如 wget 或 curl 等工具进行检查，确保网站正常运行。如果 SSL 密钥无效，wget 和 curl 会因为错误而失败。
- en: Encrypting all data at rest
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加密所有静态数据
- en: Encrypting your data in motion is great, but you also need to encrypt the data
    at rest. This is especially important in the cloud, where you are sharing storage
    with many other users. While your cloud provider may offer automatic encryption,
    it is important to remember that if they can decrypt the data automatically, they
    also have access to the keys. To truly protect your data, you need to encrypt
    the data with keys that your cloud does not have access to. This can be done easily
    with **Linux Unified Key Setup** (**LUKS**). Large organizations will also want
    to use **Clevis**, which enables the automatic decryption of data from keys managed
    by a Tang server. The Tang server is used to store and manage the encryption keys.
    In the cloud, this allows you to manage your boot encryption without the cloud
    provider having access to your keys. This process is called **Network Bound Disk**
    **Encryption** (**NBDE**).
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 加密传输中的数据很重要，但你也需要加密静态数据。这一点在云环境中尤为重要，因为你与许多其他用户共享存储空间。尽管云服务提供商可能提供自动加密功能，但需要记住的是，如果他们可以自动解密数据，那么他们也可以访问密钥。为了真正保护数据，你需要使用云服务无法访问的密钥进行加密。这可以通过**Linux统一密钥设置**（**LUKS**）轻松实现。大型组织还可以使用**Clevis**，它能够从由
    Tang 服务器管理的密钥中自动解密数据。Tang 服务器用于存储和管理加密密钥。在云环境中，这使你能够管理启动加密，而无需让云服务提供商访问你的密钥。这个过程被称为**网络绑定磁盘加密**（**NBDE**）。
- en: NBDE is a security feature used in Oracle Linux that provides disk encryption
    keys during the boot process. NBDE is an extension of regular disk encryption
    and uses a network server to store and provide the encryption keys rather than
    the local machine. Combined with NUKS, this allows both a local key (that requires
    a manual passphrase to use) and an automatic key from the Tang server to decrypt
    the boot drive. This gives you the simplicity of a secure automated boot, but
    in an emergency, you can still boot without the Tang server.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: NBDE 是 Oracle Linux 中的一项安全功能，在启动过程中提供磁盘加密密钥。NBDE 是常规磁盘加密的扩展，它使用网络服务器来存储并提供加密密钥，而不是本地机器。结合
    NUKS，这使得可以使用本地密钥（需要手动输入密码短语）和来自 Tang 服务器的自动密钥解密启动驱动器。这提供了简化的安全自动启动，但在紧急情况下，你仍然可以在没有
    Tang 服务器的情况下启动。
- en: Getting ready
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Unlike other recipes, this one will need a minimum of two VMs: one to act as
    the Tang server and the other to act as a client. Both systems should be updated
    to the latest software.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他教程不同，本教程需要至少两台虚拟机：一台作为 Tang 服务器，另一台作为客户端。两台系统应更新到最新的软件版本。
- en: How to do it…
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作……
- en: 'In this recipe, we will do the following:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将执行以下操作：
- en: 'Create a server named `tang`:'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建名为 `tang` 的服务器：
- en: Install and configure a Tang server
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装并配置 Tang 服务器
- en: 'Build another server named `clevis`:'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建另一个名为 `clevis` 的服务器：
- en: Install and configure Clevis
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装并配置 Clevis
- en: Configure LUKS to work with Clevis to encrypt a data volume
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 LUKS 与 Clevis 一起加密数据卷
- en: Configuring a Tang server
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置 Tang 服务器
- en: 'The Tang server is used by Oracle Linux to provide encryption keys during the
    boot process. Here’s a basic overview of how it operates:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Tang 服务器由 Oracle Linux 使用，在启动过程中提供加密密钥。以下是它的基本工作原理：
- en: During the boot process, the remote system contacts the Tang server and requests
    an encryption key
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在启动过程中，远程系统会联系 Tang 服务器并请求加密密钥。
- en: The Tang server generates a random encryption key and sends it back to the remote
    system
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tang 服务器生成一个随机加密密钥并将其发送回远程系统。
- en: The remote system uses the encryption key to unlock its encrypted drive, allowing
    it to boot
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 远程系统使用加密密钥解锁其加密磁盘，从而能够启动。
- en: The Tang server discards the encryption key so it cannot be used again
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tang 服务器丢弃加密密钥，以使其无法再次使用。
- en: One of the key benefits of using a Tang server is that it can provide encryption
    keys to remote systems even if the main encryption key is compromised. This can
    improve the security of the system by limiting the amount of damage that can be
    done if the main encryption key is compromised.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Tang 服务器的一个关键好处是，即使主加密密钥被泄露，它仍然可以为远程系统提供加密密钥。这可以通过限制主加密密钥泄露后的损害来提高系统的安全性。
- en: To install the Tang server as the root, we will simply install the software
    with `dnf`, open up the firewall ports, and set the server to run. This is all
    done as the root user.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装 Tang 服务器，我们只需要使用 `dnf` 安装软件，打开防火墙端口，并设置服务器运行。这些操作都以 root 用户身份完成。
- en: 'Installing via `dnf` is easy; just run the following command:'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过 `dnf` 安装非常简单；只需运行以下命令：
- en: '[PRE19]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: firewall-cmd --zone=trusted --add-source=192.168.56.0/24
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: firewall-cmd --zone=trusted --add-source=192.168.56.0/24
- en: firewall-cmd --zone=trusted --add-service=http
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: firewall-cmd --zone=trusted --add-service=http
- en: firewall-cmd --runtime-to-permanent
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: firewall-cmd --runtime-to-permanent
- en: '[PRE20]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Configure the service to start upon booting and also start now with the following
    command:'
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令配置服务在启动时自动启动，并立即启动：
- en: '[PRE21]'
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'You can verify that the service is running with the following command:'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以使用以下命令验证服务是否正在运行：
- en: '[PRE22]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[root@tang ~]# tang-show-keys'
  id: totrans-171
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@tang ~]# tang-show-keys'
- en: RxdbjAY7_N19UEYBO6XIUVosv0s
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: RxdbjAY7_N19UEYBO6XIUVosv0s
- en: '[root@tang ~]#'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@tang ~]#'
- en: '[PRE23]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Next, let’s set up the client system with LUKS to encrypt the data drive.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们使用 LUKS 设置客户端系统，以加密数据磁盘。
- en: Setting up LUKS
  id: totrans-176
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置 LUKS
- en: 'First, install the required packages with the following `dnf` command:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，使用以下 `dnf` 命令安装所需的包：
- en: '[PRE24]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[root@clevis ~]# lsblk'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@clevis ~]# lsblk'
- en: NAME           MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: NAME           MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
- en: sda              8:0    0  100G  0 disk
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sda              8:0    0  100G  0 disk
- en: ├─sda1           8:1    0    1G  0 part /boot
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ├─sda1           8:1    0    1G  0 part /boot
- en: └─sda2           8:2    0 72.9G  0 part
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: └─sda2           8:2    0 72.9G  0 part
- en: ├─ol-root    252:0    0   50G  0 lvm  /
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ├─ol-root    252:0    0   50G  0 lvm  /
- en: ├─ol-swap    252:1    0  7.9G  0 lvm  [SWAP]
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ├─ol-swap    252:1    0  7.9G  0 lvm  [SWAP]
- en: ├─ol-var     252:2    0    5G  0 lvm  /var
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ├─ol-var     252:2    0    5G  0 lvm  /var
- en: ├─ol-home    252:3    0    5G  0 lvm  /home
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ├─ol-home    252:3    0    5G  0 lvm  /home
- en: └─ol-var_log 252:4    0    5G  0 lvm  /var/log
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: └─ol-var_log 252:4    0    5G  0 lvm  /var/log
- en: sdb              8:16   0   20G  0 disk
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: sdb              8:16   0   20G  0 disk
- en: '/dev/sdb with the following command:'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用以下命令操作 /dev/sdb：
- en: '[PRE25]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '**WARNING: Doing this will delete ALL DATA on the device**, including any partitions:'
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**警告：执行此操作将删除设备上的所有数据**，包括任何分区：'
- en: '[PRE26]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![Figure 9.6 – Encrypting the drive](img/B18349_09_06.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.6 – 加密磁盘](img/B18349_09_06.jpg)'
- en: Figure 9.6 – Encrypting the drive
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.6 – 加密磁盘
- en: When running the command, you will also be prompted for a passphrase. **DO NOT
    LOSE THIS** or you will be unable to decrypt the drive manually.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 执行命令时，系统还会提示输入密码短语。**请不要丢失此密码**，否则您将无法手动解密磁盘。
- en: 'Next, let’s manually unlock the drive using the previously saved passphrase
    with the following command:'
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用之前保存的密码短语手动解锁磁盘，命令如下：
- en: '[PRE27]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[root@clevis ~]# ls /dev/mapper/datadisk1'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@clevis ~]# ls /dev/mapper/datadisk1'
- en: '/dev/mapper/datadisk1 like any normal disk. In the example, let’s create a
    xfs filesystem on /dev/mapper/datadisk1:'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: /dev/mapper/datadisk1 就像任何正常的磁盘一样。在本例中，我们将在 /dev/mapper/datadisk1 上创建一个 xfs
    文件系统：
- en: '[PRE28]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'blkid command. The UUID will be used to identify the disk to decrypt it later:'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: blkid 命令。UUID 将用于标识磁盘，以便稍后解密：
- en: '[PRE29]'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: echo "UUID=58c9f051-f243-4c42-af4f-62d2e3e3b90f /data xfs defaults 0 0" | sudo
    tee -a /etc/fstab
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: echo "UUID=58c9f051-f243-4c42-af4f-62d2e3e3b90f /data xfs defaults 0 0" | sudo
    tee -a /etc/fstab
- en: '[PRE30]'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now we can mount the disk with the following command:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们可以使用以下命令挂载磁盘：
- en: '[PRE33]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Next, we need to bind a Tang key to the device using Clevis with the following
    command. We will pass the device and Tang server information via the following
    command line. You will need to use the existing LUKS password to add the keys
    to Tang:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要使用 Clevis 通过以下命令将 Tang 密钥绑定到设备。我们将通过以下命令行传递设备和 Tang 服务器的信息。您需要使用现有的
    LUKS 密码将密钥添加到 Tang：
- en: '[PRE34]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![Figure 9.7 – LUKS with the second slot used](img/B18349_09_07.jpg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.7 – 使用第二个插槽的 LUKS](img/B18349_09_07.jpg)'
- en: Figure 9.7 – LUKS with the second slot used
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.7 – 使用第二个插槽的 LUKS
- en: 'Next, we need to configure the disk to decrypt the drive on boot. We first
    need to pull the new UUID of the encrypted drive:'
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要配置磁盘，以便在启动时自动解密该驱动器。我们首先需要获取加密驱动器的新 UUID：
- en: '[PRE35]'
  id: totrans-215
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Next, let’s enable the Clevis service:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，启用 Clevis 服务：
- en: '[PRE36]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: /etc/fstab file for the filesystem, changing the default to _netdev. This will
    allow the device to mount after the other non-encrypted filesystems.
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: /etc/fstab 文件用于文件系统，将默认设置更改为 _netdev。这将允许设备在其他非加密文件系统后进行挂载。
- en: '[PRE37]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The `/etc/fstab` should look similar to the following screenshot, with the
    UUID of the encrypted drive mounting as a `_netdev`:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/etc/fstab` 应该类似于以下截图，其中加密驱动器的 UUID 作为 `_netdev` 挂载：'
- en: '![Figure 9.8 – fstab](img/B18349_09_08.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.8 – fstab](img/B18349_09_08.jpg)'
- en: Figure 9.8 – fstab
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.8 – fstab
- en: How it works…
  id: totrans-223
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理…
- en: Clevis and Tang are both software tools that are used to unlock and decrypt
    disks automatically during the boot process of a Linux system.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: Clevis 和 Tang 都是软件工具，用于在 Linux 系统的启动过程中自动解锁和解密磁盘。
- en: 'Here is a brief overview of how they work:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 这里简要概述了它们的工作原理：
- en: During the boot process, the system prompts the user for a passphrase to unlock
    and decrypt the disk.
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在启动过程中，系统会提示用户输入密码短语以解锁和解密磁盘。
- en: With Clevis and Tang, this prompt is replaced with an automated process that
    unlocks and decrypts the disk using a network-based key server.
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Clevis 和 Tang 后，系统提示会被一个自动化过程所取代，通过基于网络的密钥服务器解锁并解密磁盘。
- en: Clevis and Tang work together to create a *binding* between the encrypted disk
    and the key server. This binding is based on a *policy* that specifies the conditions
    under which the disk can be unlocked.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Clevis 和 Tang 协同工作，创建一个加密磁盘与密钥服务器之间的*绑定*。这个绑定基于一个*策略*，该策略指定了解锁磁盘的条件。
- en: When the system boots up, it contacts the key server and requests the decryption
    key for the encrypted disk. The key server checks the policy to determine whether
    the conditions for unlocking the disk have been met.
  id: totrans-229
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当系统启动时，它会联系密钥服务器，并请求加密磁盘的解密密钥。密钥服务器检查策略，以确定是否满足解锁磁盘的条件。
- en: If the policy conditions are met, the key server sends the decryption key to
    the system, which then uses it to unlock and decrypt the disk.
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果符合政策条件，密钥服务器会向系统发送解密密钥，系统随后使用该密钥解锁并解密磁盘。
- en: If the policy conditions are not met, the key server denies the request for
    the decryption key, and the disk remains locked.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果不符合政策条件，密钥服务器会拒绝解密密钥请求，磁盘将保持加锁状态。
- en: There’s more…
  id: totrans-232
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 还有更多…
- en: 'Optionally, you can also modify the system to allow an admin to manually enter
    the initial password when the system boots. To do this, install `clevis-dracut`:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，您还可以修改系统，以允许管理员在系统启动时手动输入初始密码。为此，请安装 `clevis-dracut`：
- en: '[PRE38]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Then, rebuild the boot files:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，重新构建启动文件：
- en: '[PRE39]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'When the system boots, you will have the opportunity to enter the passphrase
    manually:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统启动时，您将有机会手动输入密码：
- en: '![Figure 9.9 – Manual passphrase entry](img/B18349_09_09.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.9 – 手动输入密码短语](img/B18349_09_09.jpg)'
- en: Figure 9.9 – Manual passphrase entry
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.9 – 手动输入密码短语
- en: Now you have an encrypted filesystem with an automatic way to decrypt it, as
    well as a manual method for use in emergencies.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经有了一个加密的文件系统，并且具备自动解密的方法，同时还提供了应急情况下使用的手动解密方法。
- en: Validating adherence to a compliance policy
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 验证是否遵守合规性政策
- en: Securing systems is much more than encrypting data at rest or in motion. Many
    configuration files should be checked, along with other common security settings.
    This can be done automatically using **Security Content Automation Protocol**
    (**SCAP**) files. SCAP is a standardized framework that is used to automate the
    process of maintaining the security of computer systems. It is a suite of specifications
    that provide a standardized approach to security automation, enabling organizations
    to implement consistent and repeatable security practices across their IT infrastructure.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 系统安全不仅仅是加密静态数据或传输中的数据。许多配置文件和其他常见的安全设置也应当检查。这可以通过使用**安全内容自动化协议**（**SCAP**）文件自动完成。SCAP是一个标准化框架，用于自动化维护计算机系统安全的过程。它是一套规范，提供了一种标准化的安全自动化方法，使组织能够在其IT基础设施中实施一致且可重复的安全实践。
- en: SCAP defines a common language for communicating security-related information,
    which allows security tools and products from different vendors to work together
    seamlessly. It includes a set of standards and guidelines for creating and sharing
    security content, such as vulnerability data, security checklists, and configuration
    baselines. Some of the key components of SCAP include the **Common Vulnerabilities
    and Exposures** (**CVE**) database, which is used to identify and track known
    security vulnerabilities, and the **Common Configuration Enumeration** (**CCE**)
    database, which provides a standardized method for identifying configuration settings
    that are relevant to security.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: SCAP定义了一种用于传递与安全相关的信息的通用语言，使得来自不同厂商的安全工具和产品可以无缝协同工作。它包括一套标准和指南，用于创建和共享安全内容，如漏洞数据、安全检查表和配置基线。SCAP的一些关键组件包括**常见漏洞和暴露**（**CVE**）数据库，用于识别和追踪已知的安全漏洞，以及**常见配置枚举**（**CCE**）数据库，提供一种标准化方法来识别与安全相关的配置设置。
- en: The easiest way to do this is to use a tool called OpenSCAP, which comes with
    Oracle Linux.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法是使用一个名为OpenSCAP的工具，它附带Oracle Linux。
- en: Getting ready
  id: totrans-245
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: As with the other test, we will need an Oracle Linux system to play with. Nothing
    else is required other than the ability for the system to access a `dnf` repository
    to install additional packages.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他测试一样，我们需要一个Oracle Linux系统来进行操作。只需要该系统能够访问`dnf`仓库以安装附加软件包。
- en: How to do it…
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: 'The first step is to install OpenSCAP, usually by installing the entire suite
    of tools:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是安装OpenSCAP，通常通过安装整个工具套件来完成：
- en: '`scap-workbench`: A GUI'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scap-workbench`：图形界面'
- en: '`openscap-scanner`: Scans systems'
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openscap-scanner`：扫描系统'
- en: '`openscap`: The OpenSCAP core'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openscap`：OpenSCAP核心'
- en: '`openscap-utils`: Several command-line tools for scanning systems and containers'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openscap-utils`：几个用于扫描系统和容器的命令行工具'
- en: '`scap-security-guide`: Commonly used SCAP files'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scap-security-guide`：常用SCAP文件'
- en: 'This is done via `dnf` with the following command:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以下命令使用`dnf`来完成此操作：
- en: '[PRE40]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Once OpenSCAP is installed, you have two ways to run the tool: via a GUI or
    by using the command line. To start the GUI, run `scap-workbench`. This launches
    an easy-to-use GUI that will let you run scans.'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安装了OpenSCAP，你可以通过两种方式运行该工具：通过图形界面（GUI）或使用命令行。要启动图形界面，运行`scap-workbench`。这将启动一个易于使用的GUI，允许你运行扫描。
- en: Note
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you install `scap-workbench` and X11 is not installed, `dnf` will install
    it. If you are not using X11 on your servers, consider installing the `scap-workbench`
    on a WSL Oracle Linux system or a system with X11\. You can also install SCAP
    Workbench on a Windows desktop. Downloads for Windows can be found on the Open
    SCAP website, [https://www.open-scap.org/](https://www.open-scap.org/).
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你安装了`scap-workbench`且没有安装X11，`dnf`将会安装它。如果你的服务器上不使用X11，可以考虑在WSL Oracle Linux系统或安装了X11的系统上安装`scap-workbench`。你也可以在Windows桌面上安装SCAP
    Workbench。Windows版本的下载可以在Open SCAP网站找到，[https://www.open-scap.org/](https://www.open-scap.org/)。
- en: How it works…
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的……
- en: While many users run the GUI, you can also use a command line.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然许多用户使用图形界面（GUI），但你也可以使用命令行。
- en: 'When the GUI Launches, you need to pick the type of systems you wish to scan.
    Here, OL8 is being used:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 当图形界面启动时，你需要选择你希望扫描的系统类型。在这里，使用的是OL8：
- en: '![Figure 9.10 – Workbench launch](img/B18349_09_10.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.10 – 工作台启动](img/B18349_09_10.jpg)'
- en: Figure 9.10 – Workbench launch
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.10 – 工作台启动
- en: 'Next, select the profile you wish to use for the scan. The profile is the standard
    that you are comparing to. You must pick one of the profiles to continue:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，选择你希望用于扫描的配置文件。配置文件是你要进行对比的标准。你必须选择其中一个配置文件才能继续：
- en: '![Figure 9.11 – SCAP profiles](img/B18349_09_11.jpg)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.11 – SCAP 配置文件](img/B18349_09_11.jpg)'
- en: Figure 9.11 – SCAP profiles
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.11 – SCAP 配置文件
- en: 'The families of profiles included are as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 所包含的配置文件类别如下：
- en: '**ANSSI-BP**: ANSSI-BP is a set of security recommendations developed by the
    **French National Agency for the Security of Information Systems** (**ANSSI**)
    to provide guidance on securing information systems. The ANSSI-BP recommendations
    cover a wide range of topics, including network security, secure software development,
    access control, cryptography, incident response, and security monitoring.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ANSSI-BP**：ANSSI-BP是由**法国国家信息系统安全局**（**ANSSI**）制定的一套安全建议，旨在为信息系统的安全提供指导。ANSSI-BP建议涵盖了广泛的主题，包括网络安全、安全软件开发、访问控制、加密技术、事件响应和安全监控。'
- en: '**CJIS**: The **Criminal Justice Information Services** (**CJIS**) are a division
    of the **Federal Bureau of Investigation** (**FBI**) in the United States. The
    CJIS division is responsible for providing law enforcement agencies with access
    to criminal justice information systems, which includes databases of criminal
    records, fingerprints, and other related information. The CJIS division was established
    in 1992 and provides services to more than 18,000 law enforcement agencies across
    the United States. Its mission is to provide accurate and timely information to
    law enforcement officials to help them solve and prevent crimes, while also ensuring
    the privacy and security of the information.'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CJIS**：**犯罪司法信息服务**（**CJIS**）是美国**联邦调查局**（**FBI**）的一个部门。CJIS部门负责向执法机构提供对刑事司法信息系统的访问，包括犯罪记录、指纹和其他相关信息的数据库。CJIS部门成立于1992年，向美国超过18,000个执法机构提供服务。其使命是为执法官员提供准确及时的信息，帮助他们解决和预防犯罪，同时确保信息的隐私和安全。'
- en: '**NIST-800**: NIST-800 refers to a series of guidelines and standards for information
    security developed by the **National Institute of Standards and Technology** (**NIST**)
    in the United States. The NIST-800 series includes a set of publications that
    provide guidance on various aspects of information security, such as risk management,
    security controls, and incident response. The NIST-800 series is widely used by
    government agencies, private sector organizations, and other entities to improve
    the security of their information systems. The publications in the series are
    regularly updated to reflect changes in the threat landscape and advancements
    in security technology.'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NIST-800**：NIST-800是由美国**国家标准与技术研究院**（**NIST**）制定的一系列信息安全指南和标准。NIST-800系列包括一套出版物，提供有关信息安全的各个方面的指导，如风险管理、安全控制和事件响应。NIST-800系列被政府机构、私营部门组织和其他实体广泛使用，以提高其信息系统的安全性。该系列的出版物会定期更新，以反映威胁环境的变化和安全技术的进步。'
- en: '**ACSC**: The **Australian Cyber Security Centre** (**ACSC**) is a government
    agency that is responsible for enhancing the cyber security capabilities and resilience
    of the Australian government, businesses, and the community. The ACSC was established
    in 2014 and is a part of the **Australian Signals** **Directorate** (**ASD**).'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ACSC**：**澳大利亚网络安全中心**（**ACSC**）是一个政府机构，负责提升澳大利亚政府、企业和社区的网络安全能力和韧性。ACSC成立于2014年，是**澳大利亚信号局**（**ASD**）的一部分。'
- en: '**HIPAA**: The **Health Insurance Portability and Accountability Act** (**HIPAA**)
    is a federal law in the United States that protects healthcare information. This
    law establishes standards for protecting the privacy and security of individuals’
    health-related information. HIPAA includes specific requirements for securing
    **electronic protected health information** (**ePHI**), which is health information
    that is stored or transmitted electronically.'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**HIPAA**：**健康保险可携带性和责任法案**（**HIPAA**）是美国的一部联邦法律，旨在保护医疗健康信息。该法律建立了保护个人健康相关信息的隐私和安全的标准。HIPAA包括针对**电子受保护健康信息**（**ePHI**）的具体要求，ePHI是指存储或传输的电子健康信息。'
- en: '**PCS-DSS**: The **Payment Card Industry Data Security Standard** **(PCI-DSS)**
    is a set of security standards established by major credit card companies that
    ensure that organizations that have access to credit card details protect the
    confidentiality and integrity of cardholder data. PCI-DSS is designed to reduce
    the risk of data breaches and credit card fraud.'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PCS-DSS**：**支付卡行业数据安全标准**（**PCI-DSS**）是一套由主要信用卡公司制定的安全标准，确保有权访问信用卡信息的组织保护持卡人数据的机密性和完整性。PCI-DSS
    旨在减少数据泄露和信用卡欺诈的风险。'
- en: '**STIG**: **STIG** stands for **Security Technical Implementation Guide**,
    which is a set of guidelines developed by the **Defense Information Systems Agency**
    (**DISA**) in the United States for securing information systems and software
    used by the **Department of Defense** (**DoD**). STIG provides detailed information
    on how to configure and maintain various technologies to meet DoD security requirements
    and ensure that systems are hardened against cyberattacks.'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**STIG**：**STIG** 代表 **安全技术实施指南**，是一套由美国 **国防信息系统局**（**DISA**）为保障 **国防部**（**DoD**）使用的信息系统和软件安全而制定的指南。STIG
    提供了有关如何配置和维护各种技术，以满足 DoD 安全要求并确保系统对抗网络攻击的详细信息。'
- en: When picking a standard, you can use the default generic standards (such as
    the *Standard System Security Profile for Oracle Linux 8* found at [https://static.open-scap.org/ssg-guides/ssg-ol8-guide-standard.html](https://static.open-scap.org/ssg-guides/ssg-ol8-guide-standard.html))
    or a standard that aligns with the workload. For example, for healthcare, HIPAA
    is likely the appropriate standard. If you are in the US Federal Government ecosystem,
    the STIG standard is widely used even outside of the DoD. Once you pick the standard,
    you have several additional options, as seen in the following screenshot. You
    can pick a local or remote machine, as well as a remediation role. The remediation
    role allows the system to automatically resolve issues if possible, but any admin
    should be careful using this. This is because many of the standards can break
    system functionality. Always be careful when automatically remediating issues,
    especially with the more stringent standards, such as STIG and CJIS.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择标准时，你可以使用默认的通用标准（例如，*Oracle Linux 8 的标准系统安全配置文件*，可在 [https://static.open-scap.org/ssg-guides/ssg-ol8-guide-standard.html](https://static.open-scap.org/ssg-guides/ssg-ol8-guide-standard.html)
    查找），或者选择与工作负载相符的标准。例如，对于医疗行业，HIPAA 可能是合适的标准。如果你在美国联邦政府生态系统中，STIG 标准在国防部以外的地方也被广泛使用。一旦选择了标准，你将有几个额外选项，如下图所示。你可以选择本地或远程机器，以及修复角色。修复角色允许系统在可能的情况下自动解决问题，但任何管理员在使用时都应该小心。因为许多标准可能会破坏系统功能。在自动修复问题时，尤其是在更严格的标准（如
    STIG 和 CJIS）下，务必小心。
- en: '![Figure 9.12 – Scan settings](img/B18349_09_12.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.12 – 扫描设置](img/B18349_09_12.jpg)'
- en: Figure 9.12 – Scan settings
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.12 – 扫描设置
- en: Once you have made your choices, select **Scan**.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦做出选择，点击**扫描**。
- en: 'Depending on the standard used, the scan can run in as fast as a few seconds
    or take over 20 minutes. When the scan is complete, you can use the GUI to review
    the results:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 根据所使用的标准，扫描可以在几秒钟内完成，或者可能需要超过 20 分钟。扫描完成后，你可以使用图形界面（GUI）查看结果：
- en: '![Figure 9.13 – Scan results](img/B18349_09_13.jpg)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.13 – 扫描结果](img/B18349_09_13.jpg)'
- en: Figure 9.13 – Scan results
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.13 – 扫描结果
- en: 'Not all fixes involve changing a simple setting. Some may require additional
    filesystems or kernel settings. To see the details of a finding, simply expand
    the results as seen in the following screenshot:'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有修复都仅涉及更改简单的设置。有些可能需要额外的文件系统或内核设置。要查看某项发现的详细信息，只需展开结果，如下图所示：
- en: '![Figure 9.14 – Result details](img/B18349_09_14.jpg)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.14 – 结果详情](img/B18349_09_14.jpg)'
- en: Figure 9.14 – Result details
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.14 – 结果详情
- en: 'At the bottom of the summary, you have several options:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 在总结的底部，你有几个选项：
- en: '![Figure 9.15 – Report options](img/B18349_09_15.jpg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.15 – 报告选项](img/B18349_09_15.jpg)'
- en: Figure 9.15 – Report options
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.15 – 报告选项
- en: 'These options are as follows:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 这些选项如下：
- en: '**Save Results**: Saves the results as a HTML file, an **Asset Reporting File**
    (**ARF**) file, or an **Extensible Configuration Checklist Description Format**
    (**XCDDF**) file'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保存结果**：将结果保存为 HTML 文件、**资产报告文件**（**ARF**）文件或**可扩展配置检查清单描述格式**（**XCDDF**）文件'
- en: '**Generate remediation role**: Generates a script in bash, Ansible, or Puppet
    format to automate the remediation of the server'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生成修复角色**：生成 bash、Ansible 或 Puppet 格式的脚本，以自动修复服务器问题'
- en: '**Show Report**: Opens up the HTML-formatted report in a browser'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**显示报告**：在浏览器中打开 HTML 格式的报告'
- en: Port protection and restricting network access
  id: totrans-292
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 端口保护和限制网络访问
- en: Oracle Linux has a firewall built into the distribution. This firewall is called
    **firewalld**, short for **firewall daemon**. firewalld is a dynamic firewall
    management tool used on Linux systems that provides a simple and consistent way
    to manage firewall rules across different distributions. It is designed to allow
    administrators to manage firewall rules in a flexible and efficient way.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: Oracle Linux 系统内置了一个防火墙。这个防火墙叫做 **firewalld**，即 **防火墙守护进程** 的简称。firewalld 是一个动态防火墙管理工具，广泛用于
    Linux 系统，提供了一种简单而一致的方式来管理不同发行版上的防火墙规则。它的设计旨在使管理员能够灵活、高效地管理防火墙规则。
- en: Getting ready
  id: totrans-294
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'As with the other test, we will need an Oracle Linux system to play with. Nothing
    else is required. The system is enabled by default on most installations. To check
    the status of the daemon, you can use the `systemctl` command as follows:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他测试一样，我们需要一个 Oracle Linux 系统进行实验。其他没有特别要求。该系统在大多数安装中默认启用。要检查守护进程的状态，可以使用 `systemctl`
    命令，如下所示：
- en: '[PRE41]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'The output is displayed in the following screenshot:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示在以下截图中：
- en: '![Figure 9.16 – firewalld status](img/B18349_09_16.jpg)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.16 – firewalld 状态](img/B18349_09_16.jpg)'
- en: Figure 9.16 – firewalld status
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.16 – firewalld 状态
- en: How to do it…
  id: totrans-300
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'You can see the current configuration using the `firewall-cmd` with the `--``list-all`
    option:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用带有 `--list-all` 选项的 `firewall-cmd` 来查看当前配置：
- en: '[PRE42]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'This will show the following information:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 将显示以下信息：
- en: '![Figure 9.17 – firewall-cmd --list-all](img/B18349_09_17.jpg)'
  id: totrans-304
  prefs: []
  type: TYPE_IMG
  zh: '![图 9.17 – firewall-cmd --list-all](img/B18349_09_17.jpg)'
- en: Figure 9.17 – firewall-cmd --list-all
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.17 – firewall-cmd --list-all
- en: 'The output of the preceding command displays a comprehensive summary of the
    active firewall rules and configurations managed by firewalld on a Linux system.
    The output is organized into several sections:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令的输出显示了由 firewalld 管理的 Linux 系统上活动防火墙规则和配置的综合摘要。输出被组织成多个部分：
- en: '`public` (active): This line displays the name of the active firewall zone,
    which in this example is the public zone. When `Target:default` is present, this
    indicates that this is the default zone and that it is currently active.'
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`public`（活动）：此行显示活动防火墙区域的名称，在此示例中为公共区域。当出现 `Target:default` 时，表示这是默认区域，并且当前处于活动状态。'
- en: '`interfaces: enp0s3 enp0s8`: This line shows the network interface(s) that
    is assigned to the active firewall zone. In this example, both the `enp0s3` and
    `enp0s8` interfaces are assigned to the public zone.'
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`interfaces: enp0s3 enp0s8`：此行显示分配给活动防火墙区域的网络接口。在此示例中，`enp0s3` 和 `enp0s8` 两个接口都分配给了公共区域。'
- en: '`sources`: This line displays the IP addresses or network ranges that are allowed
    to access the firewall zone. If no sources are defined, this line will be blank.'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sources`：此行显示允许访问防火墙区域的IP地址或网络范围。如果没有定义源，这一行将为空。'
- en: '`services: cockpit dhcpv6-client ssh`: This line lists the services that are
    allowed to access the firewall zone. In this example, incoming traffic for the
    cockpit, `dhcpv6-client`, and `ssh` services are allowed.'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`services: cockpit dhcpv6-client ssh`：此行列出了允许访问防火墙区域的服务。在此示例中，允许来自 cockpit、`dhcpv6-client`
    和 `ssh` 服务的传入流量。'
- en: '`ports`: This line shows the TCP and UDP ports that are allowed to access the
    firewall zone. If no ports are defined, this line will be blank.'
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ports`：此行显示允许访问防火墙区域的 TCP 和 UDP 端口。如果没有定义端口，这一行将为空。'
- en: '`protocols`: This line shows protocols, such as TCP/UDP/ICMP, that are managed
    at a protocol level.'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`protocols`：此行显示以协议级别管理的协议，如 TCP/UDP/ICMP。'
- en: '`forward`: This shows whether zone forwarding is enabled.'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`forward`：显示是否启用了区域转发。'
- en: '`masquerade: no`: This line indicates whether masquerading is enabled or disabled
    for the firewall zone. Masquerading allows packets from one network to appear
    as if they are coming from another network.'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`masquerade: no`：此行指示防火墙区域是否启用了或禁用了伪装。伪装允许一个网络的包看起来像是来自另一个网络。'
- en: '`forward-ports`: This line shows any forwarded ports that are defined for the
    firewall zone. Forwarded ports allow incoming traffic on a specific port to be
    redirected to a different port or IP address.'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`forward-ports`：此行显示为防火墙区域定义的任何转发端口。转发端口允许将特定端口上的传入流量重定向到另一个端口或 IP 地址。'
- en: '`source-ports`: This line shows any source ports that are defined for the firewall
    zone. Source ports allow incoming traffic from a specific port to be redirected
    to a different port or IP address.'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`source-ports`：此行显示为防火墙区域定义的任何源端口。源端口允许将来自特定端口的传入流量重定向到不同的端口或 IP 地址。'
- en: '`icmp-blocks`: This line displays any **Internet Control Message Protocol**
    (**ICMP**) packets that are blocked by the firewall. ICMP packets are used for
    network diagnostics and troubleshooting.'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icmp-blocks`：此行显示防火墙阻止的任何**互联网控制消息协议**（**ICMP**）数据包。ICMP 数据包用于网络诊断和故障排除。'
- en: '`rich rules`: This line shows any rich rules that are defined for the firewall
    zone. Rich rules allow more complex rules to be defined using a syntax that is
    similar to the `iptables` syntax.'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rich rules`：此行显示为防火墙区域定义的任何丰富规则。丰富规则允许使用类似于`iptables`语法的语法定义更复杂的规则。'
- en: 'Adding new rules is easy to do. A rule can be added using the service name
    (found in the `/etc/services` file) or the port number. The most common task is
    to add a common user service, such as `http` or `mysql`. This is done by adding
    the `--add-service` option to the command. When the service is added, the configuration
    will not survive a reboot unless the `--permanent` option is added. Some common
    examples are as follows:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 添加新规则很容易做到。可以使用服务名称（在`/etc/services`文件中找到）或端口号来添加规则。最常见的任务是添加一个常见的用户服务，如`http`或`mysql`。这可以通过向命令中添加`--add-service`选项来完成。当服务添加后，除非添加了`--permanent`选项，否则配置不会在重启后保存。一些常见的示例如下：
- en: '[PRE43]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Optionally, you can specify the protocol and port to allow the service. The
    following are examples of adding TCP or UDP ports:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 可选地，你可以指定协议和端口来允许该服务。以下是添加 TCP 或 UDP 端口的示例：
- en: '[PRE44]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'You can also remove a port or service by using the `--remove-port` or `--``remove-service`
    options:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用`--remove-port`或`--remove-service`选项来移除端口或服务：
- en: '[PRE45]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'When you are done making changes, you will need to reload the firewall rules.
    This is done with the `--``reload` option:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 完成修改后，你需要重新加载防火墙规则。这可以通过`--reload`选项完成：
- en: '[PRE46]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: How it works…
  id: totrans-327
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: firewalld is based on the netfilter framework, which is a set of hooks that
    allows network packets to be filtered by the kernel. This framework is used to
    implement the iptables firewall on many Linux systems. firewalld provides a higher-level
    abstraction of the netfilter framework, allowing administrators to define rules
    in terms of services, ports, and protocols rather than directly manipulating iptables
    rules. One of the key advantages of firewalld is its ability to define firewall
    rules that match on multiple attributes. For example, administrators can define
    a rule that matches on both the source and destination IP address, as well as
    the protocol and port number. This allows more granular control over network traffic
    and makes it easier to define complex firewall policies.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld 基于 netfilter 框架，netfilter 是一组钩子，允许网络数据包由内核进行过滤。这个框架用于在许多 Linux 系统上实现
    iptables 防火墙。firewalld 提供了 netfilter 框架的更高级抽象，允许管理员通过服务、端口和协议来定义规则，而不是直接操作 iptables
    规则。firewalld 的一个关键优势是能够定义匹配多个属性的防火墙规则。例如，管理员可以定义一个规则，匹配源 IP 地址、目标 IP 地址、协议和端口号。这允许更精细地控制网络流量，并使得定义复杂的防火墙策略变得更加容易。
- en: firewalld also allows administrators to define firewall rules in terms of network
    zones. A zone is a set of network interfaces that are assigned a specific level
    of trust. For example, an administrator might define a public zone for network
    interfaces that are exposed to the internet and a trusted zone for network interfaces
    that are only accessible from trusted internal networks. Each zone can have its
    own set of firewall rules, allowing administrators to apply different policies
    to different network interfaces.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: firewalld 还允许管理员根据网络区域定义防火墙规则。区域是被分配特定信任级别的一组网络接口。例如，管理员可能会为暴露在互联网的网络接口定义一个公共区域，为仅能从可信内部网络访问的网络接口定义一个受信任区域。每个区域可以有自己的一组防火墙规则，允许管理员对不同的网络接口应用不同的策略。
- en: Keeping SELinux active
  id: totrans-330
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持 SELinux 活跃
- en: '**SELinux**, or **Security-Enhanced Linux**, is a security module that provides
    **mandatory access control** (**MAC**) policies in the Linux kernel. It is needed
    because it offers a higher level of security for Linux systems by enforcing strict
    rules on what processes and users can do on the system. By default, Linux uses
    **discretionary access control** (**DAC**), which means that any user or process
    can access any file or resource, as long as they have the appropriate permissions.
    This can lead to security vulnerabilities, as any compromised process or user
    can potentially access and modify sensitive data or system files.'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: '**SELinux**，或称为**安全增强型 Linux**，是一个提供 **强制访问控制**（**MAC**）策略的安全模块，运行在 Linux 内核中。它之所以必要，是因为它通过对系统上进程和用户可以执行的操作实施严格的规则，提供了更高等级的安全性。默认情况下，Linux
    使用 **自主访问控制**（**DAC**），这意味着任何用户或进程只要拥有适当的权限，就可以访问任何文件或资源。这可能导致安全漏洞，因为任何被攻破的进程或用户都可能访问和修改敏感数据或系统文件。'
- en: SELinux adds an extra layer of security by enforcing mandatory access control
    policies that restrict access to files and resources based on the security context
    of the process or user. This means that even if a process or user has the appropriate
    permissions, they will only be able to access resources that are explicitly allowed
    by the SELinux policy.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 通过强制实施强制访问控制策略，增加了一层额外的安全性，这些策略根据进程或用户的安全上下文限制对文件和资源的访问。这意味着即使一个进程或用户具有适当的权限，他们也只能访问
    SELinux 策略明确允许的资源。
- en: This recipe will cover how to create a custom SELinux policy instead of disabling
    it and how to allow services to do things such as bind to low ports (<`1024`).
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将介绍如何创建自定义 SELinux 策略，而不是禁用它，并且如何允许服务执行诸如绑定低端口（<`1024`）之类的操作。
- en: Getting ready
  id: totrans-334
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'As with the other test, we will need an Oracle Linux system to play with. Nothing
    else is required. The system is enabled by default on most installations. To see
    the status of SELinux, you can use the command `getenforce`. The command will
    return the current active state. There are three states:'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 和其他测试一样，我们将需要一个 Oracle Linux 系统来进行操作。其他没有特别的要求。大多数安装默认启用了该系统。要查看 SELinux 的状态，可以使用命令
    `getenforce`。该命令会返回当前的活动状态。状态有三种：
- en: '`enforcing` – SELinux is active and blocking activity that is not allowed'
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`enforcing` – SELinux 处于活动状态，并且阻止不允许的操作'
- en: '`permissive` – SELinux is enabled, but will not block any activity'
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`permissive` – SELinux 已启用，但不会阻止任何活动'
- en: '`disabled` – SELinux is disabled'
  id: totrans-338
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`disabled` – SELinux 已禁用'
- en: 'Addition commands are available if you install the `setools` using `dnf`:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你安装了 `setools`，可以使用 `dnf` 来获得其他命令：
- en: '[PRE47]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'You can also use the command `sestatus` to get more information about SELinux:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用命令 `sestatus` 来获取有关 SELinux 的更多信息：
- en: '[PRE48]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: You can also use the SELinux type to manage resources. SELinux types are labels
    used to classify various resources in a Linux system, such as processes, files,
    directories, and network ports. SELinux types are an important part of SELinux
    security policies, as they determine which processes and users can access specific
    resources on the system.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用 SELinux 类型来管理资源。SELinux 类型是用于对 Linux 系统中各种资源进行分类的标签，例如进程、文件、目录和网络端口。SELinux
    类型是 SELinux 安全策略的重要组成部分，因为它们决定了哪些进程和用户可以访问系统上的特定资源。
- en: 'There are several types of SELinux types, including the following:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种类型的 SELinux 类型，包括以下几种：
- en: '**User types**: User types are used to define the security context of a user.
    They are also used to confine the actions of a user to a specific set of resources
    on the system.'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户类型**：用户类型用于定义用户的安全上下文。它们还用于将用户的操作限制在系统上特定资源的集合内。'
- en: '**Role types**: Role types are used to define the security context of a role.
    They are also used to confine the actions of a user to a specific set of resources
    on the system.'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**角色类型**：角色类型用于定义角色的安全上下文。它们还用于将用户的操作限制在系统上特定资源的集合内。'
- en: '**Domain types**: Domain types are used to define the security context of a
    process. Each process on the system is assigned a unique domain type, which determines
    which resources the process can access.'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**域类型**：域类型用于定义进程的安全上下文。系统上的每个进程都会被分配一个唯一的域类型，该类型决定了进程可以访问哪些资源。'
- en: '**Type enforcement types**: Type enforcement types are used to define the security
    context of a file or directory and confine the actions of a process to a specific
    set of resources on the system.'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类型强制类型**：类型强制类型用于定义文件或目录的安全上下文，并将进程的操作限制在系统上特定资源的集合内。'
- en: '**Network port type**s: Network port types are used to define the security
    context of a network port. Network port types are used to restrict network access
    to specific ports or services on the system.'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**网络端口类型**：网络端口类型用于定义网络端口的安全上下文。网络端口类型用于限制系统上特定端口或服务的网络访问。'
- en: In addition to these types, there are also several special types used by SELinux,
    such as the `unconfined_t` type, which is used for processes that are not confined
    by SELinux, and the `system_u` and `root_t` types, which are used for system resources
    and processes.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些类型外，SELinux 还有几个特殊类型，例如 `unconfined_t` 类型，用于没有被 SELinux 限制的进程，和 `system_u`
    与 `root_t` 类型，分别用于系统资源和进程。
- en: How to do it…
  id: totrans-351
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作…
- en: The state of SELinux can be changed on the fly using the command `setenforce`
    with the parameters `1` or `0`. Using `1` puts SELinux into `enforcing` mode,
    while `0` puts it into `permissive` mode.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用命令 `setenforce` 配合参数 `1` 或 `0` 动态更改 SELinux 的状态。使用 `1` 会将 SELinux 设置为 `enforcing`
    模式，而 `0` 会将其设置为 `permissive` 模式。
- en: Additionally, you can edit the configuration file, `/etc/selinux/config`, and
    set the field SELinux to any one of the three states. This is also the only way
    to disable SELinux.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你可以编辑配置文件 `/etc/selinux/config`，并将 SELinux 字段设置为三种状态之一。这也是禁用 SELinux 的唯一方法。
- en: While disabling SELinux is tempting for many admins, it can easily be updated
    to allow the required behavior.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然许多管理员都倾向于禁用 SELinux，但它可以轻松地更新以允许所需的行为。
- en: SELinux also logs to the `/var/log/audit/audit.log` file by default.
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 默认情况下还会将日志记录到 `/var/log/audit/audit.log` 文件中。
- en: How it works…
  id: totrans-356
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: SELinux has several layers of security managing files, ports, and kernel modules.
    They are all managed by the `semanage` command.
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 有多个安全层次，用于管理文件、端口和内核模块。它们都由 `semanage` 命令管理。
- en: semanage
  id: totrans-358
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: semanage
- en: '`semanage` is a command-line tool used that''s to manage SELinux policies in
    Linux systems. It is used to create, modify, or delete SELinux policies, as well
    as manage file contexts and network ports. Here are some common uses of the `semanage`
    command:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: '`semanage` 是一个命令行工具，用于管理 Linux 系统中的 SELinux 策略。它用于创建、修改或删除 SELinux 策略，还可以管理文件上下文和网络端口。以下是
    `semanage` 命令的一些常见用途：'
- en: '`semanage` can be used to create, modify, or delete policy modules. For example,
    you can create a new policy module with the following command:'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semanage` 可用于创建、修改或删除策略模块。例如，你可以使用以下命令创建一个新的策略模块：'
- en: '[PRE49]'
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '`semanage` can be used to manage file contexts, including adding or modifying
    contexts for specific files or directories. For example, you can add a new file
    context with the following command:'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semanage` 可用于管理文件上下文，包括添加或修改特定文件或目录的上下文。例如，你可以使用以下命令添加一个新的文件上下文：'
- en: '[PRE50]'
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '`semanage` can be used to manage network ports and services, including adding
    or modifying port types and policies. For example, you can define a new port type
    with the following command:'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semanage` 可用于管理网络端口和服务，包括添加或修改端口类型和策略。例如，你可以使用以下命令定义一个新的端口类型：'
- en: '[PRE51]'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '`setsebool`: SELinux has Boolean variables that can be either enabled or disabled
    to control specific security policies. To change the value of these variables,
    you can use the `setsebool` command to enable or disable certain SELinux policies.
    A useful example is when you set `httpd_can_network_connect` to true for a web
    server:'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setsebool`：SELinux 有布尔变量，可以启用或禁用，以控制特定的安全策略。要更改这些变量的值，可以使用 `setsebool` 命令启用或禁用某些
    SELinux 策略。一个有用的示例是，当你将 `httpd_can_network_connect` 设置为 true 来允许 Web 服务器时：'
- en: '[PRE52]'
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE52]'
- en: getsebool httpd_can_network_connect
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: getsebool httpd_can_network_connect
- en: httpd_can_network_connect --> off
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: httpd_can_network_connect --> off
- en: '[PRE53]'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE53]'
- en: SELinux fixfiles
  id: totrans-371
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SELinux fixfiles
- en: 'SELinux `fixfiles` is a command-line tool that''s used to restore the SELinux
    file contexts of files and directories. SELinux uses file contexts to determine
    which processes and users can access specific files or directories on the system.
    When file contexts are changed or corrupted, it can cause issues with system functionality
    or security. The `fixfiles` command is used to restore the SELinux file contexts
    to their default values. This can be useful when you encounter issues with file
    access or SELinux-related errors. Here are some common ways to use the `fixfiles`
    command:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux `fixfiles` 是一个命令行工具，用于恢复文件和目录的 SELinux 文件上下文。SELinux 使用文件上下文来确定哪些进程和用户可以访问系统中的特定文件或目录。当文件上下文被更改或损坏时，可能会导致系统功能或安全问题。`fixfiles`
    命令用于将文件上下文恢复为默认值。这在遇到文件访问或 SELinux 相关错误时非常有用。以下是一些常见的 `fixfiles` 命令使用方式：
- en: '**Restore default file contexts for a directory**: To restore the default file
    contexts for a specific directory, you can use the following command:'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恢复目录的默认文件上下文**：要恢复特定目录的默认文件上下文，可以使用以下命令：'
- en: '[PRE54]'
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE54]'
- en: This will recursively restore the default file contexts for all files and directories
    within the specified directory.
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将递归地恢复指定目录内所有文件和目录的默认文件上下文。
- en: '**Restore default file contexts for the entire system**: To restore the default
    file contexts for the entire system, run the following command:'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恢复整个系统的默认文件上下文**：要恢复整个系统的默认文件上下文，请运行以下命令：'
- en: '[PRE55]'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE55]'
- en: This will restore the default file contexts for all files and directories on
    the system. Note that this can take some time to complete and may cause temporary
    disruptions to system functionality.
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将恢复系统中所有文件和目录的默认文件上下文。请注意，这可能需要一些时间才能完成，并且可能会导致系统功能的暂时中断。
- en: '**Verify file contexts**: You can use the following command to verify the file
    contexts for a specific file or directory:'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证文件上下文**：您可以使用以下命令验证特定文件或目录的文件上下文：'
- en: '[PRE56]'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE56]'
- en: Note
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'If SELinux was disabled for any amount of time, these contexts would not have
    been set while it was not running. There is a shortcut to get SELinux to re-label
    the entire filesystem hierarchy: `#` `touch /.autorelabel`'
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 SELinux 曾在某段时间内被禁用，那么在其未运行期间，这些上下文将未被设置。可以使用一个快捷方式让 SELinux 重新标记整个文件系统层次结构：`#
    touch /.autorelabel`
- en: Now reboot the machine. As SELinux starts, it will set all file and security
    contexts to the default for each type and location.
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 现在重启机器。随着 SELinux 的启动，它将为每种类型和位置的文件和安全上下文设置默认值。
- en: SELinux users
  id: totrans-384
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: SELinux 用户
- en: SELinux users are labels used to classify different types of users in a Linux
    system. SELinux users are an important part of SELinux security policies, as they
    are used to confine the actions of a user to a specific set of resources on the
    system.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 用户是用来分类 Linux 系统中不同类型用户的标签。SELinux 用户是 SELinux 安全策略的重要组成部分，因为它们用于将用户的操作限制在系统中一组特定的资源上。
- en: 'There are several types of SELinux users:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种类型的 SELinux 用户：
- en: '**System users**: System users are users that are defined by the system and
    are used to run system services or daemons. These users are typically assigned
    a unique SELinux user label, which is used to confine the actions of the user
    to a specific set of resources on the system.'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统用户**：系统用户是由系统定义的用户，用于运行系统服务或守护进程。这些用户通常会被分配一个独特的 SELinux 用户标签，用于将用户的操作限制在系统中一组特定的资源上。'
- en: '**Login users**: Login users are users that are defined by the system and are
    used to log into the system. These users are typically assigned a unique SELinux
    user label, which is used to confine the actions of the user to a specific set
    of resources on the system.'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**登录用户**：登录用户是由系统定义的用户，用于登录系统。这些用户通常会被分配一个独特的 SELinux 用户标签，用于将用户的操作限制在系统中一组特定的资源上。'
- en: '**Staff users**: Staff users are users that are defined by the system and are
    used by staff members to perform their work. These users are typically assigned
    a unique SELinux user label, which is used to confine the actions of the user
    to a specific set of resources on the system.'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工作人员用户**：工作人员用户是由系统定义的用户，由工作人员用于执行他们的工作。这些用户通常会被分配一个独特的 SELinux 用户标签，用于将用户的操作限制在系统中一组特定的资源上。'
- en: '**User-defined users**: User-defined users are users that are defined by the
    system administrator. These users are typically assigned a unique SELinux user
    label, which is used to confine the actions of the user to a specific set of resources
    on the system.'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户定义的用户**：用户定义的用户是由系统管理员定义的用户。这些用户通常会被分配一个独特的 SELinux 用户标签，用于将用户的操作限制在系统中一组特定的资源上。'
- en: 'Here are some of the commonly used SELinux user commands:'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些常用的 SELinux 用户命令：
- en: '`semanage user`: This command is used to manage SELinux users and their properties.
    For example, to create a new SELinux user, you can use the command `semanage user
    -a -R "s0-s0:c0.c1023" -r s0 -L s0:c0.c1023 -P user -``n username`.'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semanage user`：此命令用于管理 SELinux 用户及其属性。例如，要创建一个新的 SELinux 用户，可以使用命令 `semanage
    user -a -R "s0-s0:c0.c1023" -r s0 -L s0:c0.c1023 -P user -n username`。'
- en: '`semanage login`: This command is used to manage SELinux login mappings, which
    map system users to SELinux users. For example, to create a new login mapping,
    you can use the command `semanage login -a -s user_u -r` `s0 username`.'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semanage login`：此命令用于管理 SELinux 登录映射，它将系统用户映射到 SELinux 用户。例如，要创建一个新的登录映射，可以使用命令
    `semanage login -a -s user_u -r s0 username`。'
- en: '`semanage staff`: This command is used to manage SELinux staff mappings, which
    map staff users to SELinux users. For example, to create a new staff mapping,
    you can use the command `semanage staff -a -s user_u -r` `s0 username`.'
  id: totrans-394
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semanage staff`：此命令用于管理 SELinux 员工映射，它将员工用户映射到 SELinux 用户。例如，要创建一个新的员工映射，可以使用命令
    `semanage staff -a -s user_u -r s0 username`。'
- en: '`semanage sudo`: This command is used to manage SELinux sudo mappings, which
    map sudoers to SELinux users. For example, to create a new sudo mapping, you can
    use the command `semanage sudo -a -r s0 -R "s0-s0:c0.c1023" -L s0:c0.c1023 -``U
    username`.'
  id: totrans-395
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semanage sudo`：此命令用于管理 SELinux sudo 映射，它将 sudo 用户映射到 SELinux 用户。例如，要创建一个新的
    sudo 映射，可以使用命令 `semanage sudo -a -r s0 -R "s0-s0:c0.c1023" -L s0:c0.c1023 -U username`。'
- en: '`semanage port`: This command is used to manage SELinux port mappings, which
    map ports to SELinux types. For example, to create a new port mapping, you can
    use the command `semanage port -a -t http_port_t -p` `tcp 80`.'
  id: totrans-396
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`semanage port`：此命令用于管理 SELinux 端口映射，它将端口映射到 SELinux 类型。例如，要创建一个新的端口映射，可以使用命令
    `semanage port -a -t http_port_t -p tcp 80`。'
