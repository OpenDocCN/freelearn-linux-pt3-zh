["```\ndemo@cli1:~$ VAR1=value\n```", "```\ndemo@cli1:~$ echo $VAR1\nvalue\n```", "```\ndemo@cli1:~$ echo var1\nVar1\ndemo@cli1:~$ echo $var1\ndemo@cli1:~$ echo VAR1\nVAR1\n```", "```\n#!/bin/bash\n#referencing variable VAR1\necho $VAR1\n```", "```\ndemo@cli1:~$ bash referencing.sh\ndemo@cli1:~$ echo $VAR1\nvalue\n```", "```\ndemo@cli1:~$ export VAR1\ndemo@cli1:~$ bash referencing.sh\nvalue\ndemo@cli1:~$\n```", "```\n#!/bin/bash\n# define a variable\nSTRING=\"Hello World!\"\n# output the variable\necho $STRING\n```", "```\n#!/bin/bash\n# we are using variable TodaysDate to store date\nTodaysDate=$(date +%Y%m%d)\n# now lets create an archive that will have todays date in \\\nthe name. \ntar cfz Backup-$TodaysDate.tgz .\n```", "```\ndemo@cli1:~/variables$ bash varinname.sh \ntar: .: file changed as we read it\ndemo@cli1:~/variables$ ls \nBackup-20210920.tgz  varinname.sh\n```", "```\n#!/bin/bash\n# we are going to read first three parameters\n# and just echo them\necho $1 $2 $3\n# we will also use $# to echo number of arguments\necho Number of arguments passed: $#\n```", "```\ndemo@cli1:~/variables$ bash parameters.sh \nNumber of arguments passed: 0\n```", "```\ndemo@cli1:~/variables$ bash parameters.sh one two 3\none two 3\nNumber of arguments passed: 3\n```", "```\ndemo@cli1:~/variables$ bash parameters.sh one two 3 four\none two 3\nNumber of arguments passed: 4\ndemo@cli1:~/variables$ bash parameters.sh one two 3 four five\none two 3\nNumber of arguments passed: 5\n```", "```\n#!/bin/bash\n# reading the script name\n# and just echo\necho $0\n```", "```\ndemo@cli1:~/variables$ bash parameters1.sh\nparameters1.sh\ndemo@cli1:~/variables$ cd ..\ndemo@cli1:~$ bash variables/parameters1.sh \nVariables/parameters1.sh\ndemo@cli1:~$ bash /home/demo/variables/parameters1.sh \n/home/demo/variables/parameters1.sh\ndemo@cli1:~$\n```", "```\ndemo@cli1:~/variables$ help shift\nshift: shift [n]\n    Shift positional parameters.\n    Rename the positional parameters $N+1,$N+2 ... to $1,$2 ...  If N is\n    not given, it is assumed to be 1.\n        Exit Status:\n    Returns success unless N is negative or greater than $#.\n```", "```\n#!/bin/bash\nwhile [ \"$1\" != \"\" ]; do\n    case $1 in\n        -n | --name )\n            shift\n            echo Parameter is Name: $1\n        ;;\n        -s | --surname )\n            shift\n            echo Parameter is Surname: $1,\n       ;;\n        -h | --help )    echo usage is -n or -s followed by a \\\nstring\n            exit\n        ;;\n        * )              echo usage is -n or -s followed by a \\\nstring\n            exit 1\n    esac\n    shift\ndone\n```", "```\n#!/bin/bash\ndirectory=\"scripting\"\n# does the directory exist? \nIf [ -d $directory ]; then\n             echo \"Directory $directory exists!\"\nelse \n              echo \"Directory $directory does not exist!\"\nfi\n```", "```\ndemo@cli1:~/variables$ bash quotes1.sh \nDirectory scripting does not exist!\n```", "```\n#!/bin/bash\ndirectory='scripting'\n# does the directory exist? \nif [ -d $directory ]; then\n             echo 'Directory $directory exists!'\nelse \n             echo 'Directory $directory does not exist!'\nfi\n```", "```\ndemo@cli1:~/variables$ bash quotes2.sh \nDirectory $directory does not exist!\n```", "```\n#!/bin/bash\ndirectory='scripting'\n# does the directory exist? \necho \"'Directory $directory is undetermined since we have no \\\nlogic in this script'\"\n```", "```\ndemo@cli1:~/variables$ bash undeterdouble.sh \n'Directory 'scripting' is undetermined since we have no logic in this script'\n```", "```\n#!/bin/bash\ndirectory='scripting'\n# does the directory exist? \necho '\"Directory $directory is undetermined since we have no \\\nlogic in this script\"'\n```", "```\ndemo@cli1:~/variables$ bash undetersingle.sh \n\"Directory $directory is undetermined since we have no logic in this script\"\n```", "```\ndemo@cli1:~/variables$ TestArray=(first second third fourth)\n```", "```\ndemo@cli1:~/variables$ echo ${#TestArray[@]}\n4\n```", "```\ndemo@cli1:~/variables$ echo ${#TestArray}\n5\n```", "```\ndemo@cli1:~/variables$ echo ${TestArray}\nfirst\n```", "```\ndemo@cli1:~/variables$ echo ${TestArray[2]}\nthird\ndemo@cli1:~/variables$ echo ${TestArray[0]}\nfirst\ndemo@cli1:~/variables$ echo ${TestArray[1]}\nsecond\ndemo@cli1:~/variables$ echo ${TestArray[@]}\nfirst second third fourth\n```", "```\ndemo@cli1:~/variables$ TestVar=\"Very Long Variable Contains \\\nLots Of Characters\"\ndemo@cli1:~/variables$ echo $TestVar \nVery Long Variable Contains Lots Of Characters\ndemo@cli1:~/variables$ echo ${#TestVar} \n46\n```", "```\ndemo@cli1:~/variables$ echo $VariableThatDoesNotExist\ndemo@cli1:~/variables$ echo ${#VariableThatDoesNotExist}\n0\n```", "```\ndemo@cli1:~/variables$ echo ${TEST:-empty}\nempty\ndemo@cli1:~/variables$ echo $TEST\ndemo@cli1:~/variables$ TEST=full\ndemo@cli1:~/variables$ echo $TEST\nfull\ndemo@cli1:~/variables$ echo ${TEST:-empty}\nfull\n```", "```\n${VAR:OFFSET:LENGTH}\n```", "```\ndemo@cli1:~/variables$ echo $TestVar \nVery Long Variable Contains Lots Of Characters\ndemo@cli1:~/variables$ echo ${TestVar:5:4}\nLong\ndemo@cli1:~/variables$ echo ${TestVar:5:13}\nLong Variable\ndemo@cli1:~/variables$ echo ${TestVar:5}\nLong Variable Containg Lots Of Characters\ndemo@cli1:~/variables$ echo ${TestVar:5:}\ndemo@cli1:~/variables$ echo ${TestVar:5:-4}\nLong Variable ContainsLots Of Charac\ndemo@cli1:~/variables$ echo ${TestVar:5:-10}\nLong Variable Contains Lots Of\n```", "```\n${VAR/PATTERN/STRING}\n```", "```\ndemo@cli1:~/variables$ echo ${TestVar/Variable/String}\nVery Long String Contains Lots Of Characters\ndemo@cli1:~/variables$ echo $TestVar \nVery Long Variable Contains Lots Of Characters\n```", "```\ndemo@cli1:~/variables$ ls\nBackup-20210920.tgz  parameters.sh  quotes2.sh        undetersingle.sh\nparameters1.sh       quotes1.sh     undeterdouble.sh  varinname.sh\ndemo@cli1:~/variables$ echo $(ls)\nBackup-20210920.tgz parameters1.sh parameters.sh quotes1.sh quotes2.sh undeterdouble.sh undetersingle.sh varinname.sh\ndemo@cli1:~/variables$ echo `ls`\nBackup-20210920.tgz parameters1.sh parameters.sh quotes1.sh quotes2.sh undeterdouble.sh undetersingle.sh varinname.sh\n```", "```\n#!/usr/bin/bash\n# testing extension on list of files \nfor name  in $(ls) ;            do \n             for exten in .pdf .txt; do \n                          echo \"Trying $name$exten\"\n     done\ndone\n```", "```\ndemo@cli1:~/variables$ bash forexpand.sh \nTrying Backup-20210920.tgz.pdf\nTrying Backup-20210920.tgz.txt\nTrying forexpand.sh.pdf\nTrying forexpand.sh.txt\nTrying parameters1.sh.pdf\nTrying parameters1.sh.txt\nTrying parameters.sh.pdf\nTrying parameters.sh.txt\nTrying quotes1.sh.pdf\nTrying quotes1.sh.txt\nTrying quotes2.sh.pdf\nTrying quotes2.sh.txt\nTrying undeterdouble.sh.pdf\nTrying undeterdouble.sh.txt\nTrying undetersingle.sh.pdf\nTrying undetersingle.sh.txt\nTrying varinname.sh.pdf\nTrying varinname.sh.txt\n```", "```\ndemo@cli1:~/variables$ cat forexpand.sh \n#!/usr/bin/bash\n# testing extension on list of files \nfor name  in $(ls -l) ;         do \n               for exten in .pdf .txt; do \n                          echo \"Trying $name$exten\"\n               done\ndone\n```", "```\ndemo@cli1:~/variables$ bash forexpand.sh \nTrying total.pdf\nTrying total.txt\nTrying 36.pdf\nTrying 36.txt\nTrying -rw-rw-r--.pdf\nTrying -rw-rw-r--.txt\nTrying 1.pdf\nTrying 1.txt\nTrying demo.pdf\nTrying demo.txt\nTrying demo.pdf\nTrying demo.txt\nTrying 494.pdf\nTrying 494.txt\n```"]