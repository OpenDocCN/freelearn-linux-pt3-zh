- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Using Shell History
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Shell 历史
- en: To become skilled at the command line, you have to use it regularly. There are
    no shortcuts to becoming comfortable, but there are a few high-value tricks that
    you can learn early on, which will save you time and frustration. The earlier
    you build them into your muscle memory, the better.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 要熟练掌握命令行，你必须定期使用它。没有捷径可以让你快速适应，但有一些高价值的技巧你可以尽早学习，它们将节省你的时间和避免挫败感。越早将这些技巧融入肌肉记忆，效果越好。
- en: In this chapter, you’ll learn how to leverage your shell history to avoid the
    tedious re-typing of commands you’ve already run. You’ll also see how to customize
    your shell’s behavior or appearance via the shell configuration file. Finally,
    we’ll show you the most useful shortcuts to edit and modify commands at the command
    prompt. All in all, this chapter will make you blazing fast on the command line.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何利用 Shell 历史，避免重复输入已经执行过的命令。你还将看到如何通过 Shell 配置文件自定义 Shell 的行为或外观。最后，我们将展示在命令提示符下编辑和修改命令的最有用的快捷键。总之，本章将使你在命令行上变得飞快。
- en: 'We will go about this by covering the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过以下主题来进行讲解：
- en: Shell history
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Shell 历史
- en: Executing previous commands with `!`
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `!` 执行之前的命令
- en: Jumping to the beginning or end of a line
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跳转到行首或行尾
- en: Let’s begin by understanding shell history.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从了解 Shell 历史开始。
- en: Shell history
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Shell 历史
- en: 'Most shells keep a history of the commands you’ve run. This means that you
    can see every successful command that you’ve run just by pressing the arrow keys:
    the *Up-Arrow* key to go back one command and *Down-Arrow* to go forward one.
    Scrolling through your shell history like this can be very useful, especially
    if you find that you’re re-running similar commands frequently.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数 Shell 会保存你执行过的命令历史。这意味着你可以通过按箭头键查看你执行过的每一条成功命令：使用 *上箭头* 键回溯一条命令，使用 *下箭头*
    键前进一条命令。通过这种方式浏览 Shell 历史非常有用，尤其是当你发现自己频繁执行类似的命令时。
- en: 'Note that you can also edit commands that you find like this: use *Left-Arrow*
    and *Right-Arrow* to navigate to the line of text that is a command, and just
    type to edit the command.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，你也可以编辑找到的命令：使用 *左箭头* 和 *右箭头* 来导航到命令所在的文本行，然后直接输入来编辑命令。
- en: An edited command is added to the end of your shell history (it doesn’t actually
    modify the saved line in the history).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑过的命令会被添加到 Shell 历史的末尾（它不会实际修改历史中已保存的命令）。
- en: Together, these tricks allow you to easily go back and re-execute or modify
    previous commands.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这些技巧结合起来，可以让你轻松地回到并重新执行或修改之前的命令。
- en: Shell configuration files
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Shell 配置文件
- en: 'Some of the tricks we’ll talk about require changes to your shell’s configuration
    file. The workflow is usually the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论的一些技巧需要更改 Shell 配置文件。工作流程通常是：
- en: Change the option you want to change in your shell’s config file.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的 Shell 配置文件中修改你想要更改的选项。
- en: Save the file.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件。
- en: Open a new shell session to see the changes.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个新的 Shell 会话以查看更改。
- en: 'For existing shell sessions, re-read your shell config file by running a command
    to `source` (execute) it: `source ~/path/to/config/file`.'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于已存在的 Shell 会话，可以通过运行命令 `source`（执行）重新加载 Shell 配置文件：`source ~/path/to/config/file`。
- en: 'Here are locations for the most common shells:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是最常见 Shell 的位置：
- en: '| **Common shells** | **Locations** |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| **常见的 Shell** | **位置** |'
- en: '| Bash | `~/.bashrc` for interactive sessions, such as the one you get from
    opening a new terminal window in your graphical environment. You almost always
    want this one if you’re changing the configuration on your work machine. “Interactive”
    here refers to situations where you as a user make use of the shell in a terminal,
    not to a script running (for example, a script automatically invoked by a cron
    job). You’re in an “interactive shell” when you are in some form of terminal,
    manually being prompted for input and writing commands.`~/.bash_profile` for login
    shells – this might be a local login, but also what you get if you log in over
    SSH. Again this is in comparison to shell instances when running a script. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| Bash | `~/.bashrc` 用于交互式会话，例如在图形环境中打开新终端窗口时获得的会话。如果你在工作机器上更改配置，通常需要这个配置文件。“交互式”指的是用户在终端中直接使用
    Shell，而不是脚本执行的情况（例如，由 cron 任务自动调用的脚本）。当你在某种形式的终端中，手动输入命令时，你就处于“交互式 Shell”中。`~/.bash_profile`
    用于登录 Shell —— 这可能是本地登录，也可能是通过 SSH 登录的会话。再次强调，这是与运行脚本时的 Shell 实例的对比。 |'
- en: '| Zsh (the Z shell) | `~/.zshrc` |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| Zsh（Z shell） | `~/.zshrc` |'
- en: History files
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 历史文件
- en: Different shells keep history files in different places, and most can be configured
    to change the location. By default, you’ll almost always be using Bash, which,
    by default, keeps its history file at `~/.bash_history`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的 shell 将历史记录文件保存在不同的位置，大多数 shell 都可以配置以更改该位置。默认情况下，你几乎总是使用 Bash，而 Bash 默认将其历史记录文件保存在
    `~/.bash_history`。
- en: If you’re ever unsure about where to find the shell history file, many shells
    have a shell configuration option named `HISTFILE` that contains the history file’s
    location.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你不确定在哪里找到 shell 历史文件，许多 shell 提供一个名为 `HISTFILE` 的配置选项，其中包含历史文件的位置。
- en: 'Here, I’m checking to see where my history file is, while running the `zsh`
    OS:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我正在检查历史文件的位置，同时运行 `zsh` 操作系统：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Bash has two configuration options that prevent your history file from growing
    indefinitely, to keep its size manageable and your history searches fast:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Bash 有两个配置选项，可以防止历史记录文件无限增长，以保持其大小可控，并使历史记录搜索更快速：
- en: '`HISTSIZE` controls the maximum history kept in memory'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HISTSIZE` 控制在内存中保留的最大历史记录数量。'
- en: '`HISTFILESIZE` controls the maximum size of the history file that’s saved between
    shell sessions'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HISTFILESIZE` 控制 shell 会话之间保存的历史文件的最大大小。'
- en: If you want to increase the amount of history that Bash keeps, increase both
    of the preceding in your shell’s configuration file.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想增加 Bash 保留的历史记录数量，可以在 shell 的配置文件中增加前述的设置。
- en: 'To do so open the shell’s configuration file (e.g., `~/.bashrc`) and set these
    variables by appending the following lines to the end of the file:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，打开 shell 的配置文件（例如，`~/.bashrc`），并通过将以下几行附加到文件末尾来设置这些变量：
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Searching through shell history
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 搜索 shell 历史记录
- en: 'You will often find yourself looking for a command you ran a week (or a month)
    ago. That command will likely be further back in your history, and it would be
    a waste of time to hit *Up-Arrow* hundreds of times to get there. If you have
    at least *some* idea of what you’re looking for, an interactive shell history
    search is the trick that you’re looking for. Here’s how to search your shell history:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你经常会想要找出一周（或一个月）前运行的命令。这个命令可能会在历史记录中更久远的位置，为了到达那里，按 *上箭头* 成百上千次无疑是一种浪费时间的做法。如果你至少对要找的命令有一些线索，交互式的
    shell 历史搜索就是你需要的技巧。下面是如何搜索你的 shell 历史：
- en: Press *CTRL* + *R* to invoke `reverse-i-search`.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *CTRL* + *R* 来激活 `reverse-i-search`（反向搜索）。
- en: Type a part of the command you are looking for.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入你正在寻找的命令的一部分。
- en: Your shell will try to match the characters you type against your command history
    and come up with the closest, most recent match.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的 shell 会尝试将你输入的字符与命令历史记录进行匹配，并找到最接近的、最近的匹配项。
- en: Repeatedly press *CTRL* + *R* to step through the history. Press *ENTER* to
    select a command or *Esc* to exit this mode.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重复按 *CTRL* + *R* 来浏览历史记录。按 *ENTER* 选择一个命令，或者按 *Esc* 退出此模式。
- en: If you accidentally skip backward past the command you wanted, *CTRL* + *SHIFT*
    + *R* will search forward to the next-most-recent match.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你不小心跳过了想要的命令，*CTRL* + *SHIFT* + *R* 将会搜索向前到下一个最近的匹配项。
- en: Exceptions
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 例外情况
- en: There are some exceptions to this feature depending on the shell and the configuration
    you are using.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能根据你使用的 shell 和配置有所不同，可能会有一些例外情况。
- en: Some shells forget about commands that failed with an error (exited with a non-zero
    exit code). Many shells also forget commands starting with a space character –
    those won’t be added to the shell’s history. However, in both scenarios you are
    typically still able to reach the history entry if you go back (*Up-Arrow*) right
    away, without executing any other commands.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一些 shell 会忽略那些因错误（以非零退出代码退出）而失败的命令。许多 shell 也会忽略以空格字符开头的命令——这些命令不会被添加到 shell
    的历史记录中。然而，在这两种情况下，只要你立即按下 (*上箭头*)，通常仍然可以找到该历史记录条目，而不必执行其他任何命令。
- en: Executing previous commands with !
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 `!` 执行之前的命令
- en: Executing previous commands is done with exclamation marks. There are various
    ways to use this trick, which we’ll look at now.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 执行之前的命令是通过感叹号来实现的。有多种方法可以使用这个技巧，下面我们来看看。
- en: Re-running a command with the same arguments
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用相同的参数重新运行命令
- en: The `!` command will execute the last command with the previous arguments. For
    example, `!ssh` will go back and find the last `ssh` command you ran and execute
    it with the same arguments. You can use this to re-run commands that you frequently
    use with the same arguments, such as to quickly re-connect to the SSH server you
    connect to every day.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`!` 命令将执行最后一个命令并带上先前的参数。例如，`!ssh` 将回溯并找到你上次运行的 `ssh` 命令，并使用相同的参数重新执行它。你可以用它来重新运行你经常使用的命令，并保持相同的参数，例如快速重新连接到你每天连接的
    SSH 服务器。'
- en: Prepending a command to something in your history
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在历史命令中添加前置命令
- en: The `!!` command will execute the last command you ran, but with some other
    command in front of it. This may sound strange, but it’s *very* useful for situations
    where you accidentally ran a command that requires root privileges without `sudo`
    at the beginning.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`!!` 命令将执行你上次运行的命令，但会在它前面加上其他命令。这听起来可能有些奇怪，但在你不小心运行了一个需要 root 权限的命令，而没有在前面加上
    `sudo` 时，它*非常*有用。'
- en: '[PRE2]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After that previous command fails due to a lack of permissions, simply running
    `sudo !!` will re-run it with `sudo` prepended to the beginning.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果前一个命令因权限不足失败，只需运行 `sudo !!` 就能重新执行该命令，并在开头加上 `sudo`。
- en: '**Note**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: 'For security, don’t make this an automatic habit: always make sure you know
    why a command needs more permissions and ask yourself whether you trust it enough
    to want to give it permission to do literally anything on your system. Careless
    misuse of `sudo` can make it easy to break things or allow an attacker to gain
    a foothold on your system.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安全起见，不要将此作为自动习惯：始终确保你知道为什么一个命令需要更多的权限，并问自己是否信任它，愿意让它在你的系统上做任何事情。对 `sudo` 的不小心使用可能会导致轻易破坏系统，或让攻击者在系统上占据一席之地。
- en: Jumping to the beginning or end of the current line
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跳到当前行的开头或结尾
- en: It’s not uncommon to need to jump to the beginning of a line when editing, perhaps
    to correct the spelling of a command or add a required argument. To do this, press
    *CTRL* + *A*.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑时跳到行的开头并不罕见，也许是为了纠正命令的拼写或添加一个必需的参数。要做到这一点，请按 *CTRL* + *A*。
- en: Likewise, to jump back to the end of a line, use *CTRL* + *E*.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，要跳到行的末尾，请使用 *CTRL* + *E*。
- en: These two will come in handy quite often.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个快捷键会非常有用。
- en: Conclusion
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Working in a Linux shell environment entails a lot of typing. Making even the
    smallest improvements to your speed and accuracy as you construct and edit your
    commands can make the difference between feeling like basic tasks are taking forever
    and feeling like you’re speeding along like a seasoned Unix wizard.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux shell 环境中工作需要大量打字。即使是最小的提高你的速度和准确性，也能让你在构建和编辑命令时感到不再是基本任务拖延的永恒感，而是像经验丰富的
    Unix 大师一样飞速前行。
- en: The tricks we’ve shared in this chapter are a few of the most common and most
    powerful shortcuts we use in our day-to-day work. Combining your new command-history-searching
    skills with the editing and command-modification shortcuts you just learned will
    have a massive impact on your comfort, efficiency, and speed on the command line.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 本章分享的技巧是我们日常工作中使用的最常见且最强大的快捷键之一。将你新的命令历史搜索技能与编辑和命令修改快捷键结合使用，将大大提高你在命令行上的舒适度、效率和速度。
- en: Learn more on Discord
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Discord 上了解更多
- en: 'To join the Discord community for this book – where you can share feedback,
    ask questions to the author, and learn about new releases – follow the QR code
    below:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 要加入本书的 Discord 社区——在这里你可以分享反馈，向作者提问并了解新版本——请扫描下面的二维码：
- en: '[https://packt.link/SecNet](https://packt.link/SecNet)'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/SecNet](https://packt.link/SecNet)'
- en: '![](img/QR_Code1768422420210094187.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/QR_Code1768422420210094187.png)'
