- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Linux IPTABLES and Network Commands
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux IPTABLES 和网络命令
- en: Linux IPTABLES and network commands are essential tools for Linux system administrators
    to manage and control network traffic and security. IPTABLES is a powerful firewall
    tool that allows administrators to define rules for filtering, forwarding, and
    modifying network packets. It plays a crucial role in ensuring network security
    by blocking unauthorized access, preventing malicious traffic, and protecting
    sensitive data. Additionally, IPTABLES enables administrators to create complex
    network configurations, such as **network address translation** (**NAT**) and
    port forwarding, to optimize network performance and facilitate communication
    between internal and external networks, while the network commands in Linux offer
    a wide range of functionalities to monitor and manage network connections, interfaces,
    and network-related statistics. These commands provide insights into network performance,
    bandwidth usage, and active connections, enabling administrators to identify bottlenecks,
    diagnose network issues, and optimize network resources. Moreover, they facilitate
    troubleshooting network-related problems, such as DNS resolution, packet loss,
    and connectivity issues, by offering real-time information about network status
    and activity.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Linux IPTABLES 和网络命令是 Linux 系统管理员管理和控制网络流量与安全的基本工具。IPTABLES 是一款强大的防火墙工具，允许管理员定义规则来过滤、转发和修改网络数据包。它在确保网络安全方面起着至关重要的作用，能够阻止未经授权的访问，防止恶意流量，保护敏感数据。此外，IPTABLES
    还使管理员能够创建复杂的网络配置，如**网络地址转换**（**NAT**）和端口转发，以优化网络性能，并促进内外部网络之间的通信，而 Linux 中的网络命令提供了广泛的功能，帮助监控和管理网络连接、接口以及网络相关的统计数据。这些命令能够提供网络性能、带宽使用情况和活跃连接的信息，使管理员能够识别瓶颈、诊断网络问题并优化网络资源。此外，它们通过提供有关网络状态和活动的实时信息，帮助排查网络相关问题，如
    DNS 解析、数据包丢失和连接问题。
- en: The importance of Linux IPTABLES and network commands lies in their ability
    to effectively secure and manage network communication. As Linux-based systems
    are widely used in various domains, including servers, routers, and IoT devices,
    the need for robust network security and efficient traffic control becomes paramount.
    By utilizing IPTABLES and network commands, administrators can implement customized
    network policies and access control lists, ensuring that only authorized traffic
    is allowed while blocking potential threats. This granular control over network
    traffic provides an additional layer of defense against cyberattacks, making these
    commands indispensable tools for Linux system administrators.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Linux IPTABLES 和网络命令的重要性在于它们能够有效地保障和管理网络通信。由于基于 Linux 的系统广泛应用于各种领域，包括服务器、路由器和物联网设备，网络安全和高效流量控制的需求变得尤为重要。通过使用
    IPTABLES 和网络命令，管理员可以实施定制化的网络策略和访问控制列表，确保只有授权流量被允许，同时阻止潜在威胁。这种对网络流量的精细控制为防御网络攻击提供了额外的防线，使这些命令成为
    Linux 系统管理员不可或缺的工具。
- en: 'In this chapter, we will delve into the following main topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将深入探讨以下主要内容：
- en: iptables -t ACCEPT
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iptables -t ACCEPT
- en: iptables -t DROP
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iptables -t DROP
- en: ifconfig, ip, route, and netstat
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ifconfig、ip、route 和 netstat
- en: hostname and nslookup
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机名和 nslookup
- en: host
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机
- en: Before we proceed, we must also recognize the significant contribution of IPTABLES
    and network commands in optimizing network performance and resource utilization.
    By analyzing network statistics and bandwidth usage, administrators can identify
    areas for improvement and make informed decisions about network architecture and
    capacity planning. This proactive approach ensures that network resources are
    used efficiently, enhancing overall network performance and minimizing downtime.
    IPTABLES and network commands offer versatile functionalities to safeguard network
    security, monitor network activity, and optimize network performance. Their flexibility
    and ability to configure custom network policies make them indispensable for managing
    and maintaining stable and secure network environments. As network security and
    efficient resource management are critical aspects of modern computing, Linux
    IPTABLES and network commands remain among the most widely used tools by Linux
    system administrators across diverse industries and environments.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续之前，我们还必须认识到IPTABLES和网络命令在优化网络性能和资源利用方面的重要贡献。通过分析网络统计数据和带宽使用情况，管理员可以识别需要改进的领域，并根据网络架构和容量规划做出明智的决策。这种主动的方式确保网络资源得到高效利用，提升整体网络性能并减少停机时间。IPTABLES和网络命令提供多功能的功能，保障网络安全，监控网络活动并优化网络性能。它们的灵活性和能够配置自定义网络策略的能力使它们在管理和维护稳定、安全的网络环境中不可或缺。由于网络安全和高效的资源管理是现代计算的关键方面，Linux的IPTABLES和网络命令依然是各行业和环境中Linux系统管理员最广泛使用的工具之一。
- en: iptables -t ACCEPT
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iptables -t ACCEPT
- en: In the realm of Linux networking and security, the `iptables` command with the
    `-t` option and the `ACCEPT` target is crucial. `iptables` is a powerful firewall
    utility in Linux that allows administrators to define rules for incoming and outgoing
    network packets, granting or denying access based on specified criteria. The `-t
    ACCEPT` part of the command is used to specify the target of the rule, which,
    in this case, is to accept the packet. The importance of `iptables` with the `-t
    ACCEPT` configuration lies in its ability to provide granular control over network
    traffic, allowing administrators to define rules that govern how data flows through
    the system. By using `iptables` with the `ACCEPT` target, administrators can explicitly
    permit packets to pass through the firewall, ensuring that authorized network
    communication is allowed while potentially harmful or unauthorized traffic is
    blocked. This capability is essential for network security as it enables administrators
    to define access rules tailored to their specific needs, protecting the system
    from malicious attacks and unauthorized access.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux网络与安全领域，带有`-t`选项和`ACCEPT`目标的`iptables`命令至关重要。`iptables`是Linux中的一款强大防火墙工具，允许管理员根据指定的条件定义进出网络数据包的规则，从而允许或拒绝访问。命令中的`-t
    ACCEPT`部分用于指定规则的目标，在此情况下是接受数据包。使用`iptables`与`-t ACCEPT`配置的重要性在于它能够对网络流量进行精细控制，允许管理员定义管理数据流向系统的规则。通过使用`iptables`与`ACCEPT`目标，管理员可以明确允许数据包通过防火墙，从而确保授权的网络通信能够被允许，同时潜在的有害或未经授权的流量被阻止。这一能力对于网络安全至关重要，它使管理员能够定义量身定制的访问规则，保护系统免受恶意攻击和未授权访问。
- en: 'Next, we will delve into practical examples of utilizing the `iptables -t`
    `ACCEPT` command:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将深入探讨如何使用`iptables -t` `ACCEPT`命令的实际示例：
- en: 'Check the current `iptables` rules to understand the existing configuration:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看当前的`iptables`规则以了解现有配置：
- en: '![Figure 10.1 – Viewing current iptables rules](img/B18212_10_1.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.1 – 查看当前的iptables规则](img/B18212_10_1.jpg)'
- en: Figure 10.1 – Viewing current iptables rules
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1 – 查看当前的iptables规则
- en: Allow incoming SSH connections from the specified IP address (`192.168.x.xxx`).
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许来自指定IP地址（`192.168.x.xxx`）的传入SSH连接。
- en: When you use the `iptables` command, it will add a rule to the `INPUT` chain
    of the `iptables` firewall, allowing incoming TCP traffic from the source IP address,
    `192.168.x.xxx`, to the destination port, `22` (which is the default port for
    SSH), to be accepted and allowed through the firewall. However, if the rule is
    successfully added, no confirmation or message will be displayed in the Terminal.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当你使用`iptables`命令时，它会向`iptables`防火墙的`INPUT`链添加一条规则，允许来自源IP地址`192.168.x.xxx`的传入TCP流量通过目标端口`22`（这是SSH的默认端口）。如果规则成功添加，终端中不会显示任何确认或信息。
- en: 'To check the rules in the `iptables` firewall and verify that the new rule
    has been added, you can use the following command:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要检查 `iptables` 防火墙中的规则并验证新规则是否已添加，可以使用以下命令：
- en: '![Figure 10.2 – Allowing SSH connections from specified IPs](img/B18212_10_2.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.2 – 允许来自指定 IP 的 SSH 连接](img/B18212_10_2.jpg)'
- en: Figure 10.2 – Allowing SSH connections from specified IPs
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.2 – 允许来自指定 IP 的 SSH 连接
- en: iptables -t DROP
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iptables -t DROP
- en: The `iptables` command in Linux is a fundamental tool for managing network traffic
    and enforcing security policies. It allows system administrators to define rules
    for incoming and outgoing network packets, granting or denying access based on
    specified criteria. The `-t` flag, used in conjunction with `iptables`, specifies
    the target table within which the rule will be defined. In the context of security,
    the `DROP` target is particularly significant. When combined with `-t`, as in
    `iptables -t DROP`, it signifies that incoming network packets matching the defined
    rule will be dropped or blocked, effectively denying access. In Linux, the `iptables`
    command allows administrators to manage and manipulate the **netfilter** firewall
    rules, which determine how the kernel handles network packets. Administrators
    can block malicious or suspicious traffic from entering the network by selectively
    dropping packets
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 中，`iptables` 命令是管理网络流量和执行安全策略的基础工具。它允许系统管理员为进出网络的数据包定义规则，根据指定的标准授予或拒绝访问。`-t`
    标志与 `iptables` 配合使用时，指定规则所在的目标表。在安全性方面，`DROP` 目标尤为重要。当与 `-t` 结合使用时，如 `iptables
    -t DROP`，它表示匹配定义规则的入站网络数据包将被丢弃或阻止，进而有效拒绝访问。在 Linux 中，`iptables` 命令允许管理员管理和操作**netfilter**
    防火墙规则，这些规则决定内核如何处理网络数据包。管理员可以通过有选择地丢弃数据包，阻止恶意或可疑流量进入网络。
- en: For experts, `iptables -t DROP` provides fine-grained control over network traffic,
    enabling them to customize rules and mitigate complex security risks effectively.
    Moreover, by strategically using the `DROP` target, administrators can prevent
    certain types of attacks, such as **denial-of-service** (**DoS**) and **distributed
    denial-of-service** (**DDoS**) attacks, from overwhelming the system and disrupting
    its services or this command can be used to block specific IP addresses known
    for malicious activities, limit access to certain services, or protect vulnerable
    ports.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于专家来说，`iptables -t DROP` 提供了对网络流量的细粒度控制，使他们能够定制规则并有效地缓解复杂的安全风险。此外，通过策略性地使用
    `DROP` 目标，管理员可以防止某些类型的攻击，如**拒绝服务攻击**（**DoS**）和**分布式拒绝服务攻击**（**DDoS**），避免其压垮系统并中断服务，或者使用此命令来阻止已知恶意活动的特定
    IP 地址，限制对某些服务的访问，或保护易受攻击的端口。
- en: The primary use and purpose of the `DROP` action is to filter and control incoming
    network traffic based on defined criteria, such as source IP address, destination
    port, and protocol type. By specifying rules, administrators can determine which
    packets should be dropped, preventing them from reaching the intended destination.
    This command plays a crucial role in crafting network security policies as it
    allows administrators to define rules that align with their organization’s security
    requirements and regulatory compliance. By efficiently managing network traffic
    with `iptables -t DROP`, Linux system administrators can create a robust and secure
    networking environment that safeguards their infrastructure from potential threats.
    Let’s delve into practical examples of utilizing the `iptables -t` `DROP` command.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`DROP` 操作的主要用途是根据定义的标准（如源 IP 地址、目标端口和协议类型）筛选和控制入站网络流量。通过指定规则，管理员可以确定哪些数据包应该被丢弃，从而防止它们到达预定目的地。此命令在制定网络安全策略中起着至关重要的作用，因为它允许管理员定义与组织的安全要求和合规性标准相符的规则。通过高效管理网络流量，Linux
    系统管理员可以创建一个强大且安全的网络环境，保护其基础设施免受潜在威胁。接下来，让我们深入探讨如何实际运用 `iptables -t` `DROP` 命令。'
- en: 'To block incoming traffic from the specified IP address, use the following
    command:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 要阻止来自指定 IP 地址的入站流量，请使用以下命令：
- en: '![Figure 10.3 – Blocking incoming traffic](img/B18212_10_3.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.3 – 阻止入站流量](img/B18212_10_3.jpg)'
- en: Figure 10.3 – Blocking incoming traffic
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.3 – 阻止入站流量
- en: This command adds a new rule to the `INPUT` chain of `iptables`, which drops
    any incoming packets from the IP address, `192.168.x.xxx`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将新规则添加到 `iptables` 的 `INPUT` 链中，丢弃来自 IP 地址 `192.168.x.xxx` 的任何入站数据包。
- en: ifconfig, ip, route, and netstat
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ifconfig, ip, route 和 netstat
- en: The `ifconfig` command, short for `ifconfig` command remains a fundamental command
    for network management and advanced configurations. Experts can leverage `ifconfig`
    to manually configure network interfaces, set static IP addresses, enable or disable
    specific interfaces, and modify advanced network settings. It is particularly
    useful in server environments, where multiple network interfaces are present,
    and specific configurations are required. Additionally, `ifconfig` can be combined
    with other commands for network diagnostics and performance monitoring. While
    `ifconfig` is widely used and familiar to Linux administrators, it is worth noting
    that some Linux distributions are deprecating this command in favor of newer tools
    such as `ip`. Nonetheless, `ifconfig` remains relevant and valuable in many Linux
    environments, providing a simple yet effective means to manage network interfaces.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`ifconfig` 命令，即 `ifconfig` 命令，仍然是网络管理和高级配置的基础命令。专家可以利用 `ifconfig` 手动配置网络接口，设置静态
    IP 地址，启用或禁用特定接口，并修改高级网络设置。在服务器环境中，`ifconfig` 尤其有用，因为那里通常有多个网络接口，并且需要特定的配置。此外，`ifconfig`
    可以与其他命令结合使用，以进行网络诊断和性能监控。虽然 `ifconfig` 被广泛使用，并且 Linux 管理员非常熟悉它，但值得注意的是，某些 Linux
    发行版正在逐步弃用该命令，转而使用如 `ip` 这样的新工具。尽管如此，`ifconfig` 在许多 Linux 环境中仍然具有相关性和价值，提供了一种简单而有效的方式来管理网络接口。'
- en: ip, route, and netstat
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ip, route, 和 netstat
- en: 'The `ip`, `route`, and `netstat` commands are essential Linux network tools
    that collectively offer a comprehensive set of functionalities for network configuration,
    routing, and monitoring. For both beginners and experts, these commands provide
    vital insights into network setup, traffic routing, and active network connections.
    `ip` is a versatile command that replaces many functionalities of `ifconfig`,
    providing advanced configuration options for network interfaces, routing tables,
    and tunnels. `route` allows users to view and modify the system’s IP routing table,
    controlling how packets are forwarded between networks. `netstat` offers a detailed
    overview of network connections, open ports, and active network statistics. Note
    that mastering these commands is essential for understanding network setup and
    troubleshooting. The `ip` command offers a more modern and feature-rich alternative
    to `ifconfig`, providing a broader range of functionalities for network configuration
    and management. `route` assists beginners in grasping the concept of routing and
    how data packets are directed through the network. `netstat` helps beginners identify
    active network connections, monitor port usage, and diagnose network issues, such
    as identifying processes that are consuming network resources. As beginners explore
    Linux networking, these commands equip them with the necessary tools to comprehend
    and configure network settings effectively. These commands become indispensable
    in network administration and troubleshooting. For example, the `ip` command’s
    advanced features enable experts to set up complex network configurations, create
    virtual interfaces, manage routing tables, and implement NAT. `route` allows experts
    to fine-tune routing rules, optimize traffic flow, and manage multiple network
    interfaces efficiently. `netstat` is a valuable tool for experts to monitor network
    performance, detect suspicious network activity, and identify potential security
    threats. In combination, these commands provide experts with comprehensive network
    visibility, enabling them to maintain a robust and secure networking environment.
    The depth and versatility of `ip`, `route`, and `netstat` make them indispensable
    tools for Linux network administrators, allowing them to optimize network performance,
    troubleshoot issues, and ensure smooth and reliable network connectivity. Now
    that we have gained an understanding of these commands, let’s apply them in practical
    examples:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`ip`、`route` 和 `netstat` 命令是 Linux 网络工具，它们共同提供了一个全面的网络配置、路由和监控功能集。这些命令对于初学者和专家来说，都能提供关于网络设置、流量路由和活动网络连接的重要信息。`ip`
    是一个多功能的命令，取代了许多 `ifconfig` 的功能，提供了网络接口、路由表和隧道的高级配置选项。`route` 允许用户查看和修改系统的 IP 路由表，控制数据包在网络之间的转发方式。`netstat`
    提供了网络连接、开放端口和活动网络统计信息的详细概览。需要注意的是，掌握这些命令对于理解网络设置和故障排除至关重要。`ip` 命令为 `ifconfig`
    提供了更现代和功能更丰富的替代方案，提供了更广泛的网络配置和管理功能。`route` 帮助初学者掌握路由的概念以及数据包如何在网络中进行转发。`netstat`
    帮助初学者识别活动的网络连接、监控端口使用情况并诊断网络问题，例如识别消耗网络资源的进程。随着初学者探索 Linux 网络，这些命令为他们提供了必要的工具，以有效地理解和配置网络设置。这些命令在网络管理和故障排除中变得不可或缺。例如，`ip`
    命令的高级功能使专家能够设置复杂的网络配置，创建虚拟接口，管理路由表并实现 NAT。`route` 允许专家精细调优路由规则，优化流量流动，并高效管理多个网络接口。`netstat`
    是专家监控网络性能、检测可疑网络活动和识别潜在安全威胁的宝贵工具。这些命令结合使用，提供了全面的网络可视化，使专家能够维护一个强大且安全的网络环境。`ip`、`route`
    和 `netstat` 的深度和多功能性使它们成为 Linux 网络管理员不可或缺的工具，使他们能够优化网络性能、排除故障并确保网络连接的顺畅和可靠。现在我们已经了解了这些命令，让我们通过实际例子来应用它们：'
- en: 'To view the current network interfaces and their configurations, run the following
    commands:'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要查看当前网络接口及其配置，运行以下命令：
- en: '![Figure 10.4 – Viewing current network interfaces](img/B18212_10_4.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.4 – 查看当前网络接口](img/B18212_10_4.jpg)'
- en: Figure 10.4 – Viewing current network interfaces
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – 查看当前网络接口
- en: 'Let’s utilize the `ip` command to view the network interface:'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让我们利用 `ip` 命令来查看网络接口：
- en: '![Figure 10.5 – Viewing current network interfaces](img/B18212_10_5.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.5 – 查看当前网络接口](img/B18212_10_5.jpg)'
- en: Figure 10.5 – Viewing current network interfaces
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.5 – 查看当前网络接口
- en: This will display a list of all network interfaces, along with their IP addresses,
    subnet masks, and other network configuration details.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示所有网络接口的列表，包括它们的IP地址、子网掩码以及其他网络配置细节。
- en: 'To add a static route to the routing and viewing network statistics, such as
    open network connections and listening ports, run the following command:'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要向路由和查看网络统计信息中添加静态路由，例如打开的网络连接和监听端口，请运行以下命令：
- en: '![Figure 10.6 – Routing and viewing network statistics](img/B18212_10_6.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.6 – 路由与查看网络统计信息](img/B18212_10_6.jpg)'
- en: Figure 10.6 – Routing and viewing network statistics
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.6 – 路由与查看网络统计信息
- en: This command adds a route to the `192.168.x.0/24` subnet via the `192.168.x.x`
    gateway. Then, the next command displays a list of all active network connections
    and the corresponding ports.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令通过`192.168.x.x`网关将路由添加到`192.168.x.0/24`子网。然后，下一条命令显示所有活动网络连接及其对应的端口。
- en: 'The `-tuln` options in the `netstat` command are used to display a list of
    all open TCP and UDP ports on the system, in numerical format:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`netstat`命令中的`-tuln`选项用于以数字格式显示系统上所有打开的TCP和UDP端口：'
- en: '`-t`: Show TCP connections'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-t`：显示TCP连接'
- en: '`-u`: Show UDP connections'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-u`：显示UDP连接'
- en: '`-l`: Show listening ports'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-l`：显示监听端口'
- en: '`-n`: Show numerical addresses instead of trying to determine symbolic hosts,
    ports, or usernames'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-n`：显示数字地址，而不是试图解析符号化的主机、端口或用户名'
- en: What is the impact of the `ip route` `add` command?
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`ip route add`命令的影响是什么？'
- en: The `ip route add` command is used to add a new route to the routing table.
    The routing table is a database that the kernel uses to determine how to route
    packets to their destinations.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`ip route add`命令用于向路由表中添加一条新路由。路由表是内核用于确定如何将数据包路由到目的地的数据库。'
- en: The impact of the `ip route add` command is that it will allow the system to
    communicate with devices on the `192.168.x.x/24` network.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`ip route add`命令的影响是它将允许系统与`192.168.x.x/24`网络上的设备进行通信。'
- en: The `ip route add` command can be used to add routes to any network, not just
    local networks. This can be useful for configuring routing between different networks
    or for routing packets over VPNs.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`ip route add`命令可以用于添加任何网络的路由，而不仅仅是本地网络。这对于配置不同网络之间的路由或通过VPN进行数据包路由非常有用。'
- en: Hostname and nslookup
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主机名和 nslookup
- en: The `hostname` command in Linux is used to view or set the system’s hostname.
    The hostname is a unique identifier given to a device on a network, and it helps
    distinguish it from other devices. The hostname is essential for various networking
    tasks, such as accessing the device over a network and identifying it when communicating
    with other devices. The `hostname` command provides a simple and efficient way
    to manage the system’s hostname, making it an indispensable tool for Linux administrators.
    The `hostname` command’s importance lies in its role in networking and system
    identification. A meaningful hostname enhances the manageability and organization
    of systems within a network, simplifying administrative tasks and making it easier
    to locate and communicate with specific devices. Additionally, the hostname is
    often used in log files and system monitoring tools to provide context and identify
    the origin of events, aiding in troubleshooting and auditing. For servers hosting
    multiple services, setting a descriptive hostname helps users and administrators
    identify the purpose or function of each server, streamlining system management
    and reducing the risk of confusion. Overall, the `hostname` command plays a vital
    role in maintaining efficient network operations and effective system administration.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Linux中的`hostname`命令用于查看或设置系统的主机名。主机名是分配给网络中设备的唯一标识符，帮助区分其他设备。主机名对于各种网络任务至关重要，例如通过网络访问设备和在与其他设备通信时识别它。`hostname`命令提供了一种简单有效的方式来管理系统的主机名，是Linux管理员不可或缺的工具。`hostname`命令的重要性在于它在网络和系统标识中的作用。一个有意义的主机名有助于增强系统在网络中的可管理性和组织性，简化了管理任务，使得更容易定位和与特定设备进行通信。此外，主机名通常用于日志文件和系统监控工具中，以提供上下文并标识事件的来源，有助于故障排除和审计。对于托管多个服务的服务器，设置一个具有描述性的主机名可以帮助用户和管理员识别每台服务器的目的或功能，从而简化系统管理并减少混淆的风险。总的来说，`hostname`命令在维护高效的网络操作和有效的系统管理方面起着至关重要的作用。
- en: The `nslookup` command is a powerful tool that’s used to query `www.example.com`)
    into IP addresses (for example, `192.168.x.x`) that computers can understand.
    The `nslookup` command provides a way to interactively query DNS servers, making
    it an invaluable utility for network administrators and developers. The importance
    of the `nslookup` command lies in its ability to troubleshoot DNS-related issues
    and validate DNS configurations. It allows administrators to verify DNS records,
    check if a domain is resolving to the correct IP address, and troubleshoot DNS
    resolution problems. By querying specific DNS servers with the `nslookup` command,
    administrators can ensure the accuracy of DNS information and diagnose DNS-related
    problems, such as incorrect DNS entries or misconfigured DNS servers. Additionally,
    the `nslookup` command can be used to test the response time of DNS servers, helping
    administrators identify potential bottlenecks in the DNS infrastructure and optimize
    DNS performance. Overall, the `nslookup` command is an indispensable tool for
    managing and troubleshooting DNS in Linux environments, ensuring the smooth functioning
    of network communication and internet connectivity.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`nslookup` 命令是一个强大的工具，用于将 `www.example.com` 等域名解析为计算机可以理解的 IP 地址（例如，`192.168.x.x`）。`nslookup`
    命令提供了一种交互式查询 DNS 服务器的方法，使其成为网络管理员和开发人员不可或缺的工具。`nslookup` 命令的重要性在于它能够帮助排查 DNS 相关问题并验证
    DNS 配置。它允许管理员验证 DNS 记录，检查域名是否解析到正确的 IP 地址，并排查 DNS 解析问题。通过使用 `nslookup` 命令查询特定的
    DNS 服务器，管理员可以确保 DNS 信息的准确性，并诊断与 DNS 相关的问题，例如错误的 DNS 条目或配置错误的 DNS 服务器。此外，`nslookup`
    命令还可以用来测试 DNS 服务器的响应时间，帮助管理员识别 DNS 基础设施中的潜在瓶颈并优化 DNS 性能。总的来说，`nslookup` 命令是管理和排查
    Linux 环境中 DNS 问题的不可或缺的工具，确保网络通信和互联网连接的顺畅运行。'
- en: 'Now, let’s apply these commands in practical examples:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们在实际示例中应用这些命令：
- en: 'To display the system’s hostname, simply enter the following command:'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要显示系统的主机名，只需输入以下命令：
- en: '![Figure 10.7 – Displaying the system’s hostname](img/B18212_10_7.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.7 – 显示系统的主机名](img/B18212_10_7.jpg)'
- en: Figure 10.7 – Displaying the system’s hostname
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7 – 显示系统的主机名
- en: This command will output the hostname of your Linux system. The hostname is
    a unique name that identifies the system on the network and is used for local
    and remote communication.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将输出您的 Linux 系统的主机名。主机名是一个唯一的名称，用于在网络上标识系统，并用于本地和远程通信。
- en: 'To perform a DNS name resolution for a specific domain (for example, `www.example.com`),
    you can use the `nslookup` or `host` command. Here’s an example:'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要为特定域（例如，`www.example.com`）执行 DNS 域名解析，可以使用 `nslookup` 或 `host` 命令。以下是一个示例：
- en: '![Figure 10.8 – Performing DNS name resolution](img/B18212_10_8.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.8 – 执行 DNS 域名解析](img/B18212_10_8.jpg)'
- en: Figure 10.8 – Performing DNS name resolution
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8 – 执行 DNS 域名解析
- en: host
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: host
- en: 'The `host` command is a powerful utility that’s used for DNS-related tasks
    in Linux systems. It is primarily used to perform DNS lookups, translating domain
    names into IP addresses, and vice versa. The importance of the `host` command
    lies in its role as a versatile tool for network administrators and developers
    to resolve DNS queries and troubleshoot domain resolution issues. By using the
    `host` command, administrators can verify if a domain name is correctly mapped
    to an IP address and vice versa, ensuring proper communication between devices
    across the internet. Additionally, the `host` command provides information about
    DNS records, such as the authoritative name server for a domain, `host` command
    is commonly used in various scenarios, such as checking DNS propagation after
    domain changes, diagnosing DNS resolution problems, and verifying domain name
    configurations. Its ease of use and ability to provide real-time DNS information
    make it an essential tool for both novices and experts in the field of networking
    and system administration. Now, let’s delve into practical examples to better
    understand the usage of these commands:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '`host`命令是一个强大的工具，主要用于Linux系统中的DNS相关任务。它的主要功能是执行DNS查询，将域名转换为IP地址，反之亦然。`host`命令的重要性在于它作为一个多功能工具，帮助网络管理员和开发人员解决DNS查询和排除域名解析问题。通过使用`host`命令，管理员可以验证域名是否正确映射到IP地址，确保互联网设备之间的正常通信。此外，`host`命令还提供关于DNS记录的信息，例如域的授权名称服务器，`host`命令常用于多种场景，如在域名更改后检查DNS传播，诊断DNS解析问题，以及验证域名配置。它的易用性和提供实时DNS信息的能力使它成为网络和系统管理领域中新手和专家的必备工具。现在，让我们通过实际示例深入了解这些命令的使用：'
- en: Like `nslookup`, we can also perform the same actions using the `host` command.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 和`nslookup`一样，我们也可以使用`host`命令执行相同的操作。
- en: 'Both commands will display the IP addresses associated with the domain name
    provided. The DNS is responsible for translating human-readable domain names into
    IP addresses that computers can understand. These commands allow you to check
    if DNS resolution is working correctly and retrieve the IP address of a specific
    domain:'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这两个命令将显示与提供的域名关联的IP地址。DNS负责将人类可读的域名转换为计算机可以理解的IP地址。这些命令可以让你检查DNS解析是否正常工作，并检索特定域的IP地址：
- en: '![Figure 10.9 – Checking DNS resolution with the host command](img/B18212_10_9.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.9 – 使用 host 命令检查 DNS 解析](img/B18212_10_9.jpg)'
- en: Figure 10.9 – Checking DNS resolution with the host command
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9 – 使用 host 命令检查 DNS 解析
- en: In summary, Linux IPTABLES and network commands play a vital role in a Linux
    system administrator’s arsenal, providing essential functionalities to ensure
    network security, monitor network activity, and optimize overall performance.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，Linux IPTABLES 和网络命令在Linux系统管理员的工具库中扮演着至关重要的角色，提供了确保网络安全、监控网络活动和优化整体性能的必要功能。
- en: Summary
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we explored essential tools for Linux system administrators
    that provide them with powerful capabilities to manage network communication effectively
    and enhance network security. This chapter covered a wide range of commands, each
    serving a specific purpose in configuring network rules and gaining valuable insights
    into network activity. The `iptables` commands, such as `iptables -t ACCEPT` and
    `iptables -t DROP`, allow administrators to customize network policies, enabling
    authorized traffic while blocking potential threats. These commands play a critical
    role in safeguarding network resources and defending against cyberattacks, making
    them indispensable tools for Linux system administrators. This chapter also delved
    into network configuration and analysis commands, including `ifconfig`, `ip`,
    `route`, and `netstat`. These commands offer administrators the ability to view
    and manage network interfaces, configure IP addresses, inspect routing tables,
    and monitor network statistics. By using these commands, administrators can optimize
    network performance, troubleshoot connectivity issues, and ensure efficient resource
    utilization. Additionally, this chapter explored the `hostname`, `nslookup`, and
    `host` commands, which provide insights into DNS resolution and hostname-related
    information. These commands are valuable for verifying DNS configurations, resolving
    domain names, and identifying network connectivity problems. The seamless integration
    of these network commands equips Linux system administrators with the necessary
    tools to maintain stable, secure, and high-performing network environments.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了Linux系统管理员的必备工具，这些工具为他们提供了强大的能力，以有效管理网络通信并增强网络安全。本章介绍了一系列命令，每个命令在配置网络规则和深入了解网络活动方面都有特定的作用。`iptables`命令，如`iptables
    -t ACCEPT`和`iptables -t DROP`，允许管理员自定义网络策略，允许授权流量同时阻止潜在威胁。这些命令在保护网络资源和防御网络攻击中发挥着至关重要的作用，是Linux系统管理员不可或缺的工具。本章还深入探讨了网络配置和分析命令，包括`ifconfig`、`ip`、`route`和`netstat`。这些命令为管理员提供了查看和管理网络接口、配置IP地址、检查路由表和监控网络统计信息的能力。通过使用这些命令，管理员可以优化网络性能，排查连接问题，并确保资源的高效利用。此外，本章还探讨了`hostname`、`nslookup`和`host`命令，它们提供有关DNS解析和主机名相关信息的洞见。这些命令对于验证DNS配置、解析域名和诊断网络连接问题非常有价值。这些网络命令的无缝集成为Linux系统管理员提供了必要的工具，以维护稳定、安全和高效的网络环境。
- en: In the next chapter, we will explore a set of crucial tools that enable seamless
    file transfer, efficient downloading, and effective log file management in Linux
    environments. We will cover a range of commands, each serving a specific purpose
    in streamlining file transfers and ensuring log file accessibility. From using
    `netcat` and `socat` for copying files into remote systems to leveraging `wget`,
    `curl`, `axel`, and more for efficient file downloads, this will equip system
    administrators with essential techniques to handle various file-related tasks
    effectively.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将探索一组关键工具，这些工具能够实现无缝的文件传输、高效的下载以及有效的日志文件管理，适用于Linux环境。我们将涵盖一系列命令，每个命令在简化文件传输和确保日志文件可访问性方面都具有特定作用。从使用`netcat`和`socat`将文件复制到远程系统，到利用`wget`、`curl`、`axel`等工具进行高效的文件下载，本章将为系统管理员提供必备的技术，以有效地处理各种与文件相关的任务。
