- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Format and Disk Space Commands
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 格式化和磁盘空间命令
- en: As we progress in our comprehensive series on frequently used commands for system
    administrators, the **command-line interface** (**CLI**) is an essential tool
    for getting many tasks done. The CLI offers a streamlined and efficient way to
    perform various tasks, from managing files and directories to monitoring system
    performance and troubleshooting issues. In this section, we will delve into frequently
    used commands and explore their usefulness, execution, and best practices for
    effective system administration. By mastering these commands, system administrators
    can work more efficiently and effectively, making the most of their computing
    resources.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们全面系列的系统管理员常用命令中，**命令行界面**（**CLI**）是完成许多任务的必备工具。CLI提供了一种简洁高效的方式来执行各种任务，从管理文件和目录到监控系统性能和排查问题。在这一部分中，我们将深入探讨常用命令，了解它们的实用性、执行方法以及有效的最佳实践。通过掌握这些命令，系统管理员能够更加高效、有效地工作，充分利用计算资源。
- en: As a system administrator, managing storage and filesystems is an essential
    part of ensuring the smooth operation of a system. The ability to format, partition,
    and manage disk space is critical for managing files, backing up important data,
    and maintaining system stability. In this chapter, we will explore the various
    commands used for formatting and disk space management, including `fdisk`, `lsblk`,
    `df`, `du`, and more.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名系统管理员，管理存储和文件系统是确保系统顺利运行的关键部分。能够格式化、分区和管理磁盘空间对于管理文件、备份重要数据以及维护系统稳定性至关重要。在本章节中，我们将探讨用于格式化和磁盘空间管理的各种命令，包括`fdisk`、`lsblk`、`df`、`du`等。
- en: We will begin by discussing the history and evolution of disk formatting and
    partitioning, from the early days of magnetic tapes to modern `mkfs`, `mke2fs`,
    `fdformat`, and others. By the end of this chapter, you will have a comprehensive
    understanding of formatting and disk space commands, enabling you to effectively
    manage storage and filesystems. It’s important to note that formatting a disk
    results in deleting all data on that disk, so you should exercise caution when
    using these commands.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先讨论磁盘格式化和分区的历史与演变，从早期的磁带存储到现代的`mkfs`、`mke2fs`、`fdformat`等工具。在本章结束时，您将对格式化和磁盘空间命令有一个全面的了解，能够有效地管理存储和文件系统。需要注意的是，格式化磁盘会删除磁盘上的所有数据，因此在使用这些命令时应小心谨慎。
- en: 'In this chapter, we are going to cover the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将涵盖以下主要内容：
- en: The history and evolution of disk formatting and partitioning in Linux
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux中磁盘格式化和分区的历史与演变
- en: Steps to create a partition
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建分区的步骤
- en: fdisk, lsblk, df, and du
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: fdisk、lsblk、df和du
- en: Displaying (dpkg and rpm) package space
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示（dpkg和rpm）软件包空间
- en: mkfs, mke2fs, and fdformat, and more
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: mkfs、mke2fs和fdformat等工具
- en: The history and evolution of disk formatting and partitioning in Linux
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Linux中磁盘格式化和分区的历史与演变
- en: The history of disk formatting and partitioning in Unix/Linux dates back to
    the early days of computing when disk storage was a scarce resource. Disk partitioning
    was essential in organizing disk space into smaller, manageable sections. It allowed
    system administrators to allocate disk space more efficiently and reduced the
    risk of data loss in the event of a disk failure. In the early days of Unix, disk
    partitioning was done using the `fdisk` command, which allowed the user to create,
    delete, and modify disk partitions. With the introduction of Linux, the partitioning
    tool was updated to use the more advanced **GUID Partition Table** (**GPT**) format,
    which provided support for larger disks and more partitions.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Unix/Linux中磁盘格式化和分区的历史可以追溯到计算机早期，那时磁盘存储资源稀缺。磁盘分区在将磁盘空间划分为更小、可管理的部分时至关重要。这使得系统管理员可以更高效地分配磁盘空间，并减少在磁盘故障时数据丢失的风险。在Unix早期，磁盘分区是通过`fdisk`命令完成的，用户可以使用该命令创建、删除和修改磁盘分区。随着Linux的引入，分区工具更新为使用更先进的**GUID分区表**（**GPT**）格式，支持更大的磁盘和更多的分区。
- en: Over time, disk formatting and partitioning in Unix/Linux have become more sophisticated,
    with new commands and utilities being added to improve the process. For instance,
    the `mke2fs` command, which is used to create an `ext2` or `ext3` filesystem,
    was introduced in Linux version 1.2\. This command created a more efficient filesystem,
    which reduced the risk of data loss and made disk management more manageable.
    The introduction of the `mke2fs` command was a significant milestone in the evolution
    of disk formatting and partitioning in Unix/Linux as it allowed administrators
    to create more reliable filesystems and manage disk space more efficiently. The
    advent of cloud computing and virtualization has also had a significant impact
    on disk formatting and partitioning in Unix/Linux. Cloud computing has enabled
    the use of virtual disks, which can be partitioned and formatted using the same
    tools as physical disks. In virtualized environments, administrators can easily
    create, modify, and resize virtual disks, making it easier to manage storage space.
    Additionally, cloud storage providers have developed their own disk formatting
    and partitioning tools, such as Amazon **Elastic Block Store** (**EBS**), which
    allows users to create and attach virtual disks to their instances. These tools
    have made it easier for administrators to manage disk space in the cloud and ensure
    that their data is stored securely.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 随着时间的推移，Unix/Linux 中的磁盘格式化和分区变得越来越复杂，新增了许多命令和工具，以改进这一过程。例如，`mke2fs` 命令用于创建 `ext2`
    或 `ext3` 文件系统，它是在 Linux 1.2 版本中引入的。该命令创建了一种更高效的文件系统，减少了数据丢失的风险，并使磁盘管理更加可控。`mke2fs`
    命令的引入是 Unix/Linux 中磁盘格式化和分区发展史上的一个重要里程碑，因为它使管理员能够创建更可靠的文件系统并更高效地管理磁盘空间。云计算和虚拟化的出现也对
    Unix/Linux 中的磁盘格式化和分区产生了重大影响。云计算使虚拟磁盘的使用成为可能，虚拟磁盘可以像物理磁盘一样使用相同的工具进行分区和格式化。在虚拟化环境中，管理员可以轻松地创建、修改和调整虚拟磁盘的大小，使存储空间的管理变得更加简单。此外，云存储提供商还开发了自己的磁盘格式化和分区工具，如
    Amazon **弹性块存储**（**EBS**），它允许用户为实例创建并附加虚拟磁盘。这些工具使管理员在云中管理磁盘空间变得更加容易，并确保数据的安全存储。
- en: 'There are three types of partitions:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种类型的分区：
- en: '**Primary partition**: A primary partition is a basic partition that can be
    used to boot an operating system. In a hard disk, you can create up to four primary
    partitions. If you want to create more partitions, you can create an extended
    partition, which is a special partition that can contain multiple logical partitions.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主分区**：主分区是可以用来启动操作系统的基本分区。在硬盘上，你可以创建最多四个主分区。如果想创建更多的分区，可以创建一个扩展分区，它是一种特殊的分区，可以包含多个逻辑分区。'
- en: '**Logical partition**: A logical partition is a partition that is created within
    an extended partition. You can create multiple logical partitions within an extended
    partition, which can be useful when you want to create multiple partitions but
    you have already created four primary partitions.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**逻辑分区**：逻辑分区是在扩展分区内创建的分区。你可以在扩展分区内创建多个逻辑分区，这在你想创建多个分区但已创建四个主分区时会非常有用。'
- en: '**Extended partition**: An extended partition is a special partition that is
    used to create multiple logical partitions. An extended partition can only be
    created if there are no more than four primary partitions on the hard disk. Once
    an extended partition has been created, you can create multiple logical partitions
    within it.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扩展分区**：扩展分区是一种特殊的分区，用于创建多个逻辑分区。只有在硬盘上没有超过四个主分区的情况下，才能创建扩展分区。创建了扩展分区后，可以在其中创建多个逻辑分区。'
- en: These partition types are used to organize and manage data on a hard disk. By
    creating multiple partitions, you can separate different types of data and manage
    them more effectively. For example, you could create a separate partition for
    the operating system, one for user data, and one for backup files. This can make
    it easier to manage your data and protect it in the event of a failure or data
    loss. The different types of partitions offer flexibility in how you organize
    your data on a hard disk, depending on your needs and the limitations of the hard
    disk.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些分区类型用于组织和管理硬盘上的数据。通过创建多个分区，可以将不同类型的数据分开，并更有效地管理它们。例如，可以为操作系统创建一个单独的分区，为用户数据创建一个分区，为备份文件创建一个分区。这可以使数据的管理更加方便，并在发生故障或数据丢失时进行保护。不同类型的分区提供了在硬盘上根据需要和硬盘的限制组织数据的灵活性。
- en: Steps to create a partition
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建分区的步骤
- en: Partitioning is the process of dividing a physical hard drive into multiple
    logical storage units. In Linux, the process of creating a partition involves
    defining the size and location of a new partition on a physical hard drive, and
    then formatting it with a filesystem such as `ext4`, `XFS`, or `btrfs`. Creating
    partitions is essential for managing disk space effectively and efficiently. With
    partitioning, system administrators can organize and allocate space on a hard
    drive to various functions such as the operating system, application files, user
    data, and swap space.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 分区是将一个物理硬盘分割成多个逻辑存储单元的过程。在Linux中，创建分区的过程包括定义新分区的大小和位置，然后使用`ext4`、`XFS`或`btrfs`等文件系统对其进行格式化。创建分区对于有效管理磁盘空间至关重要。通过分区，系统管理员可以在硬盘上组织和分配空间，用于操作系统、应用程序文件、用户数据和交换空间等多个功能。
- en: The process of creating partitions in Linux involves several steps. The first
    step is to identify the physical hard drive that needs to be partitioned, using
    the `fdisk` command or other disk management tools such as `lsblk`, `df`, and
    `du`. Next, the system administrator must decide on the size and location of the
    new partition and use the `fdisk` command to create it. The new partition must
    then be formatted with a filesystem using the `mkfs` command. Finally, the system
    administrator must mount the new partition to make it accessible to the operating
    system and its applications.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中创建分区的过程包括几个步骤。第一步是使用`fdisk`命令或其他磁盘管理工具（如`lsblk`、`df`和`du`）识别需要分区的物理硬盘。接下来，系统管理员必须决定新分区的大小和位置，并使用`fdisk`命令创建它。然后，必须使用`mkfs`命令将新分区格式化为文件系统。最后，系统管理员必须挂载新分区，以便操作系统及其应用程序能够访问它。
- en: Partitioning is important for several reasons. Firstly, it allows system administrators
    to manage disk space efficiently by organizing data into logical units. With partitioning,
    it becomes easier to back up and restore data, as well as to allocate space for
    specific applications or functions. Secondly, partitioning can improve system
    performance by reducing disk fragmentation and optimizing access times. Additionally,
    partitioning can improve security by isolating sensitive data on separate partitions
    and protecting it from unauthorized access. Remember that partitioning is a critical
    tool for system administrators to manage disk space, optimize system performance,
    and enhance security.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 分区对于几个方面非常重要。首先，它通过将数据组织成逻辑单元，帮助系统管理员有效管理磁盘空间。通过分区，备份和恢复数据变得更加容易，也更方便为特定的应用程序或功能分配空间。其次，分区可以通过减少磁盘碎片和优化访问时间来提高系统性能。此外，分区还可以通过将敏感数据隔离在独立的分区中，保护其免受未经授权的访问，从而提高安全性。请记住，分区是系统管理员管理磁盘空间、优化系统性能和增强安全性的关键工具。
- en: 'The demonstration will be easy as we only require a drive connected to the
    Linux machine, and we can begin partitioning by launching the Terminal. The commands
    we’ll be making use of for this partitioning are `lsblk` and `fdisk`. The `lsblk`
    command will list the available devices so that we can select the correct one
    to format, and `fdisk` command will effectively format the selected device. Let’s
    get started with the demonstration:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 演示将会很简单，因为我们只需要一块连接到Linux机器的驱动器，然后通过启动终端就可以开始分区。我们将使用的命令是`lsblk`和`fdisk`。`lsblk`命令会列出可用的设备，以便我们选择正确的设备进行格式化，而`fdisk`命令则会有效地格式化所选的设备。让我们开始演示：
- en: 'To verify the available devices, execute the `lsblk` command:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要验证可用设备，请执行`lsblk`命令：
- en: '![Figure 4.1 – Verifying disk space](img/B18212_04_1.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.1 – 验证磁盘空间](img/B18212_04_1.jpg)'
- en: Figure 4.1 – Verifying disk space
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1 – 验证磁盘空间
- en: As we can see, we have listed the available devices and their respective disk
    spaces, but our main target is the connected drive on `/dev/sdb`. Note that `/dev`
    represents the device directory in Linux, where hardware devices are represented
    as files. In this case, `/dev/sdb` is the second SCSI disk drive on the system.
    Notice that it already has a partition (`sdb1`). We will delete that partition,
    verify it again, and then create our own partition. Let’s proceed with the next
    steps.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们已经列出了可用设备及其各自的磁盘空间，但我们主要关注的是连接在`/dev/sdb`上的驱动器。请注意，`/dev`表示Linux中的设备目录，其中硬件设备作为文件表示。在这种情况下，`/dev/sdb`是系统上的第二个SCSI磁盘驱动器。注意，它已经有一个分区（`sdb1`）。我们将删除该分区，重新验证一次，然后创建我们自己的分区。让我们继续进行下一步。
- en: 'Next, execute the `fdisk` command to open its utility for the `/dev/sdb` drive.
    Please ensure you have `sudo` access to run this command. Once you have opened
    the utility, you can create a new partition, but first, let’s delete the previous
    one:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，执行`fdisk`命令来打开`/dev/sdb`驱动器的工具。请确保你有`sudo`权限来运行此命令。打开工具后，你可以创建新分区，但首先，让我们删除之前的分区：
- en: '![Figure 4.2 – Viewing the fdisk utility for the /dev/sdb drive](img/B18212_04_2.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.2 – 查看`/dev/sdb`驱动器的fdisk工具](img/B18212_04_2.jpg)'
- en: Figure 4.2 – Viewing the fdisk utility for the /dev/sdb drive
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2 – 查看`/dev/sdb`驱动器的fdisk工具
- en: Here, we used the `p` command, which stands for print, to display information
    about the existing partition we had previously identified using the `lsblk` command.
    Now, we need to delete that partition so that we can create a new one according
    to our needs.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用了`p`命令，它表示打印，用来显示我们之前通过`lsblk`命令识别的现有分区的信息。现在，我们需要删除该分区，以便根据我们的需求创建一个新分区。
- en: 'To delete the `sdb1` partition, use the `d` command, which stands for delete,
    to remove the `sdb1` partition:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要删除`sdb1`分区，请使用`d`命令（表示删除）来移除`sdb1`分区：
- en: '![Figure 4.3 – Deleting and saving changes made](img/B18212_04_3.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.3 – 删除并保存所做的更改](img/B18212_04_3.jpg)'
- en: Figure 4.3 – Deleting and saving changes made
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3 – 删除并保存所做的更改
- en: 'After that, we can make use of the `lsblk` command to check whether the partition
    was really deleted. As we can see, the deleted partition (`sdb1`) is not listed
    anymore, proving that the deletion succeeded:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们可以使用`lsblk`命令检查分区是否真的被删除。如我们所见，已删除的分区（`sdb1`）不再列出，证明删除成功：
- en: '![Figure 4.4 – Verifying that the partition was deleted](img/B18212_04_4.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.4 – 验证分区已删除](img/B18212_04_4.jpg)'
- en: Figure 4.4 – Verifying that the partition was deleted
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4 – 验证分区已删除
- en: Once we have confirmed this, we can proceed with creating our own partition.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确认这一点，我们就可以继续创建我们自己的分区。
- en: 'Now, call the `fdisk` utility for the `/dev/sdb` drive, and type `p` to print
    the current partition table. This will help you understand how the disk is currently
    partitioned. Next, type `n` to create a new partition. The `n` command in the
    `fdisk` tool is used to create a new partition on the selected disk. When the
    command is entered, we are prompted to select the type of partition we wish to
    create. In this case, we are presented with two partition types – `primary` and
    `extended`:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，调用`fdisk`工具来查看`/dev/sdb`驱动器的分区，并输入`p`以打印当前的分区表。这将帮助你了解磁盘当前的分区情况。接下来，输入`n`以创建新分区。`fdisk`工具中的`n`命令用于在所选磁盘上创建新分区。输入命令后，我们会被提示选择我们希望创建的分区类型。在这种情况下，我们将看到两种分区类型——`主分区`和`扩展分区`：
- en: '![Figure 4.5 – Creating a new partition](img/B18212_04_5.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.5 – 创建新分区](img/B18212_04_5.jpg)'
- en: Figure 4.5 – Creating a new partition
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – 创建新分区
- en: 'Next, we selected `p` for the primary partition type. Then, we were prompted
    to select the number of partitions, and we left it as the default value by pressing
    *Enter*. For the first sector, we also pressed *Enter*. The same went for the
    last sector. Finally, we confirmed that we wanted to remove the signature by typing
    `yes` and then used the `w` command to save all the changes that we made:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们选择了`p`作为主分区类型。然后，我们被提示选择分区数量，我们按*Enter*键保留默认值。对于第一个扇区，我们也按了*Enter*键。最后一个扇区也是如此。最后，我们通过输入`yes`确认要删除签名，并使用`w`命令保存我们所做的所有更改：
- en: '![Figure 4.6 – Choosing the primary partition and saving changes](img/B18212_04_6.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.6 – 选择主分区并保存更改](img/B18212_04_6.jpg)'
- en: Figure 4.6 – Choosing the primary partition and saving changes
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.6 – 选择主分区并保存更改
- en: 'Verify its creation by calling `fdisk -l /dev/sdb` and `lsblk`:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过调用`fdisk -l /dev/sdb`和`lsblk`来验证其创建：
- en: '![Figure 4.7 – Verifying the new partition (sdb1)](img/B18212_04_7.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.7 – 验证新分区（sdb1）](img/B18212_04_7.jpg)'
- en: Figure 4.7 – Verifying the new partition (sdb1)
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7 – 验证新分区（sdb1）
- en: Congratulations! You have successfully created a partition.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经成功创建了一个分区。
- en: fdisk, lsblk, df, and du
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fdisk、lsblk、df 和 du
- en: Among the utilities used in Linux systems to manage filesystems, there’s `fdisk`,
    `lsblk`, `df`, and `du`. Each of these utilities performs a specific function
    in disk management, and their proper use is essential to ensure the efficient
    functioning of the system.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux系统中，用于管理文件系统的工具包括`fdisk`、`lsblk`、`df`和`du`。这些工具各自执行磁盘管理中的特定功能，正确使用它们对确保系统高效运行至关重要。
- en: 'We introduced `fdisk`, a command-line utility that’s used to partition disks,
    previously. It allows us to create and modify partition tables, enabling administrators
    to organize storage space as required. Partitioning is essential for efficiently
    utilizing storage space, improving system performance, and simplifying the management
    of the filesystem. `fdisk` can create different types of partitions, including
    primary, logical, and extended partitions. Additionally, it can be used to change
    the partition size, delete partitions, and modify partition types. Without `fdisk`,
    managing and organizing the filesystem would be complex, cumbersome, and prone
    to errors. We can call this command by simply typing `fdisk -l` to list the partition:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前介绍了 `fdisk`，一个用于分区的命令行工具。它允许我们创建和修改分区表，帮助管理员根据需要组织存储空间。分区对于高效利用存储空间、提高系统性能以及简化文件系统管理至关重要。`fdisk`
    可以创建不同类型的分区，包括主分区、逻辑分区和扩展分区。此外，它还可以用于更改分区大小、删除分区和修改分区类型。如果没有 `fdisk`，管理和组织文件系统将变得复杂、繁琐且容易出错。我们可以通过输入
    `fdisk -l` 来列出分区：
- en: '![Figure 4.8 – List partition with fdisk](img/B18212_04_8.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.8 – 使用 fdisk 列出分区](img/B18212_04_8.jpg)'
- en: Figure 4.8 – List partition with fdisk
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8 – 使用 fdisk 列出分区
- en: '`lsblk` is another command-line utility that’s used in Linux systems to list
    all the available block devices, including hard drives, USB devices, and CD-ROM
    drives. This utility is useful in identifying the storage devices attached to
    the system, and the details of each block device. The output of `lsblk` provides
    critical information about the block devices, such as the device name, the size,
    the filesystem type, and the mount point. An example of this can be seen here:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`lsblk` 是另一个命令行工具，用于 Linux 系统中列出所有可用的块设备，包括硬盘、USB 设备和光盘驱动器。这个工具有助于识别系统上附加的存储设备及其详细信息。`lsblk`
    的输出提供了关于块设备的关键信息，如设备名称、大小、文件系统类型和挂载点。以下是一个例子：'
- en: '![Figure 4.9 – Output of block devices](img/B18212_04_9.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.9 – 块设备的输出](img/B18212_04_9.jpg)'
- en: Figure 4.9 – Output of block devices
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.9 – 块设备的输出
- en: This information is crucial in making decisions on how to allocate storage space
    and organize the filesystem efficiently. `lsblk` is essential in disk management
    as it helps system administrators identify the storage devices attached to the
    system, troubleshoot device connectivity issues, and make informed decisions regarding
    partitioning and disk organization.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息对于决定如何分配存储空间和高效组织文件系统至关重要。`lsblk` 在磁盘管理中是必不可少的，它帮助系统管理员识别附加到系统上的存储设备，排除设备连接问题，并就分区和磁盘组织做出明智决策。
- en: 'The `df` (**Disk Free**) utility is a command-line tool that displays the disk
    space used and available in filesystems on Linux systems. This tool is important
    in monitoring filesystem usage, identifying storage space consumption patterns,
    and making decisions on how to allocate storage space efficiently. Let’s try and
    display the disk space usage for a specific filesystem, such as the root filesystem:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`df` (**磁盘空闲**) 工具是一个命令行工具，用于显示 Linux 系统中文件系统使用的磁盘空间和可用的磁盘空间。这个工具在监控文件系统使用情况、识别存储空间消耗模式以及做出如何有效分配存储空间的决策中非常重要。我们来尝试显示特定文件系统（如根文件系统）的磁盘空间使用情况：'
- en: '![Figure 4.10 – Displaying disk usage with df](img/B18212_04_10.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.10 – 使用 df 显示磁盘使用情况](img/B18212_04_10.jpg)'
- en: Figure 4.10 – Displaying disk usage with df
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.10 – 使用 df 显示磁盘使用情况
- en: 'With `df`, administrators can identify filesystems that are running low on
    disk space, which can cause system performance issues or data loss:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `df`，管理员可以识别出磁盘空间不足的文件系统，这可能会导致系统性能问题或数据丢失：
- en: '![Figure 4.11 – Monitoring disk usage](img/B18212_04_11.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.11 – 监控磁盘使用情况](img/B18212_04_11.jpg)'
- en: Figure 4.11 – Monitoring disk usage
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.11 – 监控磁盘使用情况
- en: In this example, the administrator is monitoring the disk space usage on the
    filesystem where the website files are stored, which is mounted on `/var/www/html`.
    The `df` command is used with the `-h` option to display the output in a human-readable
    format, making it easier to understand the disk space usage. The output shows
    the total size of the filesystem, the amount of space used, the available space,
    the percentage of space used, and the mount point. The administrator can use this
    information to identify the directories that are consuming the most space and
    optimize them for better performance. Additionally, the administrator can use
    this information to plan for future disk space needs. The `df` utility provides
    a detailed report on the filesystem usage, including the filesystem type, the
    total size, the used space, the available space, and the percentage of the disk
    space used. With this information, administrators can optimize disk usage, increase
    performance, and avoid system crashes.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，管理员正在监控存储网站文件的文件系统的磁盘空间使用情况，该文件系统挂载在 `/var/www/html`。使用 `df` 命令并加上 `-h`
    选项，可以以人类可读的格式显示输出，使磁盘空间的使用情况更易理解。输出显示文件系统的总大小、已用空间、可用空间、已用空间的百分比以及挂载点。管理员可以利用这些信息识别出占用最多空间的目录，并进行优化以提升性能。此外，管理员还可以根据这些信息为未来的磁盘空间需求进行规划。`df`
    工具提供了关于文件系统使用情况的详细报告，包括文件系统类型、总大小、已用空间、可用空间和已用磁盘空间的百分比。有了这些信息，管理员可以优化磁盘使用、提高性能并避免系统崩溃。
- en: The `du` utility is another essential command-line tool that’s used in Linux
    systems to determine the amount of space used by specific directories and files.
    With `du`, administrators can identify files or directories that are consuming
    too much space and decide whether to delete, archive, or move them to another
    filesystem. The `du` utility also displays the amount of space used by each subdirectory,
    enabling administrators to pinpoint storage hogs quickly. The `du` utility’s importance
    in disk management cannot be overstated as it helps system administrators optimize
    disk usage, identify space-hogging files, and troubleshoot space consumption issues.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '`du` 工具是另一个在 Linux 系统中用于确定特定目录和文件所占空间的基本命令行工具。通过 `du`，管理员可以识别出占用过多空间的文件或目录，并决定是否删除、归档或将它们移至另一个文件系统。`du`
    工具还会显示每个子目录所占的空间，使管理员能够快速定位占用空间的文件。`du` 工具在磁盘管理中的重要性不言而喻，它帮助系统管理员优化磁盘使用、识别占空间的文件，并排除空间消耗问题。'
- en: Checking the disk space usage of a directory
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 检查目录的磁盘空间使用情况
- en: In this example, we will use the `du` command to check the disk space usage
    of a directory.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使用 `du` 命令检查目录的磁盘空间使用情况。
- en: 'The steps are as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤如下：
- en: Navigate to the directory whose disk space usage you want to check.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您想要检查磁盘空间使用情况的目录。
- en: 'Type the following command:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '![Figure 4.12 – Using du to check disk usage](img/B18212_04_12.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.12 – 使用 du 检查磁盘使用情况](img/B18212_04_12.jpg)'
- en: Figure 4.12 – Using du to check disk usage
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.12 – 使用 du 检查磁盘使用情况
- en: We have used the `du -sh` command to check the disk space usage of the directory.
    The output shows that the directory is using 13 GB of disk space.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了 `du -sh` 命令来检查目录的磁盘空间使用情况。输出显示该目录使用了 13 GB 的磁盘空间。
- en: Finding large files in a directory
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找目录中的大文件
- en: In this example, we will use the `du` command to find large files in a directory.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使用 `du` 命令查找目录中的大文件。
- en: 'The steps are as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤如下：
- en: Navigate to the directory whose large files you want to find.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您想要查找大文件的目录。
- en: 'Type the following command:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下命令：
- en: '![Figure 4.13 – Using du to find large files](img/B18212_04_13.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.13 – 使用 du 查找大文件](img/B18212_04_13.jpg)'
- en: Figure 4.13 – Using du to find large files
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.13 – 使用 du 查找大文件
- en: 'Utilize the `du -a | sort -rn | head –n 10` command to identify the 10 largest
    files in the directory. The resulting output provides the size of each file in
    bytes, along with its corresponding file path. Let’s apply this command to a different
    folder and observe the results:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `du -a | sort -rn | head –n 10` 命令识别目录中 10 个最大文件。生成的输出提供了每个文件的字节大小及其相应的文件路径。让我们将此命令应用于另一个文件夹并观察结果：
- en: '![Figure 4.14 – Viewing the file size with du](img/B18212_04_14.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.14 – 使用 du 查看文件大小](img/B18212_04_14.jpg)'
- en: Figure 4.14 – Viewing the file size with du
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.14 – 使用 du 查看文件大小
- en: Utilities such as `fdisk`, `lsblk`, `df`, and `du` are essential in managing
    and organizing disk space in Linux systems. `fdisk` is used in partitioning disks,
    `lsblk` is used in identifying the storage devices attached to the system, `df`
    is used in monitoring filesystem usage, and `du` is used in determining the amount
    of space used by specific directories and files. Proper use of these utilities
    is crucial in optimizing disk usage, increasing system performance, and avoiding
    data loss.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`fdisk`、`lsblk`、`df`和`du`等工具对于在Linux系统中管理和组织磁盘空间至关重要。`fdisk`用于磁盘分区，`lsblk`用于识别连接到系统的存储设备，`df`用于监控文件系统的使用情况，而`du`用于确定特定目录和文件所占用的空间。正确使用这些工具对于优化磁盘使用、提高系统性能和避免数据丢失至关重要。'
- en: Displaying (dpkg and rpm) package space
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示（dpkg和rpm）软件包空间
- en: Package management systems such as `dpkg` and `rpm` are used to install, remove,
    and manage software packages in Linux and Unix operating systems. The `dpkg` tool
    is used in Debian-based systems such as Ubuntu and the `rpm` tool is used in Red
    Hat-based systems such as CentOS. These tools not only provide an easy way to
    manage software packages but also offer valuable information about disk space
    usage by the installed packages. One important use of the `dpkg` and `rpm` tools
    is to display the package space, which refers to the amount of disk space used
    by the installed packages. By using these tools, administrators can identify the
    packages that are consuming the most disk space and make decisions on whether
    to remove or keep them. This is particularly useful in systems with limited disk
    space, where optimizing the use of disk space is critical to avoid system crashes,
    performance issues, or data loss.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 包管理系统如`dpkg`和`rpm`用于在Linux和Unix操作系统中安装、删除和管理软件包。`dpkg`工具用于基于Debian的系统，如Ubuntu，而`rpm`工具则用于基于Red
    Hat的系统，如CentOS。这些工具不仅提供了一种便捷的方式来管理软件包，还提供了关于已安装软件包的磁盘空间使用情况的有价值信息。`dpkg`和`rpm`工具的一个重要用途是显示软件包空间，这指的是已安装软件包所占用的磁盘空间。通过使用这些工具，管理员可以识别出占用最多磁盘空间的包，并决定是否删除或保留它们。这在磁盘空间有限的系统中尤其有用，因为优化磁盘空间的使用对避免系统崩溃、性能问题或数据丢失至关重要。
- en: In addition, the `dpkg` and `rpm` tools provide information about the package
    dependencies, which are other packages that are required by the installed package
    to function properly. This information is useful in identifying the packages that
    can be safely removed without affecting the system’s stability or functionality.
    By removing unnecessary packages, administrators can free up disk space, reduce
    system complexity, and improve system performance. The `dpkg` and `rpm` tools
    also offer an easy way to upgrade or install packages with their dependencies
    automatically resolved. With these tools, administrators can easily install security
    patches, updates, and new software packages without worrying about the dependencies.
    This reduces the time and effort required to manage packages and ensures that
    the system is up to date with the latest software versions. We are currently using
    CentOS 8, meaning `rpm` (**Red Hat Package Manager**) will be our number one example.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，`dpkg`和`rpm`工具还提供了关于软件包依赖关系的信息，这些是安装的软件包正常运行所需的其他软件包。这些信息有助于识别出可以安全删除的包，而不会影响系统的稳定性或功能性。通过删除不必要的包，管理员可以释放磁盘空间，减少系统复杂性，并提高系统性能。`dpkg`和`rpm`工具还提供了一种简便的方式来自动解决依赖关系，升级或安装软件包。通过这些工具，管理员可以轻松安装安全补丁、更新和新的软件包，而无需担心依赖关系问题。这减少了管理软件包所需的时间和精力，并确保系统保持最新的软件版本。我们目前使用的是CentOS
    8，这意味着`rpm`（**Red Hat软件包管理器**）将是我们的第一个示例。
- en: Installing a package
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装软件包
- en: 'The following example demonstrates how to utilize `rpm` to install packages
    on CentOS 8:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例演示了如何在CentOS 8上使用`rpm`安装软件包：
- en: '![Figure 4.15 – Using rpm to install a package](img/B18212_04_15.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.15 – 使用rpm安装软件包](img/B18212_04_15.jpg)'
- en: Figure 4.15 – Using rpm to install a package
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.15 – 使用rpm安装软件包
- en: This command installs the specified package using RPM. It searches for the `package`
    file in the current directory, or you can specify a path to the `package` file.
    This command is useful for installing new software on a Linux system, whether
    it is a single package or a set of packages.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令使用RPM安装指定的软件包。它会在当前目录中搜索`package`文件，或者你可以指定`package`文件的路径。这个命令对于在Linux系统上安装新软件非常有用，无论是单个软件包还是一组软件包。
- en: Querying the details of a package
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询软件包的详细信息
- en: 'The `rpm` command can be used to query the details of a package installed on
    the system. For example, to query the details of the `ftp` package, use the following
    command:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`rpm` 命令可用于查询系统中已安装软件包的详细信息。例如，要查询 `ftp` 软件包的详细信息，可以使用以下命令：'
- en: '![Figure 4.16 – Querying the details of a package that’s been installed](img/B18212_04_16.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.16 – 查询已安装软件包的详细信息](img/B18212_04_16.jpg)'
- en: Figure 4.16 – Querying the details of a package that’s been installed
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.16 – 查询已安装软件包的详细信息
- en: The `dpkg` and `rpm` tools are essential for managing software packages and
    optimizing the use of disk space in Linux and Unix systems. By providing valuable
    information about package space, dependencies, and upgrade options, these tools
    enable administrators to make informed decisions and ensure the stability, security,
    and performance of the system.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '`dpkg` 和 `rpm` 工具对于管理软件包和优化 Linux 和 Unix 系统中的磁盘空间使用至关重要。通过提供有关软件包空间、依赖关系和升级选项的有价值信息，这些工具使管理员能够做出明智的决策，确保系统的稳定性、安全性和性能。'
- en: mkfs, mke2fs, fdformat, and more
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: mkfs、mke2fs、fdformat 等
- en: Disk formatting is the process of preparing a storage device such as a hard
    drive, SSD, or USB flash drive for data storage. Formatting creates a filesystem
    on the storage device, which allows the operating system to organize and manage
    files on the device. In Linux, several disk formatting tool commands can be used
    to format storage devices. These tools include `mkfs`, `mke2fs`, `fdformat`, and
    more.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘格式化是准备存储设备（如硬盘、SSD 或 USB 闪存驱动器）以进行数据存储的过程。格式化会在存储设备上创建文件系统，操作系统可以通过该文件系统来组织和管理设备上的文件。在
    Linux 中，可以使用多种磁盘格式化工具命令来格式化存储设备。这些工具包括 `mkfs`、`mke2fs`、`fdformat` 等。
- en: '`mkfs` is a command that’s used to create a filesystem on a storage device.
    This command can be used to create a variety of filesystems, including `ext2`,
    `ext3`, `ext4`, `XFS`, `btrfs`, and more. The `mkfs` command is important in preparing
    storage devices for use in Linux systems. For example, when a new hard drive is
    added to a Linux server, it must be formatted before it can be used for data storage.
    Let’s examine a straightforward approach to utilize this tool on CentOS 8:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`mkfs` 是用于在存储设备上创建文件系统的命令。此命令可用于创建多种文件系统，包括 `ext2`、`ext3`、`ext4`、`XFS`、`btrfs`
    等。`mkfs` 命令在为 Linux 系统准备存储设备时非常重要。例如，当一个新的硬盘添加到 Linux 服务器时，必须先进行格式化才能用于数据存储。我们来看一下在
    CentOS 8 上使用此工具的简单方法：'
- en: '![Figure 4.17 – Formatting a partition using mkfs.ext4](img/B18212_04_17.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.17 – 使用 mkfs.ext4 格式化分区](img/B18212_04_17.jpg)'
- en: Figure 4.17 – Formatting a partition using mkfs.ext4
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.17 – 使用 mkfs.ext4 格式化分区
- en: This will format the `/dev/sdb1` partition with the `ext4` filesystem. The newly
    formatted partition can then be mounted and used for data storage.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这将使用 `ext4` 文件系统格式化 `/dev/sdb1` 分区。新格式化的分区可以挂载并用于数据存储。
- en: '`mke2fs` is a variant of the `mkfs` command that is specifically designed to
    create `ext2`, `ext3`, and `ext4` filesystems. The `mke2fs` command is important
    in creating and managing Linux filesystems. With this command, administrators
    can specify the size of the filesystem, the block size, and other parameters to
    optimize the filesystem for specific use cases. For example, a filesystem created
    with the `mke2fs` command can be optimized for high-performance workloads or used
    with large files, as shown in the following example:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`mke2fs` 是 `mkfs` 命令的一个变体，专门用于创建 `ext2`、`ext3` 和 `ext4` 文件系统。`mke2fs` 命令在创建和管理
    Linux 文件系统中非常重要。使用此命令，管理员可以指定文件系统的大小、块大小以及其他参数，以优化文件系统以适应特定的使用场景。例如，使用 `mke2fs`
    命令创建的文件系统可以优化以应对高性能工作负载，或用于处理大文件，如以下示例所示：'
- en: '![Figure 4.18 – Creating an ext3 filesystem](img/B18212_04_18.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.18 – 创建 ext3 文件系统](img/B18212_04_18.jpg)'
- en: Figure 4.18 – Creating an ext3 filesystem
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.18 – 创建 ext3 文件系统
- en: Here, the command creates an `ext3` filesystem on the `/dev/sdb1` partition.
    The `-t ext3` option specifies the filesystem type as `ext3`.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，命令会在 `/dev/sdb1` 分区上创建一个 `ext3` 文件系统。`-t ext3` 选项指定文件系统类型为 `ext3`。
- en: The `fdformat` command is primarily used for low-level formatting of floppy
    disks, which are legacy storage media. It writes a new disk geometry and sector
    layout to the floppy disk, preparing it for use. However, this command is not
    intended for formatting modern storage devices such as pen drives or USB flash
    drives.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`fdformat` 命令主要用于对软盘进行低级格式化，这是较旧的存储介质。它会将新的磁盘几何结构和扇区布局写入软盘，准备其使用。然而，该命令并不适用于格式化现代存储设备，如
    U 盘或 USB 闪存驱动器。'
- en: For formatting pen drives or USB flash drives in Linux, `mkfs` (make filesystem)
    commands are typically used, such as `mkfs.fat` for creating a `FAT` filesystem
    or `mkfs.ext4` for creating an `ext4` filesystem, as shown in the previous examples.
    These commands are specifically designed for formatting different types of storage
    devices, including pen drives, USB flash drives, and hard drives.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在Linux中格式化U盘或USB闪存驱动器时，通常使用`mkfs`（创建文件系统）命令，如使用`mkfs.fat`创建`FAT`文件系统，或使用`mkfs.ext4`创建`ext4`文件系统，正如前面的示例所示。这些命令专门设计用于格式化不同类型的存储设备，包括U盘、USB闪存驱动器和硬盘。
- en: The `mkswap` command is used to create a swap area on a Linux system. A swap
    area is a dedicated space on a hard drive that the system can use as virtual memory
    when it runs out of physical memory. The `mkswap` command initializes a disk partition
    or a file as a swap area and assigns it a unique identifier.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`mkswap`命令用于在Linux系统上创建交换区域。交换区域是硬盘上专用的空间，当系统的物理内存不足时，可以将其作为虚拟内存使用。`mkswap`命令将磁盘分区或文件初始化为交换区域，并为其分配唯一的标识符。'
- en: 'Let’s delve into comprehensive examples to demonstrate the practical utilization
    of these commands:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过全面的示例，演示这些命令的实际应用：
- en: 'Check the available disk partitions:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查可用的磁盘分区：
- en: '![Figure 4.19 – Viewing the available disk partitions](img/B18212_04_19.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![图4.19 – 查看可用的磁盘分区](img/B18212_04_19.jpg)'
- en: Figure 4.19 – Viewing the available disk partitions
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.19 – 查看可用的磁盘分区
- en: 'Identify the desired partition for swap, such as `/dev/sdb1`, and then proceed
    to execute the `sudo mkswap /dev/sdb1` command. This command formats the partition
    as `swap`, resulting in the following output:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定所需的交换分区，如`/dev/sdb1`，然后执行`sudo mkswap /dev/sdb1`命令。该命令将分区格式化为`swap`，输出如下：
- en: '![Figure 4.20 – Using mkswap to format the partition as swap](img/B18212_04_20.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图4.20 – 使用mkswap将分区格式化为swap](img/B18212_04_20.jpg)'
- en: Figure 4.20 – Using mkswap to format the partition as swap
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.20 – 使用mkswap将分区格式化为swap
- en: The `gdisk` command is a variant of the `fdisk` command and is used to partition
    hard drives on Linux systems. `gdisk` is primarily designed for GPT, which is
    a newer partitioning scheme that has replaced the older `gdisk` command is a powerful
    tool that allows you to create, modify, and delete partitions on GPT disks.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`gdisk`命令是`fdisk`命令的一种变体，用于Linux系统上的硬盘分区。`gdisk`主要设计用于GPT，这是一种较新的分区方案，已经取代了较旧的分区方式。`gdisk`是一个强大的工具，允许你在GPT磁盘上创建、修改和删除分区。'
- en: In this scenario, the system administrator is using the `gdisk` command to create
    a new partition on the `/dev/sdb` disk. The administrator enters the `gdisk /dev/sdb`
    command to launch the `gdisk` utility for the specified disk.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此场景中，系统管理员使用`gdisk`命令在`/dev/sdb`磁盘上创建一个新分区。管理员输入`gdisk /dev/sdb`命令以启动指定磁盘的`gdisk`工具。
- en: 'Once inside the `gdisk` utility, the administrator uses the `n` command to
    create a new partition. The utility prompts for the partition number, first sector,
    and last sector. The administrator can choose the default values or specify custom
    values based on their requirements:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入`gdisk`工具后，管理员使用`n`命令创建一个新分区。工具会提示输入分区号、起始扇区和结束扇区。管理员可以选择默认值，也可以根据需求指定自定义值：
- en: '![Figure 4.21 – Using gdisk to create a new partition](img/B18212_04_21.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图4.21 – 使用gdisk创建新分区](img/B18212_04_21.jpg)'
- en: Figure 4.21 – Using gdisk to create a new partition
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.21 – 使用gdisk创建新分区
- en: 'In this example, the administrator sets the partition type to `Linux swap`
    by entering a hex code of `8300`. After confirming the changes, the administrator
    uses the `w` command to write the changes to the disk and exit the `gdisk` utility:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此示例中，管理员通过输入十六进制代码`8300`将分区类型设置为`Linux swap`。确认更改后，管理员使用`w`命令将更改写入磁盘并退出`gdisk`工具：
- en: '![Figure 4.22 – The partition was created](img/B18212_04_22.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图4.22 – 分区已创建](img/B18212_04_22.jpg)'
- en: Figure 4.22 – The partition was created
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.22 – 分区已创建
- en: The `parted` command is a partition editor that allows you to create, delete,
    resize, and move partitions on a hard drive. Parted supports both MBR and GPT
    partitioning schemes and can work with multiple filesystem types. It is a powerful
    tool for managing disk partitions and is commonly used in server environments.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`parted`命令是一个分区编辑器，允许你在硬盘上创建、删除、调整大小和移动分区。Parted支持MBR和GPT两种分区方案，并能够处理多种文件系统类型。它是管理磁盘分区的强大工具，通常用于服务器环境中。'
- en: 'Let’s explore a practical scenario of using the `parted` command:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索一个使用 `parted` 命令的实际场景：
- en: In this scenario, the system administrator is using the `parted` command to
    create a new partition on the `/dev/sdb` disk. The administrator enters the `parted
    /dev/sdb` command to launch the parted utility for the specified disk.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此场景中，系统管理员使用 `parted` 命令在 `/dev/sdb` 磁盘上创建一个新分区。管理员输入 `parted /dev/sdb` 命令来启动指定磁盘的
    parted 工具。
- en: Once inside the parted utility, the administrator uses the `mklabel gpt` command
    to create a new GPT partition table on the disk. This ensures compatibility with
    modern systems and larger disk sizes.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入 parted 工具后，管理员使用 `mklabel gpt` 命令在磁盘上创建一个新的 GPT 分区表。这可以确保与现代系统和更大磁盘大小的兼容性。
- en: Next, the administrator uses the `mkpart primary ext4 0% 100%` command to create
    a new primary partition that spans the entire disk. The partition is formatted
    with the `ext4` filesystem.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，管理员使用 `mkpart primary ext4 0% 100%` 命令创建一个新的主分区，该分区覆盖整个磁盘。该分区采用 `ext4` 文件系统格式化。
- en: After creating the partition, the administrator can use the `print` command
    to verify the partition layout and details. This helps ensure that the partition
    was created correctly.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建分区后，管理员可以使用 `print` 命令验证分区布局和详细信息。这有助于确保分区正确创建。
- en: 'Finally, the administrator uses the `quit` command to exit the parted utility:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，管理员使用 `quit` 命令退出 parted 工具：
- en: '![Figure 4.23 – Using parted to create a partition table](img/B18212_04_23.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.23 – 使用 parted 创建分区表](img/B18212_04_23.jpg)'
- en: Figure 4.23 – Using parted to create a partition table
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.23 – 使用 parted 创建分区表
- en: By using the `parted` command in this scenario, the system administrator can
    easily create and manage partitions on the specified disk, allowing for effective
    disk management and utilization.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在此场景中使用 `parted` 命令，系统管理员可以轻松创建和管理指定磁盘上的分区，从而实现有效的磁盘管理和利用。
- en: The `dd` command is a low-level tool that’s used for copying and converting
    data between files, disks, and partitions. The `dd` command is commonly used for
    creating bootable USB drives, backing up and restoring disk images, and cloning
    disks. It can also be used to write zeros to a hard drive, which is useful for
    securely wiping sensitive data.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`dd` 命令是一个低级工具，用于在文件、磁盘和分区之间复制和转换数据。`dd` 命令通常用于创建可启动的 USB 驱动器、备份和恢复磁盘映像以及克隆磁盘。它还可以用于将零写入硬盘，这对于安全擦除敏感数据非常有用。'
- en: 'Let’s explore a practical example scenario for the `dd` command:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索一个 `dd` 命令的实际示例场景：
- en: In this scenario, the system administrator is using the `dd` command to copy
    the contents of a source file to a USB device represented by `/dev/sdb`.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此场景中，系统管理员使用 `dd` 命令将源文件的内容复制到由 `/dev/sdb` 表示的 USB 设备上。
- en: 'The administrator starts by executing the `dd` command. The `if` option is
    used to specify the input file, followed by the path to the source file (`/home/instructor/backup.tar.gz`
    in this example):'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管理员首先执行 `dd` 命令。`if` 选项用于指定输入文件，后跟源文件的路径（在此示例中为 `/home/instructor/backup.tar.gz`）：
- en: '![Figure 4.24 – Using the dd command to copy on the USB device](img/B18212_04_24.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.24 – 使用 dd 命令在 USB 设备上复制](img/B18212_04_24.jpg)'
- en: Figure 4.24 – Using the dd command to copy on the USB device
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.24 – 使用 dd 命令在 USB 设备上复制
- en: Next, the `of` option is used to specify the output file, which is the USB device
    represented by `/dev/sdb`. This means that the contents of the source file will
    be written to the USB device.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，`of` 选项用于指定输出文件，即由 `/dev/sdb` 表示的 USB 设备。这意味着源文件的内容将被写入到 USB 设备中。
- en: The `bs` option is used to specify the block size for data transfer. In this
    example, `bs=4M` indicates a block size of 4 megabytes.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`bs` 选项用于指定数据传输的块大小。在此示例中，`bs=4M` 表示块大小为 4 兆字节。'
- en: By executing this command, the system administrator can effectively copy the
    contents of the source file to the USB device. This can be useful for tasks such
    as creating bootable USB drives, transferring large files, or creating disk images.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行此命令，系统管理员可以有效地将源文件的内容复制到 USB 设备上。这对于创建可启动 USB 驱动器、传输大型文件或创建磁盘映像等任务非常有用。
- en: It’s important to exercise caution when using the `dd` command with block devices
    such as `/dev/sdb` as any data on the destination device will be overwritten.
    As an administrator, you should double-check and ensure they are targeting the
    correct device to avoid accidental data loss.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在使用`dd`命令处理块设备如`/dev/sdb`时，必须小心，因为目标设备上的所有数据都将被覆盖。作为管理员，你应该仔细检查并确保选择了正确的设备，以避免意外的数据丢失。
- en: In conclusion, disk formatting tool commands are an essential part of managing
    storage devices in Linux systems. These commands allow administrators to prepare
    storage devices for use, optimize filesystems for specific use cases, and ensure
    that devices are reliable and performant. Understanding the purpose and use of
    these commands is important for any Linux administrator who works with storage
    devices.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，磁盘格式化工具命令是管理Linux系统中存储设备的重要组成部分。这些命令帮助管理员准备存储设备，优化文件系统以适应特定的使用场景，并确保设备的可靠性和性能。理解这些命令的目的和使用方式对于任何从事存储设备管理的Linux管理员都非常重要。
- en: Summary
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter explored the steps of creating a partition, a fundamental process
    in disk management. We provided a detailed walk-through of utilizing tools such
    as `fdisk`, `lsblk`, `df`, and `du` to create, modify, and analyze partitions
    on storage devices. These tools play a crucial role in partition management, allowing
    system administrators to allocate disk space efficiently, monitor disk usage,
    and make informed decisions for optimal storage utilization. Additionally, this
    chapter delved into the topic of displaying package space using commands such
    as `dpkg` and `rpm`. These commands enable system administrators to obtain information
    about installed packages, including their sizes and disk space consumption. By
    leveraging `dpkg` and `rpm`, administrators can keep track of package installations,
    identify space-intensive packages, and manage package dependencies to ensure efficient
    disk utilization.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 本章探讨了创建分区的步骤，这是磁盘管理的基础过程。我们详细介绍了如何使用`fdisk`、`lsblk`、`df`和`du`等工具来创建、修改和分析存储设备上的分区。这些工具在分区管理中起着至关重要的作用，帮助系统管理员高效分配磁盘空间、监控磁盘使用情况，并做出明智的决策，以优化存储利用率。此外，本章还深入讨论了如何使用`dpkg`和`rpm`等命令来显示包的空间信息。这些命令帮助系统管理员获取已安装包的信息，包括其大小和磁盘空间占用情况。通过使用`dpkg`和`rpm`，管理员可以跟踪包的安装情况，识别占用大量空间的包，并管理包的依赖关系，以确保磁盘空间的高效利用。
- en: Furthermore, this chapter covered the usage of `mkfs`, `mke2fs`, and `fdformat`,
    among other disk formatting tools. These commands provide administrators with
    the ability to format disks and partitions with various filesystems, facilitating
    data organization and compatibility. Proper disk formatting is crucial for optimal
    performance and storage utilization. System administrators can utilize these tools
    to prepare disks for specific purposes, create filesystems for data storage, or
    format removable media.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，本章介绍了`mkfs`、`mke2fs`和`fdformat`等磁盘格式化工具的使用。这些命令为管理员提供了格式化磁盘和分区的能力，支持多种文件系统，便于数据的组织和兼容性。正确的磁盘格式化对优化性能和存储利用率至关重要。系统管理员可以使用这些工具准备磁盘用于特定用途，创建用于数据存储的文件系统，或格式化可移动存储介质。
- en: In summary, this chapter served as a comprehensive guide to effective file management
    and storage optimization in Linux. By incorporating the steps of creating a partition,
    utilizing tools such as `fdisk`, `lsblk`, `df`, and `du`, displaying package space
    with `dpkg` and `rpm`, and employing disk formatting commands such as `mkfs`,
    `mke2fs`, and `fdformat`, system administrators can efficiently manage their files
    and storage resources. This enables them to enhance storage utilization, ensure
    data integrity, and maintain an organized and optimized system environment.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，本章是关于Linux中有效文件管理和存储优化的全面指南。通过创建分区、使用`fdisk`、`lsblk`、`df`和`du`等工具、展示`dpkg`和`rpm`的包空间，并采用`mkfs`、`mke2fs`和`fdformat`等磁盘格式化命令，系统管理员可以高效地管理文件和存储资源。这能帮助他们提升存储利用率，确保数据完整性，并保持系统环境的有序和优化。
- en: In the next chapter, we will thoroughly explore and discuss important commands
    such as `chmod`, `chown`, `chgrp`, `umask`, and `sudo`. These commands play a
    critical role in granting and managing file permissions, modifying ownership and
    group settings, setting default file permissions, and executing commands with
    administrative privileges.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将深入探讨并讨论一些重要的命令，如`chmod`、`chown`、`chgrp`、`umask`和`sudo`。这些命令在授予和管理文件权限、修改所有权和组设置、设置默认文件权限以及以管理员权限执行命令方面起着至关重要的作用。
