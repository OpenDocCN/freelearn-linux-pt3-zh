- en: 5\. Allocating Windows Disk Partitions to CentOS 8
  prefs: []
  type: TYPE_NORMAL
- en: In the previous chapter we looked at how to install CentOS 8 on the same disk
    as Windows. This so called “dual boot” configuration allows the user to have both
    operating systems installed on a single disk drive with the option to boot one
    or the other when the system is powered on.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter is intended for users who have decided they like CentOS 8 enough
    to delete Windows entirely from the disk, and use the resulting space for Linux.
    In the following sections we will work through this process step by step.
  prefs: []
  type: TYPE_NORMAL
- en: 5.1 Unmounting the Windows Partition
  prefs: []
  type: TYPE_NORMAL
- en: 'If the steps in the [“Dual Booting CentOS 8 with Windows”](../Text/Installation_Dual_Boot.xhtml#_idTextAnchor046)
    chapter were followed to mount the Windows partition from within CentOS 8, steps
    should be taken to unmount the partition before continuing with this chapter.
    Assuming that the Windows partition was mounted as /mnt/windows, it can be unmounted
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: umount /mnt/windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The /etc/fstab file should also be edited to remove the /mnt/windows auto-mount
    if it was previously added.
  prefs: []
  type: TYPE_NORMAL
- en: 5.2 Deleting the Windows Partitions from the Disk
  prefs: []
  type: TYPE_NORMAL
- en: The first step in freeing up the Windows partition for use by CentOS is to delete
    that partition. Before doing so, however, it is imperative that any data you need
    to keep is backed up from both the Windows and CentOS partitions. Having done
    that, it is safe to proceed with this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to remove the Windows partitions we first need to identify the disk
    on which they reside using the fdisk tool:'
  prefs: []
  type: TYPE_NORMAL
- en: fdisk -l
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Disk /dev/sda: 50 GiB, 53687091200 bytes, 104857600 sectors'
  prefs: []
  type: TYPE_NORMAL
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disklabel type: dos'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk identifier: 0xe3673009'
  prefs: []
  type: TYPE_NORMAL
- en: Device Boot Start End Sectors Size Id Type
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda1 * 2048 1126399 1124352 549M 7 HPFS/NTFS/exFAT
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda2 1126400 53655551 52529152 25G 7 HPFS/NTFS/exFAT
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda3 53655552 55752703 2097152 1G 83 Linux
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda4 55752704 104857599 49104896 23.4G 5 Extended
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda5 55754752 104857599 49102848 23.4G 8e Linux LVM
  prefs: []
  type: TYPE_NORMAL
- en: In the above example output the system contains one physical disk drive referenced
    by device name /dev/sda. On that disk drive are five partitions accessed via the
    device names /dev/sda1 through /dev/sda5 respectively. Based on the values in
    the System column, there are two NTFS partitions. The first is the Windows system
    partition while the second, much larger, NTFS partition is the Windows boot partition
    containing the Windows operating system and user data.
  prefs: []
  type: TYPE_NORMAL
- en: 'To remove the partitions, start the fdisk tool using the device name of the
    disk containing the partition (/dev/sda in this instance) and follow the instructions
    to once again display the partition and sector information:'
  prefs: []
  type: TYPE_NORMAL
- en: fdisk /dev/sda
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to fdisk (util-linux 2.32.1).
  prefs: []
  type: TYPE_NORMAL
- en: Changes will remain in memory only, until you decide to write them.
  prefs: []
  type: TYPE_NORMAL
- en: Be careful before using the write command.
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): p'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk /dev/sda: 50 GiB, 53687091200 bytes, 104857600 sectors'
  prefs: []
  type: TYPE_NORMAL
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disklabel type: dos'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk identifier: 0xe3673009'
  prefs: []
  type: TYPE_NORMAL
- en: Device Boot Start End Sectors Size Id Type
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda1 * 2048 1126399 1124352 549M 7 HPFS/NTFS/exFAT
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda2 1126400 53655551 52529152 25G 7 HPFS/NTFS/exFAT
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda3 53655552 55752703 2097152 1G 83 Linux
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda4 55752704 104857599 49104896 23.4G 5 Extended
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda5 55754752 104857599 49102848 23.4G 8e Linux LVM
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Currently, the Windows system partition is listed as being the bootable partition.
    Since we will be deleting this partition, the Linux boot partition needs to be
    marked as bootable. In the above configuration, this is represented by /dev/sda3\.
    Remaining within the fdisk tool, make this the bootable partition as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): a'
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition number (1,3-5, default 5): 3'
  prefs: []
  type: TYPE_NORMAL
- en: The bootable flag on partition 3 is enabled now.
  prefs: []
  type: TYPE_NORMAL
- en: Before proceeding, make a note of the start and end addresses of the partitions
    we will be deleting (in other words the start of /dev/sda1 and the end of /dev/sda2).
  prefs: []
  type: TYPE_NORMAL
- en: 'At the command prompt, delete the Windows partitions (these being partitions
    1 and 2 on our example system):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): d'
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition number (1-5, default 5): 1'
  prefs: []
  type: TYPE_NORMAL
- en: Partition 1 has been deleted.
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): d'
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition number (2-5, default 5): 2'
  prefs: []
  type: TYPE_NORMAL
- en: Partition 2 has been deleted.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now that we have deleted the Windows partitions we need to create the new CentOS
    partition in the vacated disk space. The partition number must match the number
    of the partition removed (in this case 1) and is going to be a primary partition.
    It will also be necessary to enter the Start and End sectors of the partition
    exactly as reported for the old partition (fdisk will typically offer the correct
    values by default, though it is wise to double check). If you are prompted to
    remove the NTFS signature, enter Y:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): n'
  prefs: []
  type: TYPE_NORMAL
- en: Partition type
  prefs: []
  type: TYPE_NORMAL
- en: p primary (1 primary, 1 extended, 2 free)
  prefs: []
  type: TYPE_NORMAL
- en: l logical (numbered from 5)
  prefs: []
  type: TYPE_NORMAL
- en: 'Select (default p): p'
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition number (1,2, default 1): 1'
  prefs: []
  type: TYPE_NORMAL
- en: 'First sector (2048-104857599, default 2048):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Last sector, +sectors or +size{K,M,G,T,P} (2048-53655551, default 53655551):'
  prefs: []
  type: TYPE_NORMAL
- en: Created a new partition 1 of type 'Linux' and of size 25.6 GiB.
  prefs: []
  type: TYPE_NORMAL
- en: 'Partition #1 contains a ntfs signature.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Do you want to remove the signature? [Y]es/[N]o: y'
  prefs: []
  type: TYPE_NORMAL
- en: The signature will be removed by a write command.
  prefs: []
  type: TYPE_NORMAL
- en: 'Having made these changes the next step is to check that the settings are correct
    (taking this opportunity to double check that the Linux boot partition is bootable):'
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): p'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk /dev/sda: 50 GiB, 53687091200 bytes, 104857600 sectors'
  prefs: []
  type: TYPE_NORMAL
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disklabel type: dos'
  prefs: []
  type: TYPE_NORMAL
- en: 'Disk identifier: 0xe3673009'
  prefs: []
  type: TYPE_NORMAL
- en: Device Boot Start End Sectors Size Id Type
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda1 2048 53655551 53653504 25.6G 83 Linux
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda3 * 53655552 55752703 2097152 1G 83 Linux
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda4 55752704 104857599 49104896 23.4G 5 Extended
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda5 55754752 104857599 49102848 23.4G 8e Linux LVM
  prefs: []
  type: TYPE_NORMAL
- en: Filesystem/RAID signature on partition 1 will be wiped.
  prefs: []
  type: TYPE_NORMAL
- en: 'To commit the changes we now need to write the new partition information to
    disk and quit from the fdisk tool:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Command (m for help): w'
  prefs: []
  type: TYPE_NORMAL
- en: The partition table has been altered.
  prefs: []
  type: TYPE_NORMAL
- en: Syncing disks.
  prefs: []
  type: TYPE_NORMAL
- en: 5.3 Formatting the Unallocated Disk Partition
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to make the new partition suitable for use by CentOS 8, it needs to
    have a file system created on it. The default file system type for the current
    release of CentOS is XFS and will be covered in greater detail in the chapter
    entitled [“Adding a New Disk Drive to a CentOS 8 System”](../Text/Adding_New_DIsk.xhtml#_idTextAnchor363).
    Creation of the file system is performed using the mkfs.xfs command as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: mkfs.xfs -f /dev/sda1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: meta-data=/dev/sda1 isize=512 agcount=4, agsize=1676672 blks
  prefs: []
  type: TYPE_NORMAL
- en: = sectsz=512 attr=2, projid32bit=1
  prefs: []
  type: TYPE_NORMAL
- en: = crc=1 finobt=1, sparse=1, rmapbt=0
  prefs: []
  type: TYPE_NORMAL
- en: = reflink=1
  prefs: []
  type: TYPE_NORMAL
- en: data = bsize=4096 blocks=6706688, imaxpct=25
  prefs: []
  type: TYPE_NORMAL
- en: = sunit=0 swidth=0 blks
  prefs: []
  type: TYPE_NORMAL
- en: naming =version 2 bsize=4096 ascii-ci=0, ftype=1
  prefs: []
  type: TYPE_NORMAL
- en: log =internal log bsize=4096 blocks=3274, version=2
  prefs: []
  type: TYPE_NORMAL
- en: = sectsz=512 sunit=0 blks, lazy-count=1
  prefs: []
  type: TYPE_NORMAL
- en: realtime =none extsz=4096 blocks=0, rtextents=0
  prefs: []
  type: TYPE_NORMAL
- en: 5.4 Mounting the New Partition
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we need to mount the new partition. In this example we will mount it
    in a directory named /data. You are free, however, to mount the new partition
    using any valid mount point you desire or to use it as part of a logical volume
    (details of which are covered in the chapter entitled [“Adding a New Disk to a
    CentOS 8 Volume Group and Logical Volume”](../Text/Volume_Groups.xhtml#_idTextAnchor375)).
    First we need to create the directory to act as the mount point:'
  prefs: []
  type: TYPE_NORMAL
- en: mkdir /data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Secondly, we need to edit the mount table in /etc/fstab so that the partition
    is automatically mounted each time the system starts. At the bottom of the /etc/fstab
    file, add the following line to mount the new partition (modifying the /dev/sda1
    device to match your environment):'
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda1 /data xfs defaults 0 0
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we can manually mount the new partition (note that on subsequent reboots
    this will not be necessary as the partition will automount as a result of the
    setting we added to the /etc/fstab file above).
  prefs: []
  type: TYPE_NORMAL
- en: mount /data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To check the partition, run the following command to display the available
    space:'
  prefs: []
  type: TYPE_NORMAL
- en: df -h /data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Filesystem Size Used Avail Use% Mounted on
  prefs: []
  type: TYPE_NORMAL
- en: /dev/sda1 26G 215M 26G 1% /data
  prefs: []
  type: TYPE_NORMAL
- en: 5.5 Editing the Boot Menu
  prefs: []
  type: TYPE_NORMAL
- en: 'The next step is to modify the CentOS boot menu. Since this was originally
    a dual boot system, the menu is configured to provide the option of booting either
    Windows or CentOS. Now that the Windows partition is gone, we need to remove this
    boot option. Start by editing the /etc/grub.d/40_custom file and removing the
    Windows menu entry:'
  prefs: []
  type: TYPE_NORMAL
- en: '#!/bin/sh'
  prefs: []
  type: TYPE_NORMAL
- en: exec tail -n +3 $0
  prefs: []
  type: TYPE_NORMAL
- en: This file provides an easy way to add custom menu entries. Simply type the
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: menu entries you want to add after this comment. Be careful not to change
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: the 'exec tail' line above.
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: menuentry "Windows 10" {
  prefs: []
  type: TYPE_NORMAL
- en: set root=(hd0,1)
  prefs: []
  type: TYPE_NORMAL
- en: chainloader +1
  prefs: []
  type: TYPE_NORMAL
- en: '}'
  prefs: []
  type: TYPE_NORMAL
- en: 'Save the file and use the grub2-mkconfig tool to generate the /boot/grub2/grub.cfg
    file as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: grub2-mkconfig --output=/boot/grub2/grub.cfg
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Generating grub configuration file ...
  prefs: []
  type: TYPE_NORMAL
- en: done
  prefs: []
  type: TYPE_NORMAL
- en: Next time the system restarts, the Windows 10 option will no longer be provided
    by the boot menu.
  prefs: []
  type: TYPE_NORMAL
- en: 5.6 Summary
  prefs: []
  type: TYPE_NORMAL
- en: The Windows partitions in a dual boot configuration can be removed at any time
    to free up space for a CentOS system by identifying which partitions belong to
    Windows and then deleting them using the fdisk tool. Once deleted, the unallocated
    space can be used to create a new filesystem and mounted to make it available
    to the CentOS system. The final task is to remove the Windows option from the
    boot menu configuration.
  prefs: []
  type: TYPE_NORMAL
