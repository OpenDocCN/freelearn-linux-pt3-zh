["```\nsudo systemctl edit apache2\n```", "```\n. . .\n. . .\n[Install]\nWantedBy=multi-user.target\nAlias=sshd.service\n```", "```\n[Install]\nAlias=httpd.service\n```", "```\ndonnie@ubuntu20-04:/etc/systemd/system$ ls -l\ntotal 104\ndrwxr-xr-x 2 root root 4096 Apr  5 16:55 apache2.service.d\n. . .\n. . .\n```", "```\ndonnie@ubuntu20-04:/etc/systemd/system/apache2.service.d$ ls -l\ntotal 4\n-rw-r--r-- 1 root root 30 Apr  5 16:55 override.conf\ndonnie@ubuntu20-04:/etc/systemd/system/apache2.service.d$\n```", "```\n[Install]\nAlias=httpd.service\n```", "```\ndonnie@ubuntu20-04:~$ sudo systemctl daemon-reload\n[sudo] password for donnie: \ndonnie@ubuntu20-04:~$\n```", "```\ndonnie@ubuntu20-04:/etc/systemd/system$ sudo systemctl disable apache2\nSynchronizing state of apache2.service with SysV service script with /lib/systemd/systemd-sysv-install.\nExecuting: /lib/systemd/systemd-sysv-install disable apache2\nRemoved /etc/systemd/system/multi-user.target.wants/apache2.service.\ndonnie@ubuntu20-04:/etc/systemd/system$\n```", "```\ndonnie@ubuntu20-04:/etc/systemd/system$ sudo systemctl enable apache2\nSynchronizing state of apache2.service with SysV service script with /lib/systemd/systemd-sysv-install.\nExecuting: /lib/systemd/systemd-sysv-install enable apache2\nCreated symlink /etc/systemd/system/httpd.service → /lib/systemd/system/apache2.service.\nCreated symlink /etc/systemd/system/multi-user.target.wants/apache2.service → /lib/systemd/system/apache2.service.\ndonnie@ubuntu20-04:/etc/systemd/system$\n```", "```\ndonnie@ubuntu20-04:/etc/systemd/system$ ls -l httpd.service \nlrwxrwxrwx 1 root root 35 Apr  5 17:39 httpd.service -> /lib/systemd/system/apache2.service\ndonnie@ubuntu20-04:/etc/systemd/system$\n```", "```\ndonnie@ubuntu20-04:~$ systemctl status httpd\n• apache2.service - The Apache HTTP Server\n     Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)\n    Drop-In: /etc/systemd/system/apache2.service.d\n             └─override.conf\n     Active: active (running) since Mon 2021-04-05 17:19:08 UTC; 34min ago\n. . .\n. . .\n```", "```\ndonnie@ubuntu20-04:~$ systemctl cat apache2\n# /lib/systemd/system/apache2.service\n[Unit]\nDescription=The Apache HTTP Server\n. . .\n. . .\n[Install]\nWantedBy=multi-user.target\n# /etc/systemd/system/apache2.service.d/override.conf\n[Install]\nAlias=httpd.service\ndonnie@ubuntu20-04:~$\n```", "```\ndonnie@ubuntu20-04:~$ systemd-analyze security\nUNIT                                  EXPOSURE PREDICATE HAPPY\naccounts-daemon.service                    9.6 UNSAFE  😨    \napache2.service                            9.2 UNSAFE  😨    \napport.service                             9.6 UNSAFE  😨    \n. . .\n. . .      🙂    \nsystemd-udevd.service                      8.4 EXPOSED 🙁    \nthermald.service                           9.6 UNSAFE  😨    \nunattended-upgrades.service                9.6 UNSAFE  😨    \nuser@1000.service                          9.4 UNSAFE  😨    \nuuidd.service                              4.5 OK      🙂    \nvgauth.service                             9.5 UNSAFE  😨    \ndonnie@ubuntu20-04:~$\n```", "```\ndonnie@ubuntu20-04:~$ systemd-analyze security apache2\n  NAME                                                        DESCRIPTION                                                             EXPOSURE\n✗ PrivateNetwork=                                             Service has access to the host's network                                     0.5\n✗ User=/DynamicUser=                                          Service runs as root user                                                    0.4\n✗ CapabilityBoundingSet=~CAP_SET(UID|GID|PCAP)                Service may change UID/GID identities/capabilities                           0.3\n✗ CapabilityBoundingSet=~CAP_SYS_ADMIN                        Service has administrator privileges                                         0.3\n✗ CapabilityBoundingSet=~CAP_SYS_PTRACE                       Service has ptrace() debugging abilities                                     0.3\n. . .\n. . .\n```", "```\n. . .\n. . .\n✓ PrivateMounts=                                              Service cannot install system mounts                                            \n✓ PrivateTmp=                                                 Service has no access to other software's temporary files                       \n✗ PrivateUsers=                                               Service has access to other users                                            0.2\n✗ ProtectClock=                                               Service may write to the hardware clock or system clock                      0.2\n✗ ProtectControlGroups=                                       Service may modify the control group file system                             0.2\n✗ ProtectHome=                                                Service has full access to home directories                                  0.2\n. . .\n. . .\n✗ ProtectSystem=                                              Service has full access to the OS file hierarchy                             0.2\n. . .\n. . .\n```", "```\ndonnie@ubuntu20-04:/etc/apache2$ ps aux | grep apache\nroot        2290  0.0  0.2   6520  4480 ?        Ss   18:40   0:00 /usr/sbin/apache2 -k start\nwww-data    2291  0.0  0.2 752656  4344 ?        Sl   18:40   0:00 /usr/sbin/apache2 -k start\nwww-data    2292  0.0  0.2 752656  4344 ?        Sl   18:40   0:00 /usr/sbin/apache2 -k start\ndonnie      2554  0.0  0.0   6432   724 pts/0    S+   19:55   0:00 grep --color=auto apache\ndonnie@ubuntu20-04:/etc/apache2$\n```", "```\ndonnie@ubuntu20-04:/etc/apache2$ grep -r 'USER' *\napache2.conf:User ${APACHE_RUN_USER}\nenvvars:export APACHE_RUN_USER=www-data\ndonnie@ubuntu20-04:/etc/apache2$\n```", "```\n[Service]\nProtectHome=yes\nProtectSystem=strict\n[Install]\nAlias=httpd.service\n```", "```\ndonnie@ubuntu20-04:~$ sudo systemctl daemon-reload\ndonnie@ubuntu20-04:~$ sudo systemctl restart apache2\nJob for apache2.service failed because the control process exited with error code.\nSee \"systemctl status apache2.service\" and \"journalctl -xe\" for details.\ndonnie@ubuntu20-04:~$\n```", "```\ndonnie@ubuntu20-04:~$ sudo systemctl status apache2\n. . .\n. . .\nApr 10 21:52:20 ubuntu20-04 apachectl[3848]: (30)Read-only file system: AH00091: apache2: could not open error log file /var/log/apache2/error.log.\nApr 10 21:52:20 ubuntu20-04 apachectl[3848]: AH00015: Unable to open logs\nApr 10 21:52:20 ubuntu20-04 apachectl[3836]: Action 'start' failed.\nApr 10 21:52:20 ubuntu20-04 apachectl[3836]: The Apache error log may have more information.\n. . .\n. . .\ndonnie@ubuntu20-04:~$\n```", "```\n[Service]\nProtectHome=yes\nProtectSystem=full  \n[Install]\nAlias=httpd.service\n```", "```\ndonnie@ubuntu20-04:~$ sudo systemctl daemon-reload\ndonnie@ubuntu20-04:~$ sudo systemctl restart apache2\ndonnie@ubuntu20-04:~$\n```", "```\ndonnie@ubuntu20-04:~$ sudo systemctl status apache2\n● apache2.service - The Apache HTTP Server\n     Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)\n    Drop-In: /etc/systemd/system/apache2.service.d\n             └─override.conf\n     Active: active (running) since Sat 2021-04-10 21:58:22 UTC; 4s ago\n. . .\n. . .\n```", "```\n[Service]\nProtectHome=yes\nProtectSystem=full\nPrivateDevices=yes\nProtectKernelTunables=yes\nProtectKernelModules=yes\nProtectControlGroups=yes\nSystemCallFilter=@system-service\nSystemCallErrorNumber=EPERM\nNoNewPrivileges=yes\n```", "```\ndonnie@ubuntu20-04:~$ sudo systemctl edit --full ssh.service\n```", "```\nIPAddressAllow=192.168.0.222\nIPAddressDeny=any\n```", "```\ndonnie@ubuntu20-04:~$ cd /etc/systemd/system/\ndonnie@ubuntu20-04:/etc/systemd/system$ ls -l ssh.service \n-rw-r--r-- 1 root root 586 Apr 11 20:07 ssh.service\ndonnie@ubuntu20-04:/etc/systemd/system$\n```", "```\ndonnie@ubuntu20-04:~$ sudo systemctl edit --force --full timestamp.service\n```", "```\n[Unit]\nDescription=Service Creation Demo\nWants=network.target\nAfter=syslog.target network-online.target\n[Service]\nExecStart=/usr/local/bin/timestamp.sh\nRestart=on-failure\nRestartSec=20\nKillMode=process\n[Install]\nWantedBy=multi-user.target\n```", "```\n#!/bin/bash\necho \"Starting the timestamp service\" | systemd-cat -p info\nwhile :\ndo\n        echo \"timestamp.service: The current time is $(date '+%m-%d-%Y %H:%M:%S')\" | systemd-cat -p info\n        sleep 60\ndone\n```", "```\ndonnie@ubuntu20-04:~$ chmod u+x timestamp.sh \ndonnie@ubuntu20-04:~$ sudo cp timestamp.sh /usr/local/bin\ndonnie@ubuntu20-04:~$ sudo systemctl start timestamp\ndonnie@ubuntu20-04:~$\n```", "```\ndonnie@ubuntu20-04:~$ systemctl status timestamp\n● timestamp.service - Service Creation Demo\n     Loaded: loaded (/etc/systemd/system/timestamp.service; disabled; vendor preset: enabled)\n     Active: active (running) since Sun 2021-04-11 21:57:26 UTC; 13min ago\n   Main PID: 14293 (timestamp.sh)\n      Tasks: 2 (limit: 2281)\n     Memory: 820.0K\n     CGroup: /system.slice/timestamp.service\n             ├─14293 /bin/bash /usr/local/bin/timestamp.sh\n             └─14411 sleep 60\nApr 11 22:00:26 ubuntu20-04 cat[14335]: timestamp.service: The current time is 04-11-2021 22:00:26\n. . .\n. . .\n```", "```\n[donnie@localhost ~]$ sudo EDITOR=vim systemctl edit --full sshd\n[donnie@localhost ~]$\n```", "```\nexport SYSTEMD_EDITOR=vim\n```", "```\n[donnie@localhost ~]$ source .bashrc\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo visudo\n```", "```\nDefaults   env_keep += \"SYSTEMD_EDITOR\"\n```", "```\n[donnie@localhost ~]$ sudo dnf install podman-docker\n```", "```\n[donnie@localhost ~]$ sudo podman run -d -p 8080:80 --name wordpress wordpress\n```", "```\n[donnie@localhost ~]$ sudo podman ps\nCONTAINER ID  IMAGE                               COMMAND               CREATED        STATUS            PORTS                 NAMES\ncc06c35f21ce  docker.io/library/wordpress:latest  apache2-foregroun...  2 minutes ago  Up 2 minutes ago  0.0.0.0:8080->80/tcp  wordpress\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo firewall-cmd --permanent --add-port=8080/tcp\nsuccess\n[donnie@localhost ~]$ sudo firewall-cmd --reload\nsuccess\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ sudo podman generate systemd wordpress | sudo tee /etc/systemd/system/wordpress-container.service\n```", "```\n[donnie@localhost ~]$ sudo systemctl daemon-reload\n[donnie@localhost ~]$ sudo systemctl enable wordpress-container\nCreated symlink /etc/systemd/system/multi-user.target.wants/wordpress-container.service → /etc/systemd/system/wordpress-container.service.\nCreated symlink /etc/systemd/system/default.target.wants/wordpress-container.service → /etc/systemd/system/wordpress-container.service.\n[donnie@localhost ~]$ sudo shutdown -r now\n```", "```\n[donnie@localhost ~]$ sudo podman ps\n[sudo] password for donnie: \nCONTAINER ID  IMAGE                               COMMAND               CREATED         STATUS                 PORTS                  NAMES\ncc06c35f21ce  docker.io/library/wordpress:latest  apache2-foregroun...  12 minutes ago  Up About a minute ago  0.0.0.0:8080->80/tcp  wordpress\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ systemctl status wordpress-container\n● wordpress-container.service - Podman container-cc06c35f21cedd4d2384cf2c048f013748e84cabdc594b110a8c8529173f4c81.service\n   Loaded: loaded (/etc/systemd/system/wordpress-container.service; enabled; vendor preset: disabled)\n   Active: active (running) since Wed 2021-04-14 15:27:37 EDT; 2min 38s ago\n. . .\n. . .\n```", "```\n[donnie@localhost ~]$ podman run -d -p 9080:80 --name wordpress-noroot wordpress\n```", "```\n[donnie@localhost ~]$ podman container stop wordpress-noroot\na6e2117dd4d5148d01a55d64ad8753c03436bfd9a573435e95d927f74 dc48f9e\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ mkdir -p .config/systemd/user/\n[donnie@localhost ~]$\n```", "```\n[donnie@localhost ~]$ podman generate systemd wordpress-noroot > .config/systemd/user/wordpress-noroot.service\n[donnie@localhost ~]$\n```", "```\n. . .\n. . .\n[Install]\nWantedBy=multi-user.target default.target\n```", "```\n[donnie@localhost ~]$ systemctl --user daemon-reload\n[donnie@localhost ~]$ systemctl --user status wordpress-noroot\n● wordpress-noroot.service - Podman container-a6e2117dd4d5148d01a55d64ad8753c03436bfd9a573435e95d927f74dc48f9e.service\n   Loaded: loaded (/home/donnie/.config/systemd/user/wordpress-noroot.service; disabled; vendor preset: enabled)\n   Active: inactive (dead)\n. . .\n. . .\n```", "```\n[donnie@localhost ~]$ systemctl --user enable --now wordpress-noroot\nCreated symlink /home/donnie/.config/systemd/user/multi-user.target.wants/wordpress-noroot.service → /home/donnie/.config/systemd/user/wordpress-noroot.service.\nCreated symlink /home/donnie/.config/systemd/user/default.target.wants/wordpress-noroot.service → /home/donnie/.config/systemd/user/wordpress-noroot.service.\n[donnie@localhost ~]$ systemctl --user status wordpress-noroot\n● wordpress-noroot.service - Podman container-a6e2117dd4d5148d01a55d64ad8753c03436bfd9a573435e95d927f74dc48f9e.service\n   Loaded: loaded (/home/donnie/.config/systemd/user/wordpress-noroot.service; enabled; vendor preset: enabled)\n   Active: active (running) since Wed 2021-04-14 15:44:26 EDT; 12s ago\n. . .\n. . .\n```", "```\n[donnie@localhost ~]$ loginctl enable-linger donnie\n[donnie@localhost ~]$\n```"]