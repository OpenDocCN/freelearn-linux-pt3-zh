["```\n$ echo $FOOBAR\nnice \n```", "```\n#!/usr/bin/env bash \n```", "```\n#!/usr/bin/env bash -euxo pipefail \n```", "```\n#!/usr/bin/env bash\nset -eu -o pipefail \n```", "```\n$ FOO=\"jaa\\$\\'\" \n```", "```\necho \"Right now, it's $(date)\" \n```", "```\necho \"Right now, it's `date`\" \n```", "```\nif [[ ! -d $HOME ]]; then\n    echo \"Creating home directory: ${HOME}...\"\n    mkdir -p $HOME\n    echo \"done\"\nfi \n```", "```\nALWAYSCREATE=yes\nif ! [[ -d $HOME ]] || [[ $ALWAYSCREATE == yes ]]; then\n    echo \"Creating home directory: ${HOME}...\"\n    mkdir -p $HOME\n    echo \"done\"\nfi \n```", "```\n→ SOME_NUMBER=24\n→ (( $SOME_NUMBER == 24 ))\n→ echo $?\n0 \n```", "```\n→ SOME_NUMBER=foobar\n→ (( $SOME_NUMBER == 24 ))\n→ echo $?\n1 \n```", "```\n→ unset SOME_NUMBER\n→ (( $SOME_NUMBER == 24 ))\nzsh: bad math expression: operand expected at `== 24 ' \n```", "```\nif [[ -e \"example.txt\" ]]; then\n    echo \"The file exists!\" \n```", "```\nif [[ -e \"example.txt\" ]]; then\n    echo \"The file exists!\"\nelse\n    echo \"The file does not exist!\"\nfi \n```", "```\nfor (( i=0; i<=9; i++ ))\ndo  \n  echo \"Loop var i is currently $i\"\ndone \n```", "```\nfor i in 1 2 3 4 5\ndo\n  echo $i\ndone \n```", "```\nfor os in FreeBSD Linux NetBSD \"macOS\" DragonflyBSD\ndo\n  echo \"Checking out ${os}...\"\n  if [[ \"$os\" == 'NetBSD' ]]; then\n    echo \"(I'm pretty sure this would run on my toaster, actually)\"\n  fi\n  sleep 1\ndone \n```", "```\nfile=\"lines.txt\"\nwhile read line; do\n    if [[ $line == \"STOP\" ]]; then\n        echo \"Encountered STOP. Exiting loop.\"\n        break\n    fi\n    echo \"Processing: $line\"\n    # Additional commands to process $line can be added here.\ndone < \"$file\" \n```", "```\nMYDIR=$HOME \n```", "```\n#!/usr/bin/env bash\nLISTING=$(ls \"${MYDIR}/Documents\")\necho $LISTING \n```", "```\nexport MYDIR=$HOME \n```", "```\nfunction my_great_function {\n  $EXPRESSIONS\n} \n```", "```\nmy_great_function \n```", "```\n#!/usr/bin/env bash\nimportant_var=somevalue\nfunction local_var_example() {\n    local important_var=\"changed this locally, don't worry\"\n    echo \"local_var_example: ${important_var}\"\n}\nfunction bad_example() {\n    important_var=\"this is mutating the global var because I'm bad, and I should feel bad.\"\n    echo \"bad_example: ${important_var}\"\n}\necho \"before functions: ${important_var}\"\nlocal_var_example\necho\necho \"after local_var_example: ${important_var}\"\necho\nbad_example\necho \"after bad_example: ${important_var}\"\nexit 0 \n```", "```\ngrep foobar < stuff.txt \n```", "```\nps aux | grep foo > /var/log/foo_overwrite.log \n```", "```\necho $(date && cat /proc/stat) >> /var/log/kernelstate.log \n```", "```\nconsul agent -dev >> /var/log/consul.log 2>&1 & \n```", "```\nMYNAME=dave\necho \"I can't do that, ${MYNAME}.\" \n```", "```\nNAME=\"${MYNAME}\" \n```"]