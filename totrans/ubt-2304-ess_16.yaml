- en: 17\. Configuring SSH Key-based Authentication on Ubuntu 23.04
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 17. 配置 Ubuntu 23.04 上的 SSH 密钥身份验证
- en: When an Ubuntu system is first installed, it is configured by default to allow
    remote command-line access via Secure Shell (SSH) connections. SSH provides password-protected
    and encrypted access to the system for the root account and any other users added
    during the installation phase. However, this level of security is inadequate and
    should be upgraded to SSH key-based authentication as soon as possible.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当首次安装 Ubuntu 系统时，默认配置允许通过安全外壳（SSH）连接进行远程命令行访问。SSH 提供了对系统的密码保护和加密访问，适用于 root
    账户以及安装过程中添加的其他用户。然而，这种安全级别不够，应该尽快升级为基于 SSH 密钥的身份验证。
- en: This chapter will outline the steps to increase the security of an Ubuntu system
    by implementing key-based SSH authentication.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将概述通过实施基于密钥的 SSH 身份验证来提高 Ubuntu 系统安全性的步骤。
- en: 17.1 An Overview of Secure Shell (SSH)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 17.1 安全外壳（SSH）概述
- en: SSH allows secure remote access to systems to gain shell access and transfer
    files and data. A basic SSH configuration consists of a client (used on the computer
    establishing the connection) and a server (running on the system to which the
    connection is to be established). A user might, for example, use an SSH client
    running on a Linux, Windows, or macOS system to connect to the SSH server running
    on an Ubuntu system to gain access to a shell command-line prompt or to perform
    file transfers. All communications between the client and server, including the
    password entered to gain access, are encrypted to prevent outside parties from
    intercepting the data.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: SSH 允许安全地远程访问系统，获得 shell 访问权限并进行文件和数据传输。基本的 SSH 配置由客户端（用于建立连接的计算机）和服务器（运行在要建立连接的系统上）组成。例如，用户可能会使用在
    Linux、Windows 或 macOS 系统上运行的 SSH 客户端连接到在 Ubuntu 系统上运行的 SSH 服务器，以获得 shell 命令行提示符或执行文件传输。客户端和服务器之间的所有通信，包括输入的密码，都进行了加密，以防止外部方拦截数据。
- en: The inherent weakness in a basic SSH implementation is that it depends entirely
    on the strength of the passwords assigned to the accounts on the system. If a
    malicious party is able to identify the password for an account (either through
    guesswork, deception, or a brute force attack), the system becomes vulnerable.
    This weakness can be addressed by implementing SSH key-based authentication.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 基本的 SSH 实现存在的固有弱点是，它完全依赖于分配给系统帐户的密码的强度。如果恶意方能够识别某个帐户的密码（无论是通过猜测、欺骗还是暴力破解攻击），系统就会变得脆弱。这一弱点可以通过实施基于
    SSH 密钥的身份验证来解决。
- en: 17.2 SSH Key-based Authentication
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 17.2 SSH 密钥身份验证
- en: SSH key-based authentication uses asymmetric public key encryption to add an
    extra layer of security to remote system access. The concept of public key encryption
    was devised in 1975 by Whitfield Diffie and Martin Hellman and is based on using
    a pair of private and public keys.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: SSH 基于密钥的身份验证使用非对称公钥加密，为远程系统访问增加了额外的安全层。公钥加密的概念由 Whitfield Diffie 和 Martin Hellman
    于 1975 年提出，基于使用一对私钥和公钥。
- en: In a public key encryption system, the public key is used to encrypt data that
    can only be decrypted by the owner of the private key.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在公钥加密系统中，公钥用于加密数据，只有私钥的拥有者才能解密数据。
- en: In the case of SSH key-based authentication, the host holds the private key
    on which the SSH client is located, while the corresponding public key resides
    on the system on which the SSH server is running. Therefore, it is vital to protect
    the private key since ownership of the key will allow anyone to log into the remote
    system. As an added layer of protection, the private key may also be encrypted
    and protected by a password which must be entered each time a connection is established
    to the server.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SSH 密钥身份验证的情况下，主机保留私钥，而 SSH 客户端位于该主机上，公钥则保存在运行 SSH 服务器的系统上。因此，保护私钥至关重要，因为私钥的拥有者可以登录远程系统。作为额外的保护措施，私钥还可以加密并用密码保护，每次建立与服务器的连接时都必须输入该密码。
- en: 17.3 Setting Up Key-based Authentication
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 17.3 设置基于密钥的身份验证
- en: 'There are four steps to setting up key-based SSH authentication, which can
    be summarized as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 设置基于密钥的 SSH 身份验证有四个步骤，概括如下：
- en: 1\. Generate the public and private keys.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 1. 生成公钥和私钥。
- en: 2\. Install the public key on the server.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 2. 在服务器上安装公钥。
- en: 3\. Test authentication.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 3. 测试身份验证。
- en: 4\. Disable password-based authentication on the server.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 4. 禁用服务器上的基于密码的身份验证。
- en: The remainder of this chapter will outline these steps in greater detail for
    Linux, macOS, and Windows-based client operating systems.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的其余部分将详细介绍适用于 Linux、macOS 和 Windows 客户端操作系统的这些步骤。
- en: 17.4 Installing and Starting the SSH Service
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 17.4 安装和启动 SSH 服务
- en: 'If the SSH server is not already installed and running on the system, it can
    be added using the following commands:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果系统上尚未安装并运行 SSH 服务器，可以使用以下命令进行安装：
- en: apt install openssh-server
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: apt install openssh-server
- en: systemctl start ssh.service
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl start ssh.service
- en: systemctl enable ssh.service
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl enable ssh.service
- en: 17.5 SSH Key-based Authentication from Linux and macOS Clients
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 17.5 基于 SSH 密钥的身份验证（适用于 Linux 和 macOS 客户端）
- en: 'The first step in setting up SSH key-based authentication is to generate the
    key pairs on the client system. If the client system is running Linux or macOS,
    this is achieved using the ssh-keygen utility:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 设置基于 SSH 密钥的身份验证的第一步是生成客户端系统上的密钥对。如果客户端系统运行的是 Linux 或 macOS，可以使用 ssh-keygen
    工具来实现：
- en: ssh-keygen
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ssh-keygen
- en: 'This command will result in output similar to the following:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令将输出类似以下内容：
- en: Generating public/private rsa key pair.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 正在生成公钥/私钥 RSA 密钥对。
- en: 'Enter file in which to save the key (/home/<username>/.ssh/id_rsa):'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 输入要保存密钥的文件（/home/<username>/.ssh/id_rsa）：
- en: Press the Enter key to accept the default location for the key files. This will
    place two files in the .ssh sub-directory of the current user’s home directory.
    The private key will be stored in a file named id_rsa while the public key will
    reside in the file named id_rsa.pub.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 按下回车键接受密钥文件的默认位置。这会将两个文件放入当前用户主目录下的 .ssh 子目录。私钥将存储在名为 id_rsa 的文件中，而公钥将存储在名为
    id_rsa.pub 的文件中。
- en: Next, ssh-keygen will prompt for a passphrase with which to protect the private
    key. If a passphrase is provided, the private key will be encrypted on the local
    disk, and the passphrase will be required to access the remote system. Therefore,
    for better security, the use of a passphrase is recommended.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，ssh-keygen 会提示输入保护私钥的密码短语。如果提供了密码短语，私钥将在本地磁盘上加密，并且需要密码短语才能访问远程系统。因此，为了更好的安全性，建议使用密码短语。
- en: 'Enter passphrase (empty for no passphrase):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 输入密码短语（为空表示不使用密码短语）：
- en: 'Finally, the ssh-keygen tool will generate the following output indicating
    that the keys have been generated:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，ssh-keygen 工具将生成以下输出，指示密钥已成功生成：
- en: Your identification has been saved in /home/neil/.ssh/id_rsa.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 您的身份信息已保存至 /home/neil/.ssh/id_rsa。
- en: Your public key has been saved in /home/neil/.ssh/id_rsa.pub.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您的公钥已保存至 /home/neil/.ssh/id_rsa.pub。
- en: 'The key fingerprint is:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥指纹为：
- en: SHA256:FOLGWEEGFIjWnCT5wtTOv5VK4hdimzWghZizUEMYbfo <username>@<hostname>
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: SHA256:FOLGWEEGFIjWnCT5wtTOv5VK4hdimzWghZizUEMYbfo <username>@<hostname>
- en: 'The key’s randomart image is:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥的随机艺术图像是：
- en: +---[RSA 2048]----+
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: +---[RSA 2048]----+
- en: '|.BB+=+*.. |'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '|.BB+=+*.. |'
- en: '|o+B= * . . |'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '|o+B= * . . |'
- en: '|===.. + . |'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '|===.. + . |'
- en: '|*+ * . . |'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '|*+ * . . |'
- en: '|.++ o S |'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '|.++ o S |'
- en: '|..E+ * o |'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '|..E+ * o |'
- en: '| o B * |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| o B * |'
- en: '| + + |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| + + |'
- en: '| . |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| . |'
- en: +----[SHA256]-----+
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: +----[SHA256]-----+
- en: 'The next step is to install the public key onto the remote server system. This
    can be achieved using the ssh-copy-id utility as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是将公钥安装到远程服务器系统上。可以使用 ssh-copy-id 工具来实现，命令如下：
- en: $ ssh-copy-id username@remote_hostname
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: $ ssh-copy-id username@remote_hostname
- en: 'For example:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: $ ssh-copy-id neil@192.168.1.100
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: $ ssh-copy-id neil@192.168.1.100
- en: '/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/neil/.ssh/id_rsa.pub"'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '/usr/bin/ssh-copy-id: 信息：待安装的密钥来源："/home/neil/.ssh/id_rsa.pub"'
- en: '/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter
    out any that are already installed'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '/usr/bin/ssh-copy-id: 信息：尝试使用新的密钥进行登录，以排除已安装的密钥'
- en: '/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted
    now it is to install the new keys'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '/usr/bin/ssh-copy-id: 信息：剩余 1 个密钥需安装——如果现在有提示，则是安装新密钥'
- en: 'neil@192.168.1.100’s password:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: neil@192.168.1.100 的密码：
- en: 'Number of key(s) added: 1'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 添加的密钥数量：1
- en: 'Now try logging into the machine, with: "ssh ''neil@192.168.1.100''"'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在尝试使用以下命令登录到机器："ssh 'neil@192.168.1.100'"
- en: and check to make sure that only the key(s) you wanted were added.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 并检查确保仅添加了您想要的密钥。
- en: 'Once the key is installed, test that the authentication works by attempting
    a remote login using the ssh client:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦密钥安装完成，测试身份验证是否有效，方法是尝试使用 ssh 客户端进行远程登录：
- en: $ ssh -l <username> <hostname>
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: $ ssh -l <username> <hostname>
- en: 'If the private key is encrypted and protected with a passphrase, enter the
    phrase when prompted to complete the authentication and establish remote access
    to the Ubuntu system:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果私钥已加密并用密码短语保护，请在提示时输入该短语，以完成身份验证并建立对 Ubuntu 系统的远程访问：
- en: 'Enter passphrase for key ''/home/neil/.ssh/id_rsa'':'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 输入密钥 '/home/neil/.ssh/id_rsa' 的密码短语：
- en: 'Last login: Fri Mar 31 14:29:28 2023 from 192.168.86.21'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 上次登录：2023年3月31日 星期五 14:29:28 来自 192.168.86.21
- en: '[neil@demosystem02 ~]$'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '[neil@demosystem02 ~]$'
- en: Repeat these steps for any other accounts on the server for which remote access
    is required. If access is also required from other client systems, copy the id_rsa
    private key file to the .ssh sub-directory of your home folder on the other systems.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对服务器上任何其他需要远程访问的帐户重复这些步骤。如果其他客户端系统也需要访问，请将 id_rsa 私钥文件复制到其他系统上您主目录中的 .ssh 子目录。
- en: 'As currently configured, access to the remote system can still be achieved
    using less secure password authentication. Once you have verified that key-based
    authentication works, password authentication will need to be disabled on the
    system. To understand how to change this setting, begin by opening the /etc/ssh/sshd_config
    file and locating the following line:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 按照当前配置，仍然可以通过较不安全的密码验证访问远程系统。一旦验证了基于密钥的身份验证有效，系统上将需要禁用密码身份验证。要了解如何更改此设置，请首先打开
    /etc/ssh/sshd_config 文件并定位到以下行：
- en: Include /etc/ssh/sshd_config.d/*.conf
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 包含 /etc/ssh/sshd_config.d/*.conf
- en: 'This tells us that sshd configuration settings are controlled by files in the
    /etc/ssh/sshd_config.d directory. These filenames must be prefixed with a number
    and have a .conf filename extension, for example:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这告诉我们，sshd 配置设置由 /etc/ssh/sshd_config.d 目录中的文件控制。这些文件名必须以数字为前缀，并且具有 .conf 文件扩展名，例如：
- en: 01-permitrootlogin.conf
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 01-permitrootlogin.conf
- en: 50-cloud.conf
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 50-cloud.conf
- en: The number prefix designates the priority assigned to the file relative to the
    other files in the folder, with 01 being the highest priority. This ensures that
    if a configuration file contains a setting conflicting with another file, the
    one with the highest priority will always take precedence.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 数字前缀表示该文件相对于文件夹中其他文件的优先级，其中 01 是最高优先级。这确保了如果配置文件中包含与其他文件冲突的设置，优先级最高的文件始终会优先使用。
- en: 'Within the /etc/ssh/sshd_config.d folder, create a new file named 02-nopasswordlogin.conf
    with content that reads as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在 /etc/ssh/sshd_config.d 文件夹内，创建一个名为 02-nopasswordlogin.conf 的新文件，内容如下：
- en: PasswordAuthentication no
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: PasswordAuthentication no
- en: 'Save the file and restart the sshd service to implement the change:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 保存文件并重新启动 sshd 服务以实现更改：
- en: systemctl restart sshd.service
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl restart sshd.service
- en: From this point on, it will only be possible to remotely access the system using
    SSH key-based authentication, and when doing so, you won’t be required to enter
    a password.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 从此以后，只能通过 SSH 密钥身份验证远程访问系统，并且在这样做时，不需要输入密码。
- en: 17.6 Managing Multiple Keys
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 17.6 管理多个密钥
- en: 'It is common for multiple private keys to reside on a client system, each providing
    access to a different server. As a result, several options exist for selecting
    a specific key when establishing a connection. It is possible, for example, to
    specify the private key file to be used when launching the ssh client as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在客户端系统上，通常会存在多个私钥，每个私钥提供对不同服务器的访问。因此，在建立连接时，可以选择特定的密钥，存在几种选择方式。例如，可以在启动 ssh
    客户端时指定要使用的私钥文件，方法如下：
- en: $ ssh -l neilsmyth -i ~/.ssh/id_work 35.194.18.119
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: $ ssh -l neilsmyth -i ~/.ssh/id_work 35.194.18.119
- en: 'Alternatively, the SSH client user configuration file may associate key files
    with servers. The configuration file is named config, must reside in the .ssh
    directory of the user’s home directory, and can be used to configure a wide range
    of options, including the private key file, the default port to use when connecting,
    the default user name, and an abbreviated nickname via which to reference the
    server. The following example config file defines different key files for two
    servers and allows them to be referenced by the nicknames home and work. In the
    case of the work system, the file also specifies the user name to be used when
    authenticating:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，SSH 客户端用户配置文件可以将密钥文件与服务器关联。该配置文件名为 config，必须位于用户主目录的 .ssh 目录中，并可用于配置广泛的选项，包括私钥文件、连接时使用的默认端口、默认用户名，以及用来引用服务器的简写昵称。以下示例配置文件为两个服务器定义了不同的密钥文件，并允许通过
    home 和 work 这两个昵称来引用它们。在 work 系统的情况下，文件还指定了身份验证时要使用的用户名：
- en: Host work
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Host work
- en: HostName 35.194.18.119
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: HostName 35.194.18.119
- en: IdentityFile ~/.ssh/id_work
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: IdentityFile ~/.ssh/id_work
- en: User neilsmyth
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 用户 neilsmyth
- en: Host home
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: Host home
- en: HostName 192.168.0.21
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: HostName 192.168.0.21
- en: IdentityFile ~/.ssh/id_home
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: IdentityFile ~/.ssh/id_home
- en: 'Before setting up the configuration file, the user would have used the following
    command to connect to the work system:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置配置文件之前，用户曾使用以下命令连接到工作系统：
- en: $ ssh -l neilsmyth -i ~/.ssh/id_work 35.194.18.119
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: $ ssh -l neilsmyth -i ~/.ssh/id_work 35.194.18.119
- en: 'Now, however, the command can be shortened as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，现在该命令可以简化如下：
- en: $ ssh work
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: $ ssh work
- en: 'A full listing of configuration file options can be found by running the following
    command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 配置文件选项的完整列表可以通过运行以下命令来查看：
- en: $ man ssh_config
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: $ man ssh_config
- en: 17.7 SSH Key-based Authentication from Windows Clients
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 17.7 基于 SSH 密钥的 Windows 客户端身份验证
- en: Recent releases of Windows include a subset of the OpenSSH implementation used
    by most Linux and macOS systems as part of Windows PowerShell. This allows SSH
    key-based authentication to be set up from a Windows client using similar steps
    to those outlined above for Linux and macOS.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 的最新版本包括一个子集的 OpenSSH 实现，这个实现被大多数 Linux 和 macOS 系统使用，作为 Windows PowerShell
    的一部分。这使得可以从 Windows 客户端设置基于 SSH 密钥的身份验证，使用类似于上述 Linux 和 macOS 的步骤。
- en: 'On Windows, search for Windows PowerShell and select it from the results. Once
    running, the PowerShell window will appear, as shown in [Figure 17-1](SSH_Authentication.xhtml#_idTextAnchor289):'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 上，搜索“Windows PowerShell”并从结果中选择它。启动后，PowerShell 窗口将显示，如 [图 17-1](SSH_Authentication.xhtml#_idTextAnchor289)
    所示：
- en: '![](img/windows_powershell.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/windows_powershell.jpg)'
- en: Figure 17-1
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17-1
- en: 'If you already have a private key from another client system, copy the id_rsa
    file to a folder named .ssh on the Windows system. Once the file is in place,
    test the authentication within the PowerShell window as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你已经有来自另一个客户端系统的私钥，将 id_rsa 文件复制到 Windows 系统上名为 .ssh 的文件夹中。一旦文件就位，在 PowerShell
    窗口中测试身份验证，如下所示：
- en: $ ssh -l <username>@<hostname>
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: $ ssh -l <用户名>@<主机名>
- en: 'For example:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: PS C:\Users\neil> ssh -l neil 192.168.1.101
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: PS C:\Users\neil> ssh -l neil 192.168.1.101
- en: 'Enter passphrase for key ''C:\Users\neil\.ssh\id_rsa'':'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 输入密钥 'C:\Users\neil\.ssh\id_rsa' 的密码短语：
- en: Enter the passphrase when prompted and complete the authentication process.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 输入密码短语并完成身份验证过程。
- en: If the private key does not yet exist, generate a new private and public key
    pair within the PowerShell window using the ssh-keygen utility using the same
    steps outlined for Linux and macOS. Once the keys have been generated, they will
    again be located in the .ssh directory of the current user’s home folder, and
    the public key file id_rsa.pub will need to be installed on the remote Ubuntu
    system. Unfortunately, Windows PowerShell does not include the ssh-copy-id utility,
    so this task must be performed manually.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果私钥尚不存在，可以通过在 PowerShell 窗口中使用 ssh-keygen 工具按照 Linux 和 macOS 中概述的相同步骤生成新的私钥和公钥对。生成密钥后，它们将再次位于当前用户的主文件夹中的
    .ssh 目录下，公钥文件 id_rsa.pub 需要安装到远程 Ubuntu 系统上。不幸的是，Windows PowerShell 并不包含 ssh-copy-id
    工具，因此必须手动执行此任务。
- en: 'Within the PowerShell window, change directory into the .ssh sub-directory
    and display the content of the public key id_rsa.pub file:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在 PowerShell 窗口中，进入 .ssh 子目录并显示公钥 id_rsa.pub 文件的内容：
- en: PS C:\Users\neil> cd .ssh
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: PS C:\Users\neil> cd .ssh
- en: PS C:\Users\neil\.ssh> type id_rsa.pub
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: PS C:\Users\neil\.ssh> type id_rsa.pub
- en: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFgx1vzu59lll6/uQw7FbmKVsQ3fzLz9MW1fgo4sdsxXp81wCHNAlqcjx1Pgr9BJPXWUMInQOi7BQ5I+vc2xQ2AS0kMq3ZH9ybWuQe/U2GjueXZd0FKrEXrT55wM36Rm6Ii3roUCoGCzGR8mn95JvRB3VtCyDdzTWSi8JBpK5gV5oOxNTNPsewlLzouBlCT1qW3CKwEiIwu8S9MTL7m3nrcaNeLewTTHevvHw4QDwzFQ+B0PDg96fzsYoTXVhzyHSWyo6H0gqrft7aK+gILBtEIhWTkSVEMAzy1piKtCr1IYTmVK6engv0aoGtMUq6FnOeGp5FjvKkF4aQkh1QR28r
    neil@DESKTOP-S8P8D3N
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFgx1vzu59lll6/uQw7FbmKVsQ3fzLz9MW1fgo4sdsxXp81wCHNAlqcjx1Pgr9BJPXWUMInQOi7BQ5I+vc2xQ2AS0kMq3ZH9ybWuQe/U2GjueXZd0FKrEXrT55wM36Rm6Ii3roUCoGCzGR8mn95JvRB3VtCyDdzTWSi8JBpK5gV5oOxNTNPsewlLzouBlCT1qW3CKwEiIwu8S9MTL7m3nrcaNeLewTTHevvHw4QDwzFQ+B0PDg96fzsYoTXVhzyHSWyo6H0gqrft7aK+gILBtEIhWTkSVEMAzy1piKtCr1IYTmVK6engv0aoGtMUq6FnOeGp5FjvKkF4aQkh1QR28r
    neil@DESKTOP-S8P8D3N
- en: Highlight the file’s content and copy it using the Ctrl-C keyboard shortcut.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 高亮文件内容并使用 Ctrl-C 键盘快捷键复制它。
- en: 'Remaining within the PowerShell window, log into the remote system using password
    authentication:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 仍然在 PowerShell 窗口中，使用密码验证登录到远程系统：
- en: PS C:\Users\neil\.ssh> ssh -l <username> <hostname>
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: PS C:\Users\neil\.ssh> ssh -l <用户名> <主机名>
- en: 'Once signed in, check if the .ssh sub-directory exists. If it does not, create
    it as follows:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，检查 .ssh 子目录是否存在。如果不存在，可以如下创建：
- en: $ mkdir .ssh
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: $ mkdir .ssh
- en: Change directory into .ssh and check whether a file named authorized_keys already
    exists. If it does not, create it and paste the content of the public key file
    from the Windows system into it.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 进入`.ssh`目录，检查是否已存在名为`authorized_keys`的文件。如果不存在，请创建该文件，并将来自Windows系统的公钥文件内容粘贴到该文件中。
- en: 'If the authorized_keys file already exists, it likely contains other keys.
    If this is the case, edit the file and paste the new public key at the end of
    the file. The following file, for example, contains two keys:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`authorized_keys`文件已经存在，可能包含其他密钥。如果是这种情况，请编辑该文件并将新的公钥粘贴到文件的末尾。例如，以下文件包含两个密钥：
- en: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzRWH27Xs8ZA5rIbZXKgxFY5XXauMv+6F5PljBLJ6j+9nkmykVe3GjZTp3oD+KMRbT2kTEPbDpFD67DNL0eiX2ZuEEiYsxZfGCRCPBGYmQttFRHEAFnlS1Jx/G4W5UNKvhAXWyMwDEKiWvqTVy6syB2Ritoak+D/Sc8nJflQ6dtw0jBs+S7Aim8TPfgpi4p5XJGruXNRScamk68NgnPfTL3vT726EuABCk6C934KARd+/AXa8/5rNOh4ETPstjBRfFJ0tpmsWWhhNEnwJRqS2LD0ug7E3yFI2qsNKGEzvAYUC8Up45MRP7liR3aMlCBil1tsy9R+IB7oMEycZAe/qj
    neil@localhost.localdomain
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCzRWH27Xs8ZA5rIbZXKgxFY5XXauMv+6F5PljBLJ6j+9nkmykVe3GjZTp3oD+KMRbT2kTEPbDpFD67DNL0eiX2ZuEEiYsxZfGCRCPBGYmQttFRHEAFnlS1Jx/G4W5UNKvhAXWyMwDEKiWvqTVy6syB2Ritoak+D/Sc8nJflQ6dtw0jBs+S7Aim8TPfgpi4p5XJGruXNRScamk68NgnPfTL3vT726EuABCk6C934KARd+/AXa8/5rNOh4ETPstjBRfFJ0tpmsWWhhNEnwJRqS2LD0ug7E3yFI2qsNKGEzvAYUC8Up45MRP7liR3aMlCBil1tsy9R+IB7oMEycZAe/qj
    neil@localhost.localdomain
- en: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFgx1vzu59lll6/uQw7FbmKVsQ3fzLz9MW1fgo4sdsxXp81wCHNAlqcjx1Pgr9BJPXWUMInQOi7BQ5I+vc2xQ2AS0kMq3ZH9ybWuQe/U2GjueXZd0FKrEXrT55wM36Rm6Ii3roUCoGCzGR8mn95JvRB3VtCyDdzTWSi8JBpK5gV5oOxNTNPsewlLzouBlCT1qW3CKwEiIwu8S9MTL7m3nrcaNeLewTTHevvHw4QDwzFQ+B0PDg96fzsYoTXVhzyHSWyo6H0gqrft7aK+gILBtEIhWTkSVEMAzy1piKtCr1IYTmVK6engv0aoGtMUq6FnOeGp5FjvKkF4aQkh1QR28r
    neil@DESKTOP-S8P8D3N
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDFgx1vzu59lll6/uQw7FbmKVsQ3fzLz9MW1fgo4sdsxXp81wCHNAlqcjx1Pgr9BJPXWUMInQOi7BQ5I+vc2xQ2AS0kMq3ZH9ybWuQe/U2GjueXZd0FKrEXrT55wM36Rm6Ii3roUCoGCzGR8mn95JvRB3VtCyDdzTWSi8JBpK5gV5oOxNTNPsewlLzouBlCT1qW3CKwEiIwu8S9MTL7m3nrcaNeLewTTHevvHw4QDwzFQ+B0PDg96fzsYoTXVhzyHSWyo6H0gqrft7aK+gILBtEIhWTkSVEMAzy1piKtCr1IYTmVK6engv0aoGtMUq6FnOeGp5FjvKkF4aQkh1QR28r
    neil@DESKTOP-S8P8D3N
- en: 'Once the public key is installed on the server, test the authentication by
    logging in to the server from within the PowerShell window, for example:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 公钥安装到服务器后，通过PowerShell窗口登录到服务器进行身份验证测试，例如：
- en: PS C:\Users\neil\.ssh> ssh -l neil 192.168.1.100
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: PS C:\Users\neil\.ssh> ssh -l neil 192.168.1.100
- en: 'Enter passphrase for key ''C:\Users\neil\.ssh\id_rsa'':'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 输入密钥‘C:\Users\neil\.ssh\id_rsa’的密码短语：
- en: When key-based authentication has been set up for all the accounts and verified,
    disable password authentication on the Ubuntu system as outlined at the end of
    the previous section.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 当为所有帐户设置并验证了基于密钥的身份验证后，按照上一节末尾的说明，在Ubuntu系统上禁用密码验证。
- en: 17.8 SSH Key-based Authentication using PuTTY
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 17.8 使用PuTTY的SSH密钥验证
- en: 'For Windows systems that do not have OpenSSH available or as a more flexible
    alternative to using PowerShell, the PuTTY tool is a widely used alternative.
    The first step in using PuTTY is downloading and installing it on any Windows
    system that needs an SSH client. PuTTY is a free utility and can be downloaded
    using the following link:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 对于没有OpenSSH的Windows系统，或作为比使用PowerShell更灵活的替代方案，PuTTY工具是广泛使用的替代工具。使用PuTTY的第一步是在需要SSH客户端的任何Windows系统上下载并安装它。PuTTY是一个免费的实用程序，可以通过以下链接下载：
- en: '[https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html](https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html](https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html)'
- en: Download the Windows installer executable that matches your Windows system (32-bit
    and 64-bit versions are available), then execute the installer to complete the
    installation.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 下载与您的Windows系统（32位或64位版本可选）匹配的Windows安装程序可执行文件，然后执行该安装程序以完成安装。
- en: If a private key already exists on another system, create the .ssh folder in
    the current user’s home folder and copy the private id_rsa key into it.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果私钥已经存在于另一个系统上，请在当前用户的主文件夹中创建`.ssh`文件夹，并将私有`id_rsa`密钥复制到该文件夹中。
- en: 'Next, the private key file needs to be converted to a PuTTY private key format
    file using the PuTTYgen tool. Locate this utility by typing “PuTTY Key Generator”
    into the search bar of the Windows Start menu and launch it:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，需要使用PuTTYgen工具将私钥文件转换为PuTTY私钥格式文件。通过在Windows开始菜单的搜索栏中输入“PuTTY Key Generator”来找到该工具并启动它：
- en: '![](img/putty_key_generator.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/putty_key_generator.jpg)'
- en: Figure 17-2
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图17-2
- en: Once launched, click on the Load button located in the Actions section and navigate
    to the private key file previously copied to the .ssh folder (note that it may
    be necessary to change the file type filter to All Files (*.*) for the key file
    to be visible). Once located, select the file and load it into PuttyGen. When
    prompted, enter the passphrase used initially to encrypt the file. Once the private
    key has been imported, save it as a PuTTY key file by clicking the Save Private
    Key button. For consistency, save the key file to the .ssh folder but give it
    a different name to differentiate it from the original key file.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 启动后，点击位于操作部分的“加载”按钮，导航到之前复制到 .ssh 文件夹中的私钥文件（请注意，可能需要将文件类型过滤器更改为“所有文件 (*.*)”才能看到密钥文件）。找到后，选择该文件并将其加载到
    PuttyGen 中。当提示时，输入最初用于加密文件的密码短语。私钥导入后，点击“保存私钥”按钮将其保存为 PuTTY 密钥文件。为了保持一致性，将密钥文件保存到
    .ssh 文件夹中，但为其命名一个不同的名称，以便与原始密钥文件区分开。
- en: 'Launch PuTTY from the Start menu and enter the IP address or hostname of the
    remote server into the main screen before selecting the Connection -> SSH -> Auth
    -> Credentials category in the left-hand panel, as highlighted in [Figure 17-3](SSH_Authentication.xhtml#_idTextAnchor291):'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 从开始菜单启动 PuTTY，并在主屏幕中输入远程服务器的 IP 地址或主机名，然后选择左侧面板中的连接 -> SSH -> 身份验证 -> 凭据类别，如[图
    17-3](SSH_Authentication.xhtml#_idTextAnchor291)中所示：
- en: '![](img/putty_credentials.jpg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/putty_credentials.jpg)'
- en: Figure 17-3
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17-3
- en: Click the Browse button next to the Private key for authentication field and
    navigate to and select the previously saved PuTTY private key file. Then, optionally,
    scroll to the top of the left-hand panel, select the Session entry, and enter
    a name for the session in the Saved Sessions field before clicking on the Save
    button. This will save the session configuration for future use without re-entering
    the settings each time.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“浏览”按钮，选择认证用的私钥字段旁边的按钮，导航到并选择之前保存的 PuTTY 私钥文件。然后，可选地，滚动到左侧面板的顶部，选择“会话”条目，在“保存的会话”字段中输入会话名称，然后点击“保存”按钮。这样可以将会话配置保存以供将来使用，而无需每次重新输入设置。
- en: Finally, click on the Open button to establish the connection to the remote
    server, entering the user name and passphrase when prompted to do so to complete
    the authentication.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，点击“打开”按钮以建立与远程服务器的连接，在提示时输入用户名和密码短语，以完成身份验证。
- en: 17.9 Generating a Private Key with PuTTYgen
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 17.9 使用 PuTTYgen 生成私钥
- en: The previous section explored using existing private and public keys when working
    with PuTTY. If keys do not exist, they can be created using the PuTTYgen tool,
    which is included in the main PuTTY installation.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 前一节探讨了在使用 PuTTY 时如何使用现有的私钥和公钥。如果密钥不存在，可以使用包括在 PuTTY 主安装包中的 PuTTYgen 工具来创建。
- en: 'To create new keys, launch PuttyGen and click on the Generate button highlighted
    in [Figure 17-4](SSH_Authentication.xhtml#_idTextAnchor293):'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建新密钥，启动 PuttyGen 并点击[图 17-4](SSH_Authentication.xhtml#_idTextAnchor293)中高亮显示的生成按钮：
- en: '![](img/putty_key_generator_generate.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/putty_key_generator_generate.jpg)'
- en: Figure 17-4
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图 17-4
- en: Move the mouse pointer to generate random data as instructed, then enter an
    optional passphrase to encrypt the private key. Once the keys have been generated,
    save the files to suitable locations using the Save public key and Save private
    key buttons. As outlined in the previous section, the private key can be used
    with PuTTY. To install the public key on the remote server, use the steps covered
    in the earlier section on SSH within PowerShell on Windows.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 将鼠标指针移动到指定位置以生成随机数据，然后输入一个可选的密码短语来加密私钥。一旦密钥生成完毕，使用“保存公钥”和“保存私钥”按钮将文件保存到适当的位置。如前一节所述，私钥可以与
    PuTTY 一起使用。要在远程服务器上安装公钥，请按照前一节中关于在 Windows 上使用 PowerShell 配置 SSH 的步骤操作。
- en: 17.10 Summary
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 17.10 总结
- en: Any remote access to an Ubuntu system must be implemented in a way that provides
    a high level of security. By default, SSH allows remote system access using password-based
    authentication. However, this leaves the system vulnerable to anyone who can guess
    a password or find out the password through other means. For this reason, key-based
    authentication is recommended to protect system access. Key-based authentication
    uses public key encryption involving public and private keys. When implemented,
    users can only connect to a server if they are using a client with a private key
    that matches a public key on the server. As an added layer of security, the private
    key may also be encrypted and password protected. Once key-based encryption has
    been implemented, the server system is configured to disable support for the less
    secure password-based authentication.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 任何远程访问 Ubuntu 系统的操作都必须以提供高水平安全性的方式进行。默认情况下，SSH 允许通过基于密码的身份验证进行远程系统访问。然而，这使得系统容易受到猜测密码或通过其他手段获取密码的攻击。因此，建议使用基于密钥的身份验证来保护系统访问。基于密钥的身份验证采用公钥加密技术，涉及公钥和私钥。当实现后，用户只有在使用与服务器上公钥匹配的私钥的客户端时，才能连接到服务器。作为附加的安全层，私钥也可以进行加密并设置密码保护。一旦实现了基于密钥的加密，服务器系统会被配置为禁用对不太安全的基于密码的身份验证的支持。
- en: This chapter has provided an overview of SSH key-based authentication and outlined
    the steps involved in generating keys and configuring clients on macOS, Linux,
    and Windows, as well as installing and managing public keys on an Ubuntu server.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 本章概述了 SSH 基于密钥的身份验证，并概述了在 macOS、Linux 和 Windows 上生成密钥、配置客户端，以及在 Ubuntu 服务器上安装和管理公钥的步骤。
