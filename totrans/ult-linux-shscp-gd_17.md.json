["```\ngit clone https://github.com/PacktPublishing/The-Ultimate-Linux-Shell-Scripting-Guide.git \n```", "```\ndonnie@fedora:~$ ls coingecko.sh\ncoingecko.sh\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ ls -l coingecko.sh\n-rwxr--r--. 1 donnie donnie 842 Jan 12 13:11 coingecko.sh\ndonnie@fedora:~$ \n```", "```\n#!/bin/bash\nwhile getopts ab options; do\n        case $options in\n                a) echo \"You chose Option A\";;\n                b) echo \"You chose Option B\";;\n        esac\ndone \n```", "```\ndonnie@fedora:~$ ./getopts-demo1.sh -a\nYou chose Option A\ndonnie@fedora:~$ ./getopts-demo1.sh -b\nYou chose Option B\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ ./getopts-demo1.sh -ab\nYou chose Option A\nYou chose Option B\ndonnie@fedora:~$ \n```", "```\n#!/bin/bash\nwhile getopts a:b: options; do\n        case $options in\n                a) var1=$OPTARG;;\n                b) var2=$OPTARG;;\n        esac\ndone\necho \"Option A is $var1 and Option B is $var2\" \n```", "```\ndonnie@fedora:~$ ./getopts-demo2.sh -a Donnie -b Tevault\nOption A is Donnie and Option B is Tevault\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ ./getopts-demo2.sh -x\n./getopts-demo2.sh: illegal option -- x\nOption A is  and Option B is\ndonnie@fedora:~$ \n```", "```\n#!/bin/bash\nwhile getopts :a:b: options; do\n        case $options in\n                a) var1=$OPTARG;;\n                b) var2=$OPTARG;;\n                \\?) echo \"I don't know the $OPTARG option\";;\n                :) echo \"Both options require an argument.\";;\n        esac\ndone\n[[ -z $var1 ]] || echo \"Option A is $var1\"\n[[ -z $var2 ]] || echo \"Option B is $var2\" \n```", "```\ndonnie@fedora:~$ ./getopts-demo3.sh -a Donnie -b Tevault\nOption A is Donnie\nOption B is Tevault\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ ./getopts-demo3.sh -a Donnie\nOption A is Donnie\ndonnie@fedora:~$ ./getopts-demo3.sh -a\nBoth options require an argument.\ndonnie@fedora:~$ ./getopts-demo3.sh -a Donnie -b\nBoth options require an argument.\nOption A is Donnie\ndonnie@fedora:~$ \n```", "```\n#!/bin/bash\nwhile getopts :a:b:c options; do\n        case $options in\n                a) var1=$OPTARG;;\n                b) var2=$OPTARG;;\n                c) echo \"This option doesn't require an argument.\";;\n                \\?) echo \"I don't know the $OPTARG option\";;\n                :) echo \"Both options require an argument.\";;\n        esac\ndone\n[[ -z $var1 ]] || echo \"Option A is $var1\"\n[[ -z $var2 ]] || echo \"Option B is $var2\"\nshift $((OPTIND-1))\n[[ -z $1 ]] || ls -l \"$1\" \n```", "```\ndonnie@fedora:~$ ./getopts-demo4.sh \"my new file.txt\"\n-rw-r--r--. 1 donnie donnie 0 Feb 25 13:00 'my new file.txt'\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ ./getopts-demo4.sh \"my new file.txt\"\nls: cannot access 'my': No such file or directory\nls: cannot access 'new': No such file or directory\nls: cannot access 'file.txt': No such file or directory\ndonnie@fedora:~$ \n```", "```\ngecko_usage() {\n        echo \"Usage:\"\n        echo \"To create a list of coins, do:\"\n        echo \"./coingecko.sh -l\"\n        echo\n        echo \"To create a list of reference currencies, do:\"\n        echo \"./coingecko.sh -c\"\n        echo\n        echo \"To get current coin prices, do:\"\n        echo \"./coingecko.sh coin_name(s) currency\"\n} \n```", "```\nwhile getopts :hlc options; do\n        case $options in\n                h)\n                        gecko_usage\nl)\n        curl -X 'GET' \\\n        \"https://api.coingecko.com/api/v3/coins/list?include_platform=true\" \\\n         -H 'accept: application/json' | jq | tee coinlist.txt\n         ;;\n. . .\n. . .\n \\?) echo \"I don't know this $OPTARG option\"\n                        ;;\n                esac\n                done \n```", "```\ngecko_api $1\nshift $((OPTIND-1))\n[[ -n $1 ]] && [[ -n $2 ]] && curl -X 'GET' \\\n  \"https://api.coingecko.com/api/v3/simple/price?ids=$1&vs_currencies=$2&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true&include_last_updated_at=true&precision=true\" \\\n  -H 'accept: application/json' | jq \n```", "```\nwhile getopts iv name\ndo\n        case $name in\n          i)iopt=1;;\n          v)vopt=1;;\n          *)echo \"Invalid arg\";;\n        esac\ndone \n```", "```\nif [[ ! -z $iopt ]]\nthen\n{\nwd=$(pwd)\nbasename \"$(test -L \"$0\" && readlink \"$0\" || echo \"$0\")\" > /tmp/scriptname\nscriptname=$(echo -e -n $wd/ && cat /tmp/scriptname)\nsu -c \"cp $scriptname /usr/bin/monitor\" root && echo \"Congratulations! Script Installed, now run monitor Command\" || echo \"Installation failed\"\n}\nfi \n```", "```\nif [[ ! -z $vopt ]]\nthen\n{\n#echo -e \"tecmint_monitor version 0.1\\nDesigned by Tecmint.com\\nReleased Under Apache 2.0 License\"\necho -e \"tecmint_monitor version 0.1\\nDesigned by Tecmint.com\\nTweaked by Donnie for more modern systems\\nReleased Under Apache 2.0 License\"\n}\nfi \n```", "```\n# Check DNS\n#nameservers=$(cat /etc/resolv.conf | sed '1 d' | awk '{print $2}')\nnameservers=$(cat /etc/resolv.conf | grep -w ^nameserver | awk '{print $2}')\necho -e '\\E[32m'\"Name Servers :\" $tecreset $nameservers \n```", "```\n# Check Disk Usages\n#df -h| grep 'Filesystem\\|/dev/sda*' > /tmp/diskusage\ndf -Ph| grep 'Filesystem\\|/dev/sda*' > /tmp/diskusage\necho -e '\\E[32m'\"Disk Usages :\" $tecreset\ncat /tmp/diskusage \n```"]