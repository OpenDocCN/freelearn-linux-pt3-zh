["```\n$ useradd -c \"John Doe\" -s /bin/bash johndoe \n```", "```\n---\n- name: Add required users to Linux servers\n  user:\n    name: johndoe\n    comment: John Doe\n    shell: /bin/bash\n```", "```\n$ ansible localhost -i localhost, -m debug -a \"msg={{ 'secure123' | password_hash('sha512') }}\"\n```", "```\n---\njohndoepw: secure123\n```", "```\n$ ssh-keygen -b 2048 -t rsa -f ./johndoe_id_rsa -q -N ''\n```", "```\n---\n- name: Add required users to Linux servers\n  user:\n    name: johndoe\n    comment: John Doe\n    shell: /bin/bash\n    groups: sudo\n    append: yes\n    password: \"{{ johndoepw | password_hash('sha512') }}\"\n\n- name: Add user's SSH public key\n  authorized_key:\n    user: johndoe\n    state: present\n    key: \"{{ lookup('file', 'files/johndoe_id_rsa.pub') }}\"\n```", "```\n$ ansible-vault encrypt main.yml\n```", "```\n---\n- name: Add required users to Linux servers\n  user:\n    name: \"{{ item.name }}\"\n    comment: \"{{ item.comment }}\"\n    shell: /bin/bash\n    groups: \"{{ item.groups }}\"\n    append: yes\n    state: present\n  loop:\n    - { name: 'johndoe', comment: 'John Doe', groups: 'sudo'}\n    - { name: 'janedoe', comment: 'Jane Doe', groups: 'docker'}\n```", "```\n---\n- name: Add required users to Linux servers\n  user:\n    name: johndoe\n    state: absent\n```", "```\n- name: Clean up user home directory\n  file:\n    path: /home/johndoe\n    state: absent\n```", "```\n---  \n- name: Install realmd packages\n  yum:\n    name: \"{{ item }}\"\n    state: present\n  loop:\n    - realmd\n    - oddjob\n    - oddjob-mkhomedir\n    - sssd\n    - samba-common\n    - samba-common-tools\n    - adcli\n    - krb5-workstation\n    - openldap-clients\n    - policycoreutils-python\n```", "```\n- name: Join the domain\n    shell: echo '{{ realm_join_password }}' | realm join --user={{ realm_join_user }} {{ realm_domain }}\n    register: command_result\n    ignore_errors: True\n    notify:\n      - Restart sssd\n```", "```\n---\nrealm_join_password: securepassword\nrealm_join_user: administrator@example.com\nrealm_domain: example.com\n```", "```\n- name: Fail the play when the realm join fails\n    fail: \n      msg=\"Realm join failed with this error: {{ command_result.stderr }}\"\n    when: \"'Already joined to this domain' not in command_result.stderr and command_result.rc != 0\"\n```", "```\n---\n- name: Restart sssd\n  service:\n    name: sssd\n    state: restarted\n    enabled: yes\n```", "```\n%LinuxAdmins ALL=(ALL) NOPASSWD: ALL\n```", "```\n$ cd ~\n$ git clone https://github.com/freeipa/ansible-freeipa\n$ cd ansible-freeipa\n```", "```\n$ ln -s ~/ansible-freeipa/roles/ ~/.ansible/\n$ mkdir ~/.ansible/plugins\n$ ln -s ~/ansible-freeipa/plugins/modules ~/.ansible/plugins/\n$ ln -s ~/ansible-freeipa/plugins/module_utils/ ~/.ansible/plugins/\n```", "```\n[ipaclients]\ncentos-testhost\n\n[ipaclients:vars]\nipaadmin_password=password\nipaserver_domain=example.com\nipaserver_realm=EXAMPLE.COM\n```", "```\n---\n- name: Copy a new sudoers file on if visudo validation is passed\n  template:\n    src: templates/sudoers.j2\n    dest: /etc/sudoers\n    validate: /usr/sbin/visudo -cf %s\n```", "```\n$ ansible -i hosts -m shell -a 'cat /etc/passwd' all\n```", "```\n$ ansible -i hosts -m shell -a 'grep \"authentication failure | cat\" /var/log/auth.log' all\n```"]