- en: 16\. Displaying CentOS 8 Applications Remotely (X11 Forwarding)
  prefs: []
  type: TYPE_NORMAL
- en: In the previous chapter we looked at how to display the entire CentOS 8 desktop
    on a remote computer. While this works well if you actually need to remotely display
    the entire desktop, it could be considered overkill if all you want to do is display
    a single application. In this chapter, therefore, we will look at displaying individual
    applications on a remote system.
  prefs: []
  type: TYPE_NORMAL
- en: 16.1 Requirements for Remotely Displaying CentOS 8 Applications
  prefs: []
  type: TYPE_NORMAL
- en: In order to run an application on one CentOS 8 system and have it display on
    another system there are a couple of prerequisites. First, the system on which
    the application is to be displayed must be running an X server. If the system
    is a Linux or UNIX-based system with a desktop environment running then this is
    no problem. If the system is running Windows or macOS, however, then you must
    install an X server on it before you can display applications from a remote system.
    A number of commercial and free Windows based X servers are available for this
    purpose and a web search should provide you with a list of options.
  prefs: []
  type: TYPE_NORMAL
- en: 'Second, the system on which the application is being run (as opposed to the
    system on which the application is to be displayed) must be configured to allow
    SSH access. Details on configuring SSH on a CentOS 8 system can be found in the
    chapter entitled [“Configuring SSH Key-based Authentication on CentOS 8”](../Text/SSH_Authentication.xhtml#_idTextAnchor181).
    This system must also be running the X Window system from X.org instead of Wayland.
    To find out which system is being used, open a terminal window and run the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: echo $XDG_SESSION_TYPE
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: x11
  prefs: []
  type: TYPE_NORMAL
- en: 'If the above command outputs “wayland” instead of “x11”, edit the /etc/gdm/custom.conf
    file and uncomment the WaylandEnable line as follows and restart the system:'
  prefs: []
  type: TYPE_NORMAL
- en: Uncoment the line below to force the login screen to use Xorg
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: WaylandEnable=false
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, SSH must be configured to allow X11 forwarding. This is achieved by
    adding the following directive to the SSH configuration on the system from which
    forwarding is to occur. By default on CentOS 8, the /etc/ssh_config file contains
    a directive to include all of the configuration files contained in the /etc/ssh/ssh_config.d
    directory:'
  prefs: []
  type: TYPE_NORMAL
- en: Include /etc/ssh/ssh_config.d/*.conf
  prefs: []
  type: TYPE_NORMAL
- en: 'On a newly installed system, the only file within /etc/ssh/ssh_config.d is
    named 05-redhat.conf. Edit this file and add a line to enable X11 forwarding as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: Host *
  prefs: []
  type: TYPE_NORMAL
- en: GSSAPIAuthentication yes
  prefs: []
  type: TYPE_NORMAL
- en: X11Forwarding yes
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: 'After making the change, save the file and restart the SSH service:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl restart sshd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once the above requirements are met it should be possible to remotely display
    an X-based desktop application.
  prefs: []
  type: TYPE_NORMAL
- en: 16.2 Remotely Displaying a CentOS 8 Application
  prefs: []
  type: TYPE_NORMAL
- en: 'The first step in remotely displaying an application is to move to the system
    where the application is to be displayed. At this system, establish an SSH connection
    to the remote system so that you have a command prompt. This can be achieved using
    the ssh command. When using the ssh command we need to use the -X flag to tell
    it that we plan to tunnel X11 traffic through the connection:'
  prefs: []
  type: TYPE_NORMAL
- en: $ ssh -X user@hostname
  prefs: []
  type: TYPE_NORMAL
- en: 'In the above example user is the user name to use to log into the remote system
    and hostname is the hostname or IP address of the remote system. Enter your password
    at the login prompt and, once logged in, run the following command to see the
    DISPLAY setting:'
  prefs: []
  type: TYPE_NORMAL
- en: $ echo $DISPLAY
  prefs: []
  type: TYPE_NORMAL
- en: 'The command should output something similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: localhost:10.0
  prefs: []
  type: TYPE_NORMAL
- en: 'To display an application simply run it from the command prompt. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: $ gedit
  prefs: []
  type: TYPE_NORMAL
- en: When executed, the above command should run the gedit tool on the remote system,
    but display the output on the local system.
  prefs: []
  type: TYPE_NORMAL
- en: 16.3 Trusted X11 Forwarding
  prefs: []
  type: TYPE_NORMAL
- en: 'If the /etc/ssh/ssh_config.d/05-redhat.conf file on the remote system contains
    the following line, then it is possible to use trusted X11 forwarding:'
  prefs: []
  type: TYPE_NORMAL
- en: ForwardX11Trusted yes
  prefs: []
  type: TYPE_NORMAL
- en: 'Trusted X11 forwarding is slightly faster than untrusted forwarding but is
    less secure since it does not engage the X11 security controls. The -Y flag is
    needed when using trusted X11 forwarding:'
  prefs: []
  type: TYPE_NORMAL
- en: $ ssh -Y user@hostname
  prefs: []
  type: TYPE_NORMAL
- en: 16.4 Compressed X11 Forwarding
  prefs: []
  type: TYPE_NORMAL
- en: 'When using slower connections the X11 data can be compressed using the -C flag
    to improve performance:'
  prefs: []
  type: TYPE_NORMAL
- en: $ ssh -X -C user@hostname
  prefs: []
  type: TYPE_NORMAL
- en: 16.5 Displaying Remote CentOS 8 Apps on Windows
  prefs: []
  type: TYPE_NORMAL
- en: To display CentOS 8 based apps on Windows an SSH client and an X server will
    need to be installed on the Windows system. The subject of installing and using
    the PuTTY client on Windows was covered earlier in the book in the [“Configuring
    SSH Key-based Authentication on CentOS 8”](../Text/SSH_Authentication.xhtml#_idTextAnchor181)
    chapter. Refer to this chapter if you have not already installed PuTTY on your
    Windows system.
  prefs: []
  type: TYPE_NORMAL
- en: 'In terms of the X server, a number of options are available, though a popular
    choice appears to be VcXsrv which is available for free from the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://sourceforge.net/projects/vcxsrv/](http://www.ebookfrenzy.com/errata/androidstudio30.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the VcXsrv X server has been installed, an application named XLaunch will
    appear on the desktop and in the start menu. Start XLaunch and select a display
    option (the most flexible being the Multiple windows option which allows each
    client app to appear in its own window):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/win_10_configure_windows_x_server.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 16-1
  prefs: []
  type: TYPE_NORMAL
- en: Click the Next button to proceed through the remaining screens, accepting the
    default configuration settings. On the final screen, click on the Finish button
    to start the X server. If the Windows Defender dialog appears click on the button
    to allow access to your chosen networks.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once running, XLaunch will appear in the taskbar and can be exited by right-clicking
    on the icon and selecting the Exit... menu option:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/win_10_x_server_running.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 16-2
  prefs: []
  type: TYPE_NORMAL
- en: 'With the X server installed and running, launch PuTTY and either enter the
    connection information for the remote host or load a previously saved session
    profile. Before establishing the connection, however, X11 forwarding needs to
    be enabled. Within the PuTTY main window, scroll down the options in the left-hand
    panel, unfold the SSH section and select the X11 option as shown in [Figure 16-3](../Text/X11_Forwarding.xhtml#_idTextAnchor217):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/win_10_putty_ssh.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 16-3
  prefs: []
  type: TYPE_NORMAL
- en: Turn on the Enable X11 forwarding checkbox highlighted in [Figure 16-4](../Text/X11_Forwarding.xhtml#_idTextAnchor218),
    return to the sessions screen and open the connection (saving the session beforehand
    if you plan to use it again).
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/win_10_putty_X11_settings.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 16-4
  prefs: []
  type: TYPE_NORMAL
- en: 'Log into the CentOS 8 system within the PuTTY session window and run a desktop
    app. After a short delay, the app will appear in the Windows desktop in its own
    window. Any dialogs that are opened by the app will also appear in separate windows,
    just as they would on the CentOS 8 GNOME desktop. [Figure 16-5](../Text/X11_Forwarding.xhtml#_idTextAnchor219),
    for example, shows the CentOS 8 nm-connection-editor tool displayed on a Windows
    10 system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/win_10_xserver_app_displayed.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 16-5
  prefs: []
  type: TYPE_NORMAL
- en: 16.6 Summary
  prefs: []
  type: TYPE_NORMAL
- en: For situations where remote access to individual CentOS 8 desktop applications
    is required as opposed to the entire GNOME desktop, X11 forwarding provides a
    lightweight solution to remotely displaying graphical applications. The system
    on which the applications are to appear must be running an X Window System based
    desktop environment (such as GNOME) or have an X server installed and running.
    Once X11 forwarding has been enabled on the remote server and a secure SSH connection
    established from the local system using the X11 forwarding option, most applications
    can be displayed remotely on the local X server.
  prefs: []
  type: TYPE_NORMAL
