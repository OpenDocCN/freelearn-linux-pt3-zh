["```\n[erik@ol8 ~]$ gpg2 --gen-key\n```", "```\ngit config --global user.signingkey E921BF9E922221B6\n```", "```\ngit config --global commit.gpgsign true\n```", "```\n$ git tag -s v1.0 -m 'Version 1.0 tag'\nYou need a passphrase to unlock the secret key for\nuser: \"Erik Benner <erik@talesfromthedatacenter.com>\"\n2048-bit RSA key, ID 922221B6, created 2024-04-01\n```", "```\n$ git show v1.0\ntag v1.0\nTagger: Erik Benner <erik@talesformthedatacenter.com >\nDate:   Sun April 2 215:24:41 2023 -2300\nVersion 1.0 tag\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\nJHGSksdhj847yskKJHSnd874tlKJAHGS32674GJHSAD784ghsjkd7*&^ADDXGFdgj3kjj hde018GDKjskhdh8737ybdhajkjkjhsadfs7892987812mmxnbcbsd8JASJ74845jfhHA SHDepkjahZXkjs83828732ZMKDjh92yaskjagZKDSJHGHHD&=7213kj4ha,,jhsad10al qpdif9839928hdkask\n=EFTF\n-----END PGP SIGNATURE-----\ncommit 7fhs49185hflvmsgd742825hhabzb182ufnc8\nAuthor: Erik Benner <erik@talesformthedatcenter.com>\nDate:   Sun Apr 2 12:52:11 2023 -2300\n    Change version number\n```", "```\ngit comit -a -S -m \"comment goes here\"\n```", "```\n    80 and 443 to the firewall. This is done as the root with the following commands:\n\n    ```", "```\n    mkdir -p /var/www/ssltest\n    ssltest.conf in /etc/httpd/conf.d:\n\n    ```", "```\n\n    ```", "```\n\n    ```", "```\n    apachectl configtest\n    enable option will restart the web server when the system starts. The --now option will start the server now:\n\n    ```", "```\n\n    ```", "```\n    acme:\n\n    ```", "```\n\n    ```", "```\n    git clone https://github.com/acmesh-official/acme.sh.git\n    ```", "```\n/root/acme/acme.sh --install -m my@email.com\n```", "```\n    /root/acme/acme.sh/acme.sh --register-account -m erik@talesfromthedatacenter.com\n    [Sun Apr  2 22:02:01 GMT 2023] No EAB credentials found for ZeroSSL, let's get one\n    [Sun Apr  2 22:02:02 GMT 2023] Registering account: https://acme.zerossl.com/v2/DV90\n    [Sun Apr  2 22:02:03 GMT 2023] Registered\n    ACCOUNT_THUMBPRINT for future use. This is also saved in ./ca/acme.zerossl.com/v2/DV90/ca.conf.\n    ```", "```\n    ./acme.sh --issue  -d ssltest.talesfromthedatacenter.com --log\n    ```", "```\n0 0 * * * /home/acme/.acme.sh/acme.sh --cron --home /home/acme/.acme.sh > /dev/null\n```", "```\n    192.168.56.0/24 is my boot subnet. Don’t forget to update the subnet to your subnet when running the following firewall commands:\n\n    ```", "```\n\n    ```", "```\n    systemctl enable --now tangd.socket\n    ```", "```\n    systeemctl status tangd command;\n    # systemctl status tangd.socket\n    ● tangd.socket - Tang Server socket\n       Loaded: loaded (/usr/lib/systemd/system/tangd.socket; enabled; vendor preset: disabled)\n       Active: active (listening) since Mon 2023-07-17 13:52:58 EDT; 2min 46s ago\n       Listen: [::]:80 (Stream)\n     Accepted: 0; Connected: 0;\n        Tasks: 0 (limit: 48611)\n       Memory: 0B\n       CGroup: /system.slice/tangd.socket\n    /var/db/tang. You can also run the command tang-show-keys. This will show all of the thumbprints of the keys in the system:\n\n    ```", "```\n\n    ```", "```\n    /dev/sdb, which is a small 20 GB device. You can see by checking all the block devices with the lsblk command:\n\n    ```", "```\n    cryptsetup luksFormat --type luks2 --cipher aes-xts-plain64 \\\n     --key-size 512 --hash sha256 --use-random --force-password /dev/sdb\n    ```", "```\n\n    ```", "```\n    /dev/mapper:\n\n    ```", "```\n    /data:\n\n    ```", "```\n    [root@clevis ~]# blkid -s UUID  /dev/mapper/datadisk1\n    fstab entry with the following command:\n\n    ```", "```\n\n    ```", "```\n\n    ```", "```\n\n    ```", "```\n    mount /data\n    ```", "```\n    [root@clevis ~]# clevis luks bind -d /dev/sdb tang '{\"url\":\"http://tang.m57.local\"}'\n    Warning: Value 512 is outside of the allowed entropy range, adjusting it.\n    The advertisement contains the following signing keys:\n    RxdbjAY7_N19UEYBO6XIUVosv0s\n    Do you wish to trust these keys? [ynYN] Y\n    1: is populated with a key:\n    ```", "```\n    [root@clevis ~]# blkid -s UUID  /dev/sdb\n    /dev/sdb: UUID=\"218ec8bc-2508-4e34-a569-1e8d3783874e\"\n    ```", "```\n    /etc/crypttab file. The crypttab file contains a list of all encrypted drives:\n\n    ```", "```\n\n    ```", "```\ndnf install -y clevis-dracut\n```", "```\ndracut -fv\n```", "```\ndnf install -y scap-workbench\n```", "```\nsystemctl status firewalld\n```", "```\n[root@ol8 ~]# firewall-cmd --list-all\n```", "```\nfirewall-cmd --permanent --add-service=http\nfirewall-cmd --permanent --add-service=imap\nfirewall-cmd --permanent --add-service=pop\nfirewall-cmd --permanent --add-service=mysql\n```", "```\nfirewall-cmd --permanent --add-port=1521/TCP\nfirewall-cmd --permanent --add-port=6900/UDP\n```", "```\nfirewall-cmd --permanent --remove-service=pop\nfirewall-cmd --permanent --remove-port=6900/UDP\n```", "```\nfirewall-cmd --reload\n```", "```\ndnf install -y setools-console\n```", "```\n[root@ol8 ~]# sestatus\nSELinux status:                         enabled\nSELinuxfs mount:                    /sys/fs/selinux\nSELinux root directory:             /etc/selinux\nLoaded policy name:              targeted\nCurrent mode:                    enforcing\nMode from config file:           enforcing\nPolicy MLS status:               enabled\nPolicy deny_unknown status:     allowed\nMemory protection checking:     actual (secure)\nMax kernel policy version:       31\n```", "```\n    kernelmodule.pp to the SELinux policy.\n    ```", "```\n    /var/www/html.\n    ```", "```\n    www2 for TCP port 8080.\n    ```", "```\n    getsebool: To view the status of SELinux policies, you can use the getsebool command. This command displays Boolean variables that can enable or disable certain policies. To view all values, use the -a option. Alternatively, you can pass a specific value to check, as shown in this example:\n\n    ```", "```\n\n    ```", "```\n    fixfiles restore /directory_to_fix\n    ```", "```\n    fixfiles restore\n    ```", "```\n    fixfiles command to restore the default context.\n    ```"]