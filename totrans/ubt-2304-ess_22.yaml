- en: 23\. Installing KVM Virtualization on Ubuntu 23.04
  prefs: []
  type: TYPE_NORMAL
- en: 'Earlier versions of Ubuntu provided two virtualization platforms: Kernel-based
    Virtual Machine (KVM) and Xen. In recent releases, support for Xen has been removed,
    leaving KVM as the only bundled virtualization option supplied with Ubuntu. In
    addition to KVM, third-party solutions are available in products such as VMware
    and Oracle VirtualBox. Since KVM is supplied with Ubuntu, however, this virtualization
    solution will be covered in this and subsequent chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: Before plunging into installing and running KVM, it is worth discussing how
    it fits into the various types of virtualization outlined in the previous chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 23.1 An Overview of KVM
  prefs: []
  type: TYPE_NORMAL
- en: KVM is categorized as a Type-1 hypervisor virtualization solution that implements
    full virtualization with support for unmodified guest operating systems using
    Intel VT and AMD-V hardware virtualization support.
  prefs: []
  type: TYPE_NORMAL
- en: KVM differs from many other Type-1 solutions in that it turns the host Linux
    operating system into the hypervisor, allowing bare metal virtualization to be
    implemented while running a complete, enterprise-level host operating system.
  prefs: []
  type: TYPE_NORMAL
- en: 23.2 KVM Hardware Requirements
  prefs: []
  type: TYPE_NORMAL
- en: Before proceeding with this chapter, we must discuss the hardware requirements
    for running virtual machines within a KVM environment. First and foremost, KVM
    virtualization is only available on certain processor types. As previously discussed,
    these processors must include either Intel VT or AMD-V technology.
  prefs: []
  type: TYPE_NORMAL
- en: 'To check for virtualization support, run the lscpu command in a terminal window:'
  prefs: []
  type: TYPE_NORMAL
- en: 'lscpu | grep Virtualization:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If the system contains a CPU with Intel VT support, the above command will
    provide the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Virtualization: VT-x'
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, the following output will be displayed when a CPU with AMD-V
    support is detected:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Virtualization: AMD-V'
  prefs: []
  type: TYPE_NORMAL
- en: If the CPU does not support virtualization, no output will be displayed by the
    above lscpu command.
  prefs: []
  type: TYPE_NORMAL
- en: Note that while the above commands only report whether the processor supports
    the respective feature, it does not indicate whether it is currently enabled in
    the BIOS. This is because, in practice, virtualization support is typically disabled
    by default in the BIOS of most systems. Therefore, you should check your BIOS
    settings to ensure the appropriate virtualization technology is enabled before
    proceeding with this tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: Unlike a dual-booting environment, a virtualized environment involves running
    two or more complete operating systems concurrently on a single computer system.
    This means the system must have enough physical memory, disk space, and CPU processing
    power to comfortably accommodate all these systems in parallel. Therefore, before
    beginning the configuration and installation process, check on the minimum system
    requirements for both Ubuntu and your chosen guest operating systems and verify
    that your host system has sufficient resources to handle the requirements of both
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: 23.3 Preparing Ubuntu for KVM Virtualization
  prefs: []
  type: TYPE_NORMAL
- en: Unlike Xen, it is not necessary to run a special version of the kernel to support
    KVM. As a result, KVM support is already available for use with the standard kernel
    via installing a KVM kernel module, thereby negating the need to install and boot
    from a special kernel.
  prefs: []
  type: TYPE_NORMAL
- en: To avoid conflicts, however, if a Xen-enabled kernel is currently running on
    the system, reboot the system and select a non-Xen kernel from the boot menu before
    proceeding with the remainder of this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'The tools required to set up and maintain a KVM-based virtualized system are
    only installed by default if selected explicitly during the Ubuntu operating system
    installation process. To install the KVM tools from the command prompt, execute
    the following command in a terminal window:'
  prefs: []
  type: TYPE_NORMAL
- en: apt install qemu-kvm libvirt-clients libvirt-daemon-system bridge-utils
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you have access to a graphical desktop environment, the virt-manager package
    is also recommended:'
  prefs: []
  type: TYPE_NORMAL
- en: apt install virt-manager
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 23.4 Verifying the KVM Installation
  prefs: []
  type: TYPE_NORMAL
- en: 'It is worthwhile checking that the KVM installation worked correctly before
    moving forward. When KVM is installed and running, two modules will have been
    loaded into the kernel. The presence or otherwise of these modules can be verified
    in a terminal window by running the lsmod command:'
  prefs: []
  type: TYPE_NORMAL
- en: lsmod | grep kvm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Assuming that the installation was successful, the above command should generate
    output similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: kvm_intel 438272 0
  prefs: []
  type: TYPE_NORMAL
- en: kvm 1138688 21 kvm_intel
  prefs: []
  type: TYPE_NORMAL
- en: Note that if the system contains an AMD processor, the kvm module will likely
    read kvm_amd rather than kvm_intel.
  prefs: []
  type: TYPE_NORMAL
- en: 'The installation process should also have configured the libvirtd daemon to
    run in the background. Once again, using a terminal window, run the following
    command to ensure libvirtd is running:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl status libvirtd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ● libvirtd.service - Virtualization daemon
  prefs: []
  type: TYPE_NORMAL
- en: 'Loaded: loaded (/lib/systemd/system/libvirtd.service; enabled; vendor pres>'
  prefs: []
  type: TYPE_NORMAL
- en: 'Active: active (running) since Wed 2023-07-19 11:15:13 EDT; 21h ago'
  prefs: []
  type: TYPE_NORMAL
- en: 'If the process is not running, start it as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl enable --now libvirtd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: systemctl start libvirtd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If the desktop environment is available, run the virt-manager tool by selecting
    Activities and entering “virt” into the search box. When the Virtual Machine Manager
    icon appears, click it to launch it. When loaded, the manager should appear as
    illustrated in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_virt-manager.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 23-1
  prefs: []
  type: TYPE_NORMAL
- en: 'If the QEMU/KVM entry is not listed, select the File -> Add Connection menu
    option and, in the resulting dialog, select the QEMU/KVM Hypervisor before clicking
    on the Connect button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_virt-manager_add_connection.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 23-2
  prefs: []
  type: TYPE_NORMAL
- en: If the manager is not currently connected to the virtualization processes, right-click
    on the entry listed and select Connect from the popup menu.
  prefs: []
  type: TYPE_NORMAL
- en: 23.5 Summary
  prefs: []
  type: TYPE_NORMAL
- en: KVM is a Type-1 hypervisor virtualization solution that implements full virtualization
    with support for unmodified guest operating systems using Intel VT and AMD-V hardware
    virtualization support. It is the default virtualization solution bundled with
    Ubuntu and can be installed quickly and easily on any Ubuntu system with appropriate
    processor support. With KVM support installed and enabled, the following chapters
    will outline some options for installing and managing virtual machines on an Ubuntu
    host.
  prefs: []
  type: TYPE_NORMAL
