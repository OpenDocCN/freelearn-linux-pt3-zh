- en: Assessments
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估
- en: '[*Chapter 1*](B16276_01_Final_VK.xhtml#_idTextAnchor018)'
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第1章*](B16276_01_Final_VK.xhtml#_idTextAnchor018)'
- en: The most important difference is that, with a DAC system, the user has full
    control over who gets which kind of access to the user's data. It is left to the
    discretion of the user, hence the name. With MAC systems, the system administrator
    (or security administrator) defines how accesses are handled and enforced. Access
    is mandated by a policy, and users cannot work around this if the administrator
    does not allow it.
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最主要的区别在于，使用DAC系统时，用户可以完全控制谁可以访问用户的数据及其访问权限。这由用户自由决定，因此得名。对于MAC系统，系统管理员（或安全管理员）定义如何处理和执行访问控制。访问权限由策略强制执行，如果管理员不允许，用户无法绕过该策略。
- en: Linux has introduced hooks inside its kernel code, which developers can subscribe
    to with their own code. These hooks are part of the **Linux Security Module**
    (**LSM**) framework, an extensible framework that is natively part of the Linux
    kernel.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Linux在其内核代码中引入了钩子，开发人员可以通过自己的代码订阅这些钩子。这些钩子是**Linux安全模块**（**LSM**）框架的一部分，LSM框架是Linux内核的原生扩展框架。
- en: SELinux is one of the MAC technologies that use this LSM framework (and the
    hooks it offers) to provide mandatory access control capabilities to the Linux
    kernel and its applications. Other technologies also exist, including AppArmor.
  id: totrans-4
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SELinux是使用此LSM框架（及其提供的钩子）来为Linux内核及其应用程序提供强制访问控制功能的MAC技术之一。还有其他技术存在，包括AppArmor。
- en: The SELinux subsystem code itself is also made part of the main Linux kernel,
    as are the main other LSM implementations, although this is not a mandatory requirement
    for LSM-capable technologies. It does, however, support the notion that SELinux
    is a well-established, open source technology.
  id: totrans-5
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SELinux子系统的代码本身也成为了主Linux内核的一部分，与其他主要的LSM实现一样，尽管这对于支持LSM的技术不是强制性要求。然而，这支持了SELinux作为一种成熟的开源技术的概念。
- en: 'The four fields of an SELinux context are as follows: the SELinux user, the
    SELinux role, the SELinux type, and the sensitivity level (or the sensitivity
    range). The sensitivity level might not always be present: Linux distributions
    might opt to disable support for sensitivities in their policies. In that case,
    the SELinux context will only have the first three fields.'
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SELinux上下文的四个字段如下：SELinux用户、SELinux角色、SELinux类型和敏感度级别（或敏感度范围）。敏感度级别可能并不总是存在：Linux发行版可能选择在其策略中禁用敏感度的支持。在这种情况下，SELinux上下文将只有前三个字段。
- en: SELinux has the concept of a role, which SELinux types can be associated with.
    As SELinux mostly focuses on the types to handle its enforcement (SELinux is mostly
    a type enforcement system), the role-based access control is implemented by limiting
    the types that a role can be associated with.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SELinux具有角色的概念，SELinux类型可以与角色相关联。由于SELinux主要关注类型来执行强制控制（SELinux主要是类型强制系统），基于角色的访问控制通过限制角色可以关联的类型来实现。
- en: A user that has a DBA-related role will only be able to interact with the system
    from within DBA-associated types. As that role does not have any associations
    with other types, the user cannot acquire the privileges of these other types
    either.
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 拥有与DBA相关角色的用户只能在DBA关联的类型内与系统进行交互。由于该角色与其他类型没有任何关联，因此用户也无法获得这些其他类型的权限。
- en: While there is a project called the reference policy, most Linux distributions
    will deviate from this policy for several reasons. The main reason why no single
    SELinux policy exists is because SELinux is a fine-grained system, and thus can
    be tweaked and adjusted to fit the design and usage principles of a Linux distribution.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 虽然有一个叫做参考策略的项目，但大多数Linux发行版会因多种原因偏离该策略。没有一个统一的SELinux策略存在的主要原因是，SELinux是一个精细化的系统，因此可以根据Linux发行版的设计和使用原则进行调整和优化。
- en: Asking why no single SELinux policy exists for all Linux distributions is almost
    the same as asking why there are multiple Linux distributions. Each distribution
    has its own focus, design, principles, and decisions behind it, and the SELinux
    policy needs to be aligned with these in order to be successful.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 问为什么没有一个适用于所有Linux发行版的SELinux策略，几乎等同于问为什么会有多个Linux发行版。每个发行版都有自己的重点、设计、原则和背后的决策，SELinux策略需要与这些相一致，才能取得成功。
- en: '[*Chapter 2*](B16276_02_Final_VK.xhtml#_idTextAnchor045)'
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第2章*](B16276_02_Final_VK.xhtml#_idTextAnchor045)'
- en: Administrators should first analyze the situation to see why a problem is being
    triggered. Perhaps the problem is due to an incorrectly assigned context, or the
    process has not been started using the correct methods.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管理员应首先分析情况，找出问题触发的原因。问题可能是由于分配的上下文不正确，或进程未使用正确的方法启动。
- en: If the denial itself were to be allowed, administrators should create an update
    to the SELinux policy (just like they would update firewall rules as required).
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果拒绝本身被允许，管理员应更新 SELinux 策略（就像他们需要时更新防火墙规则一样）。
- en: If this is not feasible, then administrators should consider putting SELinux
    in permissive mode, but only for that particular application that is causing problems.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果这不可行，则管理员应考虑将 SELinux 设置为宽容模式，但仅针对导致问题的特定应用程序。
- en: If that is also not feasible, then administrators should put the system in permissive
    mode, but making sure that this is accepted by the organization and security principles
    of the environment.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果这也不可行，则管理员应将系统设置为宽容模式，但要确保组织和环境的安全原则接受此做法。
- en: Only if even this is not feasible or solves the problem should an administrator
    shake their head, curse the higher powers, and disable SELinux.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 只有在这些方法都不可行或不能解决问题时，管理员才应该摇头，咒骂更高的力量，并禁用 SELinux。
- en: If the system has the audit daemon running, then SELinux logging will be part
    of the audit logs. They can be displayed using tools such as `ausearch`, or read
    directly from the system at `/var/log/audit`.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果系统运行了审计守护进程，则 SELinux 日志将成为审计日志的一部分。可以使用像 `ausearch` 这样的工具显示它们，或者直接从系统的 `/var/log/audit`
    中读取。
- en: If no audit daemon is running, then the SELinux log events will be picked up
    by the system logger or be available through the kernel ring buffer. The kernel
    ring buffer can be read using the `dmesg` command. If the system logger is picking
    up the events, they will most likely reside in `/var/log/messages`.
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果没有运行审计守护进程，则 SELinux 日志事件将由系统日志记录器接收，或者通过内核环形缓冲区获取。可以使用`dmesg`命令读取内核环形缓冲区。如果系统日志记录器接收到事件，它们很可能会存储在`/var/log/messages`中。
- en: 'Applications that actively query the SELinux policy or SELinux system will
    link with the `libselinux` library. If that is the case, then this can be seen
    using `readelf`, `ldd,` or `objdump`, showing that `/lib64/libselinux.so.1` (or
    similar) is used:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主动查询 SELinux 策略或 SELinux 系统的应用程序将链接到 `libselinux` 库。如果是这种情况，可以使用 `readelf`、`ldd`
    或 `objdump` 查看，显示使用了 `/lib64/libselinux.so.1`（或类似文件）：
- en: '[PRE0]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The AVC, or Access Vector Cache, is a cache that contains the recent and most
    frequently used enforcement checks, allowing the SELinux subsystem to query more
    rapidly whether an action can be granted. Without the AVC, the SELinux subsystem
    would need to go through the entire policy over and over again for each action
    that is taken on the system.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AVC（访问向量缓存）是一个缓存，包含最近和最常用的强制检查，允许 SELinux 子系统更快速地查询是否可以授予某个操作。如果没有 AVC，SELinux
    子系统将需要一遍又一遍地遍历整个策略，检查系统上每个操作的权限。
- en: Suffice to say that this would slow down the system tremendously.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 仅此而已，这会极大地拖慢系统速度。
- en: No, there are a couple of other log events that administrators should look out
    for when specifically dealing with SELinux. One is `USER_AVC`, which is used for
    AVC-like events, but triggered from an application that uses the SELinux policy,
    and does the enforcements itself (rather than through the Linux kernel). The other
    one is `SELINUX_ERR`, which is used when an internal error or violation is triggered
    that is not related to regular type enforcement.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，还有一些其他日志事件，管理员在处理 SELinux 时需要注意。一个是 `USER_AVC`，它用于类似 AVC 的事件，但由使用 SELinux
    策略的应用程序触发，并且由应用程序自己执行强制（而不是通过 Linux 内核）。另一个是 `SELINUX_ERR`，当触发与常规类型强制无关的内部错误或违规时使用。
- en: Other event types that are closely related, but are not exclusive to SELinux,
    exist as well. For instance, `MAC_POLICY_LOAD`, `MAC_POLICY_CHANGE`, and `MAC_STATUS`
    are events that are triggered whenever a MAC system state or policy is changed.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 还有其他与 SELinux 密切相关，但并不专属于 SELinux 的事件类型。例如，`MAC_POLICY_LOAD`、`MAC_POLICY_CHANGE`
    和 `MAC_STATUS` 是每当 MAC 系统状态或策略更改时触发的事件。
- en: '[*Chapter 3*](B16276_03_Final_VK.xhtml#_idTextAnchor071)'
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 3 章*](B16276_03_Final_VK.xhtml#_idTextAnchor071)'
- en: There is an intermediate step needed to associate a role with a Linux account,
    and that is the SELinux user. A Linux account (or login) is mapped to an SELinux
    user. The SELinux user is then mapped to one or more SELinux roles that that SELinux
    user can be in.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 需要一个中间步骤来将角色与 Linux 账户关联，那就是 SELinux 用户。一个 Linux 账户（或登录）被映射到一个 SELinux 用户。然后，SELinux
    用户被映射到一个或多个 SELinux 角色，SELinux 用户可以属于这些角色。
- en: If we want to assign an additional role to a Linux user, we need to add it to
    the SELinux role that that Linux account is mapped to. However, if more Linux
    accounts are mapped to the same SELinux user, then we first need to make sure
    that all these accounts are indeed allowed to use this role. If not, a dedicated
    SELinux user has to be created for the Linux account.
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们想为 Linux 用户分配额外的角色，我们需要将其添加到该 Linux 账户所映射的 SELinux 角色中。然而，如果多个 Linux 账户映射到相同的
    SELinux 用户，则我们首先需要确保所有这些账户确实被允许使用此角色。如果不允许，则必须为该 Linux 账户创建一个专用的 SELinux 用户。
- en: Yes, the mappings are considered when a user logs in through a particular service.
    It is possible for administrators to tune the mappings to be dependent on the
    service, as seen in the *Customizing logins toward services* section.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，当用户通过特定服务登录时，会考虑这些映射。管理员可以调整映射，使其依赖于服务，如在 *定制服务登录* 部分所示。
- en: Most SELinux domains do not allow the SELinux user of a context to be changed.
    This allows the tracking of activities based on the SELinux user, even when the
    regular Linux user has changed their user ID. Note that this is not exclusive
    to SELinux, however. Linux does support a distinction between the real user ID
    (which stays static as much as possible) and the effective user ID (which can
    change, for instance, when executing a setuid application).
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 大多数 SELinux 域不允许更改上下文的 SELinux 用户。这使得可以根据 SELinux 用户跟踪活动，即使常规 Linux 用户已更改其用户
    ID。需要注意的是，这不仅限于 SELinux，Linux 也支持区分真实用户 ID（尽可能保持静态）和有效用户 ID（例如，在执行 setuid 应用程序时可能会变化）。
- en: SELinux users also allow granularity as regards the SELinux policy, for instance,
    when using user-based access control. In that case, SELinux users cannot access
    resources that are owned by a different SELinux user.
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: SELinux 用户还允许针对 SELinux 策略的粒度控制，例如，当使用基于用户的访问控制时。在这种情况下，SELinux 用户无法访问由其他 SELinux
    用户拥有的资源。
- en: PAM is a flexible, modular system that Linux uses to authenticate users. Rather
    than having all the different technologies and services on a system implement
    authentication over and over again, they use PAM to handle the authentication
    flow. Administrators only then need to focus on PAM or PAM-related configurations
    to ensure that their systems are properly accessed.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PAM 是一个灵活、模块化的系统，Linux 用于用户认证。系统上的各种技术和服务并不重复实现认证，而是通过 PAM 来处理认证流程。管理员只需关注 PAM
    或与 PAM 相关的配置，以确保系统的正确访问。
- en: For SELinux, PAM is needed to allow the authentication to check the mappings
    (between Linux users and SELinux users), which is supported through `pam_selinux.so`.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 SELinux，PAM 是必需的，它允许认证检查映射（在 Linux 用户和 SELinux 用户之间），这通过 `pam_selinux.so`
    得到支持。
- en: '[*Chapter 4*](B16276_04_Final_VK.xhtml#_idTextAnchor095)'
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 4 章*](B16276_04_Final_VK.xhtml#_idTextAnchor095)'
- en: The most common option is -Z, and is supported by tools such as ls, mv, and
    ps. The same character is also used by systemd's tmpfiles application to explicitly
    set SELinux contexts on resources. However, while this is the most commonly used
    option, not all tools follow this convention, so we recommend to always consult
    the tool's help or manual page.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最常用的选项是-Z，支持的工具包括 ls、mv 和 ps。相同的字符也被 systemd 的 tmpfiles 应用程序用来显式设置资源的 SELinux
    上下文。然而，虽然这是最常用的选项，并不是所有工具都遵循这个约定，因此我们建议始终查阅工具的帮助文档或手册页。
- en: In most cases, the context is stored as an extended attribute of the file or
    directory within the filesystem. This extended attribute is the `security.selinux`
    attribute, and can be queried with tools such as `getfattr` or `stat`.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在大多数情况下，上下文作为文件或目录在文件系统中的扩展属性进行存储。这个扩展属性是 `security.selinux` 属性，可以通过 `getfattr`
    或 `stat` 等工具查询。
- en: However, not all filesystems support extended attributes. In that case, the
    SELinux context is obtained through the mount options of that filesystem, and
    all resources on the filesystem then use the same context.
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，并不是所有文件系统都支持扩展属性。在这种情况下，SELinux 上下文是通过该文件系统的挂载选项获得的，所有文件系统上的资源都将使用相同的上下文。
- en: The `chcon` application directly alters the SELinux context for a file, but
    does not adjust the system's file context definitions. If, at any point in time,
    the system or an administrator relabels the file or the entire filesystem (which
    is a common remediation for SELinux issues), then the SELinux context of the file
    is changed back.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`chcon` 应用程序直接更改文件的 SELinux 上下文，但不会调整系统的文件上下文定义。如果系统或管理员在任何时候重新标记该文件或整个文件系统（这是
    SELinux 问题的常见修复方式），文件的 SELinux 上下文将被恢复。'
- en: Hence, `chcon` is only recommended for transient SELinux context changes or
    to validate whether a context change solves an issue. Once confident that the
    new context is needed, it should be registered in the system's file context definition
    through `semanage fcontext`.
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，`chcon` 仅推荐用于临时的 SELinux 上下文变更或验证上下文变更是否解决了问题。一旦确定新上下文是必要的，应通过 `semanage
    fcontext` 在系统的文件上下文定义中注册。
- en: Yes. While SELinux's tools have the concept of *most specific rule wins* for
    the context definitions provided by the Linux distribution, this concept does
    not apply to file context definitions that are local to the system (in other words,
    executed by the system administrator).
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的。虽然 SELinux 工具对 Linux 发行版提供的上下文定义有 *最具体规则优先* 的概念，但这个概念不适用于系统本地的文件上下文定义（换句话说，由系统管理员执行）。
- en: For locally defined file context definitions, the first rule that matches a
    patch will be used, regardless of the context definitions that follow.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于本地定义的文件上下文，匹配到的第一个规则将被使用，而不管后续的上下文定义是什么。
- en: If you only want to relabel a selected set of files, such as recursive applications
    to a given directory, the `restorecon` command should be used. If the entire filesystem
    needs to be relabeled, either use `fixfiles` (CentOS and related distributions)
    or `rlpkg` (Gentoo).
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果只想重新标记选定的一组文件，例如递归应用于某个目录，应使用 `restorecon` 命令。如果需要重新标记整个文件系统，可以使用 `fixfiles`（CentOS
    及相关发行版）或 `rlpkg`（Gentoo）。
- en: Another method is to create an empty file called `/.autorelabel` and reboot
    the system. The system will detect this file, relabel the entire filesystem, remove
    this file, and then reboot again.
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一种方法是创建一个空文件，命名为 `/.autorelabel`，然后重启系统。系统会检测到该文件，对整个文件系统进行重新标签化，删除该文件后再重新启动系统。
- en: The source domain needs the transition privilege vis-à-vis the target domain.
    It also requires the execute privilege on the executable file. This executable
    file has to be marked as an entry point for the target domain. Finally, the role
    for which a transition is to occur has to have the target domain as an allowed
    type.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 源域需要具备针对目标域的过渡权限。它还需要对可执行文件具备执行权限。该可执行文件必须被标记为目标域的入口点。最后，进行过渡的角色必须允许使用目标域作为类型。
- en: Multiple SELinux types can be assigned an SELinux attribute, and the SELinux
    policy can then use this attribute as a source or target for its rules. Such attribute-based
    rules then automatically apply to all types assigned from this attribute.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以将多个 SELinux 类型分配给一个 SELinux 属性，之后 SELinux 策略可以将此属性作为规则的源或目标。基于属性的规则将自动应用于所有分配该属性的类型。
- en: '[*Chapter 5*](B16276_05_Final_VK.xhtml#_idTextAnchor138)'
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第5章*](B16276_05_Final_VK.xhtml#_idTextAnchor138)'
- en: 'The command to apply a type to a TCP port is created with `semanage`. For instance,
    to apply the `ssh_port_t` type to TCP port `10122`, execute the following command:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于将类型应用于 TCP 端口的命令是通过 `semanage` 创建的。例如，要将 `ssh_port_t` 类型应用于 TCP 端口 `10122`，执行以下命令：
- en: '[PRE1]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If the port is part of an unreserved range, then it can be altered.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果端口属于一个未保留的范围，则可以进行修改。
- en: No, SECMARK is local to the system. Once a network packet is received by the
    Linux host, the SECMARK rules will associate a label with that network packet,
    but this label is only retained in memory on the system itself. Once a packet
    leaves the Linux system, it will not show any trace of SECMARK labeling.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不，SECMARK 是本地于系统的。一旦网络数据包被 Linux 主机接收，SECMARK 规则将为该数据包关联一个标签，但这个标签只会保留在系统内存中。一旦数据包离开
    Linux 系统，它将不再显示 SECMARK 标签的任何痕迹。
- en: The subcommands used by `semanage` are `ibendport` (to apply a label or sensitivity
    to an InfiniBand network port) and `ibpkey` (to apply a label or sensitivity to
    a partition key).
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`semanage` 使用的子命令有 `ibendport`（将标签或敏感性应用于 InfiniBand 网络端口）和 `ibpkey`（将标签或敏感性应用于分区密钥）。'
- en: While labeled IPsec itself does not require specialized equipment, it does require
    all participating hosts to have the same view on what each label implies. This
    means that all hosts, in the case of SELinux-based labeling, need to have SELinux
    active, and preferably with exactly the same SELinux policy.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 虽然标记的 IPsec 本身不需要专用设备，但它确实要求所有参与的主机对每个标签的含义有相同的理解。这意味着，在基于 SELinux 标记的情况下，所有主机需要启用
    SELinux，并且最好具有完全相同的 SELinux 策略。
- en: '[*Chapter 6*](B16276_06_Final_VK.xhtml#_idTextAnchor174)'
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第六章*](B16276_06_Final_VK.xhtml#_idTextAnchor174)'
- en: Ansible (using `setype` within the file module) and Puppet (using `seltype`
    in its file module) are the only two tools that have native support for explicitly
    setting SELinux contexts on resources. However, Chef will automatically relabel
    resources according to the defined file context rules, but you cannot natively
    override this behavior.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ansible（在文件模块中使用 `setype`）和 Puppet（在其文件模块中使用 `seltype`）是唯一两个原生支持显式设置资源的 SELinux
    上下文的工具。然而，Chef 会根据定义的文件上下文规则自动重新标记资源，但你无法原生覆盖此行为。
- en: Except for SaltStack, all orchestration tools have support for community-built
    and community-supported modules that extend native support of the tools. Ansible's
    Galaxy, Puppet's Forge, and Chef's Supermarket are the main communities for these
    customizations.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了 SaltStack，所有的编排工具都支持由社区构建和支持的模块，这些模块扩展了工具的原生支持。Ansible 的 Galaxy、Puppet 的
    Forge 和 Chef 的 Supermarket 是这些自定义模块的主要社区。
- en: All orchestration tools (including SaltStack) are flexible enough to use commands
    and simple checks to check state and make changes, effectively allowing administrators
    to customize the definitions to their liking.
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 所有编排工具（包括 SaltStack）都足够灵活，可以使用命令和简单的检查来检查状态并进行更改，从而有效地允许管理员根据自己的喜好自定义定义。
- en: All tools have their own view and design on how they approach things. Ansible,
    for instance, pushes its changes to the remote nodes, whereas the others generally
    use remote agents to connect to the central system to obtain the latest changes.
    SaltStack even supports both approaches.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有工具都有自己处理问题的视角和设计。例如，Ansible 将其更改推送到远程节点，而其他工具通常使用远程代理连接到中央系统以获取最新的更改。SaltStack
    甚至支持这两种方法。
- en: While all tools have some SELinux support included, some have many more SELinux
    features enabled out of the box than others. Luckily, through the use of the community-supported
    additions (modules), the SELinux support for almost all of the orchestration tools
    can easily be augmented.
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然所有工具都包含了一些 SELinux 支持，但有些工具启用了更多的 SELinux 特性。幸运的是，通过使用社区支持的附加模块，几乎所有编排工具的
    SELinux 支持都可以轻松扩展。
- en: '[*Chapter 7*](B16276_07_Final_VK.xhtml#_idTextAnchor216)'
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第七章*](B16276_07_Final_VK.xhtml#_idTextAnchor216)'
- en: The unit files in `/usr/lib/systemd/system` are managed by the Linux distribution
    itself. Whenever a new update to the software is deployed on the system, these
    files are overwritten.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`/usr/lib/systemd/system` 中的单元文件由 Linux 发行版本身管理。每当系统上部署了新的软件更新时，这些文件就会被覆盖。'
- en: Modifications to unit files should be placed in `/etc/systemd/system` instead,
    as they overrule the settings in `/usr/lib/systemd`, and software deployments
    should not place any of their unit files in that location.
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 单元文件的修改应当放置在 `/etc/systemd/system` 中，因为它们会覆盖 `/usr/lib/systemd` 中的设置，并且软件部署不应将其单元文件放在该位置。
- en: The application is tmpfiles, and is part of the systemd suite. To have it reset
    a context, a configuration file has to be created (in `/etc/tmpfiles.d` for locally
    defined changes) and use the `z` directive (to reset the context of a single file)
    or the `Z` directive (to recursively set the context of an entire directory).
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用程序是 tmpfiles，它是 systemd 套件的一部分。要让它重置上下文，必须创建一个配置文件（对于本地定义的更改，位于 `/etc/tmpfiles.d`
    中），并使用 `z` 指令（重置单个文件的上下文）或 `Z` 指令（递归地设置整个目录的上下文）。
- en: The `journalctl` command allows filtering on variables that it obtained from
    the event itself. One of these variables is the SELinux context of the service
    that generated the event.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`journalctl` 命令允许基于从事件本身获取的变量进行筛选。这些变量之一是生成该事件的服务的 SELinux 上下文。'
- en: '[PRE2]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If the SELinux policy itself does not have a proper named file transition rule
    in place (which would automatically have the node created with the correct SELinux
    context), then you can tell udev to do this for you.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 SELinux 策略本身没有合适的命名文件转换规则（该规则会自动创建带有正确 SELinux 上下文的节点），那么你可以告诉 udev 为你执行此操作。
- en: '[PRE3]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: No. The SELinux policy is only checked by D-Bus if the D-Bus policy file itself
    refers to an SELinux context (using the `busconfig` > `selinux` > `associate`
    XML entities). If no SELinux mapping is defined in the policy, then D-Bus cannot
    know which association to validate.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不行。只有当D-Bus策略文件本身引用了SELinux上下文（使用`busconfig` > `selinux` > `associate` XML实体）时，D-Bus才会检查SELinux策略。如果策略中未定义SELinux映射，则D-Bus无法知道要验证哪个关联。
- en: This is unlike the message flows, however, which are immediately governed by
    D-Bus through the SELinux policy.
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，这与消息流不同，消息流直接受D-Bus通过SELinux策略的管理。
- en: Apache can be made SELinux-aware because it has a modular design, and allows
    third-party modules to be applied to its own environment. While no SELinux support
    is enabled within the core Apache code, additional modules (such as `mod_selinux`)
    can be added that do enable SELinux support.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Apache可以使其支持SELinux，因为它具有模块化设计，并允许将第三方模块应用到其自身环境中。虽然核心Apache代码中没有启用SELinux支持，但可以添加额外的模块（如`mod_selinux`），这些模块会启用SELinux支持。
- en: '[*Chapter 8*](B16276_08_Final_VK.xhtml#_idTextAnchor237)'
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第8章*](B16276_08_Final_VK.xhtml#_idTextAnchor237)'
- en: It is, although it is not natively enabled. SEPostgreSQL is offered through
    one of the additionally supplied modules within PostgreSQL called `sepgsql`. As
    such, it is part of the default technology, but not enabled by default.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的，尽管它默认没有启用。SEPostgreSQL通过PostgreSQL中附加的一个模块提供，该模块名为`sepgsql`。因此，它是默认技术的一部分，但默认情况下并未启用。
- en: As the `sepgsql` module requires a session context, the PostgreSQL database
    needs to either only be accessed from the local system (using the Unix domain
    sockets), or labeled networking needs to be enabled and set up in the network.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于`sepgsql`模块需要一个会话上下文，PostgreSQL数据库需要仅从本地系统访问（使用Unix域套接字），或者需要在网络中启用并设置标签网络。
- en: Without labeled networking, any remote connection to the database will fail
    to provide any context information, and `sepgsql` will refuse the connection.
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果没有标签网络，任何远程连接到数据库的尝试将无法提供任何上下文信息，`sepgsql`将拒绝该连接。
- en: 'When a database object is created in PostgreSQL, it will automatically receive
    an SELinux label. Administrators or database owners can change the labels using
    the `SECURITY LABEL` statement in PostgreSQL:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当在PostgreSQL中创建数据库对象时，它将自动接收一个SELinux标签。管理员或数据库所有者可以使用PostgreSQL中的`SECURITY
    LABEL`语句更改标签：
- en: '[PRE4]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `sepgsql` module does not interact with the Linux audit subsystem, relying
    instead on the logging capabilities and interface used by PostgreSQL. As a result,
    any decision logging that `sepgsql` does will be found in the PostgreSQL system
    logs.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sepgsql`模块不与Linux审计子系统交互，而是依赖PostgreSQL使用的日志功能和接口。因此，`sepgsql`进行的任何决策日志都将记录在PostgreSQL系统日志中。'
- en: '[*Chapter 9*](B16276_09_Final_VK.xhtml#_idTextAnchor257)'
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第9章*](B16276_09_Final_VK.xhtml#_idTextAnchor257)'
- en: The unique idea that sVirt has that differentiates it from a more standard SELinux
    configuration is to use SELinux's MCS support to the next level. By randomly assigning
    two categories to a guest, sVirt can deal with isolating thousands of guests even
    when far fewer categories are available to use.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: sVirt与更标准的SELinux配置不同的独特之处在于，它将SELinux的MCS支持提升到了一个新的层次。通过随机为每个虚拟机分配两个类别，sVirt即使在可用类别数量较少时，也能处理隔离成千上万的虚拟机。
- en: 'The two main security measures that SELinux implements on top of the virtualization
    layer are as follows:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SELinux在虚拟化层之上实施的两项主要安全措施如下：
- en: '- Intra-guest isolation, ensuring that guests cannot attack one another, or
    leak information between guests'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 客户机内部隔离，确保客户机之间不能相互攻击或泄露信息'
- en: '- Guest/host isolation, ensuring that guests can only access and interact with
    the resources on the host that are needed'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 客户机/主机隔离，确保客户机只能访问并与主机上需要的资源进行交互'
- en: While both are, of course, also implemented within the hypervisor code, any
    design flaw could lead to high-impact problems. By implementing these isolations
    within SELinux, we use the strength of the SELinux subsystem as an independent
    (and much more flexible) access control system.
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尽管这两者当然也在虚拟化监控程序代码中实现，但任何设计缺陷都可能导致重大问题。通过在SELinux中实施这些隔离，我们利用SELinux子系统作为独立（且更灵活）访问控制系统的优势。
- en: The `virt_image_t` label is used for guest images when the guest is not running.
    Once it is running, the image is relabeled to `svirt_image_t` and assigned the
    correct set of categories. The `virt_content_t` label, on the other hand, is used
    for read-only media, such as CD images.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`virt_image_t`标签用于客户机镜像，当客户机未运行时。运行后，镜像会重新标记为`svirt_image_t`并分配正确的类别集合。另一方面，`virt_content_t`标签用于只读媒体，如CD镜像。'
- en: 'The labels can be changed by editing the guest''s XML information:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以通过编辑客户机的XML信息来更改标签：
- en: '[PRE5]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Vagrant, by default, does not have support for sVirt, but thanks to its plugin
    model, we can install the libvirt plugin for Vagrant. Once installed, Vagrant
    will use libvirt as its virtualization layer, automatically allowing us to use
    sVirt with Vagrant.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vagrant默认不支持sVirt，但通过其插件模型，我们可以为Vagrant安装libvirt插件。安装后，Vagrant将使用libvirt作为虚拟化层，自动允许我们在Vagrant中使用sVirt。
- en: '[*Chapter 10*](B16276_10_Final_VK.xhtml#_idTextAnchor279)'
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第10章*](B16276_10_Final_VK.xhtml#_idTextAnchor279)'
- en: SELinux works within the Linux kernel. Xen, however, is a hypervisor that sits
    between the hardware and the operating systems and does not use a full operating
    system as its base (unlike, for instance, QEMU and KVM).
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SELinux在Linux内核中工作。而Xen是一个位于硬件和操作系统之间的虚拟机监控器，并不像QEMU和KVM那样使用完整的操作系统作为基础。
- en: When we interact with Xen through Linux, we are actually interacting with Xen
    through the dom0 guest. Within this guest, SELinux can be running (and we even
    recommend it), but SELinux will remain within the virtualized guest.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当我们通过Linux与Xen交互时，实际上是通过dom0客户机与Xen进行交互。在这个客户机中，SELinux可以运行（我们甚至推荐这样做），但SELinux将保持在虚拟化客户机内。
- en: Xen, however, copied the SELinux approach and implemented it in its Xen Security
    Module framework.
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，Xen借鉴了SELinux的做法，并在其Xen安全模块框架中实现了这一方法。
- en: 'You can assign a label to a Xen guest by editing its configuration file (inside
    `/etc/xen`) and adding the `seclabel` parameter, like so:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过编辑Xen客户机的配置文件（位于`/etc/xen`目录）并添加`seclabel`参数来为其分配标签，格式如下：
- en: '[PRE6]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You will need to relaunch the guest for the changes to take effect. Once the
    guest is booted again (using `xl create`), you can see its active label using
    `xl list -Z`.
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你需要重新启动客户机才能使更改生效。一旦客户机重新启动（使用`xl create`），你可以通过`xl list -Z`查看其活动标签。
- en: What are the common Xen commands that deal with XSM labels?
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 处理XSM标签的常见Xen命令有哪些？
- en: 'The common commands to use are the following:'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 常用的命令如下：
- en: '- With `xl list -Z`, we can list the guests and their currently assigned labels.'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`xl list -Z`，我们可以列出客户机及其当前分配的标签。
- en: '- With `xl getenforce`, we can query the current enforcement state of XSM.'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`xl getenforce`，我们可以查询XSM的当前执行状态。
- en: '- With `xl setenforce`, we can set the new enforcement state of XSM.'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`xl setenforce`，我们可以设置XSM的新执行状态。
- en: '- With `xl dmesg`, we can see the Xen logging, including the XSM AVC log entries.'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`xl dmesg`，我们可以查看Xen日志，包括XSM AVC日志条目。
- en: '- With `flask-get-bool`, we can query the current XSM-FLASK Booleans and their
    values.'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`flask-get-bool`，我们可以查询当前的XSM-FLASK布尔值及其值。
- en: '- With `flask-set-bool`, we can set a new value for an XSM-FLASK Boolean.'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`flask-set-bool`，我们可以为XSM-FLASK布尔值设置一个新的值。
- en: '- With `flask-label-pci`, we can assign a new XSM-FLASK type to a PCI device.'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用`flask-label-pci`，我们可以为PCI设备分配一个新的XSM-FLASK类型。
- en: We can also use SELinux tools that can analyze a policy file, such as `seinfo`
    or `sesearch`.
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们还可以使用SELinux工具来分析策略文件，如`seinfo`或`sesearch`。
- en: The command to load a custom policy is `xl loadpolicy`, or `flask-loadpolicy`.
    As long as the new policy file is not put in `/boot` to be automatically picked
    up, this loaded policy will only be active until a reboot is done, or until a
    new policy is loaded.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载自定义策略的命令是`xl loadpolicy`，或者`flask-loadpolicy`。只要新策略文件没有放在`/boot`目录中以便自动加载，这个加载的策略将在重启或加载新策略之前一直处于活动状态。
- en: '[*Chapter 11*](B16276_11_Final_VK.xhtml#_idTextAnchor293)'
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第11章*](B16276_11_Final_VK.xhtml#_idTextAnchor293)'
- en: The `machinectl` command does not allow administrators to change the SELinux
    type of the running containers. This results in all containers running by default
    under an unconfined domain, whereas we want confined domains to be used—preferably
    even with sVirt support so that containers cannot influence one another either.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`machinectl`命令不允许管理员更改正在运行的容器的SELinux类型。这导致所有容器默认在未受限制的域中运行，而我们希望使用受限域——最好还能启用sVirt支持，这样容器就不能相互影响了。'
- en: 'When a container is launched with a location mapping, we should use the `:Z`
    option (in case of a private mapping) or the `:z` option (in case of a shared
    mapping) to ensure that the resources are relabeled with a container-accessible
    SELinux type:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当容器启动并进行位置映射时，应使用 `:Z` 选项（如果是私有映射）或 `:z` 选项（如果是共享映射），以确保资源被重新标记为容器可访问的 SELinux
    类型：
- en: '[PRE7]'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Without this option, the label of the resource remains untouched, which generally
    means that the container runtime cannot access the resource at all.
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果没有此选项，资源的标签将保持不变，这通常意味着容器运行时根本无法访问该资源。
- en: We can use the `udica` application to generate a custom policy. The application
    uses the information that is provided from a `podman inspect` (or `docker inspect`)
    command, which shows the current container definition, and builds a custom policy
    specific to that container.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用 `udica` 应用程序生成自定义策略。该应用程序使用 `podman inspect`（或 `docker inspect`）命令提供的信息，该命令显示当前的容器定义，并为该容器构建特定的自定义策略。
- en: The policy, once loaded, can then be used by the container through the `--security-opt`
    argument.
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 策略一旦加载，容器就可以通过 `--security-opt` 参数使用它。
- en: The main place for SELinux settings is inside the manifest under the `spec`
    configuration parameter. There, we can create the `securityContext` definition,
    which supports SELinux options through the `seLinuxOptions` object.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SELinux 设置的主要位置是在清单中的 `spec` 配置参数下。在那里，我们可以创建 `securityContext` 定义，通过 `seLinuxOptions`
    对象支持 SELinux 选项。
- en: '[*Chapter 12*](B16276_12_Final_VK.xhtml#_idTextAnchor312)'
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 12 章*](B16276_12_Final_VK.xhtml#_idTextAnchor312)'
- en: When SELinux Booleans are changed through the `/sys/fs/selinux/booleans` filesystem,
    the changes are not automatically committed. For that to occur, you also need
    to write the value `1` into `/sys/fs/selinux/commit_pending_bools`.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 SELinux 布尔值通过 `/sys/fs/selinux/booleans` 文件系统进行更改时，更改不会自动提交。为了实现这一点，还需要将值
    `1` 写入 `/sys/fs/selinux/commit_pending_bools`。
- en: The `sesearch` command is used to query the active policy, and can be used to
    query the impact of SELinux Booleans as well. Add the `-b <boolean>` argument
    to limit the query to rules that are influenced by the SELinux Boolean.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sesearch` 命令用于查询活动策略，也可以用于查询 SELinux 布尔值的影响。添加 `-b <boolean>` 参数可以将查询限制为受
    SELinux 布尔值影响的规则。'
- en: When an SELinux policy module is loaded, it is assigned a priority that tells
    the system whether it should be the active module. Administrators can load new
    modules at a higher priority to test them out, and remove them again, without
    risking that no proper SELinux rules are active on the system at all.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当 SELinux 策略模块加载时，它会被分配一个优先级，告诉系统是否应为活动模块。管理员可以以更高的优先级加载新模块进行测试，并再次删除它们，而不会冒着系统上没有有效
    SELinux 规则的风险。
- en: Likewise, administrators can load a policy at a lower priority, ensuring that
    it is not yet active, and later on remove the module at the higher priority so
    that the newly loaded policy becomes active.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 同样，管理员可以以较低的优先级加载策略，确保它尚未激活，稍后再以较高优先级移除模块，使得新加载的策略变为活跃。
- en: This is unlike enabling or disabling modules, which affects all priorities.
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这不同于启用或禁用模块，这会影响所有优先级。
- en: 'The SELinux utility `audit2allow` transforms all SELinux-related audit events
    into SELinux policy code. The code can use both the legacy style (using `-M`)
    or the reference policy style (using `-R -M`). Regardless of the style chosen,
    a loadable SELinux policy module (with the suffix `.pp`) will be created:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SELinux 工具 `audit2allow` 将所有与 SELinux 相关的审计事件转换为 SELinux 策略代码。该代码可以使用传统样式（使用
    `-M`）或参考策略样式（使用 `-R -M`）。无论选择哪种样式，都将创建一个可加载的 SELinux 策略模块（后缀为 `.pp`）：
- en: '[PRE8]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[*Chapter 13*](B16276_13_Final_VK.xhtml#_idTextAnchor330)'
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 13 章*](B16276_13_Final_VK.xhtml#_idTextAnchor330)'
- en: The `seinfo` application is used to query the policy for its type content, but
    not for its rules. For instance, you list the types within the policy with `seinfo`,
    but you don't query what these types can do.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`seinfo` 应用程序用于查询策略的类型内容，但不查询其规则。例如，您可以使用 `seinfo` 列出策略中的类型，但不会查询这些类型可以做什么。'
- en: The `sesearch` application, on the other hand, is used to query the rules within
    the policy, but does not reveal anything about the various definitions inside
    the policy that are not really rules (such as attribute definitions and supported
    classes).
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一方面，`sesearch` 应用程序用于查询策略中的规则，但不会显示策略中不是真正规则的各种定义（如属性定义和支持的类别）。
- en: Hence, the main difference is that `seinfo` focuses on the structure of the
    policy, whereas `sesearch` focuses on the enforcements defined within the policy.
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，主要的区别在于 `seinfo` 侧重于策略的结构，而 `sesearch` 侧重于策略中定义的强制执行内容。
- en: Reaching a domain implies domain transitions. Hence, what we are looking for
    is how you can transition from your current domain (say `staff_t`) to the target
    domain (say `unconfined_t`) and through which means—generally, this is done by
    executing a binary or script that triggers a type transition.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 达到一个域意味着域转换。因此，我们要寻找的是你如何从当前域（例如 `staff_t`）转换到目标域（例如 `unconfined_t`），以及通过何种方式—通常，这是通过执行触发类型转换的二进制文件或脚本来完成的。
- en: Analyzing domain transitions can be done using `apol` (the graphical user interface),
    `sedta`, or `sepolicy transition`. However, the latter might not reveal the correct
    paths, so it is recommended to use `sedta` or `apol` for this.
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 分析域转换可以使用 `apol`（图形用户界面）、`sedta` 或 `sepolicy transition` 来完成。然而，后者可能无法揭示正确的路径，因此推荐使用
    `sedta` 或 `apol` 进行分析。
- en: Information flow analysis has to take up considerably more paths than a domain
    transition. Domain transitions are between process domains, and only a small number
    of actions can trigger a transition. Information flow, on the other hand, can
    be effected over many, many actions.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 信息流分析必须涵盖比域转换更多的路径。域转换发生在进程域之间，只有少数操作可以触发转换。另一方面，信息流可以通过许多许多操作来实现。
- en: Such analysis not only needs to consider read and write statements, but also
    file descriptor usage, socket usage, signaling, the locking and unlocking of resources,
    and more besides. As a result, information flow analysis uses permission maps
    to identify the various permissions to check, and how important (weight) a permission
    is for an information flow analysis session.
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这样的分析不仅需要考虑读写语句，还要考虑文件描述符使用、套接字使用、信号传递、资源的锁定与解锁等。结果是，信息流分析使用权限映射来识别要检查的各种权限，以及一个权限在信息流分析会话中的重要性（权重）。
- en: Not using the tools currently at hand. The tool that compares policies, `sediff`,
    shows the differences between the policies, but is not, by itself, capable of
    generating SELinux policies that contain the differences between policies.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当前没有使用手头的工具。用于比较策略的工具 `sediff` 显示策略之间的差异，但它本身不能生成包含策略差异的 SELinux 策略。
- en: Furthermore, SELinux policy modules can only add additional rules to the active
    policy, not remove them. Hence, even if `sediff` generated compatible output,
    it would still not be able to generate any statements that would remove existing
    rules from the active policy.
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，SELinux 策略模块只能向活动策略添加额外的规则，而不能删除它们。因此，即使 `sediff` 生成了兼容的输出，它仍然无法生成任何删除活动策略中现有规则的语句。
- en: '[*Chapter 14*](B16276_14_Final_VK.xhtml#_idTextAnchor354)'
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第14章*](B16276_14_Final_VK.xhtml#_idTextAnchor354)'
- en: An unconfined domain is still fully controlled and enforced by SELinux. It is
    called unconfined because such domains are granted extensive privileges by the
    SELinux policy. However, unlike what the name implies, they are still somewhat
    confined.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 非限制性域仍然完全由 SELinux 控制并强制执行。之所以称为非限制性，是因为这些域在 SELinux 策略中被赋予了广泛的权限。然而，尽管名字中如此表示，它们仍然在某种程度上是受限的。
- en: Permissive domains, on the contrary, are not confined. SELinux will only log
    violations against the policy, but it will not enforce them.
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 相反，宽容域不受限制。SELinux 只会记录违反策略的行为，但不会强制执行这些行为。
- en: The SELinux sandbox utility can be used to run applications in a very restricted
    domain. The utility will both force the application to run in a very restricted
    domain (`sandbox_t` for regular, non-graphical end user applications, or `sandbox_xserver_t`
    for graphical applications), as well as isolate or hide access to other system
    resources through the use of Linux's namespaces.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SELinux 沙箱工具可以用来在一个非常受限的域中运行应用程序。该工具将强制应用程序在非常受限的域中运行（对于常规非图形终端用户应用程序为 `sandbox_t`，对于图形应用程序为
    `sandbox_xserver_t`），并通过使用 Linux 的命名空间功能，隔离或隐藏对其他系统资源的访问。
- en: When the init system (such as systemd) launches a daemon, it will execute a
    specific binary or script for it. The label of this binary or script will generally
    define the target domain. For instance, if the resource is labeled with `bin_t`,
    then systemd will make sure that the target service runs as `unconfined_service_t`.
    If it is labeled with `postgresql_exec_t`, then the target service will run with
    the `postgresql_t` type.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当初始化系统（如systemd）启动一个守护进程时，它会为该守护进程执行一个特定的二进制文件或脚本。该二进制文件或脚本的标签通常会定义目标域。例如，如果资源的标签为`bin_t`，那么systemd将确保目标服务以`unconfined_service_t`身份运行。如果它被标记为`postgresql_exec_t`，则目标服务将以`postgresql_t`类型运行。
- en: While other permissions are also involved (such as the source context requiring
    transition permissions to the target), unless we are building a new policy from
    scratch, switching domains will be as simple as changing the label for its executable
    resource, and relabeling its main locations on the filesystem (such as log locations
    and runtime information).
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尽管也涉及到其他权限（如源上下文要求过渡权限到目标），除非我们从头开始构建新策略，否则切换域将像更改其可执行资源的标签，并重新标记其在文件系统中的主要位置（如日志位置和运行时信息）一样简单。
- en: The default skeleton application that `sepolicy generate` builds contains the
    `permissive` statement, which implies that the policy will run in a permissive
    mode. Since this means SELinux will not enforce any controls, it is very likely
    that the application will work flawlessly with this policy enabled.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sepolicy generate`生成的默认骨架应用程序包含`permissive`语句，这意味着策略将在宽松模式下运行。由于这意味着SELinux不会执行任何控制，因此启用此策略时，应用程序很可能会完美运行。'
- en: That is, however, not the target state, and administrators will need to remove
    the `permissive` setting from the policy and adjust as needed.
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然而，这并不是目标状态，管理员需要从策略中移除`permissive`设置并根据需要进行调整。
- en: '[*Chapter 15*](B16276_15_Final_VK.xhtml#_idTextAnchor373)'
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第十五章*](B16276_15_Final_VK.xhtml#_idTextAnchor373)'
- en: Many Linux distributions add services and tools that fit the distribution's
    purpose and principles, yet which might be contradictory to what the reference
    policy is about. For instance, Red Hat Enterprise Linux and its derived Linux
    distributions will enable unconfined domains for many applications, whereas the
    reference policy will strive toward confinement of all applications.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 许多Linux发行版增加了符合发行版目的和原则的服务和工具，但这些可能与参考策略所描述的内容相矛盾。例如，Red Hat Enterprise Linux及其衍生的Linux发行版会为许多应用启用未限制域，而参考策略则会力求限制所有应用程序。
- en: As a result, many Linux distributions base their policy on the reference policy,
    but augment and adjust it for their specific purpose.
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，许多Linux发行版基于参考策略制定其策略，但会根据特定目的进行增强和调整。
- en: 'The three main policy files are the following:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 三个主要的策略文件如下：
- en: '- A type enforcement file, with the suffix `.te`, which contains the rules
    for the SELinux policy module, focusing on its owned domains.'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 一个类型强制文件，后缀为`.te`，它包含SELinux策略模块的规则，专注于其拥有的域。'
- en: '- An interface file, with the suffix `.if`, which exposes the interaction patterns
    and privileges vis-à-vis the domains and resources owned by this SELinux policy
    module. These interfaces are then used by other SELinux policy modules.'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 一个接口文件，后缀为`.if`，它暴露了与该SELinux策略模块所拥有的域和资源之间的交互模式和权限。这些接口随后会被其他SELinux策略模块使用。'
- en: '- A context file, with the suffix `.fc`, which contains the file contexts for
    the various paths related to this SELinux policy module.'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 一个上下文文件，后缀为`.fc`，它包含与此SELinux策略模块相关的各种路径的文件上下文。'
- en: Policy modules can be created with only a single file. In that case, the build
    system will assume that the other files are empty.
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 策略模块可以通过单个文件创建。在这种情况下，构建系统将假定其他文件为空。
- en: The use of a permission set allows policy developers to easily adjust and extend
    the permission set when needed, without having to change all possible SELinux
    policy module code entries.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用权限集允许策略开发人员在需要时轻松调整和扩展权限集，而无需更改所有可能的SELinux策略模块代码条目。
- en: This is especially critical when a new permission is added by Linux (and the
    SELinux subsystem). For instance, suppose that the memory map system call (`map`)
    was not present yet, and is introduced later. We would need to add the map privilege
    to all execute calls. By using permission sets, we can add this to the appropriate
    permission set only.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当 Linux（及 SELinux 子系统）添加新权限时，这一点尤其重要。例如，假设内存映射系统调用（`map`）尚不存在，并在之后被引入。我们需要将
    map 权限添加到所有执行调用中。通过使用权限集，我们可以仅将其添加到适当的权限集中。
- en: Interfaces will grant privileges to domains or roles. They do not add or remove
    SELinux objects to the policy. Templates, on the other hand, will generate new
    SELinux types, roles, Booleans, or other objects. As a consequence, templates
    are not allowed to be called from within any Boolean-triggered block.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接口将授予领域或角色特权。它们不会向策略中添加或删除 SELinux 对象。而模板则会生成新的 SELinux 类型、角色、布尔值或其他对象。因此，不允许从任何布尔触发块内调用模板。
- en: The database administration role does not use `userdom_admin_user_template`
    because it is not a system-wide administration role, but very specific to databases.
    `userdom_admin_user_template` would grant the role many more privileges than are
    needed to administer databases.
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据库管理角色不使用 `userdom_admin_user_template`，因为它不是一个系统范围的管理角色，而是非常特定于数据库的。`userdom_admin_user_template`
    会授予该角色比管理数据库所需的更多权限。
- en: '[*Chapter 16*](B16276_16_Final_VK.xhtml#_idTextAnchor391)'
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第 16 章*](B16276_16_Final_VK.xhtml#_idTextAnchor391)'
- en: 'The SELinux **Common Intermediate Language** (**CIL**) is not an extension
    to SELinux that can be easily removed. It is at the heart of SELinux policy development
    and support, although mainly under the hood: all SELinux policy modules that are
    loaded on the system are first converted into CIL before actually being loaded
    in memory.'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SELinux 的**通用中间语言**（**CIL**）不是一个可以轻易删除的 SELinux 扩展。它是 SELinux 策略开发和支持的核心，尽管主要处于幕后：所有加载到系统中的
    SELinux 策略模块都会先转换为 CIL，然后才会被加载到内存中。
- en: The CIL format is the only format used to interact with the Linux kernel and
    the SELinux subsystem. Because it is used as part of the SELinux user space utilities,
    it is not always as obvious to administrators or developers, but it is definitely
    a core component within SELinux.
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: CIL 格式是与 Linux 内核和 SELinux 子系统交互的唯一格式。由于它作为 SELinux 用户空间工具的一部分使用，因此管理员或开发人员不总是能立即察觉，但它绝对是
    SELinux 的核心组件。
- en: No, it is not mandatory, but is recommended. The attribute is used to refer
    to types and roles in a modular fashion, and to ensure that these references are
    valid. CIL internally requires types and roles to be defined before they are used,
    and without using an attribute to force such declarations, the order of loading
    modules might result in failures.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不是强制性的，但建议使用。该属性用于以模块化的方式引用类型和角色，并确保这些引用是有效的。CIL 内部要求在使用之前先定义类型和角色，若不使用属性强制此类声明，则模块加载顺序可能会导致失败。
- en: While other attributes could be declared for this purpose, or other means introduced,
    the use of the `cil_gen_require` attribute is supported through the SELinux user
    space utilities. As such, aligning with this practice is recommended.
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 虽然可以声明其他属性或引入其他方法来实现此目的，但通过 SELinux 用户空间工具支持使用 `cil_gen_require` 属性。因此，建议遵循这一做法。
- en: With CIL, developers can create additional port mappings, declaring a new type
    and assigning it to an available port. With other SELinux language styles, this
    is only possible when rebuilding the entire policy rather than through the modules.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 CIL，开发人员可以创建额外的端口映射，声明一个新类型并将其分配给一个可用端口。使用其他 SELinux 语言风格时，这只能在重建整个策略时实现，而不是通过模块来实现。
- en: Another example is to introduce constraints. SELinux constraints are not supported
    to be loaded in SELinux modules using other language styles. However, while constraints
    are a powerful construct within SELinux, they can be confusing for administrators
    as constraint-related failures do not result in obvious messages, and administrators
    who query the current policy for allow rules may notice that allow rules exist
    even though things still fail.
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 另一个例子是引入约束。SELinux 约束不支持通过其他语言风格在 SELinux 模块中加载。然而，尽管约束是 SELinux 中强大的构造，它们可能会让管理员感到困惑，因为与约束相关的失败不会产生明显的消息，而查询当前策略中的允许规则的管理员可能会发现即使出现失败，仍然存在允许规则。
- en: CIL supports macros, which are made part of the SELinux module (and the namespace),
    and which can be called using the `call` statement from elsewhere in the SELinux
    policy. We can create macros as part of a module to be similar to interfaces in
    reference policy, while creating macros as part of the global namespace to be
    similar to the support macros in reference policy.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CIL 支持宏，这些宏成为 SELinux 模块（和命名空间）的一部分，可以通过 SELinux 策略中的 `call` 语句从其他地方调用。我们可以将宏作为模块的一部分创建，类似于参考策略中的接口，同时将宏作为全局命名空间的一部分创建，类似于参考策略中的支持宏。
