- en: 27\. Setting Up a CentOS 8 Web Server
  prefs: []
  type: TYPE_NORMAL
- en: Among the many packages that make up the CentOS 8 operating system is the Apache
    web server. In fact the scalability and resilience of CentOS 8 makes it an ideal
    platform for hosting even the most heavily trafficked web sites.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter we will explain how to configure a CentOS 8 system using Apache
    to act as a web server, including both secure (HTTPS) and insecure (HTTP) configurations.
  prefs: []
  type: TYPE_NORMAL
- en: 27.1 Requirements for Configuring a CentOS 8 Web Server
  prefs: []
  type: TYPE_NORMAL
- en: To set up your own web site you need a computer (or cloud server instance),
    an operating system, a web server, a domain name, a name server and an IP address.
  prefs: []
  type: TYPE_NORMAL
- en: In terms of an operating system, we will, of course, assume you are using CentOS
    8\. As previously mentioned, CentOS 8 supports the Apache web server which can
    easily be installed once the operating system is up and running. A domain name
    can be registered with any domain name registration service.
  prefs: []
  type: TYPE_NORMAL
- en: If you are running CentOS 8 on a cloud instance, the IP address assigned by
    the provider will be listed in the server overview information. If you are hosting
    your own server and your internet service provider (ISP) has assigned a static
    IP address then you will need to associate your domain with that address. This
    is achieved using a name server and all domain registration services will provide
    this service for you.
  prefs: []
  type: TYPE_NORMAL
- en: If you do not have a static IP address (i.e. your ISP provides you with a dynamic
    address which changes frequently) then you can use one of a number of free Dynamic
    DNS (DDNS or DynDNS for short) services which map your dynamic IP address to your
    domain name.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have your domain name and your name server configured the next step
    is to install and configure your web server.
  prefs: []
  type: TYPE_NORMAL
- en: 27.2 Installing the Apache Web Server Packages
  prefs: []
  type: TYPE_NORMAL
- en: 'The current release of CentOS typically does not install the Apache web server
    by default. To check whether the server is already installed, run the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: rpm -q httpd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If rpm generates output similar to the following, the apache server is already
    installed:'
  prefs: []
  type: TYPE_NORMAL
- en: httpd-2.4.35-6.el8+2089+57a79027.x86_64
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, if rpm generates a “package httpd is not installed” message
    then the next step, obviously, is to install it. To install Apache, run the following
    command at the command prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: dnf install httpd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 27.3 Configuring the Firewall
  prefs: []
  type: TYPE_NORMAL
- en: 'Before starting and testing the Apache web server, the firewall will need to
    be modified to allow the web server to communicate with the outside world. By
    default, the HTTP and HTTPS protocols use ports 80 and 443 respectively so, depending
    on which protocols are being used, either one or both of these ports will need
    to be opened. When opening the ports, be sure to specify the firewall zone that
    applies to the internet facing network connection:'
  prefs: []
  type: TYPE_NORMAL
- en: firewall-cmd --permanent --zone=<zone> --add-port=80/tcp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: firewall-cmd --permanent --zone=<zone> --add-port=443/tcp
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After opening the necessary ports, be sure to reload the firewall settings:'
  prefs: []
  type: TYPE_NORMAL
- en: firewall-cmd --reload
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: On cloud hosted servers, it may also be necessary to enable the appropriate
    port for the server instance within the cloud console. Check the documentation
    for the cloud provider for steps on how to do this.
  prefs: []
  type: TYPE_NORMAL
- en: 27.4 Port Forwarding
  prefs: []
  type: TYPE_NORMAL
- en: If the CentOS 8 system hosting the web server sits on a network protected by
    a firewall (either another computer running a firewall, or a router or wireless
    base station containing built-in firewall protection) you will need to configure
    the firewall to forward port 80 and/or port 443 to your web server system. The
    mechanism for performing this differs between firewalls and devices so check your
    documentation to find out how to configure port forwarding.
  prefs: []
  type: TYPE_NORMAL
- en: 27.5 Starting the Apache Web Server
  prefs: []
  type: TYPE_NORMAL
- en: Once the Apache server is installed and the firewall configured, the next step
    is to verify that the server is running and start it if necessary.
  prefs: []
  type: TYPE_NORMAL
- en: 'To check the status of the Apache httpd service from the command-line, enter
    the following at the command-prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl status httpd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If the above command indicates that the httpd service is not running, it can
    be launched from the command-line as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl start httpd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you would like the Apache httpd service to start automatically when the
    system boots, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl enable httpd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 27.6 Testing the Web Server
  prefs: []
  type: TYPE_NORMAL
- en: Once the installation is complete the next step is to verify the web server
    is up and running.
  prefs: []
  type: TYPE_NORMAL
- en: 'The first step is to add a file to the default web site folder. In a terminal
    window, change directory to /var/www/html and create a new file named index.html
    with the following HTML content:'
  prefs: []
  type: TYPE_NORMAL
- en: <html>
  prefs: []
  type: TYPE_NORMAL
- en: <title>CentOS Apache Test Page</title>
  prefs: []
  type: TYPE_NORMAL
- en: <body>
  prefs: []
  type: TYPE_NORMAL
- en: <h1>Welcome to CentOS</h1>
  prefs: []
  type: TYPE_NORMAL
- en: <p>Apache is working.</p>
  prefs: []
  type: TYPE_NORMAL
- en: </body>
  prefs: []
  type: TYPE_NORMAL
- en: </html>
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have access (either locally or remotely) to the desktop environment
    of the server, simply start up a web browser and enter http://127.0.0.1 in the
    address bar (127.0.0.1 is the loop-back network address which tells the system
    to connect to the local machine). If everything is set up correctly, the browser
    should load the page shown in [Figure 27-1](../Text/Web_Server.xhtml#_idTextAnchor339):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/centos_8_apache_test_page.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 27-1
  prefs: []
  type: TYPE_NORMAL
- en: If the desktop environment is not available, connect either from another system
    on the same local network as the server, or using the external IP address assigned
    to the system if it is hosted remotely.
  prefs: []
  type: TYPE_NORMAL
- en: 27.7 Configuring the Apache Web Server for Your Domain
  prefs: []
  type: TYPE_NORMAL
- en: The next step in setting up your web server is to configure it for your domain
    name. To configure the web server, begin by changing directory to /etc/httpd which,
    in turn, contains a number of sub-directories. Change directory into the conf
    sub-directory where you will find a file named httpd.conf containing the configuration
    settings for the Apache server.
  prefs: []
  type: TYPE_NORMAL
- en: Edit the httpd.conf file using your preferred editor with super-user privileges
    to ensure you have write permission to the file. Once loaded, there are a number
    of settings that need to be changed to match your environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'The most common way to configure Apache for a specific domain is to add virtual
    host entries to the httpd.conf file. This has the advantage of allowing a single
    Apache server to support multiple web sites simply by adding a virtual host entry
    for each site domain. Within the httpd.conf file, add a virtual host entry for
    your domain as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: <VirtualHost *:80>
  prefs: []
  type: TYPE_NORMAL
- en: ServerAdmin feedback@myexample.com
  prefs: []
  type: TYPE_NORMAL
- en: ServerName www.myexample.com
  prefs: []
  type: TYPE_NORMAL
- en: DocumentRoot /var/www/myexample
  prefs: []
  type: TYPE_NORMAL
- en: ErrorLog logs/myexample_error_log
  prefs: []
  type: TYPE_NORMAL
- en: CustomLog logs/myexample_access_log combined
  prefs: []
  type: TYPE_NORMAL
- en: </VirtualHost>
  prefs: []
  type: TYPE_NORMAL
- en: The ServerAdmin directive in the above virtual host entry defines an administrative
    email address for people wishing to contact the web master for your site. Change
    this to an appropriate email address where you can be contacted.
  prefs: []
  type: TYPE_NORMAL
- en: Next, the ServerName is declared so that the web server knows the domain name
    associated with this virtual host.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since each web site supported by the server will have its own set of files,
    the DocumentRoot setting is used to specify the location of the files for this
    web site domain. The tradition is to use /var/www/domain-name, for example:'
  prefs: []
  type: TYPE_NORMAL
- en: DocumentRoot /var/www/myexample
  prefs: []
  type: TYPE_NORMAL
- en: Finally, entries are added for the access history and error log files.
  prefs: []
  type: TYPE_NORMAL
- en: 'Create the /var/www/<domain name> directory as declared in the httpd.conf file
    and place an index.html file in it containing some basic HTML. For example:'
  prefs: []
  type: TYPE_NORMAL
- en: <html>
  prefs: []
  type: TYPE_NORMAL
- en: <title>Sample Web Page</title>
  prefs: []
  type: TYPE_NORMAL
- en: <body>
  prefs: []
  type: TYPE_NORMAL
- en: Welcome to MyExample.com
  prefs: []
  type: TYPE_NORMAL
- en: </body>
  prefs: []
  type: TYPE_NORMAL
- en: </html>
  prefs: []
  type: TYPE_NORMAL
- en: 'The last step is to restart the httpd service to make sure it picks up our
    new settings:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl restart httpd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Finally, check that the server configuration is working by opening a browser
    window and navigating to the site using the domain name instead of the IP address.
    The web page that loads should be the one defined in the index.html file created
    above.
  prefs: []
  type: TYPE_NORMAL
- en: 27.8 The Basics of a Secure Web Site
  prefs: []
  type: TYPE_NORMAL
- en: The web server and web site created so far in this chapter use the HTTP protocol
    on port 80 and, as such, is considered to be insecure. The problem is that the
    traffic between the web server and the client (typically a user’s web browser)
    is transmitted in clear text. In other words the data is unencrypted and susceptible
    to interception. While not a problem for general web browsing, this is a serious
    weakness when performing tasks such as logging into web sites or transferring
    sensitive information such as identity or credit card details.
  prefs: []
  type: TYPE_NORMAL
- en: These days, web sites are expected to use HTTPS which uses either Secure Socket
    Layer (SSL) or Transport Layer Security (TLS) to establish secure, encrypted communication
    between web server and client. This security is established through the use of
    public, private and session encryption together with certificates.
  prefs: []
  type: TYPE_NORMAL
- en: To support HTTPS, a web site must have a certificate issued by a trusted authority
    known as a Certificate Authority (CA). When a browser connects to a secure web
    site, the web server sends back a copy of the web site’s SSL certificate which
    also contains a copy of the site’s public key. The browser then validates the
    authenticity of the certificate with trusted certificate authorities.
  prefs: []
  type: TYPE_NORMAL
- en: If the certificate is found to be valid, the browser uses the public key sent
    by the server to encrypt a session key and passes it to the server. The server
    decrypts the session key using the private key and uses it to send an encrypted
    acknowledgment to the browser. Once this process is complete, the browser and
    server use the session key to encrypt all subsequent data transmissions until
    the session ends.
  prefs: []
  type: TYPE_NORMAL
- en: 27.9 Configuring Apache for HTTPS
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, the Apache server does not include the necessary module to implement
    a secure HTTPS web site. The first step, therefore, is to install the Apache mod_ssl
    module on the server system as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: dnf install mod_ssl
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Restart httpd after the installation completes to load the new module into
    the Apache server:'
  prefs: []
  type: TYPE_NORMAL
- en: systemctl restart httpd
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Check that the module has loaded into the server using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: apachectl -M | grep ssl_module
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ssl_module (shared)
  prefs: []
  type: TYPE_NORMAL
- en: Assuming that the module is installed, the next step is to generate an SSL certificate
    for the web site.
  prefs: []
  type: TYPE_NORMAL
- en: 27.10 Obtaining an SSL Certificate
  prefs: []
  type: TYPE_NORMAL
- en: 'The certificate for a web site must be obtained from a Certificate Authority.
    A number of options are available at a range of prices. By far the best option,
    however, is to obtain a free certificate from Let’s Encrypt at the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: https://letsencrypt.org/
  prefs: []
  type: TYPE_NORMAL
- en: The process of obtaining a certificate from Let’s Encrypt simply involves installing
    and running the Certbot tool. This tool will scan the httpd.conf file on the server
    and provides the option to generate certificates for any virtual hosts configured
    on the system. It will then generate the certificate and add virtual host entries
    to the Apache configuration specifically for the corresponding web sites.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow the steps on the Let’s Encrypt web site to download and install Certbot
    on your CentOS 8 system, then run the certbot tool as follows to generate and
    install the certificate:'
  prefs: []
  type: TYPE_NORMAL
- en: certbot --apache
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After requesting an email address and seeking terms of service acceptance,
    Certbot will list the domains found in the httpd.conf file and provide the option
    to select one or more of those sites for which a certificate is to be installed.
    Certbot will then perform some checks before obtaining and installing the certificate
    on the system:'
  prefs: []
  type: TYPE_NORMAL
- en: Which names would you like to activate HTTPS for?
  prefs: []
  type: TYPE_NORMAL
- en: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - -'
  prefs: []
  type: TYPE_NORMAL
- en: '1: www.myexample.com'
  prefs: []
  type: TYPE_NORMAL
- en: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - -'
  prefs: []
  type: TYPE_NORMAL
- en: Select the appropriate numbers separated by commas and/or spaces, or leave input
  prefs: []
  type: TYPE_NORMAL
- en: 'blank to select all options shown (Enter ‘c’ to cancel): 1'
  prefs: []
  type: TYPE_NORMAL
- en: Obtaining a new certificate
  prefs: []
  type: TYPE_NORMAL
- en: 'Performing the following challenges:'
  prefs: []
  type: TYPE_NORMAL
- en: http-01 challenge for www.myexample.com
  prefs: []
  type: TYPE_NORMAL
- en: Waiting for verification...
  prefs: []
  type: TYPE_NORMAL
- en: Cleaning up challenges
  prefs: []
  type: TYPE_NORMAL
- en: Created an SSL vhost at /etc/httpd/conf/httpd-le-ssl.conf
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Certificate to VirtualHost /etc/httpd/conf/httpd-le-ssl.conf
  prefs: []
  type: TYPE_NORMAL
- en: Enabling site /etc/httpd/conf/httpd-le-ssl.conf by adding Include to root configuration
  prefs: []
  type: TYPE_NORMAL
- en: 'Certbot will also have created a new file named httpd-le-ssl.conf in the /etc/httpd/conf
    directory containing a secure virtual host entry for each domain name for which
    a certificate has been generated. These entries will be similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: <IfModule mod_ssl.c>
  prefs: []
  type: TYPE_NORMAL
- en: <VirtualHost *:443>
  prefs: []
  type: TYPE_NORMAL
- en: ServerAdmin feedback@myexample.com
  prefs: []
  type: TYPE_NORMAL
- en: ServerName www.myexample.com
  prefs: []
  type: TYPE_NORMAL
- en: DocumentRoot /var/www/myexample
  prefs: []
  type: TYPE_NORMAL
- en: ErrorLog logs/myexample_error_log
  prefs: []
  type: TYPE_NORMAL
- en: CustomLog logs/myexample_access_log combined
  prefs: []
  type: TYPE_NORMAL
- en: SSLCertificateFile /etc/letsencrypt/live/www.myexample.com/fullchain.pem
  prefs: []
  type: TYPE_NORMAL
- en: SSLCertificateKeyFile /etc/letsencrypt/live/www.myexample.com/privkey.pem
  prefs: []
  type: TYPE_NORMAL
- en: Include /etc/letsencrypt/options-ssl-apache.conf
  prefs: []
  type: TYPE_NORMAL
- en: </VirtualHost>
  prefs: []
  type: TYPE_NORMAL
- en: </IfModule>
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, Certbot will ask whether future HTTP web requests should be redirected
    by the server to HTTPS. In other words, if a user attempts to access http://www.myexample.com
    the web server will redirect the user to https://www.myexample.com:'
  prefs: []
  type: TYPE_NORMAL
- en: Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP
    access.
  prefs: []
  type: TYPE_NORMAL
- en: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - -'
  prefs: []
  type: TYPE_NORMAL
- en: '1: No redirect - Make no further changes to the webserver configuration.'
  prefs: []
  type: TYPE_NORMAL
- en: '2: Redirect - Make all requests redirect to secure HTTPS access. Choose this
    for'
  prefs: []
  type: TYPE_NORMAL
- en: new sites, or if you’re confident your site works on HTTPS. You can undo this
  prefs: []
  type: TYPE_NORMAL
- en: change by editing your web server’s configuration.
  prefs: []
  type: TYPE_NORMAL
- en: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - -'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the appropriate number [1-2] then [enter] (press ‘c’ to cancel): 2'
  prefs: []
  type: TYPE_NORMAL
- en: If you are currently testing the HTTPS configuration and would like to keep
    the HTTP version live until later, select the No redirect option. Otherwise, redirecting
    to HTTPS is generally recommended.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the certificate has been installed, test it in a browser at the following
    URL (replacing myexample.com with your own domain name):'
  prefs: []
  type: TYPE_NORMAL
- en: https://www.ssllabs.com/ssltest/analyze.html?d=www.myexample.com
  prefs: []
  type: TYPE_NORMAL
- en: 'If the certificate configuration was successful, the SSL Labs report will provide
    a high rating as shown in [Figure 27-2](../Text/Web_Server.xhtml#_idTextAnchor344):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_ssl_labs_report.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 27-2
  prefs: []
  type: TYPE_NORMAL
- en: 'As a final test, open a browser window and navigate to your domain using the
    https:// prefix. The page should load as before and the browser should indicate
    that the connection between the browser and server is secure (usually indicated
    by a padlock icon in the address bar which can be clicked for additional information):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_web_site_secure.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 27-3
  prefs: []
  type: TYPE_NORMAL
- en: 27.11 Summary
  prefs: []
  type: TYPE_NORMAL
- en: A CentOS 8 system can be used to host web sites by installing the Apache web
    server. Both insecure (HTTP) and secure (HTTPS) web sites can be deployed on CentOS
    8\. Secure web sites use either Secure Socket Layer (SSL) or Transport Layer Security
    (TLS) to establish encrypted communication between the web server and client through
    the use of public, private and session encryption together with a certificate
    issued by a trusted Certificate Authority.
  prefs: []
  type: TYPE_NORMAL
