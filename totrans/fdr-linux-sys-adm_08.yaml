- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Optimizing Storage Usage
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化存储使用
- en: In the previous chapter, during the installation of the OS, we mentioned the
    importance of the local storage configuration. Local storage resource optimization
    is vital to the well-being of the system. It is time to review basic storage management
    concepts that help with optimization, such as the format, filesystem, and sizing,
    as well as management tools such as logical volumes and Stratis.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们提到过在操作系统安装过程中，本地存储配置的重要性。本地存储资源的优化对系统的健康至关重要。现在是时候回顾一下帮助优化的基本存储管理概念，如格式、文件系统、大小设置，以及管理工具，如逻辑卷和
    Stratis。
- en: 'In this chapter, we’re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要内容：
- en: Understanding file formats and filesystems
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解文件格式和文件系统
- en: Optimizing storage space size
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化存储空间大小
- en: Deep diving into Logical Volume Manager
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 深入探讨逻辑卷管理器
- en: Discovering Stratis storage
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索 Stratis 存储
- en: Let’s get started!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To perform some of the configurations included in this chapter, you require
    free local storage space, if possible, on a local disk independent of the operating
    system. No matter how large it is, this should do the job. In case of not having
    extra space, some configurations can be done in local free space on the same disk
    where the operating system was installed, although it is not recommended.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行本章中涉及的一些配置，您需要有空闲的本地存储空间，如果可能的话，最好在操作系统独立的本地磁盘上。无论空间大小如何，这样都可以完成任务。如果没有额外空间，一些配置可以在安装操作系统的同一磁盘上的本地空闲空间进行，尽管不推荐这样做。
- en: This will be mentioned when some configuration needs to be performed on a disk
    independent of the operating system or an alternate disk.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当需要对与操作系统独立的磁盘或备用磁盘进行某些配置时，将会提到这一点。
- en: 'The following table shows the storage arrangement in the test setup:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 下表显示了测试环境中的存储配置：
- en: '| **Device** | **Size** | **Used as:** |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| **设备** | **大小** | **用途：** |'
- en: '| `/``dev/vda` | 50 GiB | OS |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| `/``dev/vda` | 50 GiB | 操作系统 |'
- en: '| `/``dev/vdb` | 50 GiB | Btrfs, Stratis |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| `/``dev/vdb` | 50 GiB | Btrfs, Stratis |'
- en: '| `/``dev/vdc` | 10 GiB | Stratis |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| `/``dev/vdc` | 10 GiB | Stratis |'
- en: '| `/``dev/vdd` | 20 GiB | Stratis |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| `/``dev/vdd` | 20 GiB | Stratis |'
- en: Understanding file formats and filesystems
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解文件格式和文件系统
- en: A **filesystem** allows the operating system to find the data it stores on its
    local disk. These basic addressable storage units make a **block** (usually about
    4,096 bytes in size). To find the contents of files, among the large number of
    available storage blocks, it uses inodes. An **inode** contains information about
    a file in a particular formatted storage block, such as its size, location, access
    rules (i.e., who can read, write, or execute the file), and much more.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个**文件系统**使操作系统能够找到它存储在本地磁盘上的数据。这些基本的可寻址存储单元构成一个**块**（通常大小约为 4,096 字节）。为了找到文件的内容，在大量可用存储块中，它使用
    inode。一个**inode**包含有关文件的信息，这些信息存储在特定格式的存储块中，如文件的大小、位置、访问规则（即谁可以读取、写入或执行该文件）等。
- en: Starting with Fedora Linux 33, the default filesystem format on Workstation
    Edition is `xfs` or even `ext4`, Btrfs is a **copy-on-write** (**COW**) filesystem
    for Linux that implements many advanced features.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Fedora Linux 33 开始，Workstation 版本的默认文件系统格式是 `xfs` 或者甚至是 `ext4`，Btrfs 是一个**写时复制**（**COW**）的
    Linux 文件系统，具备许多先进的功能。
- en: In a COW filesystem, once modified, a file is not written back to the same block
    on disk; it’s more like a redirect. This is for the preservation of the original
    data and to ensure writing the new data to unoccupied inodes. This allows for
    references to the old versions of the file for easy access as in a **snapshot**,
    keeping a snapshot of the state of the system at a given moment in time.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在 COW 文件系统中，一旦文件被修改，它不会被写回到磁盘上的同一块；它更像是一个重定向。这是为了保护原始数据，并确保将新数据写入未占用的 inode
    中。这允许对文件的旧版本进行引用，便于访问，就像在**快照**中一样，保留系统在某一时刻的状态。
- en: The downside of this is that this behavior could lead to file fragmentation
    faster than in other filesystems, although, for regular desktop usage, it is unlikely
    to make a difference.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这种行为的缺点是，文件碎片化可能比其他文件系统更快，尽管对于常规的桌面使用来说，这个差异不太可能造成影响。
- en: To make the modified file appear in the filesystem, all directory entries that
    contain a reference to it get updated as well, in a recursive way. And because
    a directory is itself a file pointer with an inode (since it indicates the files
    inside it), any file modification also creates a new inode for the directory,
    and this happens through the filesystem to the root directory (`/`). So, as long
    as a reference to the old directories remain and is not modified, the entire filesystem
    could still refer to a previous state, as in a snapshot.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使修改后的文件在文件系统中显示，所有包含对此文件的引用的目录项都会以递归的方式进行更新。而且因为目录本身是一个指向文件的指针，并且具有inode（因为它指示其中的文件），任何文件修改也会为目录创建一个新的inode，这个过程会通过文件系统传递到根目录(`/`)。因此，只要旧目录的引用存在且没有被修改，整个文件系统仍然可以指向一个先前的状态，就像快照一样。
- en: Besides cheap and fast snapshots, Btrfs includes other features such as error
    detection, fault tolerance, recovery, transparent compression, and integrated
    volume management, and provides multiple device storage pooling, RAID-like functionality,
    and checksumming of data and metadata, all with easy-to-use administration.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 除了廉价且快速的快照，Btrfs还包含其他功能，如错误检测、容错、恢复、透明压缩和集成的卷管理，并提供多设备存储池、类似RAID的功能以及数据和元数据的校验和，所有这些都具有易于使用的管理功能。
- en: Let’s create a test Btrfs filesystem to show its capabilities.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个测试用的Btrfs文件系统，以展示它的功能。
- en: Creating a Btrfs filesystem
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Btrfs文件系统
- en: 'For the development of this example, use an alternative local disk to the OS
    installed. This introduces you to the capabilities of the Btrfs filesystem from
    scratch. Follow these steps:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例的开发过程中，使用与操作系统安装位置不同的本地磁盘。这将从零开始向你介绍Btrfs文件系统的功能。请按照以下步骤操作：
- en: 'Storage administration requires superuser access, so switch to the **root**
    user using the **sudo** command and create the **/btrfs** directory that will
    host the filesystem:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 存储管理需要超级用户权限，因此使用**sudo**命令切换到**root**用户，并创建用于托管文件系统的**/btrfs**目录：
- en: '[PRE0]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Identify the device to use. Ensure that the test storage device is not in use.
    Formatting implies total destruction of the data.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确认要使用的设备。确保测试存储设备没有被占用。格式化意味着数据将被完全销毁。
- en: 'Several commands provide information about the use of storage devices. A recommendation
    is to use more than one command to verify them. These recommendations include
    the following:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个命令可以提供有关存储设备使用情况的信息。建议使用多个命令来验证它们。这些建议包括以下内容：
- en: (**s**)**fdisk -l**
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (**s**)**fdisk -l**
- en: '**parted -l**'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**parted -l**'
- en: '**cat /proc/partitions**'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**cat /proc/partitions**'
- en: '**ls -****l /dev/disk/by-path**'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ls -****l /dev/disk/by-path**'
- en: '**lsblk -p**'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**lsblk -p**'
- en: '![Figure 4.1 – Identifying storage device](img/B19121_04_01.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图4.1 – 识别存储设备](img/B19121_04_01.jpg)'
- en: Figure 4.1 – Identifying storage device
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1 – 识别存储设备
- en: 'In our example, the storage device that is not in use is `/dev/vdb`, since
    it shows that it does not contain any partition. Still, it should be managed by
    **Logical Volume Manager** (**LVM**). Run the following command to display the
    devices managed by LVM:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，未使用的存储设备是`/dev/vdb`，因为它显示没有任何分区。然而，它应该由**逻辑卷管理器**（**LVM**）管理。运行以下命令以显示由LVM管理的设备：
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![Figure 4.2 – Discarding LVM on the storage device](img/B19121_04_02.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图4.2 – 丢弃存储设备上的LVM](img/B19121_04_02.jpg)'
- en: Figure 4.2 – Discarding LVM on the storage device
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2 – 丢弃存储设备上的LVM
- en: Note
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'In case of using a partition, you need to confirm that the partition is not
    in use by another filesystem and does not have a directory mounted. Use the following
    basic commands: **fdisk**, **parted**, **mount**, **df**, **lsblk**, and **blkid**.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果使用分区，需要确认该分区没有被其他文件系统占用，且没有挂载目录。可以使用以下基本命令：**fdisk**、**parted**、**mount**、**df**、**lsblk**、和**blkid**。
- en: Create a storage pool. With Btrfs, it is not necessary to create physical partitions
    on the storage device. Create a storage pool and then create subvolumes. These
    subvolumes can have quotas and snapshots since these resizable partitions can
    share blocks of data.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建存储池。使用Btrfs时，不需要在存储设备上创建物理分区。首先创建一个存储池，然后创建子卷。这些子卷可以设置配额和快照，因为这些可调整大小的分区可以共享数据块。
- en: 'Run the `mkfs.btrfs` command to format `/dev/vdb` as `Btrfs`:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`mkfs.btrfs`命令将`/dev/vdb`格式化为`Btrfs`文件系统：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: "![Figure 4.3 – Creating \uFEFFa Btrfs storage pool](img/B19121_04_03.jpg)"
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图4.3 – 创建Btrfs存储池](img/B19121_04_03.jpg)'
- en: Figure 4.3 – Creating a Btrfs storage pool
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3 – 创建Btrfs存储池
- en: 'Mount the storage device on the directory where subvolumes should be created.
    Use the **mount** command:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将存储设备挂载到应该创建子卷的目录。使用**mount**命令：
- en: '[PRE3]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: With the Btrfs filesystem mounted, let’s analyze the usage of its storage space.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在挂载了Btrfs文件系统后，我们来分析其存储空间的使用情况。
- en: 'To show the structure of a filesystem, run the following:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要显示文件系统的结构，请运行以下命令：
- en: '[PRE4]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To measure the available space on the filesystem, run the following:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要测量文件系统上可用的空间，请运行以下命令：
- en: '[PRE5]'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The following section will explain in detail the meaning of the command output.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分将详细解释命令输出的含义。
- en: In Btrfs, a subvolume is similar to a filesystem contained in the host. A Btrfs
    filesystem contains a single subvolume, but extra subvolumes could exist. The
    subvolumes appear as directories within the mounted Btrfs filesystem. A subvolume
    could access it like any other user-accessible directory, or it could mount as
    a separate filesystem.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在Btrfs中，子卷类似于包含在主机中的文件系统。一个Btrfs文件系统包含一个子卷，但可以存在多个额外的子卷。这些子卷以目录的形式出现在挂载的Btrfs文件系统中。子卷可以像任何其他用户可访问的目录一样访问，或者它可以挂载为一个独立的文件系统。
- en: Btrfs separates each volume. By default, the Btrfs filesystem contains a subvolume.
    This is set as the top-level subvolume and is mounted even if not specified. Subvolumes,
    as they're being created, could nest into each other. But not the top-level subvolume.
    So each of them has a mountable root and could contain more than one tree of files.
    This sets a relative location for each subvolume and the mount point of the main
    subvolume.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Btrfs会将每个卷分开。默认情况下，Btrfs文件系统包含一个子卷。这个子卷被设置为顶级子卷，并且即使没有指定，也会被挂载。随着子卷的创建，它们可以互相嵌套。但顶级子卷除外。因此，每个子卷都有一个可挂载的根目录，并且可以包含多个文件树。这为每个子卷以及主子卷的挂载点设置了一个相对位置。
- en: A **Btrfs subvolume** is considered more like a namespace.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**Btrfs子卷**被认为更像是一个命名空间。'
- en: 'Some basic layouts exist for subvolumes (including snapshots), and they include
    the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 子卷有一些基本布局（包括快照），它们包括以下几种：
- en: Flat – Subvolumes are children of the top level
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扁平 – 子卷是顶级的子级
- en: Nested – Subvolumes are located anywhere in the file hierarchy, below other
    subvolumes, not the top-level subvolume
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 嵌套 – 子卷位于文件层次结构的任何位置，位于其他子卷下面，而不是顶级子卷下
- en: Mixed – The two basic schemes could be mixed, for example, the base structure
    follows a flat layout, with certain parts of the filesystem placed in nested subvolumes
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 混合 – 两种基本方案可以混合使用，例如，基本结构采用平面布局，文件系统的某些部分被放置在嵌套的子卷中
- en: 'Let’s create a subvolume:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个子卷：
- en: 'Use the **btrfs subvolume create** command to create the **test** subvolume:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**btrfs subvolume create**命令创建**test**子卷：
- en: '[PRE6]'
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Review the subvolume information with the **btrfs** **subvolume** command:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**btrfs** **subvolume**命令查看子卷信息：
- en: '[PRE7]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Figure 4.4 – Subvolume information](img/B19121_04_04.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图4.4 – 子卷信息](img/B19121_04_04.jpg)'
- en: Figure 4.4 – Subvolume information
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.4 – 子卷信息
- en: 'Create the **/test** directory and mount the subvolume on it:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建**/test**目录并将子卷挂载到该目录：
- en: '[PRE8]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In this example, the subvolume doesn’t have an allocated space, so it can use
    all the available space in the pool.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，子卷没有分配空间，因此它可以使用池中的所有可用空间。
- en: 'Verify the used space of the pool:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证存储池的已用空间：
- en: '[PRE9]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To get more details on space usage, run the following command:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取更多关于空间使用的细节，请运行以下命令：
- en: '[PRE10]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Figure 4.5 – Storage space used by Btrfs pool](img/B19121_04_05.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图4.5 – Btrfs池使用的存储空间](img/B19121_04_05.jpg)'
- en: Figure 4.5 – Storage space used by Btrfs pool
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.5 – Btrfs池使用的存储空间
- en: Let’s create an empty file of 1 GB to observe the change in the allocated usage.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个1GB的空文件，以观察分配使用空间的变化。
- en: 'Use the **dd** command to create an empty 1 GB file in the **/****test** directory:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**dd**命令在**/test**目录中创建一个1GB的空文件：
- en: '[PRE11]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Verify the change of the allocated space in the pool:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证存储池中分配空间的变化：
- en: '[PRE12]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![Figure 4.6 – Change in storage space used by the Btrfs pool](img/B19121_04_06.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图4.6 – Btrfs池使用的存储空间变化](img/B19121_04_06.jpg)'
- en: Figure 4.6 – Change in storage space used by the Btrfs pool
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.6 – Btrfs池使用的存储空间变化
- en: This is the end of the example. We started by identifying a free-of-use storage
    device to format it as `Btrfs`, created a storage pool on it, created a subvolume,
    and mounted it in a filesystem and analyzed the storage space usage in detail.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这是示例的结束部分。我们从识别一个可免费使用的存储设备开始，将其格式化为`Btrfs`，在上面创建了一个存储池，创建了一个子卷，并将其挂载到文件系统中，详细分析了存储空间的使用情况。
- en: In the next section, we will continue revisiting the basic concepts of storage
    administration in Fedora Linux.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将继续回顾 Fedora Linux 存储管理的基本概念。
- en: Optimizing storage space size
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优化存储空间大小
- en: In the previous section, we reviewed some of the features of the Btrfs filesystem.
    Now it is time to learn how to optimize this used storage space in more detail.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们回顾了 Btrfs 文件系统的一些特性。现在是时候更详细地学习如何优化这些已用存储空间了。
- en: Btrfs reserves some raw storage at its lowest level because the volume needs
    to contain file data or volume metadata. For that, it allocates pieces of raw
    storage for use by the filesystem. A piece of storage gets referred to as a **chunk**.
    Its main function is to contain file data or volume metadata to replicate on the
    same volume or another similar device.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: Btrfs 在其最低级别保留了一些原始存储空间，因为卷需要包含文件数据或卷元数据。为此，它为文件系统分配了原始存储空间的一部分。存储空间的一部分被称为**块**。它的主要功能是容纳文件数据或卷元数据，以便在同一卷或另一个相似设备上进行复制。
- en: Storage space gets allocated to the chunks, and the space is used by the blocks.
    A chunk with no blocks used is unallocated; a chunk with one or more blocks used
    is allocated. All chunks can get allocated even if not all the space is used.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 存储空间被分配到块中，空间由块使用。没有块使用的块是未分配的；有一个或多个块被使用的块是已分配的。即使没有使用所有空间，所有块仍然可以被分配。
- en: Btrfs uses **delayed allocation** to enable better disk allocation. Btrfs only
    allocates disk space when the system needs to get rid of dirty pages, so in the
    end, you get much larger allocations and much larger chunks of sequential data,
    which makes data reading faster.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Btrfs 使用**延迟分配**来实现更好的磁盘分配。Btrfs 仅在系统需要处理脏页时才分配磁盘空间，因此最终，您会得到更大的分配和更大的连续数据块，这使得数据读取速度更快。
- en: 'Btrfs allocates space on its disks by assigning chunks of 1 GB for data and
    256 MB chunks for metadata. This implies that a chunk has a specific profile associated
    with it: once allocated a chunk for data or metadata, that space is only usable
    for one or the other. So, Btrfs has different allocation profiles for metadata
    and data.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Btrfs 通过为数据分配 1 GB 的块和为元数据分配 256 MB 的块来分配磁盘空间。这意味着一个块有一个特定的配置文件：一旦为数据或元数据分配了一个块，该空间只能用于其中之一。因此，Btrfs
    对于元数据和数据有不同的分配配置文件。
- en: 'This division of metadata and data might get confusing: a filesystem might
    show 10 GB of data but only 2 GB free. Common operating system commands, such
    as `df` or `du`, do not show the full information about space usage and chunk
    allocation in Btrfs. For this reason, Btrfs incorporates its own commands that
    show the used space and allocated chunks.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这种元数据和数据的划分可能会让人感到困惑：一个文件系统可能显示 10 GB 的数据，但只有 2 GB 的空闲空间。常见的操作系统命令，如 `df` 或
    `du`，无法显示 Btrfs 中空间使用和块分配的完整信息。因此，Btrfs 包含了自己的命令，用于显示已用空间和已分配的块。
- en: 'Using the filesystem created in the previous section, let’s take a closer look
    at storage space usage and chunk allocation. Use the `btrfs filesystem df` command
    to display the `/``btrfs` information:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 使用上一节创建的文件系统，让我们更仔细地查看存储空间使用情况和块分配。使用 `btrfs filesystem df` 命令来显示 `/` `btrfs`
    信息：
- en: '[PRE13]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Observe the following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 请观察以下内容：
- en: '**Data**, **System**, and **Metadata** are separate block group types:'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据**、**系统**和**元数据**是不同的块组类型：'
- en: '**single** is the allocation profile, defined at **mkfs** time.'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**single** 是在 **mkfs** 时定义的分配配置文件。'
- en: '**DUP** means *duplicate*. It guarantees the existence of two copies on the
    same disk. This mode protects against data or metadata corruption but not against
    disk failure.'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DUP** 意味着 *重复*。它保证在同一磁盘上存在两个副本。此模式可以防止数据或元数据损坏，但无法防止磁盘故障。'
- en: '**total** is the sum of space reserved for all allocation profiles of the given
    type, that is, all **Data**/**single**. Note that *it’s not the total size of*
    *the filesystem*.'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**total** 是为给定类型的所有分配配置文件保留的空间总和，即所有 **数据**/**单一**。注意，*这不是文件系统的总大小*。'
- en: '**used** is the sum of the used space of the data, that is, file extents, and
    metadata blocks.'
  id: totrans-105
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**used** 是数据已用空间的总和，即文件扩展和元数据块。'
- en: '**GlobalReserve** is artificial and internal emergency space:'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GlobalReserve** 是人工设置的内部紧急空间：'
- en: The **GlobalReserve** space is part of the metadata used. It is used when the
    filesystem metadata gets exhausted. While it is not allocated, it appears as unused
    metadata space.
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GlobalReserve** 空间是用于的元数据的一部分。当文件系统的元数据耗尽时，它将被使用。虽然它没有被分配，但它显示为未使用的元数据空间。'
- en: 'From here, you could add other storage devices to the `/btrfs` filesystem to
    make it a single partition that spans all the devices you add. For this, follow
    these steps:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，您可以将其他存储设备添加到`/btrfs`文件系统中，使其成为一个跨所有添加设备的单一分区。为此，请按照以下步骤操作：
- en: 'Format the extra devices as **Btrfs** with the **mkfs.btrfs** command:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**mkfs.btrfs**命令将额外的设备格式化为**Btrfs**：
- en: '[PRE14]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Add devices to the mounted device:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向挂载的设备添加设备：
- en: '[PRE15]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'If we rerun the `btrfs filesystem df` command, the output shows no change:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们重新运行`btrfs filesystem df`命令，输出显示没有变化：
- en: '[PRE16]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'This is because the disks that are added are neither allocated for data nor
    metadata. Using the `btrfs filesystem show` command, the following output shows:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为添加的磁盘既没有分配给数据，也没有分配给元数据。使用`btrfs filesystem show`命令，以下输出显示：
- en: '[PRE17]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The `size` value is the size of each disk, and the `used` value is the size
    of the chunks allocated on that disk. So, the new filesystem size is 80 GB, but
    no chunks from the new devices are allocated, leaving 79 GB of free space to allocate.
    Use the usual `df` command to show this:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`size`值是每个磁盘的大小，`used`值是分配在该磁盘上的块的大小。因此，新的文件系统大小是80 GB，但没有从新设备分配任何块，留下79 GB的空闲空间供分配。使用常规的`df`命令显示此信息：'
- en: '[PRE18]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Btrfs could redistribute space and reclaim any wasted space. If you add a disk,
    you can run the `balance` command to make sure everything gets spread across the
    disks.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: Btrfs可以重新分配空间并回收任何浪费的空间。如果添加了磁盘，可以运行`balance`命令，确保所有内容均匀分布到磁盘上。
- en: It is very useful to balance any `Btrfs` volume subject to updates and to prevent
    the allocation of every chunk in the volume. It is usually enough to balance chunks
    that are 50% or 70% used.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 平衡任何受更新影响的`Btrfs`卷并防止分配卷中的每个块非常有用。通常，只需要平衡使用率达到50%或70%的块即可。
- en: 'To auto-balance the mounted `/btrfs` filesystem, run the `btrfs filesystem`
    `balance` command:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 要自动平衡已挂载的`/btrfs`文件系统，请运行`btrfs filesystem` `balance`命令：
- en: '[PRE19]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'By re-running the `btrfs filesystem df` command, it shows the new distribution
    of chunks in the filesystem:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 通过重新运行`btrfs filesystem df`命令，它显示了文件系统中新块的分布：
- en: '[PRE20]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: When adding a device, it is generally a good idea to run a balance on the filesystem.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 添加设备时，通常建议在文件系统上运行一次平衡。
- en: Btrfs itself doesn’t perform periodic rebalancing on filesystems and might experience
    problems with disk space management. If left unattended, these error messages
    could make it impossible to rebalance the partitions or devices on the filesystem.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: Btrfs本身不会对文件系统执行定期的重新平衡，并且可能会遇到磁盘空间管理的问题。如果不加以注意，这些错误信息可能会导致无法重新平衡文件系统上的分区或设备。
- en: The issue usually occurs when there is the right pattern of disk I/O and file
    sizes. This causes inefficient use of disk space and prevents new writes to the
    disk, generating `No space left on` `device` errors.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 该问题通常发生在磁盘I/O和文件大小呈现特定模式时。这会导致磁盘空间使用效率低下，并且阻止新写入磁盘，从而生成`No space left on` `device`错误。
- en: 'To prevent this, run a long space allocation check now and then, usually based
    on the work cycle of our system. The simplest way to explain this period of time
    could involve a *cash cut* for some businesses. For example: if the business does
    the cash cut every 30th day of the month, we have a window of time one day before
    and one day after that date, which leaves us with 28 or 29 *productive* days in
    which the system cannot change. On both dates, we could check the allocated space
    to confirm that everything is OK.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 为了防止这种情况，请时不时运行一次长期的空间分配检查，通常基于我们系统的工作周期。最简单的解释这种时间段的方法是为某些企业的*现金结算*。例如：如果企业每月的30号进行现金结算，我们就有一个窗口期，在该日期前后各一天，这样我们就有28或29个*生产性*的日子，在这段时间内系统无法更改。在这两个日期上，我们可以检查分配的空间，确认一切正常。
- en: Let’s see how to perform this space allocation check.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下如何执行此空间分配检查。
- en: Space allocation check
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 空间分配检查
- en: Btrfs allocates chunks as large as 1/10 of the partition size, up to a maximum
    of 1 GB. Ideally, at least one chunk must remain unallocated for use during the
    rebalance operation.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: Btrfs分配的块大小最大为分区大小的1/10，最多为1 GB。理想情况下，至少必须保留一个未分配的块，以便在重新平衡操作时使用。
- en: Note
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It is not necessary to run a rebalance if Btrfs has not allocated a significant
    part of the filesystem. A significant part of the filesystem is greater than 80%
    of the size or the entire filesystem size minus 2 GB.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Btrfs没有分配文件系统的大部分空间，则无需运行重新平衡。文件系统的大部分空间是指大于80%的大小，或者是整个文件系统大小减去2 GB。
- en: To determine whether a rebalance would free up space, compare the amount of
    space allocated to the data with the amount of space used by the data. If the
    difference between these is greater than the largest chunk size, then a rebalance
    would probably free up some space.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定再平衡是否能释放空间，比较分配给数据的空间与数据实际使用的空间。如果它们之间的差异大于最大块大小，那么再平衡可能会释放一些空间。
- en: 'The `btrfs filesystem usage` command provides the information needed to find
    both values:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '`btrfs filesystem usage` 命令提供了获取这两个值所需的信息：'
- en: '![Figure 4.7 – The Btrfs filesystem usage output](img/B19121_04_07.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.7 – Btrfs 文件系统使用情况输出](img/B19121_04_07.jpg)'
- en: Figure 4.7 – The Btrfs filesystem usage output
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7 – Btrfs 文件系统使用情况输出
- en: 'Let’s create an extra file to better exemplify the check:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个额外的文件，更好地举例说明此检查：
- en: '[PRE21]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now that we have a filesystem with 49 GB used, let’s see how they got allocated:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有一个已使用 49 GB 的文件系统，接下来看看它们是如何分配的：
- en: '[PRE22]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Use the `btrfs filesystem usage` command with the `–b` (bytes) parameter to
    calculate whether rebalancing is necessary:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `btrfs filesystem usage` 命令并加上 `–b`（字节）参数来计算是否需要再平衡：
- en: '![Figure 4.8 – The Btrfs filesystem usage output](img/B19121_04_08.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.8 – Btrfs 文件系统使用情况输出](img/B19121_04_08.jpg)'
- en: Figure 4.8 – The Btrfs filesystem usage output
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.8 – Btrfs 文件系统使用情况输出
- en: 'From the output, highlight the size of the device, the allocation on the device,
    and the size and usage of the data:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 从输出中，突出显示设备的大小、设备上的分配情况，以及数据的大小和使用情况：
- en: '[PRE23]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'With this information, follow these steps to perform the calculation:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些信息，按照以下步骤进行计算：
- en: 'The device size is **85899345920**. Calculate 80%:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设备大小为 **85899345920**。计算 80%：
- en: '[PRE24]'
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The device size is **85899345920**. Subtract 2 GB (**2147483648**):'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '设备大小为 **85899345920**。减去 2 GB (**2147483648**):'
- en: '[PRE25]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Compare both results. Take the highest amount (**83751862272**) to compare
    against the amount allocated on the device:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较两者结果。选择较大的值 (**83751862272**) 来与设备上的分配量进行比较：
- en: '[PRE26]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Note
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If the device allocation is smaller than the calculated condition, then this
    part of the check is negative, and there should be no need to run a rebalance
    on this filesystem. But a data storage efficiency check must be performed to confirm
    that a rebalance is not necessary.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果设备分配小于计算出的条件，那么这部分检查为负，且不需要对该文件系统进行再平衡。但是必须进行数据存储效率检查，以确认不需要再平衡。
- en: 'Estimate the difference between the space allocated and the space used:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 估算分配空间与使用空间之间的差异：
- en: '[PRE27]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Calculate the chunk size:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算块大小：
- en: '[PRE28]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Compare both results:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较两者结果：
- en: '[PRE29]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: If the chunk size is greater than the difference, then the check is also negative.
    Rebalancing is not necessary.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 如果块大小大于差值，那么检查也是负的。不需要再平衡。
- en: Rebalancing is only necessary if the device allocation is greater than 80% of
    the device size (or the device size minus 2 GB) and the space allocated and used
    is greater than the chunk size.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在设备分配大于设备大小的 80%（或设备大小减去 2 GB）且分配和使用的空间大于块大小时，才需要进行再平衡。
- en: Remember, *both conditions must not meet*. If the first check is negative, it
    is necessary to run the second check to confirm that rebalancing is not required.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，*两个条件都不能满足*。如果第一次检查为负，则必须运行第二次检查，以确认不需要进行再平衡。
- en: Fedora Linux provides a tool to help us get a detailed report of the Btrfs filesystem’s
    usage. Let’s see how to use it.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Fedora Linux 提供了一个工具，帮助我们获取 Btrfs 文件系统使用情况的详细报告。我们来看看如何使用它。
- en: Using the btrfs-usage-report command
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 btrfs-usage-report 命令
- en: The primary purpose of the `python-btrfs` module is to inspect Btrfs filesystems,
    acting as a wrapper around low-level kernel calls and Btrfs data structures. This
    module includes the `btrfs-usage-report` tool to show a report of the Btrfs filesystem
    usage.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`python-btrfs` 模块的主要目的是检查 Btrfs 文件系统，作为对底层内核调用和 Btrfs 数据结构的封装。该模块包括 `btrfs-usage-report`
    工具，展示 Btrfs 文件系统的使用报告。'
- en: 'To install the tool, install the `python3-btrfs` package with the `dnf` command:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装该工具，请使用 `dnf` 命令安装 `python3-btrfs` 包：
- en: '[PRE30]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: lvcreate -s -n snapshot_name -L snapshot_size target_lv disk
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: lvcreate -s -n snapshot_name -L snapshot_size target_lv disk
- en: '[PRE31]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: lvremove /dev/vg_name/snapshot_name
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: lvremove /dev/vg_name/snapshot_name
- en: '[PRE32]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[root@workstation ~]# btrfs subvolume list /btrfs'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# btrfs 子卷列表 /btrfs'
- en: ID 256 gen 72 top level 5 path test
  id: totrans-175
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ID 256 gen 72 top level 5 path test
- en: '[PRE33]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[root@workstation ~]# btrfs subvolume snapshot \'
  id: totrans-177
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# btrfs 子卷快照 \'
- en: /btrfs/test /btrfs/test_snapshot
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_BQ
  type: TYPE_NORMAL
  zh: /btrfs/test /btrfs/test_snapshot
- en: Create a snapshot of '/btrfs/test' in '/btrfs/test_snapshot'
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 '/btrfs/test' 创建一个快照到 '/btrfs/test_snapshot'
- en: '[PRE34]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[root@workstation ~]# btrfs subvolume list /btrfs'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# btrfs 子卷列表 /btrfs'
- en: ID 256 gen 76 top level 5 path test
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ID 256 gen 76 顶级 5 路径 test
- en: ID 257 gen 76 top level 5 path test_snapshot
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ID 257 gen 76 顶级 5 路径 test_snapshot
- en: '[root@workstation ~]# ls /btrfs/'
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# ls /btrfs/'
- en: test  test_snapshot
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: test   test_snapshot
- en: '[PRE35]'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[root@workstation ~]# tree /btrfs/'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# tree /btrfs/'
- en: /btrfs/
  id: totrans-188
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: /btrfs/
- en: ├── test
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: ├── test
- en: │   └── example
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: │   └── example
- en: └── test_snapshot
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: └── test_snapshot
- en: └── example
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: └── example
- en: 3 directories, 2 files
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 3 个目录，2 个文件
- en: '[PRE36]'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[root@workstation ~]# umount /btrfs/test'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# umount /btrfs/test'
- en: '[root@workstation ~]# umount /btrfs'
  id: totrans-196
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# umount /btrfs'
- en: '[root@workstation ~]# rm -rf /btrfs'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# rm -rf /btrfs'
- en: '[PRE37]'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[root@workstation ~]# wipefs /dev/vdb --all –f'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# wipefs /dev/vdb --all –f'
- en: '[root@workstation ~]# wipefs /dev/vdc --all -f'
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# wipefs /dev/vdc --all -f'
- en: '[root@workstation ~]# wipefs /dev/vdd --all -f'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# wipefs /dev/vdd --all -f'
- en: '[PRE38]'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[root@workstation ~]# dnf install stratis-cli stratisd'
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# dnf 安装 stratis-cli stratisd'
- en: '[PRE39]'
  id: totrans-204
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[root@workstation ~]# systemctl enable --now stratisd'
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# systemctl 启用 --now stratisd'
- en: '[PRE40]'
  id: totrans-206
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[root@workstation ~]# stratis pool create test /dev/vdb'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# stratis 池创建 test /dev/vdb'
- en: '[PRE41]'
  id: totrans-208
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[root@workstation ~]# stratis filesystem create test data'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# stratis 文件系统创建 test data'
- en: '[PRE42]'
  id: totrans-210
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[root@workstation ~]# stratis filesystem list test'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '[root@workstation ~]# stratis 文件系统列表 test'
- en: Pool   Filesystem   Total / Used / Free
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 池     文件系统     总计 / 已用 / 可用
- en: test   data         1 TiB / 546 MiB / 1023.47 GiB
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: test   data         1 TiB / 546 MiB / 1023.47 GiB
- en: '...output omitted...'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: '...输出省略...'
- en: '[PRE43]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
