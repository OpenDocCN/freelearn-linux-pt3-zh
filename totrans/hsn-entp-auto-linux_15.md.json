["```\n$ sudo mkdir -p /var/lib/appdata\n$ for i in $(seq 1 20); do DATE=$(date -d \"-$i days\" +%y%m%d%H%M); sudo touch -t $DATE /var/lib/appdata/$DATE; done\n```", "```\n$ sudo find /var/lib/appdata -mtime +5 -exec rm -f '{}' \\;\n```", "```\n- name: Find all files older than {{ max_age }} in {{ target_dir }}\n  find:\n    paths: \"{{ target_dir }}\"\n    age: \"{{ max_age }}\"\n    recurse: yes\n  register: prune_list\n```", "```\n- name: Print file list for auditing purposes\n  debug:\n    msg: \"{{ item.path }}\"\n  loop:\n    \"{{ prune_list.files }}\"\n  loop_control:\n    label: \"{{ item.path }}\"\n```", "```\n- name: Prune {{ target_dir }}\n  file:\n    path: \"{{ item.path }}\"\n    state: absent\n  loop:\n    \"{{ prune_list.files }}\"\n  loop_control:\n    label: \"{{ item.path }}\"\n```", "```\n---\n- name: Prune Directory\n  hosts: all\n  become: yes\n  vars:\n    max_age: \"5d\"\n    target_dir: \"/var/lib/appdata\"\n\n  roles:\n    - pruneappdata\n```", "```\n---\n- name: Obtain free disk space for {{ target_dir }}\n  shell: df -h \"{{ target_dir }}\" | tail -n 1 | awk {'print $5 '} | sed 's/%//g'\n  register: dfresult\n  changed_when: false\n```", "```\n- name: Run file pruning only if disk usage is greater than 90 percent\n  block:\n\n  - name: Find all files older than {{ max_age }} in {{ target_dir }}\n    find:\n```", "```\n    loop_control:\n      label: \"{{ item.path }}\"\n  when: dfresult.stdout|int > 90\n```", "```\n  register: template_result\n  failed_when: (template_result.changed and ansible_check_mode == True) or template_result.failed\n```", "```\n---\n- name: Copy bash binary to target host\n  copy:\n    src: files/bash\n    dest: /bin/bash\n    owner: root\n    group: root\n    mode: 0755\n  register: copy_result\n  failed_when: (copy_result.changed and ansible_check_mode == True) or copy_result.failed\n```", "```\n---\n- name: Get sha256 sum of /bin/bash\n  stat:\n    path: /bin/bash\n    checksum_algorithm: sha256\n    get_checksum: yes\n  register: binstat\n\n- name: Verify checksum of /bin/bash\n  fail:\n    msg: \"Integrity failure - /bin/bash may have been compromised!\"\n  when: binstat.stat.checksum != 'da85596376bf384c14525c50ca010e9ab96952cb811b4abe188c9ef1b75bff9a'\n```", "```\n$ ps -ef | grep <processname> | grep -v grep | awk '{print $2}'\n$ kill <PID1> <PID2>\n```", "```\n$ kill -9 <PID1> <PID2>\n```", "```\n---\n- name: Get PID's of running processes matching {{ procname }}\n  shell: \"ps -ef | grep -w {{ procname }} | grep -v grep | grep -v ansible | awk '{print $2\\\",\\\"$8}'\"\n  register: process_ids\n```", "```\n- name: Attempt to kill processes nicely\n  shell: \"kill {{ item.split(',')[0] }}\"\n  loop:\n    \"{{ process_ids.stdout_lines }}\"\n  loop_control:\n    label: \"{{ item }}\"\n```", "```\n- name: Wait for processes to exit\n  wait_for:\n    path: \"/proc/{{ item.split(',')[0] }}\"\n    timeout: 5\n    state: absent\n  loop:\n    \"{{ process_ids.stdout_lines }}\"\n  ignore_errors: yes\n  register: exit_results\n```", "```\n- name: Forcefully kill stuck processes\n  shell: \"kill -9 {{ item.item.split(',')[0] }}\"\n  loop:\n    \"{{ exit_results.results | selectattr('failed') | list }}\"\n  loop_control:\n    label: \"{{ item.item }}\"\n```", "```\n---\n- name: Get PID's of running processes matching {{ procname }}\n  pids:\n    name: \"{{ procname }}\"\n  register: process_ids\n```", "```\n- name: Attempt to kill processes nicely\n  shell: \"kill {{ item }}\"\n  loop:\n    \"{{ process_ids.pids }}\"\n  loop_control:\n    label: \"{{ item }}\"\n\n- name: Wait for processes to exit\n  wait_for:\n    path: \"/proc/{{ item }}\"\n    timeout: 5\n    state: absent\n  loop:\n    \"{{ process_ids.pids }}\"\n  ignore_errors: yes\n  register: exit_results\n\n- name: Forcefully kill stuck processes\n  shell: \"kill -9 {{ item.item }}\"\n  loop:\n    \"{{ exit_results.results | selectattr('failed') | list }}\"\n  loop_control:\n    label: \"{{ item.item }}\"\n```", "```\n---\n- name: Deploy new code\n  template:\n    src: templates/web.html.j2\n    dest: /var/www/html/web.html\n\n- name: Restart web server\n  service:\n    name: nginx\n    state: restarted\n```"]