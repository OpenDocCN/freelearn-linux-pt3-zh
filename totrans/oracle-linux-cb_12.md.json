["```\n    % ssh -i sshkey_private_lab opc@193.122.148.147\n    The authenticity of host '193.122.148.147 (193.122.148.147)' can't be established.\n    ED25519 key fingerprint is SHA256:nF+ilxdx0SpWZZxiFZOJFvektZc8YhBI76j1Qm64w3A.\n    This key is not known by any other names\n    Are you sure you want to continue connecting (yes/no/[fingerprint])? yes\n    Warning: Permanently added '193.122.148.147' (ED25519) to the list of known hosts.\n    Activate the web console with: systemctl enable --now cockpit.socket\n    [opc@instance-20231213-2350 ~]$\n    ```", "```\n    [opc@olam-test ~]$ sudo DNF -y install oraclelinux-release-el8\n    Ksplice for Oracle Linux 8 (x86_64)                                                39 MB/s | 3.2 MB     00:00\n    MySQL 8.0 for Oracle Linux 8 (x86_64)                                              38 MB/s | 3.0 MB     00:00\n    MySQL 8.0 Tools Community for Oracle Linux 8 (x86_64)                             7.3 MB/s | 491 kB     00:00\n    MySQL 8.0 Connectors Community for Oracle Linux 8 (x86_64)                        600 kB/s |  30 kB     00:00\n    Oracle Software for OCI users on Oracle Linux 8 (x86_64)                           96 MB/s |  93 MB     00:00\n    Oracle Linux 8 BaseOS Latest (x86_64)                                             118 MB/s |  62 MB     00:00\n    Oracle Linux 8 Application Stream (x86_64)                                        114 MB/s |  48 MB     00:00\n    Oracle Linux 8 Addons (x86_64)                                                     56 MB/s | 6.9 MB     00:00\n    Latest Unbreakable Enterprise Kernel Release 7 for Oracle Linux 8 (x86_64)         95 MB/s |  18 MB     00:00\n    Package oraclelinux-release-el8-1.0-32.el8.x86_64 is already installed.\n    Dependencies resolved.\n    Nothing to do.\n    Complete!\n    ```", "```\n    [opc@olam-test ~]$ sudo firewall-cmd --add-port=27199/tcp --permanent\n    success\n    [opc@olam-test ~]$ sudo firewall-cmd --add-service=http --permanent\n    success\n    [opc@olam-test ~]$ sudo firewall-cmd --add-service=https --permanent\n    success\n    [opc@olam-test ~]$ sudo firewall-cmd --reload\n    success\n    [opc@olam-test ~]$\n    ```", "```\n    [opc@olam-test ~]$ sudo DNF config-manager --enable ol8_baseos_latest\n    [opc@olam-test ~]$\n    ```", "```\n    [opc@olam-test ~]$ sudo DNF install oraclelinux-automation-manager-release-el8\n    Oracle Linux 8 BaseOS Latest Oracle Linux 8\n     Application Stream Oracle\n    Linux 8 Addons\n    Truncated for size\n    Complete!\n    ```", "```\n    [opc@olam-test ~]$ sudo DNF config-manager --enable ol8_automation2 ol8_addons ol8_UEKR7 ol8_appstream\n    ```", "```\n    [opc@olam-test ~]$ sudo DNF config-manager --disable ol8_automation\n    ```", "```\n    [opc@olam-test ~]$ sudo DNF module reset postgresql\n    Oracle Linux 8 BaseOS Latest (x86_64)                                       157 kB/s | 3.6 kB     00:00\n    Oracle Linux 8 Application Stream (x86_64)                                  233 kB/s | 3.9 kB     00:00\n    Oracle Linux 8 Addons (x86_64)                                              153 kB/s | 3.0 kB     00:00\n    Oracle Linux Automation Manager 2.0 based on the open source projects Ansib 3.1 MB/s | 644 kB     00:00\n    Latest Unbreakable Enterprise Kernel Release 7 for Oracle Linux 8 (x86_64)  147 kB/s | 3.0 kB     00:00\n    Dependencies resolved.\n    Nothing to do.\n    Complete!\n    ```", "```\n    [opc@olam-test ~]$ sudo DNF module enable postgresql:13\n    Last metadata expiration check: 0:00:54 ago on Tue 22 Aug 2023 07:12:29 PM GMT.\n    Dependencies resolved.\n    ============================================================================================================\n     Package                  Architecture            Version                     Repository                Size\n    ============================================================================================================\n    Enabling module streams:\n     postgresql                                       13\n    Transaction Summary\n    ============================================================================================================\n    Is this ok [y/N]: y\n    Complete!\n    ```", "```\n    [opc@olam-test ~]$ sudo DNF install postgresql-server\n    Last metadata expiration check: 0:02:35 ago on Tue 22 Aug 2023 07:12:29 PM GMT.\n    Dependencies resolved.\n    ============================================================================================================\n     Package                Arch        Version                                         Repository          Size\n    ============================================================================================================\n    Installing:\n     postgresql-server      x86_64      13.11-1.0.1.module+el8.8.0+21141+00b1aed9      ol8_appstream      5.6 M\n    Installing dependencies:\n     libpq                  x86_64      13.5-1.el8                                     ol8_appstream      198 k\n     postgresql             x86_64      13.11-1.0.1.module+el8.8.0+21141+00b1aed9      ol8_appstream      1.5 M\n    Transaction Summary\n    ============================================================================================================\n    Install  3 Packages\n    The output has been truncated…\n    Installed:\n      libpq-13.5-1.el8.x86_64\n      postgresql-13.11-1.0.1.module+el8.8.0+21141+00b1aed9.x86_64\n      postgresql-server-13.11-1.0.1.module+el8.8.0+21141+00b1aed9.x86_64\n    Complete!\n    ```", "```\n    [opc@olam-test ~]$ sudo postgresql-setup --initdb\n     * Initializing database in '/var/lib/pgsql/data'\n     * Initialized, logs are in /var/lib/pgsql/initdb_postgresql.log\n    ```", "```\n    [opc@olam-test ~]$ sudo sed -i \"s/#password_encryption.*/password_encryption = scram-sha-256/\" /var/lib/pgsql/data/postgresql.conf\n    ```", "```\n    [opc@olam-test ~]$ sudo systemctl enable --now postgresql\n    Created symlink /etc/systemd/system/multi-user.target.wants/postgresql.service → /usr/lib/systemd/system/postgresql.service.\n    ```", "```\n    [opc@olam-test ~]$ sudo systemctl status postgresql\n    ● postgresql.service - PostgreSQL database server\n       Loaded: loaded (/usr/lib/systemd/system/postgresql.service; enabled; vendor preset: disabled)\n       Active: active (running) since Tue 2023-08-22 19:18:44 GMT; 23s ago\n      Process: 46810 ExecStartPre=/usr/libexec/postgresql-check-db-dir postgresql (code=exited, status=0/SUCCES>\n     Main PID: 46813 (postmaster)\n        Tasks: 8 (limit: 22519)\n       Memory: 16.9M\n       CGroup: /system.slice/postgresql.service\n               ├─46813 /usr/bin/postmaster -D /var/lib/pgsql/data\n               ├─46814 postgres: logger\n               ├─46816 postgres: checkpointer\n               ├─46817 postgres: background writer\n               ├─46818 postgres: walwriter\n               ├─46819 postgres: autovacuum launcher\n               ├─46820 postgres: stats collector\n               └─46821 postgres: logical replication launcher\n    Aug 22 19:18:44 olam-test systemd[1]: Starting PostgreSQL database server...\n    Aug 22 19:18:44 olam-test postmaster[46813]: 2023-08-22 19:18:44.097 GMT [46813] LOG:  redirecting log outp>\n    Aug 22 19:18:44 olam-test postmaster[46813]: 2023-08-22 19:18:44.097 GMT [46813] HINT:  Future log output w>\n    active (running) tells you that the database is active and running, and you’re ready to start the installation of OLAM.\n    ```", "```\n    [opc@olam-test ~]$ sudo su - postgres -c \"createuser -S -P awx\"\n    Enter password for new role: welcome1\n    Enter it again: welcome1\n    ```", "```\n    [opc@olam-test ~]$ sudo su - postgres -c \"createdb -O awx awx\"\n    ```", "```\n    [root@olam-test ~]# vi /var/lib/pgsql/data/pg_hba.conf\n    ```", "```\n    # TYPE  DATABASE        USER            ADDRESS                  METHOD\n    # \"local\" is for Unix domain socket connections only\n    local   all             all                                      peer\n    # IPv4 local connections:\n    host    all             all             127.0.0.1/32             ident\n    # IPv6 local connections:\n    host    all             all             ::1/128                  ident\n    # Allow replication connections from localhost, by a user with the\n    # replication privilege.\n    local   replication     all                                      peer\n    host    replication     all             127.0.0.1/32             ident\n    host    replication     all             ::1/128                  ident\n    'OCI NAT Address':\n\n    ```", "```\n\n    ```", "```\n    [root@olam-test ~]# systemctl restart postgresql\n    ```", "```\n    [root@olam-test ~]# DNF update -y\n    Last metadata expiration check: 1:43:57 ago on Tue 22 Aug 2023 10:48:21 PM GMT.\n    Dependencies resolved.\n    ============================================================================================================================================\n     Package                                   Architecture       Version                                      Repository                     Size\n    ============================================================================================================================================\n    The output has been truncated for length.\n    ```", "```\n    [root@olam-test ~]# reboot\n    ```", "```\n    [root@olam-test ~]# DNF -y install ol-automation-manager\n    Last metadata expiration check: 1:52:46 ago on Tue 22 Aug 2023 10:48:21 PM GMT.\n    Dependencies resolved.\n    ============================================================================================================================================\n     Package                              Architecture    Version                                               Repository                   Size\n    ============================================================================================================================================\n    Installing:\n     ol-automation-manager                x86_64          2.0.1-3.el8                                          ol8_automation2             41 M\n    Installing dependencies:\n    The output has been truncated for length\n    [root@olam-test ~]# vi /etc/redis.conf\n    ```", "```\n    awx to continue the installation:\n\n    ```", "```\n\n    ```", "```\n    [awx@olam-test ~]$ podman system migrate\n    ```", "```\n    [awx@olam-test ~]$ podman pull container-registry.oracle.com/oracle_linux_automation_manager/olam-ee:latest\n    Trying to pull container-registry.oracle.com/oracle_linux_automation_manager/olam-ee:latest...\n    Getting image source signatures\n    Copying blob 1ca7c848b9e5 done\n    Copying blob a2cd216732a7 done\n    Copying blob 13ec27f79a4b done\n    Copying blob 0b5aff3da93f done\n    Copying config b764e737f4 done\n    Writing manifest to image destination\n    Storing signatures\n    ```", "```\n    [awx@olam-test ~]$ awx-manage migrate\n    Operations to perform:\n      Apply all migrations: auth, conf, contenttypes, main, oauth2_provider, sessions, sites, social_django, sso, taggit\n    Running migrations:\n    The output has been truncated for length.\n    ```", "```\n    [awx@olam-test ~]$ awx-manage createsuperuser --username admin --email bubba@nobody.com\n    Password:\n    Password (again)\n    ```", "```\n    [awx@olam-test ~]$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/tower/tower.key -out /etc/tower/tower.crt\n    Generating a RSA private key\n    ....................................+++++\n    ...............................................................................+++++\n    writing new private key to '/etc/tower/tower.key'\n    -----\n    You are about to be asked to enter information that will be incorporated\n    into your certificate request.\n    What you are about to enter is what is called a Distinguished Name or a DN.\n    There are quite a few fields but you can leave some blank\n    For some fields there will be a default value,\n    If you enter '.', the field will be left blank.\n    -----\n    Country Name (2 letter code) [XX]:01\n    State or Province Name (full name) []:Florida\n    Locality Name (eg, city) [Default City]:Miami\n    Organization Name (eg, company) [Default Company Ltd]:\n    Organizational Unit Name (eg, section) []:\n    Common Name (eg, your name or your server's hostname) []:olam-test\n    awx user now and su to root:\n\n    ```", "```\n\n    ```", "```\n    cat << EOF | sudo tee /etc/nginx/nginx.conf > /dev/null\n    > user nginx;\n    > worker_processes auto;\n    > error_log /var/log/nginx/error.log;\n    > pid /run/nginx.pid;\n    >\n    > # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\n    > include /usr/share/nginx/modules/*.conf;\n    >\n    > events {\n    >     worker_connections 1024;\n    > }\n    >\n    > http {\n    >     log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    >                       '$status $body_bytes_sent \"$http_referer\" '\n    >                       '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n    >\n    >     access_log  /var/log/nginx/access.log  main;\n    >\n    >     sendfile            on;\n    >     tcp_nopush          on;\n    >     tcp_nodelay         on;\n    >     keepalive_timeout   65;\n    >     types_hash_max_size 2048;\n    >\n    >     include             /etc/nginx/mime.types;\n    >     default_type        application/octet-stream;\n    >\n    >     # Load modular configuration files from the /etc/nginx/conf.d directory.\n    >     # See http://nginx.org/en/docs/ngx_core_module.html#include\n    >     # for more information.\n    >     include /etc/nginx/conf.d/*.conf;\n    > }\n    awx user:\n\n    ```", "```\n\n    ```", "```\n    [awx@olam-test ~]$ awx-manage register_default_execution_environments\n    'OLAM EE (latest)' Default Execution Environment registered.\n    'OLAM EE (latest)' Default Execution Environment updated.\n    Control Plane Execution Environment registered.\n    (changed: True)\n    [awx@olam-test ~]$ awx-manage register_queue --queuename=controlplane --hostnames=10.0.0.193\n    Creating instance group controlplane\n    Added instance 10.0.0.193 to controlplane\n    (changed: True)\n    controlplane\n    user to root, if you’re not already root, again here:\n\n    ```", "```\n\n    ```", "```\n    [root@olam-test ~]# systemctl enable --now ol-automation-manager.service\n    Created symlink /etc/systemd/system/multi-user.target.wants/ol-automation-manager.service → /usr/lib/systemd/system/ol-automation-manager.service.\n    ```", "```\n    https://'public_IP'.  You can find this in your OCI console, within your VM configuration. You will be asked to enter your password twice. Once this is done, your OLAM installation is complete and your console is configured.\n    ```", "```\n    [opc@olam-target-1 ~]$ ansible --version\n    ansible [core 2.14.2]\n      config file = /etc/ansible/ansible.cfg\n      configured module search path = ['/home/opc/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']\n      ansible python module location = /usr/lib/python3.11/site-packages/ansible\n      ansible collection location = /home/opc/.ansible/collections:/usr/share/ansible/collections\n      executable location = /usr/bin/ansible\n      python version = 3.11.2 (main, Jun 14 2023, 13:00:29) [GCC 8.5.0 20210514 (Red Hat 8.5.0-18.0.2)] (/usr/bin/python3.11)\n      jinja version = 3.1.2\n      libyaml = True\n    [opc@olam-target-1 ~]$\n    ```", "```\n    [opc@olam-target-1 ~]$ mkdir ~/ol-automation\n    [opc@olam-target-1 ol-automation]$ vi inventory\n    130.61.100.96\n    ~\n    ~\n    ~\n    ~\n    ```", "```\n    [opc@olam-target-1 ol-automation]$ ansible-inventory -i inventory --list\n    {\n        \"_meta\": {\n            \"hostvars\": {}\n        },\n        \"all\": {\n            \"children\": [\n                \"ungrouped\"\n            ]\n        },\n        \"ungrouped\": {\n            \"hosts\": [\n                \"130.61.100.96\"\n            ]\n        }\n    }\n    [opc@olam-target-1 ol-automation]$\n    ```", "```\n    [opc@olam-target-1 ol-automation]$ vi inventory\n    [preproduction]\n    130.61.100.96\n    ~\n    ~\n    ~\n    ~\n    ```", "```\n    [opc@olam-target-1 ol-automation]$ ansible-inventory -i inventory --list\n    {\n        \"_meta\": {\n            \"hostvars\": {}\n        },\n        \"all\": {\n            \"children\": [\n                \"ungrouped\",\n                \"preproduction\"\n            ]\n        },\n        \"preproduction\": {\n            \"hosts\": [\n                \"130.61.100.96\"\n            ]\n        }\n    ping to verify your inventory:\n\n    ```", "```\n\n    ```", "```\n    [opc@olam-target-1 ansible]$ sudo vi packt.yml\n    ---\n    - hosts: olam-target-2\n      tasks:\n        - name: Print message\n          debug:\n            msg: Hello from Packt Oracle Linux 8 Cookbook\n    ~\n    ~\n    ~\n    ~\n    ```", "```\n    [opc@olam-target-1 ansible]$ ansible-playbook -i inventory packt.yml\n    PLAY [all] *********************************************************************\n    TASK [Gathering Facts] *********************************************************\n    [WARNING]: Platform linux on host olam-target-2 is using the discovered Python\n    interpreter at /usr/bin/python, but future installation of another Python\n    interpreter could change this. See https://docs.ansible.com/ansible/2.14.2/referen\n    ce_appendices/interpreter_discovery.html for more information.\n    ok: [olam-target-2]\n    TASK [Print message] ***********************************************************\n    ok: [olam-target-2] => {\n        \"msg\": \"Hello from Packt Oracle Linux 8 Cookbook\"\n    }\n    PLAY RECAP *********************************************************************\n    olam-target-2: ok=2    changed=0    unreachable=0    failed=0    skipped=0     rescued=0    ignored=0\n    ```", "```\n```", "```\n```", "```\n```", "```\n```", "```\n    [opc@olam-test /]$ cd /var/lib/awx/\n    [opc@olam-test awx]$ ls\n    awxfifo  projects  rsyslog  uwsgi.stats  venv\n    [opc@olam-test awx]$ cd projects/\n    [opc@olam-test projects]$ cd demo_bundled/\n    [opc@olam-test demo_bundled]$ ls\n    httpd.yaml  permissions.yaml  yum_update.yaml\n    [opc@olam-test demo_bundled]$\n    [opc@olam-test demo_bundled]$ sudo vi change_permissions.yaml\n    ---\n    - name: Change file permissions\n      hosts: olam-test-1, olam-test-2\n      become: true\n      tasks:\n        - name: Change permissions for /tmp/changedir\n          file:\n            path: /tmp/changedir\n            owner: root\n            group: root\n            mode: \"0755\"\n    ```", "```\n\n2.  `hosts`: This specifies the target servers where the playbook will be executed. You can define the hosts directly in the playbook or use an inventory file.\n3.  `become: true`: This allows the playbook to run with elevated privileges, which might be required to change user permissions.\n4.  `tasks`: This section contains the list of tasks to be executed.\n5.  `name`: This is a description of the task.\n6.  `file`: This module is used to change the permissions of a directory.\n7.  `path`: This is the path to the directory where you want to change permissions.\n8.  `owner`: This parameter specifies the username that the ownership should be changed to. In this example, we used the `item` variable, which represents the current user in the loop.\n9.  `state`: `directory`: This ensures that the path is a directory.\n10.  OLAM will execute the playbook on the specified servers, changing the user permissions for the specified directory to users `user1` and `user2` in this example.\n11.  Make sure to replace `/path/to/directory` with the actual path of the directory you want to change permissions for, and update the list of users as per your requirements.\n12.  Ensure that you have proper SSH connectivity and the necessary privileges to change permissions on the target servers. The following code snippet is a simple, canned YAML file depicting file permissions:\n\n    ```", "```yaml\n    ---\n    - name: Change file permissions\n      hosts: olam-test-1, olam-test-2\n      become: true\n      tasks:\n        - name: Change permissions for /tmp/changedir\n          file:\n            path: /tmp/changedir\n            owner: root\n            group: root\n            mode: \"0755\"\n    ```"]