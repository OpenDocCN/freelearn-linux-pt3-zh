["```\n$ cat /etc/nsswitch.conf\n# Generated by authselect on Tue May 31 00:21:30 2022\n# Do not modify this file manually, use authselect instead. Any user changes will be overwritten.\n# You can stop authselect from managing your configuration by calling 'authselect opt-out'.\n# See authselect(8) for more details.\n# In order of likelihood of use to accelerate lookup.\npasswd:     files sss systemd\nshadow:     files\ngroup:      files sss systemd\nhosts:      files myhostname mdns4_minimal [NOTFOUND=return] resolve [!UNAVAIL=return] dns\nservices:   files sss\nnetgroup:   files sss\nautomount:  files sss\naliases:    files\nethers:     files\ngshadow:    files\nnetworks:   files dns\nprotocols:  files\npublickey:  files\nrpc:        files\n```", "```\n$ cat /etc/pam.d/sshd\n#%PAM-1.0\nauth       substack     password-auth\nauth       include      postlogin\naccount    required     pam_sepermit.so\naccount    required     pam_nologin.so\naccount    include      password-auth\npassword   include      password-auth\n# pam_selinux.so close should be the first session rule\nsession    required     pam_selinux.so close\nsession    required     pam_loginuid.so\n# pam_selinux.so open should only be followed by sessions to be executed in the user context\nsession    required     pam_selinux.so open env_params\nsession    required     pam_namespace.so\nsession    optional     pam_keyinit.so force revoke\nsession    optional     pam_motd.so\nsession    include      password-auth\nsession    include      postlogin\n```", "```\n$ cat /etc/pam.d/sshd\n# PAM configuration for the Secure Shell service\n# Standard Un*x authentication.\n@include common-auth\n# Disallow non-root logins when /etc/nologin exists.\naccount    required     pam_nologin.so\n# Uncomment and edit /etc/security/access.conf if you need to set complex\n# access limits that are hard to express in sshd_config.\n# account  required     pam_access.so\n# Standard Un*x authorization.\n@include common-account\n# SELinux needs to be the first session rule.  This ensures that any\n# lingering context has been cleared.  Without this it is possible\n# that a module could execute code in the wrong domain.\nsession [success=ok ignore=ignore module_unknown=ignore default=bad]        pam_selinux.so close\n# Set the loginuid process attribute.\nsession    required     pam_loginuid.so\n# Create a new session keyring.\nsession    optional     pam_keyinit.so force revoke\n# Standard Un*x session setup and teardown.\n@include common-session\n# Print the message of the day upon successful login.\n# This includes a dynamically generated part from /run/motd.dynamic\n# and a static (admin-editable) part from /etc/motd.\nsession    optional     pam_motd.so  motd=/run/motd.dynamic\nsession    optional     pam_motd.so noupdate\n# Print the status of the user's mailbox upon successful login.\nsession    optional     pam_mail.so standard noenv # [1]\n# Set up user limits from /etc/security/limits.conf.\nsession    required     pam_limits.so\n# Read environment variables from /etc/environment and\n# /etc/security/pam_env.conf.\nsession    required     pam_env.so # [1]\n# In Debian 4.0 (etch), locale-related environment variables were \n# moved to\n# /etc/default/locale, so read that as well.\nsession    required     pam_env.so user_readenv=1 envfile=/etc/default/locale\n# SELinux needs to intervene at login time to ensure that the process # starts\n# in the proper default security context.  Only sessions which are \n# intended\n# to run in the user's context should be run after this.\nsession [success=ok ignore=ignore module_unknown=ignore default=bad]        pam_selinux.so open\n# Standard Un*x password updating.\n@include common-password\n```", "```\n$ sudo dnf install samba-dc\n```", "```\n$ sudo rm -f /etc/samba/smb.conf\n$ sudo rm -f /etc/krb5.conf\n```", "```\n$ sudo samba-tool domain provision --option=\"interfaces=vboxnet0\" --option=\"bind interfaces only=yes\" --use-rfc2307 --interactive\nRealm:  AD.EXAMPLE.COM\nDomain [AD]:  AD\nServer Role (dc, member, standalone) [dc]:\nDNS backend (SAMBA_INTERNAL, BIND9_FLATFILE, BIND9_DLZ, NONE) [SAMBA_INTERNAL]:\nDNS forwarder IP address (write 'none' to disable forwarding) [127.0.0.53]:  192.168.56.1\nAdministrator password:\nRetype password:\nINFO 2022-12-07 16:25:13,958 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #2108: Looking up IPv4 addresses\nINFO 2022-12-07 16:25:17,450 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #2017: Fixing provision GUIDs\n...\nINFO 2022-12-07 16:25:17,784 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #2342: The Kerberos KDC configuration for Samba AD is located at /var/lib/samba/private/kdc.conf\nINFO 2022-12-07 16:25:17,785 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #2348: A Kerberos configuration suitable for Samba AD has been generated at /var/lib/samba/private/krb5.conf\nINFO 2022-12-07 16:25:17,785 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #2350: Merge the contents of this file with your system krb5.conf or replace it with this one. Do not create a symlink!\nINFO 2022-12-07 16:25:17,948 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #2082: Setting up fake yp server settings\nINFO 2022-12-07 16:25:18,002 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #487: Once the above files are installed, your Samba AD server will be ready to use\nINFO 2022-12-07 16:25:18,002 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #492: Server Role:           active directory domain controller\nINFO 2022-12-07 16:25:18,002 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #493: Hostname:              mizar\nINFO 2022-12-07 16:25:18,002 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #494: NetBIOS Domain:        AD\nINFO 2022-12-07 16:25:18,002 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #495: DNS Domain:            ad.example.com\nINFO 2022-12-07 16:25:18,002 pid:54185 /usr/lib64/python3.10/site-packages/samba/provision/__init__.py #496: DOMAIN SID:            S-1-5-21-2070738055-845390856-828010526\n```", "```\n$ sudo cp /var/lib/samba/private/krb5.conf /etc/krb5.conf\n```", "```\n$ sudo systemctl start samba\n```", "```\n$ samba-tool user show testuser\ndn: CN=testuser,CN=Users,DC=ad,DC=example,DC=com\nobjectClass: top\nobjectClass: person\nobjectClass: organizationalPerson\nobjectClass: user\ncn: testuser\ninstanceType: 4\nwhenCreated: 20221207171435.0Z\nuSNCreated: 4103\nname: testuser\nobjectGUID: 773d2799-e08c-41fb-9768-675dd59edbbb\nbadPwdCount: 0\ncodePage: 0\ncountryCode: 0\nbadPasswordTime: 0\nlastLogoff: 0\nprimaryGroupID: 513\nobjectSid: S-1-5-21-2070738055-845390856-828010526-1103\naccountExpires: 9223372036854775807\nsAMAccountName: testuser\nsAMAccountType: 805306368\nuserPrincipalName: testuser@ad.example.com\nobjectCategory: CN=Person,CN=Schema,CN=Configuration,DC=ad,DC=example,DC=com\npwdLastSet: 133149068751598230\nuserAccountControl: 512\nlastLogonTimestamp: 133149085286105320\nlockoutTime: 0\nwhenChanged: 20221207180044.0Z\nuSNChanged: 4111\nlogonCount: 0\ndistinguishedName: CN=testuser,CN=Users,DC=ad,DC=example,DC=com\n```", "```\n$ realm discover ad.example.com\nad.example.com\n  type: kerberos\n  realm-name: AD.EXAMPLE.COM\n  domain-name: ad.example.com\n  configured: no\n  server-software: active-directory\n  client-software: sssd\n  required-package: oddjob\n  required-package: oddjob-mkhomedir\n  required-package: sssd\n  required-package: adcli\n  required-package: samba-common-tools\n```", "```\n$ sudo realm join ad.example.com\nPassword for Administrator:\n```", "```\n$ sudo cat /etc/sssd/sssd.conf\n[sssd]\ndomains = ad.example.com\nconfig_file_version = 2\nservices = nss, pam\n[domain/ad.example.com]\ndefault_shell = /bin/bash\nkrb5_store_password_if_offline = True\ncache_credentials = True\nkrb5_realm = AD.EXAMPLE.COM\nrealmd_tags = manages-system joined-with-adcli\nid_provider = ad\nfallback_homedir = /home/%u@%d\nad_domain = ad.example.com\nuse_fully_qualified_names = True\nldap_id_mapping = True\naccess_provider = ad\n```", "```\n$ id testuser@ad.example.com\nuid=1505601103(testuser@ad.example.com) gid=1505600513(domain users@ad.example.com) groups=1505600513(domain users@ad.example.com)\n```"]