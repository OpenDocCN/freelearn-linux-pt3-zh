- en: 14\. Ubuntu 23.04 Firewall Basics
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 14. Ubuntu 23.04 防火墙基础
- en: A firewall is a vital component in protecting an individual computer system
    or network of computers from external attacks (typically from an internet connection).
    Any computer connected directly to an internet connection should ideally run a
    firewall to protect against malicious activity. Similarly, any internal network
    must have some form of firewall between it and an external internet connection.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 防火墙是保护单个计算机系统或计算机网络免受外部攻击（通常来自互联网连接）的重要组成部分。任何直接连接到互联网的计算机都应该运行防火墙，以防止恶意活动。同样，任何内部网络也必须在它与外部互联网连接之间配置某种形式的防火墙。
- en: 'Ubuntu is supplied with powerful firewall technology known as iptables built-in.
    Entire books can, and indeed have, been written about configuring iptables. If
    you would like to learn about iptables, we recommend the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu 提供了强大的防火墙技术，名为内置的 iptables。关于如何配置 iptables，可以写成整本书，实际上也已经有很多书籍讨论这一话题。如果你想了解
    iptables，推荐以下资源：
- en: '[https://www.linuxtopia.org/Linux_Firewall_iptables/index.html](https://www.linuxtopia.org/Linux_Firewall_iptables/index.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.linuxtopia.org/Linux_Firewall_iptables/index.html](https://www.linuxtopia.org/Linux_Firewall_iptables/index.html)'
- en: This chapter will cover some basic concepts of firewalls, TCP/IP ports, and
    services. Firewall configuration on Ubuntu will be covered in the chapters entitled
    “Ubuntu 22.04 Firewall Configuration with firewalld” and [“Using gufw and ufw
    to Configure an Ubuntu Firewall”](Ubuntu_ufw_Firewall.xhtml#_idTextAnchor240).
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍一些防火墙、TCP/IP 端口和服务的基本概念。Ubuntu 上的防火墙配置将在“Ubuntu 22.04 防火墙配置与 firewalld”和
    [“使用 gufw 和 ufw 配置 Ubuntu 防火墙”](Ubuntu_ufw_Firewall.xhtml#_idTextAnchor240)章节中进行讨论。
- en: 14.1 Understanding Ports and Services
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 14.1 了解端口和服务
- en: The predominant network communications protocol in use these days is TCP/IP.
    It is the protocol used by the internet and, as such, has swept away most of the
    formerly popular protocols used for local area networks (LANs).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 目前使用的主要网络通信协议是 TCP/IP。这是互联网使用的协议，因此它已经取代了许多曾经流行的局域网（LAN）协议。
- en: TCP/IP defines a total of 65,535 ports, of which 1023 are considered well-known
    ports. It is essential to understand that these are not physical ports into which
    network cables are connected but rather virtual ports on each network connection
    which can be used by applications and services to communicate over a TCP/IP network
    connection. In reality, the number of ports used by popular network clients and
    services comprises an even smaller subset of the well-known group of ports.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: TCP/IP 定义了总共 65,535 个端口，其中 1023 个被视为知名端口。需要理解的是，这些端口不是物理端口（即网络电缆连接的地方），而是每个网络连接上的虚拟端口，应用程序和服务可以通过这些端口在
    TCP/IP 网络连接中进行通信。实际上，流行的网络客户端和服务使用的端口数量仅占知名端口组中的一个更小子集。
- en: An operating system can provide several different TCP/IP services. A comprehensive
    list of such services is provided in the table at the end of this chapter. Still,
    such services include HTTPS for running a secure web server, FTP for allowing
    file transfers, SSH for providing secure remote login access and file transfer,
    and SMTP for transporting email messages. Each service is, in turn, assigned to
    a standard TCP/IP port. For example, HTTPS is assigned to port 443, while SSH
    communication occurs on port 22.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统可以提供多个不同的 TCP/IP 服务。该章节末尾的表格提供了这些服务的完整列表。常见的服务包括用于运行安全 Web 服务器的 HTTPS，用于文件传输的
    FTP，用于提供安全远程登录访问和文件传输的 SSH，以及用于传输电子邮件消息的 SMTP。每个服务都会分配到一个标准的 TCP/IP 端口。例如，HTTPS
    分配给端口 443，而 SSH 通信则发生在端口 22 上。
- en: 14.2 Securing Ports and Services
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 14.2 安全化端口和服务
- en: A large part of securing servers involves defining roles and, based on the roles,
    defining which services and ports should be enabled. For example, a server that
    acts solely as a web server should only run the HTTPS service (in addition to
    perhaps SSH for remote administration access). All other services should be disabled
    and, ideally, removed entirely from the operating system (thereby making it harder
    for an intruder to re-enable the service).
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 保护服务器的一个重要部分是定义角色，并根据这些角色确定应该启用哪些服务和端口。例如，一个仅作为 Web 服务器的服务器应该只运行 HTTPS 服务（可能还包括
    SSH 以进行远程管理访问）。所有其他服务应该禁用，并且最好从操作系统中完全移除（这样可以增加攻击者重新启用服务的难度）。
- en: Securing a system involves removing any unnecessary services from the operating
    system and ensuring that the ports associated with the non-essential services
    are blocked using a firewall. The rules that define which ports are accessible
    and under what circumstances are determined using iptables.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 系统安全化涉及从操作系统中删除任何不必要的服务，并确保通过防火墙屏蔽与非必要服务相关的端口。定义哪些端口可以访问以及在什么情况下可以访问的规则是通过 iptables
    确定的。
- en: Many operating systems are installed with several services installed and activated
    by default. Before installing a new operating system, the installation must be
    carefully planned. This planning involves deciding which services are not required
    and identifying which services have been installed and enabled by default. Deployment
    of new operating system installations should never be rushed. The fewer services
    and open ports available on a system, the smaller the surface area and opportunities
    for attackers.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 许多操作系统默认安装并激活了多个服务。在安装新操作系统之前，必须仔细规划安装过程。这项规划包括决定哪些服务是不需要的，以及识别哪些服务在默认情况下已经安装并启用。新操作系统的部署不应匆忙进行。系统上可用的服务和开放端口越少，攻击者的攻击面和机会也就越小。
- en: 14.3 Ubuntu Services and iptables Rules
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 14.3 Ubuntu 服务与 iptables 规则
- en: 'By default, a newly installed Ubuntu system has no iptables rules defined to
    restrict access to ports. The following command may be executed in a terminal
    window to view the current iptables settings:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，刚安装的 Ubuntu 系统没有定义任何 iptables 规则来限制端口访问。可以在终端窗口中执行以下命令来查看当前的 iptables
    设置：
- en: iptables -L
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iptables -L
- en: Chain INPUT (policy ACCEPT)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 链 INPUT（策略：ACCEPT）
- en: target prot opt source destination
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 目标 协议 选项 源 目的地
- en: Chain FORWARD (policy ACCEPT)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 链 FORWARD（策略：ACCEPT）
- en: target prot opt source destination
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 目标 协议 选项 源 目的地
- en: Chain OUTPUT (policy ACCEPT)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 链 OUTPUT（策略：ACCEPT）
- en: target prot opt source destination
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 目标 协议 选项 源 目的地
- en: As illustrated in the above output, no rules are currently defined. While this
    may appear to be an unsafe configuration, it is essential to remember that a newly
    installed Ubuntu system also has few services running by default, making the ports
    useless to a potential attacker. For example, accessing a web server on a newly
    installed Ubuntu system is impossible because no web server services are installed
    or running by default. Once services begin to be activated on the system, it will
    be important to establish a firewall strategy by defining iptables rules.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如上面的输出所示，目前没有定义任何规则。虽然这看起来像是一个不安全的配置，但需要记住，刚安装的 Ubuntu 系统默认也没有运行太多服务，这使得端口对潜在攻击者来说是无用的。例如，在新安装的
    Ubuntu 系统上访问 Web 服务器是不可能的，因为默认情况下没有安装或运行任何 Web 服务器服务。一旦系统上的服务开始激活，就需要通过定义 iptables
    规则来建立防火墙策略。
- en: 'Several methods are available for defining iptables rules, including using
    command line tools and configuration files. For example, to block access to port
    25 (used by the SMTP mail transfer protocol) from IP address 192.168.2.76, the
    following command could be issued in a terminal window:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 定义 iptables 规则有几种方法，包括使用命令行工具和配置文件。例如，要阻止从 IP 地址 192.168.2.76 访问端口 25（用于 SMTP
    邮件传输协议），可以在终端窗口中输入以下命令：
- en: iptables -A INPUT -s 192.168.2.76 -p tcp --destination-port 25 -j DROP
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iptables -A INPUT -s 192.168.2.76 -p tcp --destination-port 25 -j DROP
- en: 'If we now check the current rules, we will see that this one is currently listed:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在检查当前的规则，我们会看到以下规则已列出：
- en: iptables -L
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iptables -L
- en: Chain INPUT (policy ACCEPT)
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 链 INPUT（策略：ACCEPT）
- en: target prot opt source destination
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 目标 协议 选项 源 目的地
- en: DROP tcp -- 192.168.2.76 anywhere tcp dpt:smtp
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: DROP tcp -- 192.168.2.76 anywhere tcp dpt:smtp
- en: Chain FORWARD (policy ACCEPT)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 链 FORWARD（策略：ACCEPT）
- en: target prot opt source destination
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 目标 协议 选项 源 目的地
- en: Chain OUTPUT (policy ACCEPT)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 链 OUTPUT（策略：ACCEPT）
- en: target prot opt source destination
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 目标 协议 选项 源 目的地
- en: 'The rule may subsequently be removed as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 该规则随后可以按如下方式删除：
- en: iptables -D INPUT -s 192.168.2.76 -p tcp --destination-port 25 -j DROP
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iptables -D INPUT -s 192.168.2.76 -p tcp --destination-port 25 -j DROP
- en: Given the complexity of iptables it is unsurprising that several user-friendly
    configuration tools have been created to ease the rule creation process. One such
    tool is the firewall-cmd command-line tool which will be covered in the chapter
    “Ubuntu 22.04 Firewall Configuration with firewalld”.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于 iptables 的复杂性，开发了几种用户友好的配置工具来简化规则创建过程。一个这样的工具是 firewall-cmd 命令行工具，相关内容将在“Ubuntu
    22.04 使用 firewalld 配置防火墙”一章中讲解。
- en: 14.4 Well-Known Ports and Services
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 14.4 知名端口与服务
- en: 'Before moving on to cover more complex firewall rules, it is first worth taking
    time to outline some of the key services that can be provided by a Ubuntu system,
    together with the corresponding port numbers:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入讨论更复杂的防火墙规则之前，首先值得花时间概述一下Ubuntu系统可以提供的一些关键服务及其对应的端口号：
- en: '| Port | Assignment | Description |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 端口 | 分配 | 描述 |'
- en: '| 20 | FTP | File Transfer Protocol (Data) - The File Transfer protocol provides
    a mechanism for transferring specific files between network-connected computer
    systems. The transfer is typically performed using the ftp client. Most modern
    web browsers can also browse and download files on a remote FTP server. FTP uses
    TCP (rather than UDP) to transfer files, which is considered a highly reliable
    transport mechanism. FTP does not encrypt data and is not considered a secure
    file transfer protocol. Secure Copy Protocol (SCP) and Secure File Transfer Protocol
    (SFTP) are strongly recommended in place of FTP. |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| 20 | FTP | 文件传输协议（数据）- 文件传输协议提供了一个在网络连接的计算机系统之间传输特定文件的机制。传输通常使用ftp客户端执行。大多数现代网页浏览器也可以浏览并下载远程FTP服务器上的文件。FTP使用TCP（而不是UDP）来传输文件，TCP被认为是一种高度可靠的传输机制。FTP不加密数据，因此不被视为安全的文件传输协议。建议使用安全复制协议（SCP）和安全文件传输协议（SFTP）来代替FTP。|'
- en: '| 21 | FTP | File Transfer (Control) - Traditionally, FTP has two ports assigned
    (port 20 and port 21). Port 20 was initially considered the data transfer port,
    while port 21 was assigned to communicate control information. However, in modern
    implementations, port 20 is rarely used, with all communication taking place on
    port 21. |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| 21 | FTP | 文件传输（控制）- 传统上，FTP有两个分配的端口（端口20和端口21）。端口20最初被认为是数据传输端口，而端口21则被分配用于通信控制信息。然而，在现代实现中，端口20很少使用，所有通信都发生在端口21上。|'
- en: '| 22 | SSH | Secure Shell - The Secure Shell provides a safe, encrypted, remote
    login session to a host over a TCP/IP network. The original mechanism for remote
    access was the Telnet protocol. However, because Telnet transmits data in plain
    text, its use is strongly discouraged in favor of the secure shell, which encrypts
    all communications, including login and password credentials. SSH also provides
    the mechanism by which files can be securely transferred using the Secure Copy
    Protocol (SCP) and is also the basis for the Secure File Transfer Protocol (SFTP).
    SSH also replaces both the rsh and rlogin clients. |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 22 | SSH | 安全外壳 - 安全外壳提供了一个安全的、加密的远程登录会话，可以通过TCP/IP网络访问主机。远程访问的原始机制是Telnet协议。然而，由于Telnet以明文传输数据，因此强烈建议使用安全外壳，它会加密所有通信，包括登录和密码凭证。SSH还提供了一个机制，通过安全复制协议（SCP）可以安全地传输文件，并且还是安全文件传输协议（SFTP）的基础。SSH还取代了rsh和rlogin客户端。|'
- en: '| 23 | Telnet | Telnet - Telnet is a terminal emulation protocol that can log
    into a remote system over a TCP/IP connection. The access is text-based, allowing
    the user to type into a command prompt on the remote host, and text displayed
    by the remote host is displayed on the local Telnet client. Telnet encrypts neither
    the password nor the text communicated between the client and server. As such,
    the use of telnet is strongly discouraged. Most modern systems will have port
    23 closed and the telnet service disabled to prevent its use. SSH should be used
    in place of Telnet. |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| 23 | Telnet | Telnet - Telnet是一个终端仿真协议，可以通过TCP/IP连接登录到远程系统。访问是基于文本的，允许用户在远程主机上输入命令提示符，远程主机显示的文本将在本地Telnet客户端上显示。Telnet既不加密密码，也不加密客户端和服务器之间传输的文本。因此，强烈建议避免使用Telnet。大多数现代系统会关闭端口23，并禁用Telnet服务，以防止其使用。应该使用SSH来代替Telnet。'
- en: '| 25 | SMTP | Simple Mail Transfer Protocol - SMTP defines the mechanism by
    which email messages are sent from one network host to another. SMTP is a straightforward
    protocol requiring the mail service to always be available at the receiving host.
    Typically the receiving host will store incoming messages in a spool for subsequent
    access by the recipient using the POP3 or IMAP protocols. In addition, SMTP uses
    the TCP transport protocol to ensure error-free message delivery. |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 25 | SMTP | 简单邮件传输协议 - SMTP定义了电子邮件消息从一个网络主机发送到另一个网络主机的机制。SMTP是一种简单的协议，要求接收主机的邮件服务始终可用。通常，接收主机会将传入的邮件存储在一个排队队列中，供收件人通过POP3或IMAP协议访问。此外，SMTP使用TCP传输协议来确保消息的无误传递。|'
- en: '| 53 | DNS | Domain Name Server - The service used by TCP/IP networks to translate
    host names and Fully Qualified Domain Names (FQDN) to IP addresses. |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 53 | DNS | 域名系统 - TCP/IP 网络中用于将主机名和完全限定域名（FQDN）转换为 IP 地址的服务。 |'
- en: '| 69 | TFTP | Trivial File Transfer Protocol - TFTP is a stripped-down version
    of the File Transfer Protocol (FTP). It has a reduced command set and lacks authentication.
    The most significant feature of TFTP is that it uses UDP to transfer data. This
    results in high-speed transfer speeds but, consequently, lacks data reliability.
    TFTP is typically used in network-based booting for diskless workstations. |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 69 | TFTP | 简单文件传输协议 - TFTP 是文件传输协议（FTP）的精简版。它的命令集减少，且不支持身份验证。TFTP 的最显著特点是它使用
    UDP 进行数据传输。这导致了高速传输，但也因此缺乏数据可靠性。TFTP 通常用于无盘工作站的网络启动。 |'
- en: '| 80 | HTTP | Hypertext Text Transfer Protocol - HTTP is used to download text,
    graphics, and multimedia from a web server to a web browser. It defines the command
    and control mechanism between the browser and server, defining client requests
    and server responses. HTTP is based on the TCP transport protocol and, as such,
    is a connection-oriented protocol. |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 80 | HTTP | 超文本传输协议 - HTTP 用于从 Web 服务器将文本、图形和多媒体内容下载到 Web 浏览器。它定义了浏览器与服务器之间的命令和控制机制，规定了客户端请求和服务器响应。HTTP
    基于 TCP 传输协议，因此是一种面向连接的协议。 |'
- en: '| 110 | POP3 | Post Office Protocol - The POP3 protocol is a mechanism for
    storing and retrieving incoming email messages from a server. In most corporate
    environments, incoming email is stored on an email server and then downloaded
    to an email client running on the user’s desktop or laptop when the user checks
    email. However, POP3 downloads all new messages to the client and does not allow
    the user to choose which messages to download, view headers, or download only
    parts of messages. For this reason, the IMAP protocol is increasingly being used
    in place of POP3\. |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| 110 | POP3 | 邮局协议 - POP3 协议是一种从服务器存储和检索传入电子邮件的机制。在大多数企业环境中，传入邮件会存储在电子邮件服务器上，然后在用户检查邮件时下载到运行在用户桌面或笔记本上的电子邮件客户端。然而，POP3
    会将所有新邮件下载到客户端，并不允许用户选择下载哪些邮件、查看邮件头或仅下载邮件的部分内容。因此，IMAP 协议正在逐渐取代 POP3 的使用。 |'
- en: '| 119 | NNTP | Network News Transfer Protocol - The protocol responsible for
    posting and retrieving messages to and from Usenet News Servers (i.e., newsgroups
    and discussion forums hosted on remote servers). NNTP operates at the Application
    layer of the OSI stack and uses TCP to ensure error-free message retrieval and
    transmission. |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 119 | NNTP | 网络新闻传输协议 - 负责向 Usenet 新闻服务器（即托管在远程服务器上的新闻组和讨论论坛）发布和检索消息的协议。NNTP
    在 OSI 协议栈的应用层上运行，并使用 TCP 来确保无误地检索和传输消息。 |'
- en: '| 123 | NTP | Network Time Protocol - A protocol designed to synchronize computer
    clocks with an external time source. Using this protocol, an operating system
    or application can request the current time from a remote NTP server. The remote
    NTP server is usually based on the time provided by a nuclear clock. NTP is useful
    for ensuring that all systems in a network are set to the same, accurate time
    of day. This is of particular importance in security situations when, for example,
    the time a file was accessed or modified on a client or server is in question.
    |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 123 | NTP | 网络时间协议 - 一种设计用来将计算机时钟与外部时间源同步的协议。通过此协议，操作系统或应用程序可以从远程 NTP 服务器请求当前时间。远程
    NTP 服务器通常基于核时钟提供的时间。NTP 对确保网络中所有系统设置为相同、准确的时间非常重要。尤其在安全场景中，当例如文件在客户端或服务器上的访问或修改时间出现争议时，NTP
    的作用尤为关键。 |'
- en: '| 143 | IMAP4 | Internet Message Access Protocol, Version 4 - IMAP4 is an advanced
    and secure email retrieval protocol. IMAP is similar to POP3, allowing users to
    access email messages stored on an email server. However, IMAP includes many additional
    features, such as the ability to selectively download messages, view message headers,
    search messages, and download part of a message. In addition, IMAP4 uses authentication
    and fully supports Kerberos authentication. |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 143 | IMAP4 | 互联网邮件访问协议，第4版 - IMAP4 是一种先进且安全的电子邮件检索协议。IMAP 类似于 POP3，允许用户访问存储在电子邮件服务器上的邮件。然而，IMAP
    包含许多附加功能，例如选择性下载邮件、查看邮件头、搜索邮件以及仅下载邮件的部分内容。此外，IMAP4 使用身份验证，并完全支持 Kerberos 认证。 |'
- en: '| 161 | SNMP | Simple Network Management Protocol - Provides a mechanism whereby
    network administrators can collect information about network devices (such as
    hubs, bridges, routers, and switches). The SNMP protocol enables agents running
    on network devices to communicate their status to a central manager and, in turn,
    allows the manager to send new configuration parameters to the device agent. The
    agents can further be configured to notify the manager when certain events, known
    as traps, occur. SNMP uses UDP to send and receive data. |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| 161 | SNMP | 简单网络管理协议 - 提供了一种机制，允许网络管理员收集有关网络设备（如集线器、桥接器、路由器和交换机）的信息。SNMP协议使运行在网络设备上的代理能够将其状态传递给中央管理者，并反过来允许管理者将新的配置参数发送给设备代理。代理还可以进一步配置，以在发生某些事件（称为陷阱）时通知管理者。SNMP使用UDP来发送和接收数据。|'
- en: '| 443 | HTTPS | Hypertext Transfer Protocol Secure - The standard HTTP (non-secure)
    protocol transfers data in clear text (i.e., with no encryption and visible to
    anyone who might intercept the traffic). While this is acceptable for most web
    browsing purposes, it poses a severe security risk when confidential information
    such as credit card details needs to be transmitted from the browser to the web
    server. HTTPS addresses this using the Secure Sockets Layer (SSL) to send encrypted
    data between the client and server. |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 443 | HTTPS | 超文本传输协议安全 - 标准的HTTP（不安全）协议以明文传输数据（即没有加密，且任何可能拦截流量的人都能看到）。虽然这对于大多数网页浏览目的来说是可以接受的，但当需要从浏览器向Web服务器传输机密信息，如信用卡详细信息时，这构成了严重的安全风险。HTTPS通过使用安全套接层（SSL）来解决这一问题，通过加密的数据在客户端和服务器之间传输。|'
- en: '| 2049 | NFS | Network File System - Originally developed by Sun Microsystems
    and subsequently widely adopted throughout the industry, NFS allows a file system
    on a remote system to be accessed over the network by another system as if the
    file system were on a local disk drive. NFS is widely used on UNIX and LINUX-based
    systems. Later versions of Microsoft Windows can also access NFS-shared file systems
    on UNIX and LINUX-based systems. |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| 2049 | NFS | 网络文件系统 - 最初由Sun Microsystems开发，随后广泛应用于整个行业，NFS允许通过网络让远程系统上的文件系统像本地磁盘驱动器一样被另一系统访问。NFS广泛应用于基于UNIX和LINUX的系统。微软Windows的后续版本也可以访问基于UNIX和LINUX系统上的NFS共享文件系统。|'
- en: Table 14-1
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 表14-1
- en: 14.5 Summary
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 14.5 总结
- en: A newly installed Ubuntu system is generally considered secure due to the absence
    of services running on the system ports. Once the system begins to be configured
    for use, however, it is important to ensure that it is protected by implementing
    a firewall. When configuring firewalls, it is important to understand the various
    ports and the corresponding services.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 新安装的Ubuntu系统通常被认为是安全的，因为系统端口上没有运行服务。然而，一旦系统开始配置以供使用，就需要确保通过实施防火墙来保护系统。在配置防火墙时，理解各种端口和对应服务非常重要。
- en: Several firewall options are available, the most basic being the command-line
    configuration of the iptables firewall interface. More intuitive and advanced
    options are available via firewalld, which will be covered in the next chapter.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种防火墙选项，其中最基本的是命令行配置iptables防火墙接口。通过firewalld可以获得更直观和高级的选项，下一章将介绍这些选项。
