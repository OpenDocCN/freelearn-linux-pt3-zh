["```\nwhich snap \n```", "```\nsudo dnf install snapd \n```", "```\nsudo snap install microk8s --classic \n```", "```\nbrew install ubuntu/microk8s/microk8s \n```", "```\nmicrok8s install \n```", "```\nsudo microk8s kubectl get all --all-namespaces \n```", "```\nsudo microk8s enable dns \n```", "```\nsudo usermod -a -G microk8s <yourusername> \n```", "```\nsudo nano /boot/firmware/cmdline.txt \n```", "```\n`cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1` \n```", "```\nsudo apt install containerd \n```", "```\nsystemctl status containerd \n```", "```\nsudo mkdir /etc/containerd \n```", "```\ncontainerd config default | sudo tee /etc/containerd/config.toml \n```", "```\n[plugins.\"io.containerd.grpc.v1.cri\".containerd.runtimes.runc.options] \n```", "```\nSystemdCgroup = false \n```", "```\nSystemdCgroup = true \n```", "```\nsudo swapoff -a \n```", "```\n#net.ipv4.ip_forward=1 \n```", "```\nnet.ipv4.ip forward=1 \n```", "```\nsudo nano /etc/modules-load.d/k8s.conf \n```", "```\nbr_netfilter \n```", "```\nsudo reboot \n```", "```\nsudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg \n```", "```\necho \"deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee /etc/apt/sources.list.d/kubernetes.list \n```", "```\nsudo apt update \n```", "```\nsudo apt install kubeadm kubectl kubelet \n```", "```\nsudo kubeadm init --control-plane-endpoint=172.16.250.216 --node-name controller --pod-network-cidr=10.244.0.0/16 \n```", "```\nkubectl get pods --all-namespaces \n```", "```\nkubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml \n```", "```\nkubectl get nodes \n```", "```\nsudo kubeadm join 172.16.250.216:6443 --token zu5u3x.p45x0qkjl37ine6i \\\n    --discovery-token-ca-cert-hash sha256...1360c \n```", "```\nkubeadm token create --print-join-command \n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-example\n  labels:\n    app: nginx\nspec:\n  containers:\n    - name: nginx\n      image: linuxserver/nginx\n      ports:\n        - containerPort: 80\n          name: \"nginx-http\" \n```", "```\napiVersion: v1\nkind: Pod \n```", "```\nmetadata:\n  name: nginx-example\n  labels:\n    app: nginx \n```", "```\nspec:\n  containers:\n    - name: nginx       image: linuxserver/nginx \n```", "```\n ports:\n        - containerPort: 80\n          name: \"nginx-http\" \n```", "```\nmultipass transfer <filename.yml> microk8s-vm: \n```", "```\nkubectl apply -f pod.yml \n```", "```\nkubectl get pods \n```", "```\n kubectl get pods -o wide \n```", "```\ncurl 10.244.1.2 \n```", "```\nsudo apt install curl \n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-example\nspec:\n  type: NodePort\n  ports:\n    - name: http\n      port: 80\n      nodePort: 30080\n      targetPort: nginx-http\n  selector:\n    app: nginx \n```", "```\nkubectl apply -f service-nodeport.yml \n```", "```\nkubectl get service \n```", "```\nkubectl delete pod nginx-example \n```", "```\nkubectl delete service nginx-example \n```"]