- en: '*Chapter 13*: Analyzing Policy Behavior'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第13章*：分析策略行为'
- en: Although SELinux policies enforce the mandatory access controls and application
    behavior on a system, knowing how a policy will act upfront is useful for administrators
    to perform assessments and root cause analysis activities.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 SELinux 策略在系统上强制执行强制访问控制和应用程序行为，但了解策略的预期行为对于管理员执行评估和根本原因分析活动非常有用。
- en: Throughout this chapter, we will learn how to query the SELinux policy in depth,
    using a multitude of tools to query process transitions, analyze information flows,
    and compare policies. We will consider the `apol` tool, a graphical interface
    with which we can perform several analyses on a policy, as well as command-line
    tools such as `sesearch`, `sedta`, `seinfoflow`, and `sepolicy`. Finally, we will
    use `sediff` to compare policies.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何深入查询 SELinux 策略，使用多种工具查询进程转换、分析信息流并比较策略。我们将考虑 `apol` 工具，这是一个图形界面工具，可以帮助我们对策略进行多种分析，同时也会涉及命令行工具，如
    `sesearch`、`sedta`、`seinfoflow` 和 `sepolicy`。最后，我们将使用 `sediff` 来比较策略。
- en: 'In this chapter, we''re going to cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要主题：
- en: Performing single-step analysis
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行单步分析
- en: Investigating domain transitions
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调查领域转换
- en: Analyzing information flow
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析信息流
- en: Comparing policies
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 比较策略
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'Check out the following video to see the Code in Action: [https://bit.ly/3lY56LB](https://bit.ly/3lY56LB)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频，了解代码的实际操作：[https://bit.ly/3lY56LB](https://bit.ly/3lY56LB)
- en: Performing single-step analysis
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行单步分析
- en: 'Until now, we''ve covered a few methods of analyzing SELinux policies through
    command-line utilities such as `seinfo` and `sesearch`. These utilities can assist
    users in performing single-step analyses: they either provide immediate information
    about an SELinux object (which is mainly what `seinfo` is about) or are capable
    of querying direct SELinux rules (which is the scope of `sesearch`).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经通过命令行工具如 `seinfo` 和 `sesearch` 介绍了一些分析 SELinux 策略的方法。这些工具可以帮助用户执行单步分析：它们要么提供有关
    SELinux 对象的即时信息（这正是 `seinfo` 的功能），要么能够查询直接的 SELinux 规则（这正是 `sesearch` 的范围）。
- en: Not all capabilities of the `seinfo` and `sesearch` utilities have been discussed
    yet though, so let's see what other tricks these commands have up their sleeves.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，`seinfo` 和 `sesearch` 工具的所有功能还未完全讨论，接下来让我们看看这些命令还有哪些其他技巧。
- en: Using different SELinux policy files
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用不同的 SELinux 策略文件
- en: Many SELinux analysis tools, including `seinfo` and `sesearch`, can access both
    the currently loaded SELinux policy and a specified SELinux policy file. The latter
    allows developers to query SELinux policies of systems they do not have direct
    access to, for which direct access is cumbersome (such as mobile devices), or
    that have been used in previous situations (backups) and are no longer active.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 许多 SELinux 分析工具，包括 `seinfo` 和 `sesearch`，可以访问当前加载的 SELinux 策略和指定的 SELinux 策略文件。后者允许开发者查询他们无法直接访问的系统的
    SELinux 策略（如移动设备），或者查询以前使用过（备份）且现在不再活跃的策略。
- en: 'For instance, to analyze a policy file called `policy.sepolicy-2`, the following
    `seinfo` command can be used:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要分析名为 `policy.sepolicy-2` 的策略文件，可以使用以下 `seinfo` 命令：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: When the command is not explicitly told to parse a given policy file, it will
    try to query the current active policy through the `/sys/fs/selinux/policy` pseudo-file.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当命令没有明确指示解析给定的策略文件时，它会尝试通过 `/sys/fs/selinux/policy` 伪文件查询当前活动的策略。
- en: Displaying policy object information
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 显示策略对象信息
- en: The main purpose of the `seinfo` application is to display SELinux object information.
    This information is presented on a per-object basis. Various SELinux object types
    are supported, ranging from the well-known types, attributes, roles, and users,
    to the more specialized `fs_use_*` declarations or `genfscon` statements.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`seinfo` 应用程序的主要功能是显示 SELinux 对象信息。该信息是按对象逐个显示的。支持各种 SELinux 对象类型，从常见的类型、属性、角色和用户，到更为专门的
    `fs_use_*` 声明或 `genfscon` 语句。'
- en: 'A complete list of supported object types (and their resulting `seinfo` options)
    can be found on the `seinfo` manual page, or through the direct help:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的对象类型的完整列表（及其对应的 `seinfo` 选项）可以在 `seinfo` 手册页中找到，或者通过直接帮助获取：
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Regardless of the object type that the user is interested in, `seinfo` has
    three main modus operandi:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 无论用户感兴趣的对象类型是什么，`seinfo` 都有三种主要的操作模式：
- en: 'In the first mode, it lists the objects of a given type. For this, only the
    option has to be passed on, without additional information. For instance, to list
    all object classes available in the policy, use the following command:'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第一种模式下，它列出给定类型的对象。为此，只需要传递选项，无需其他信息。例如，要列出策略中所有可用的对象类，请使用以下命令：
- en: '[PRE2]'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the second mode, it can confirm (or deny) the presence of an object instance.
    To accomplish this, add the instance name to the command. For instance, to validate
    if the `memprotect` class is available in the policy, use the following command:'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在第二种模式下，它可以确认（或否认）某个对象实例的存在。要实现这一点，向命令中添加实例名称。例如，要验证`memprotect`类是否在策略中可用，请使用以下命令：
- en: '[PRE3]'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Sadly, regardless of whether the instance is available or not, the return code
    of the application is the same, so scripts cannot use this without additional
    statements to verify whether the instance exists. Instead, they will need to check
    the output of the command (which will state that zero instances exist that match
    the name).
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可惜，无论实例是否可用，应用程序的返回码都是相同的，因此脚本在没有额外语句来验证实例是否存在的情况下无法使用它们。相反，脚本需要检查命令的输出（该输出会说明没有匹配名称的实例）。
- en: 'The third mode displays expanded information about a selected instance. Although
    not all information objects support an expanded set, most of the common ones do.
    The expanded information generally shows a list of (different) instances related
    to the initial query:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三种模式显示关于所选实例的扩展信息。虽然并非所有信息对象都支持扩展集，但大多数常见对象支持。扩展信息通常显示与初始查询相关的（不同的）实例列表：
- en: '[PRE4]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The supported types that `seinfo` can query are the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`seinfo`可以查询的支持类型如下：'
- en: With `--attribute` (`-a`), `seinfo` shows all currently known SELinux attributes
    in the policy. When expanded, it shows the types associated with a given attribute.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--attribute`（`-a`），`seinfo`显示策略中当前已知的所有SELinux属性。当展开时，它会显示与给定属性相关的类型。
- en: With `--bool` (`-b`), `seinfo` shows all currently known SELinux booleans in
    the policy. When expanded, it shows the current value of the boolean.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--bool`（`-b`），`seinfo`显示策略中当前已知的所有SELinux布尔值。当展开时，它会显示该布尔值的当前值。
- en: With `--class` (`-c`), `seinfo` shows the supported SELinux classes. When expanded,
    it shows the permissions supported by that class.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--class`（`-c`），`seinfo`显示支持的SELinux类。当展开时，它会显示该类支持的权限。
- en: With `--role` (`-r`), `seinfo` shows the SELinux roles supported in the policy.
    When expanded, it shows the domains allowed for that role.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--role`（`-r`），`seinfo`显示策略中支持的SELinux角色。当展开时，它会显示该角色允许的域。
- en: With `--type` (`-t`), `seinfo` shows the SELinux types in the policy. When expanded,
    it shows the aliases that the type has, as well as the attributes.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--type`（`-t`），`seinfo`显示策略中的SELinux类型。当展开时，它会显示该类型的别名以及属性。
- en: With `--user` (`-u`), `seinfo` shows the SELinux users (not the Linux users
    or logins) known by the policy. When expanded, it shows the roles and sensitivity
    range associated with the SELinux user.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--user`（`-u`），`seinfo`显示策略中已知的SELinux用户（不是Linux用户或登录）。当展开时，它会显示与该SELinux用户关联的角色和敏感性范围。
- en: With `--category`, `seinfo` shows the currently supported categories. When expanded,
    it shows the sensitivities for which the category is associated (only in MLS policies).
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--category`，`seinfo`显示当前支持的类别。当展开时，它会显示该类别关联的敏感性（仅在MLS策略中）。
- en: With `--common`, `seinfo` shows the common permission sets. These are sets inherited
    by different classes. When expanded, it shows the permissions part of that set.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--common`，`seinfo`显示常见的权限集。这些是不同类继承的权限集。当展开时，它显示该集合的权限部分。
- en: With `--constrain`, `seinfo` shows the current constraints. There is no expanded
    information for this query.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--constrain`，`seinfo`显示当前的约束。此查询没有扩展信息。
- en: With `--default`, `seinfo` shows the `default_*` rules within the policy. One
    of these rules, for instance, is the default sensitivity range for a class (`default_range`).
    There is no expanded information for this query.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--default`，`seinfo`显示策略中的`default_*`规则。例如，其中一条规则是类的默认敏感性范围（`default_range`）。此查询没有扩展信息。
- en: With `--fs_use`, `seinfo` shows the `fs_use_*` rules within the SELinux policy.
    One of these rules is to allocate a security context for filesystems that support
    extended attributes (`fs_use_xattr`). There is no expanded information for this
    query.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--fs_use`，`seinfo`显示SELinux策略中的`fs_use_*`规则。其中一条规则是为支持扩展属性的文件系统分配安全上下文（`fs_use_xattr`）。此查询没有扩展信息。
- en: With `--genfscon`, `seinfo` shows the context allocations for filesystems that
    do not support extended attributes. There is no expanded information for this
    query.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--genfscon`时，`seinfo`显示不支持扩展属性的文件系统的上下文分配。此查询没有扩展信息。
- en: With `--initialsid`, `seinfo` shows all the initial **Security Identifiers**
    (**SID**). These are all the classes that have predefined contexts set. When expanded,
    it shows the context associated with the SID.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--initialsid`时，`seinfo`显示所有初始**安全标识符**（**SID**）。这些是所有具有预定义上下文的类。展开时，显示与SID关联的上下文。
- en: With `--netifcon`, `seinfo` shows the contexts currently associated with the
    network interfaces. This is only applicable when labeled networking is active.
    There is no expanded information for this query.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--netifcon`时，`seinfo`显示当前与网络接口相关联的上下文。仅在启用标记化网络时适用。此查询没有扩展信息。
- en: With `--nodecon`, `seinfo` shows the contexts currently associated with the
    node definitions (hosts). This is only applicable when labeled networking is active.
    There is no expanded information for this query.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--nodecon`时，`seinfo`显示当前与节点定义（主机）相关联的上下文。仅在启用标记化网络时适用。此查询没有扩展信息。
- en: With `--permissive`, `seinfo` shows which types are currently marked as permissive
    domains. There is no expanded information for this query.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--permissive`时，`seinfo`显示当前标记为宽松域的类型。此查询没有扩展信息。
- en: With `--polcap`, `seinfo` shows the policy capabilities (that is, in-policy
    settings that define the SELinux subsystem behavior, such as support for SCTP
    through the `extended_socket_class` policy capability that we saw in [*Chapter
    5*](B16276_05_Final_VK.xhtml#_idTextAnchor138), *Controlling Network Communications*).
    When expanded, it shows the actual policy capability statements in the policy.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--polcap`时，`seinfo`显示策略能力（即定义SELinux子系统行为的策略设置，例如我们在[*第5章*](B16276_05_Final_VK.xhtml#_idTextAnchor138)《控制网络通信》中看到的通过`extended_socket_class`策略能力支持SCTP）。展开时，显示策略中的实际策略能力声明。
- en: With `--portcon`, `seinfo` shows the current port mappings and their associated
    contexts (which is also interpreted by `semanage port -l`). There is no expanded
    information for this query.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--portcon`时，`seinfo`显示当前端口映射及其相关的上下文（这也可以通过`semanage port -l`进行解释）。此查询没有扩展信息。
- en: With `--sensitivity`, `seinfo` shows the currently supported sensitivity levels.
    When expanded, it shows the actual policy statements to declare the sensitivities.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--sensitivity`时，`seinfo`显示当前支持的敏感性级别。展开时，显示声明敏感性的实际策略声明。
- en: With `--typebounds`, `seinfo` shows the type bounds (SELinux types or domains
    bounded by a parent domain). There is no expanded information for this query.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--typebounds`时，`seinfo`显示类型边界（由父域限定的SELinux类型或域）。此查询没有扩展信息。
- en: With `--validatetrans`, `seinfo` shows the transition constraints active in
    the policy (these are constraints that limit when a file transition is allowed).
    This is not used in most Linux distributions. There is no expanded information
    for this query.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--validatetrans`时，`seinfo`显示策略中活动的转换约束（这些是限制文件转换何时允许的约束）。大多数Linux发行版不使用此功能。此查询没有扩展信息。
- en: The `seinfo` command also has an `--all` option that shows all possible information
    it can get from a policy file. However, this does not include the expanded information.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`seinfo`命令还具有`--all`选项，可以显示它从策略文件中获取的所有可能信息。然而，这不包括扩展信息。'
- en: Understanding sesearch
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解`sesearch`
- en: Where `seinfo` displays information about SELinux objects, `sesearch` is used
    to query SELinux rules and behavior information between a source and a target
    resource.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当`seinfo`显示SELinux对象的信息时，`sesearch`用于查询源资源与目标资源之间的SELinux规则和行为信息。
- en: 'We have been using `sesearch` to query standard `allow` rules (type enforcement-related
    access controls) as well as the impact of SELinux booleans on these `allow` rules.
    The `sesearch` application allows us to not just query rules based on the rule
    type, but also filter based on additional parameters. Let''s see which parameters
    can be used for `sesearch` filters:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一直在使用`sesearch`查询标准`allow`规则（与类型强制相关的访问控制），以及SELinux布尔值对这些`allow`规则的影响。`sesearch`应用程序不仅允许我们基于规则类型查询规则，还可以基于其他参数进行过滤。让我们看看可以用于`sesearch`过滤器的参数：
- en: 'The most common queries are to filter out the rules that match a given source
    expression using `--source` (`-s`) and/or target expression using `--target` (`-t`):'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最常见的查询是使用`--source`（`-s`）和/或`--target`（`-t`）过滤与给定源表达式匹配的规则：
- en: '[PRE5]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'With the `--class` (`-c`) argument, we can search for only those rules affecting
    a specified resource class (such as `file`, `dir`, `tcp_socket`, and so forth—the
    list of all possible classes can be obtained using `seinfo --class`):'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--class`（`-c`）参数，我们可以仅搜索那些影响指定资源类（如`file`、`dir`、`tcp_socket`等——所有可能的类的列表可以通过`seinfo
    --class`获得）的规则：
- en: '[PRE6]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If we are interested in only a particular action (or permission), we can use
    the `--perm` (`-p`) argument. This is particularly useful when we encounter a
    denial for a certain action (say, `write`) and want to see which domains are allowed
    to perform this action, as it might indicate that we are examining the wrong source
    domain. We can list multiple permissions, in which case `sesearch` will display
    the rules that have at least one permission in them:'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们只对某个特定操作（或权限）感兴趣，可以使用`--perm`（`-p`）参数。遇到某个操作（例如，`write`）被拒绝的情况时，这个选项特别有用，我们可以查看哪些域被允许执行此操作，这可能表明我们正在检查错误的源域。我们可以列出多个权限，在这种情况下，`sesearch`将显示至少包含一个权限的规则：
- en: '[PRE7]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We can also query only those rules influenced by an SELinux boolean using the
    `--bool` (`-b`) argument, as we saw in [*Chapter 12*](B16276_12_Final_VK.xhtml#_idTextAnchor312),
    *Tuning SELinux Policies*.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们还可以仅查询受SELinux布尔值影响的那些规则，使用`--bool`（`-b`）参数，正如我们在[*第12章*](B16276_12_Final_VK.xhtml#_idTextAnchor312)中看到的，*调整SELinux策略*。
- en: If we use the `-eb` option, then all booleans listed on the command line must
    be matched, rather than at least one.
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们使用`-eb`选项，那么命令行中列出的所有布尔值必须全部匹配，而不是至少匹配一个。
- en: 'The `sesearch` application can also use regular expressions rather than actual
    values. This is not the default behavior, but can be activated with `-rs` (for
    the source type or role), `-rt` (for the target type or role), `-rc` (for the
    class), `-rd` (for the default type or role), and `-rb` (for the boolean):'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sesearch`应用程序也可以使用正则表达式而不是实际值。这不是默认行为，但可以通过`-rs`（源类型或角色），`-rt`（目标类型或角色），`-rc`（类），`-rd`（默认类型或角色）和`-rb`（布尔值）来激活：'
- en: '[PRE8]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: As this provides insights into the most common SELinux behavior and access controls,
    let's go through the various rules and the impact they have on the system.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这提供了对最常见的SELinux行为和访问控制的洞察，接下来我们将逐一介绍这些规则以及它们对系统的影响。
- en: Querying allow rules
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询allow规则
- en: 'The first set of rules are the `allow` rules, of which many subtypes exist.
    The standard `allow` rule defines which actions a source domain can successfully
    trigger toward or against a target type:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 第一类规则是`allow`规则，其中有许多子类型。标准的`allow`规则定义了源域可以成功触发哪些操作到目标类型或针对目标类型：
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'There are a few similar rules that SELinux policies can define, and these can
    be queried similarly with `sesearch` as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux策略可以定义一些类似的规则，使用`sesearch`也可以类似查询，具体如下：
- en: Using `--auditallow`, we can query which actions are allowed by SELinux but
    will still result in an audit event.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--auditallow`，我们可以查询哪些操作被SELinux允许，但仍会导致审计事件。
- en: Using `--dontaudit`, we can query which actions will not trigger an audit event,
    even when the action is denied.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--dontaudit`，我们可以查询哪些操作在被拒绝时不会触发审计事件。
- en: Using `--neverallow`, we can query which actions are forbidden from being declared
    within the policy. Such actions, when defined, will cause the system to refuse
    to load new SELinux policies if they violate the rule. It cannot be used to negate
    existing rules though, and `neverallow` rules that you attempt to add to the policy
    afterward will fail if the current policy already has deviations against this
    rule.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`--neverallow`，我们可以查询哪些操作被禁止在策略中声明。定义这些操作后，如果它们违反了规则，系统将拒绝加载新的SELinux策略。不过，这不能用来否定现有规则，并且如果当前策略已经有偏离该规则的情况，那么尝试往策略中添加`neverallow`规则将会失败。
- en: SELinux also supports `allow` rules but take an additional (number) parameter
    that further limits the applicability of the rule, and are used to provide fine-grained
    access control for device queries. These queries are generally handled by the
    `ioctl()` system call, but until its support for extended permissions, SELinux
    could only control whether a domain was allowed to use the `ioctl()` system call
    or not, rather than filtering on the explicit query through `ioctl()`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux也支持`allow`规则，但它需要额外的（数字）参数，以进一步限制规则的适用性，并用于为设备查询提供细粒度的访问控制。这些查询通常由`ioctl()`系统调用处理，但在扩展权限支持之前，SELinux只能控制域是否被允许使用`ioctl()`系统调用，而不是过滤`ioctl()`的显式查询。
- en: 'With extended permission rules, SELinux policy developers can specify which
    `ioctl()` queries are allowed and which ones aren''t. For instance, we can grant
    a domain the ability to get a hardware address (known as `SIOCGIFHWADDR`, which
    is defined with number `0x8927`) as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 通过扩展权限规则，SELinux策略开发人员可以指定哪些`ioctl()`查询是允许的，哪些是不允许的。例如，我们可以授予某个域获取硬件地址（被称为`SIOCGIFHWADDR`，其定义为编号`0x8927`）的权限，方法如下：
- en: '[PRE10]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Within `sesearch`, we can query these rules using `--allowxperm`. Like regular
    `allow` rules, we also have the `--auditallowxperm`, `--dontauditxperm`, and `--neverallowxperm`
    options to cover the extended-permission-equivalent rules. These have the same
    impact on the query and also on the extended permission rules.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在`sesearch`中，我们可以使用`--allowxperm`查询这些规则。与常规的`allow`规则类似，我们还有`--auditallowxperm`、`--dontauditxperm`和`--neverallowxperm`选项，用于覆盖扩展权限等效规则。这些选项对查询以及扩展权限规则有相同的影响。
- en: Querying type transition rules
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询类型转换规则
- en: 'A second set of rules are the type transition rules. Rather than informing
    the system which actions are allowed or not, **type transitions** influence the
    SELinux context of objects and resources through actions taken by the processes
    on the system. Type transition rules, for instance, define what context a newly
    written file receives when it is written by a particular domain within a directory
    that has a given SELinux type, or what domain a newly created process receives
    when it is executed from a given source domain:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 第二类规则是类型转换规则。与其告知系统哪些操作被允许或不被允许，**类型转换**通过系统中进程执行的操作影响对象和资源的SELinux上下文。例如，类型转换规则定义了当一个文件在某个具有特定SELinux类型的目录中被某个域写入时，文件会接收到什么上下文；或者定义了当一个进程从某个源域执行时，该进程会接收到什么域：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In this output, we can see that when the guest domain successfully executes
    a binary labeled with `abrt_helper_exec_t`, its resulting process will be assigned
    the `abrt_helper_t` context.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在此输出中，我们可以看到，当访客域成功执行一个标记为`abrt_helper_exec_t`的二进制文件时，最终生成的进程将被分配`abrt_helper_t`上下文。
- en: These rules are queried and interpreted by various tools in the *Investigating
    domain transitions* section.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这些规则通过*调查域转换*部分中的各种工具进行查询和解释。
- en: Querying other type rules
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询其他类型规则
- en: 'Alongside the `allow` rules and type transition rules, `sesearch` can also
    query two other type-related rules: `type_change` and `type_member`. These rules
    are meant for SELinux-aware applications and are not enforced by the in-kernel
    SELinux subsystem:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`allow`规则和类型转换规则外，`sesearch`还可以查询另外两类与类型相关的规则：`type_change`和`type_member`。这些规则是为SELinux感知应用程序设计的，并不会被内核中的SELinux子系统强制执行：
- en: With `type_change` statements (which can be filtered in `sesearch` using the
    `--type_change` option), developers inform the SELinux-aware application that
    a target resource should be relabeled with a given type on behalf of the source
    domain.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`type_change`语句（可以通过在`sesearch`中使用`--type_change`选项进行过滤），开发人员通知SELinux感知的应用程序，目标资源应由源域代表进行重新标记，赋予给定类型。
- en: '[PRE12]'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: As the device file itself already exists and is only reassigned to a user, no
    type transition itself is done. Instead, the `type_change` rule is interpreted
    by the SELinux-aware application that relabels the device file accordingly.
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 由于设备文件本身已经存在，并且仅被重新分配给用户，因此不会进行类型转换。相反，`type_change`规则由SELinux感知的应用程序进行解释，并相应地重新标记设备文件。
- en: 'The `type_member` rule (which can be filtered in `sesearch` using the `--type_member`
    option) informs SELinux-aware applications that participate in setting up polyinstantiated
    locations (as we saw in [*Chapter 3*](B16276_03_Final_VK.xhtml#_idTextAnchor071),
    *Managing User Logins*) about the target SELinux type of such directories. For
    instance, when the `/tmp` location (which is labeled with `tmp_t`) is polyinstantiated
    for a user, then the following rule is used to understand that the `/tmp` view
    for this user is to be labeled with `user_tmp_t`:'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type_member`规则（可以通过在`sesearch`中使用`--type_member`选项进行过滤）告知参与设置多实例化位置的SELinux感知应用程序（如我们在[*第3章*](B16276_03_Final_VK.xhtml#_idTextAnchor071)中看到的，*管理用户登录*）这些目录的目标SELinux类型。例如，当`/tmp`位置（被标记为`tmp_t`）为某个用户进行多实例化时，则使用以下规则来理解该用户的`/tmp`视图应被标记为`user_tmp_t`：'
- en: '[PRE13]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The PAM module responsible for addressing the polyinstantiation is SELinux-aware,
    and will use these rules to deduce what the target types must be for the created
    locations.
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 负责处理多实例化的PAM模块是SELinux感知的，并将使用这些规则来推断所创建位置的目标类型。
- en: Alongside the type-related statements, `sesearch` can also handle role-related
    queries.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 除了与类型相关的语句，`sesearch`还可以处理与角色相关的查询。
- en: Querying role-related rules
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查询与角色相关的规则
- en: 'SELinux also has rules related to role activities and transitions. With the
    `sesearch` application, we can query which SELinux roles are allowed to be accessed
    from other roles, and when a role transition (such as switching from a user role
    to the system role) is performed:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux还具有与角色活动和转换相关的规则。通过`sesearch`应用，我们可以查询哪些SELinux角色可以从其他角色访问，以及何时执行角色转换（例如，从用户角色切换到系统角色）：
- en: '[PRE14]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The distinction between the two is that the allowed access (using `--role_allow`)
    shows which roles can be accessed from a given role, but they do not dictate when
    the change is done. The role transitions (using `--role_trans`) show when the
    system attempts to automatically change a role (and to what role it would be changed)
    when executing a script or binary. Hence, they can be compared with the `allow`
    rules (which specify what is allowed) and type transitions (defining SELinux behavior).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 两者的区别在于，允许的访问（使用`--role_allow`）显示哪些角色可以从给定角色访问，但它们并不指示何时进行转换。角色转换（使用`--role_trans`）则显示系统在执行脚本或二进制文件时，尝试自动更改角色的时机（以及会切换到哪个角色）。因此，它们可以与`allow`规则（指定允许的内容）和类型转换（定义SELinux行为）进行比较。
- en: 'Analyzing role transitions and role `allow` rules helps administrators deduce
    which roles are too powerful or could result in potential security issues. For
    instance, allowing the `dbadm_r` role to switch to the `system_r` role through
    the `postgresql_initrc_exec_t` type might allow that role to invoke actions outside
    its scope if it also has the rights to modify `postgresql_initrc_exec_t` resources:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 分析角色转换和角色`allow`规则有助于管理员推测哪些角色权限过大，可能导致潜在的安全问题。例如，允许`dbadm_r`角色通过`postgresql_initrc_exec_t`类型切换到`system_r`角色，如果该角色也具有修改`postgresql_initrc_exec_t`资源的权限，可能会使该角色执行超出其范围的操作：
- en: '[PRE15]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: While directly modifying `postgresql_initrc_exec_t` files is thus not allowed,
    it is not enough to only look at the main user type. A decent analysis needs to
    include all types reachable by the `dbadm_r` role, which we will cover in the
    *Investigating domain transitions* and *Analyzing information flow* sections.
    These sections will use `apol`, so let's first see what this application is all
    about.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然直接修改`postgresql_initrc_exec_t`文件是不可允许的，但仅仅查看主要的用户类型是不够的。一个好的分析需要包括`dbadm_r`角色能够访问的所有类型，后续我们将在*调查域转换*和*分析信息流*部分中介绍这些内容。这些部分将使用`apol`，所以让我们首先看看这个应用程序的功能。
- en: Browsing with apol
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用apol进行浏览
- en: An advanced tool to perform policy analysis is `apol`, which can be launched
    by just executing the command without any arguments. The tool is graphical in
    nature and allows analysts and administrators to perform a wide range of analytical
    actions against the SELinux policy.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 一个用于执行策略分析的高级工具是`apol`，可以通过直接执行该命令而不带任何参数来启动。该工具是图形化的，允许分析人员和管理员对SELinux策略执行广泛的分析操作。
- en: Once started, the first action to take with `apol` is to load a target policy
    (either the currently active policy or a file copied over from a different system).
    This can be accomplished through the **Open Policy** button, or by navigating
    to **File** | **Open Policy**.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 启动后，使用`apol`的第一步是加载目标策略（可以是当前活动的策略或从其他系统复制过来的文件）。这可以通过**打开策略**按钮完成，或者通过导航到**文件**
    | **打开策略**。
- en: 'The tool will then display a generic overview of the loaded policy:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 工具将显示加载的策略的一般概览：
- en: '![Figure 13.1 – The apol application after loading a policy file ](img/B16276_13_001.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图13.1 – 加载策略文件后的apol应用](img/B16276_13_001.jpg)'
- en: Figure 13.1 – The apol application after loading a policy file
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1 – 加载策略文件后的apol应用
- en: 'Once it has been loaded, select **New Analysis** to initiate the policy analysis
    functions:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 加载完成后，选择**新建分析**以启动策略分析功能：
- en: '![Figure 13.2 – apol''s overview of supported analysis methods ](img/B16276_13_002.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图13.2 – apol支持的分析方法概述](img/B16276_13_002.jpg)'
- en: Figure 13.2 – apol's overview of supported analysis methods
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.2 – apol支持的分析方法概述
- en: 'A decent number of analysis methods are provided. Let''s select **Types** to
    browse through the available types, or select an attribute to find out which SELinux
    types are assigned to that attribute:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 提供了相当数量的分析方法。让我们选择**类型**浏览可用的类型，或者选择一个属性查看分配给该属性的SELinux类型：
- en: '![Figure 13.3 – Type browsing with apol ](img/B16276_13_003.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图13.3 – 使用apol进行类型浏览](img/B16276_13_003.jpg)'
- en: Figure 13.3 – Type browsing with apol
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.3 – 使用apol浏览类型
- en: 'Similarly, with the `sesearch` application:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，使用`sesearch`应用程序：
- en: '![Figure 13.4 – Querying type enforcement rules with apol ](img/B16276_13_004.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.4 – 使用apol查询类型强制规则](img/B16276_13_004.jpg)'
- en: Figure 13.4 – Querying type enforcement rules with apol
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.4 – 使用apol查询类型强制规则
- en: The more advanced analysis methods are covered in the *Investigating domain
    transitions* and *Analyzing information flow* sections.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 更高级的分析方法在*调查域转移*和*分析信息流*章节中有所介绍。
- en: Using apol workspaces
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用apol工作区
- en: 'Analyzing SELinux policies can take a while, especially when this involves
    multiple phases of analysis and fine-tuning. The `apol` tool allows you to save
    your current workspace to disk, so that you can later get back to the analysis
    from the point at which you saved it:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 分析SELinux策略可能需要一些时间，特别是当涉及多个分析阶段和微调时。`apol`工具允许你将当前工作区保存到磁盘，以便稍后从保存点恢复分析：
- en: '![Figure 13.5 – Workspace management in apol ](img/B16276_13_005.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.5 – apol中的工作区管理](img/B16276_13_005.jpg)'
- en: Figure 13.5 – Workspace management in apol
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.5 – apol中的工作区管理
- en: Workspaces not only retain the settings of the queries so far, but also the
    notes you might add. Notes are an important feature within `apol` where you can
    write down thoughts and observations from the queries you've made. The notes are
    associated with the tabs you have open, allowing you to switch between different
    queries as needed.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 工作区不仅保留了到目前为止查询的设置，还保留了你可能添加的备注。备注是`apol`中的一个重要功能，你可以在其中写下你在查询过程中想到的内容和观察结果。备注与打开的标签页相关联，使你能够根据需要在不同查询之间切换。
- en: Now that we know how the `apol` application works, let's see how we can use
    it (and other tools) for more in-depth analyses.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经知道了`apol`应用程序的工作原理，接下来看看我们如何利用它（以及其他工具）进行更深入的分析。
- en: Investigating domain transitions
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调查域转移
- en: An important analytical approach when dealing with SELinux policies is to perform
    a **domain transition analysis**. Domains are bounded by the access controls in
    place for a given domain, but users or processes can transition to other domains
    by executing the right set of applications.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 处理SELinux策略时，一个重要的分析方法是执行**域转移分析**。域是由给定域的访问控制所界定的，但用户或进程可以通过执行正确的应用程序集转移到其他域。
- en: Analyzing whether and how a transition can occur between two SELinux domains
    allows administrators to validate the secure state of the policy. Given the mandatory
    nature of SELinux, adversaries will find it difficult to be able to execute target
    applications if a domain transition analysis shows that the source domain cannot
    execute said application, either directly or indirectly.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 分析两个SELinux域之间是否以及如何发生转移，允许管理员验证策略的安全状态。考虑到SELinux的强制性，攻击者很难执行目标应用程序，如果域转移分析表明源域无法直接或间接执行该应用程序。
- en: Administrators should use domain transition analysis to confirm a domain is
    correctly confined, and that vulnerabilities within the applications running inside
    a domain cannot lead to privilege escalations.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 管理员应使用域转移分析确认域是否正确隔离，并确保在域内运行的应用程序中的漏洞不会导致特权提升。
- en: Using apol for domain transition analysis
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用apol进行域转移分析
- en: 'After starting `apol`, select **New Analysis** followed by **Domain Transition
    Analysis**. The analysis screen itself will show several possible analytical approaches:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 启动`apol`后，选择**新分析**，然后选择**域转移分析**。分析界面本身将展示几种可能的分析方法：
- en: '![Figure 13.6 – Querying possible transition paths between staff_t and unconfined_t
    ](img/B16276_13_006.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.6 – 查询staff_t和unconfined_t之间可能的转移路径](img/B16276_13_006.jpg)'
- en: Figure 13.6 – Querying possible transition paths between staff_t and unconfined_t
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.6 – 查询staff_t和unconfined_t之间可能的转移路径
- en: This analysis will attempt to find a path between a given source domain and
    target domain, and display the execution trail that could lead to the transition.
    Administrators can then verify whether the applications associated with these
    domain transitions can be trusted or not. Such analysis is sensible when we need
    to assert that certain domains cannot break out of their confinement, or when
    we are developing new policies and want to ensure that the confinement is within
    the boundaries we want.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 该分析将尝试在给定的源域和目标域之间找到一条路径，并显示可能导致过渡的执行轨迹。管理员可以验证与这些域过渡相关的应用程序是否可信。当我们需要确认某些域无法突破其限制，或在我们开发新策略并希望确保限制在我们希望的边界内时，这样的分析是有意义的。
- en: 'The transition analysis can be fine-tuned through the following settings:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 过渡分析可以通过以下设置进行微调：
- en: With `apol` will show domain transitions between the source domain and the target
    domain, seeking the shortest transitions possible. For instance, a transition
    from `staff_t` to `staff_sudo_t` to `unconfined_t` is a two-step path. When a
    path is found, `apol` will not search for longer paths.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`apol`时，它会显示源域和目标域之间的域过渡，寻找可能的最短过渡路径。例如，从`staff_t`到`staff_sudo_t`再到`unconfined_t`是一个两步路径。当找到路径时，`apol`不会继续搜索更长的路径。
- en: When we select `apol` will perform the analysis up to a certain number of steps.
    When we use up to one step, then this is similar to doing direct queries with
    `seinfo` or `sesearch`.
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们选择`apol`时，它将执行分析，直到某个特定步骤数。当我们使用最多一步时，这类似于使用`seinfo`或`sesearch`进行直接查询。
- en: Using **Transitions out of the source domain** and **Transitions into the target
    domain** will show all transitions that can occur from a given source domain or
    to the target domain. This is used for a more interactive session, where users
    can click through the domains to see the next set of domains that can be transitioned
    to.
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**从源域的过渡**和**到目标域的过渡**将显示从给定源域或到目标域的所有可能过渡。这用于更互动的会话，用户可以点击各个域，查看可以过渡到的下一个域集合。
- en: To further fine-tune the analysis, a few options can be selected. For instance,
    we can exclude certain types from being used in the domain transition analysis.
    This allows us to mark certain domains as trusted (such as the `*_sudo_t` domains),
    which will make `apol` ignore those domains to find more appropriate transition
    chains to analyze.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步微调分析，可以选择一些选项。例如，我们可以排除某些类型不参与域过渡分析。这样，我们就可以将某些域标记为受信任（如`*_sudo_t`域），这将使得`apol`忽略这些域，从而找到更合适的过渡链进行分析。
- en: Using sedta for domain transition analysis
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用sedta进行域过渡分析
- en: The path analysis done by `apol` can also be executed from a command-line application
    called `sedta`. It has the same capabilities as the domain transition analysis
    functionality within `apol`.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '`apol`执行的路径分析也可以通过一个名为`sedta`的命令行应用程序来执行。它具有与`apol`中域过渡分析功能相同的能力。'
- en: 'The type of analysis is selected through command-line arguments: `-S` is used
    for shortest path analysis, whereas `-A` (followed by a number) runs the equivalent
    of **All paths up to**.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 分析类型通过命令行参数选择：`-S`用于最短路径分析，而`-A`（后跟数字）执行**所有路径直到**的等效操作。
- en: 'For instance, to check for a domain transition path between the `staff_t` domain
    and the `unconfined_t` domain, excluding the `staff_sudo_t`, `newrole_t,` and
    `init_t` domains, use the following command:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，要检查`staff_t`域和`unconfined_t`域之间的域过渡路径，排除`staff_sudo_t`、`newrole_t`和`init_t`域，可以使用以下命令：
- en: '[PRE16]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: We can analyze a different policy than the current system policy using the `-p`
    option.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`-p`选项分析与当前系统策略不同的策略。
- en: Using sepolicy for domain transition analysis
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用sepolicy进行域过渡分析
- en: 'The `sepolicy` tool has a built-in domain transition analysis capability using
    the `transition` argument. It is, however, not as flexible as `sedta` or `apol`,
    as no tuning can be done to the command. It also does not seem to cover all possible
    paths, often displaying extensive and elaborate routes that could be much simpler:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`sepolicy`工具具有内建的域过渡分析功能，使用`transition`参数。不过，它不像`sedta`或`apol`那样灵活，因为该命令无法进行调整。它似乎也无法涵盖所有可能的路径，通常会显示非常复杂且详尽的路线，而这些路线本可以更简单：'
- en: '[PRE17]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Let''s compare this with `sedta`, which we use against the same policy and
    for the same domain transition:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将其与`sedta`进行比较，我们使用相同的策略和相同的域过渡：
- en: '[PRE18]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: When comparing the transition paths with the ones generated by `sedta`, you
    will notice that `sedta` often finds shorter domain transitions, which `sepolicy
    transition` does not. Hence it is not recommended to rely solely on `sepolicy
    transition` for domain transition analysis.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在将转换路径与 `sedta` 生成的路径进行比较时，你会注意到 `sedta` 经常找到比 `sepolicy transition` 更短的域转换路径。因此，不建议仅依赖
    `sepolicy transition` 进行域转换分析。
- en: Analyzing information flow
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析信息流
- en: Another analytical investigation that can be carried out on SELinux policies
    is information flow analysis. Unlike domain transitions, which look at how one
    domain can gain a certain set of permissions through transitions to another domain,
    **information flow analysis** looks at how a domain could leak (purposefully or
    not) information to another domain.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在 SELinux 策略中，另一项可以进行的分析是信息流分析。与域转换不同，域转换分析考察的是一个域如何通过转换到另一个域获得某一组权限，而 **信息流分析**
    则关注一个域如何将信息泄漏（有意或无意）到另一个域。
- en: Information flow analysis is performed by looking at all operations that occur
    between two types. A source type can be read by a domain, which subsequently can
    write information to another type that can then be accessed by another domain.
    While this can still be analyzed in a step-wise fashion, it quickly becomes very
    challenging because we cannot limit ourselves to the read and write operations.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 信息流分析通过查看两个类型之间发生的所有操作来执行。源类型可以被一个域读取，随后可以将信息写入另一个类型，然后该类型可以被另一个域访问。虽然这仍然可以按步骤进行分析，但很快变得非常具有挑战性，因为我们不能仅限于读取和写入操作。
- en: Information can be leaked through filenames, file descriptors, and more. Information
    flow analysis must take all these methods into account.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 信息可以通过文件名、文件描述符等方式泄漏。信息流分析必须考虑到所有这些方法。
- en: Using apol for information flow analysis
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 apol 进行信息流分析
- en: 'After loading an SELinux policy, select **Information Flow Analysis**. The
    interface we receive is similar to the domain transition analysis, but now has
    a few toggles to fine-tune the path analysis specific to information flows:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 加载 SELinux 策略后，选择 **信息流分析**。我们收到的界面类似于域转换分析，但现在有几个切换按钮可以微调特定于信息流的路径分析：
- en: '![Figure 13.7 – Analyzing information flow between two domains ](img/B16276_13_007.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.7 – 分析两个域之间的信息流](img/B16276_13_007.jpg)'
- en: Figure 13.7 – Analyzing information flow between two domains
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.7 – 分析两个域之间的信息流
- en: 'Unlike domain transitions, the number of paths through which information can
    flow is exponentially bigger. To perform a decent information flow analysis, we
    need to fine-tune the search criteria:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 与域转换不同，信息流可以通过的路径数量呈指数增长。为了进行合理的信息流分析，我们需要微调搜索标准：
- en: The `lock` operation, which has weight `1`) to a high priority one (such as
    the `write` operation, which has weight `10`). The purpose of these weights is
    to define which actions are plausible for information flow and which ones are
    much harder (but not impossible) to use for deliberate information exchange.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lock` 操作，其权重为 `1`，与高优先级操作（例如 `write` 操作，权重为 `10`）进行比较。这些权重的目的是定义哪些操作在信息流中是可行的，哪些操作则更难（但并非不可能）用于故意的信息交换。'
- en: With **Excluded Permissions**, we can selectively enable or disable certain
    permissions from the analysis.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **排除的权限**，我们可以选择性地启用或禁用某些权限进行分析。
- en: The other options are similar to those in domain transition analysis.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 其他选项与域转换分析中的选项类似。
- en: The most important area for information flow analysis is the permission map,
    which we can fine-tune partially while enabling or disabling permissions in the
    analysis. However, we might not be happy with the weights that the current permission
    map uses.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 信息流分析中最重要的区域是权限映射，我们可以在启用或禁用权限的同时，部分微调它。然而，我们可能不满意当前权限映射所使用的权重。
- en: 'To edit the permission map, select `apol` menu:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 要编辑权限映射，选择 `apol` 菜单：
- en: '![Figure 13.8 – Editing the permission map and permission weights ](img/B16276_13_008.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.8 – 编辑权限映射和权限权重](img/B16276_13_008.jpg)'
- en: Figure 13.8 – Editing the permission map and permission weights
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.8 – 编辑权限映射和权限权重
- en: 'Within this editor, we can fine-tune the weights of the permissions to our
    liking, as well as the *directionality* of the action:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在此编辑器中，我们可以根据需要微调权限的权重，以及操作的 *方向性*：
- en: '`None` (no information flow)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`None`（没有信息流）'
- en: '`Write` (information flows to the resource)'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Write`（信息流向资源）'
- en: '`Read` (information is retrieved from the resource)'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Read`（信息从资源中获取）'
- en: '`Both` (information can both flow to and from the resource)'
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Both`（信息可以同时流向和流出资源）'
- en: Once we are satisfied with the results, we can (and probably should) save the
    permission map for later reuse (if not, the changes are only applicable to the
    current session and will be forgotten when `apol` is closed).
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们对结果感到满意，我们可以（也可能应该）保存权限映射，以便以后重用（如果不保存，修改仅适用于当前会话，`apol`关闭后将会丢失）。
- en: Using seinfoflow for information flow analysis
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用seinfoflow进行信息流分析
- en: Like the `sedta` application for domain transition analysis, there is also a
    command-line application that offers information flow analysis capabilities similar
    to `apol`, that is, `seinfoflow`. Every invocation of the `seinfoflow` command
    requires the permission map to be passed on for its analysis. If you don't have
    a permission map created and saved yourself, you can use the default one available
    at `/var/lib/sepolgen/perm_map`.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 像用于域转换分析的`sedta`应用程序一样，也有一个命令行应用程序提供类似`apol`的信息流分析功能，即`seinfoflow`。每次调用`seinfoflow`命令时，都需要传入权限映射以供分析。如果你自己没有创建并保存权限映射，可以使用默认的权限映射，路径为`/var/lib/sepolgen/perm_map`。
- en: 'Let''s analyze the information flow possibilities between the `staff_t` and
    `guest_t` domains, using the default permission map, and only considering the
    permissions of weight `10`:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析`staff_t`和`guest_t`域之间的信息流动可能性，使用默认的权限映射，并仅考虑权重为`10`的权限：
- en: '[PRE19]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The more elaborate a permission map is, the more time it takes for the analysis
    to complete.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 权限映射越复杂，分析完成所需的时间就越长。
- en: Using sepolicy communicate for simple information flow analysis
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用sepolicy communicate进行简单的信息流分析
- en: 'The `sepolicy` command can perform a simple flow analysis using the `communicate`
    option. Given a source and target domain, `sepolicy` will check through which
    intermediate types information can flow between the domains:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`sepolicy`命令可以使用`communicate`选项执行简单的流量分析。给定源域和目标域，`sepolicy`将检查信息可以通过哪些中间类型在这两个域之间流动：'
- en: '[PRE20]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The preceding flow analysis is basically checking what types can be written
    to by the source domain, and read by the target domain.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 上述流量分析主要是检查源域可以写入的类型，以及目标域可以读取的类型。
- en: Comparing policies
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较策略
- en: Until now, we've analyzed a single policy set, finding the domain transitions
    and information flow paths. The commands and applications we've used all focus
    on this single-policy analysis. Another important analysis is to compare two policies.
    Policy developers can use this to compare a new policy with an old one, or to
    compare two system policies to see what additional rules have been added by the
    administrator.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经分析了单一策略集，找到了域转换和信息流动路径。我们使用的命令和应用程序都专注于单一策略的分析。另一个重要的分析是比较两个策略。策略开发者可以用它来比较新策略和旧策略，或者比较两个系统策略，查看管理员添加了哪些额外的规则。
- en: Using sediff to compare policies
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用sediff比较策略
- en: The `sediff` tool looks at the differences between two policy files and reports
    those to the user. It is often not sensible to use this against completely different
    policies, but is powerful for finding slight differences between policies, which
    can assist in troubleshooting issues across different systems.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '`sediff`工具查看两个策略文件之间的差异，并将这些差异报告给用户。通常不建议对完全不同的策略使用它，但它在查找策略之间的细微差异时非常有用，这可以帮助在不同系统之间排除故障。'
- en: 'A common use case for `sediff` is to validate that a source-built policy file
    is the same as the distribution-provided binary policy file. Administrators can
    then be certain that the source code they''ve used to build a policy file is the
    same as that used by the distribution, even when the binary files themselves (the
    `policy.##` file) have different checksums:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`sediff`的一个常见使用案例是验证源构建的策略文件是否与发行版提供的二进制策略文件相同。管理员可以确保他们用来构建策略文件的源代码与发行版使用的相同，即使二进制文件本身（`policy.##`文件）的校验和不同：'
- en: '[PRE21]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: It is possible to direct `sediff` to only show differences for a specified area
    or part of the SELinux policy (such as the available types, roles, booleans, or
    type enforcement rules).
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 可以指示`sediff`仅显示指定区域或SELinux策略部分的差异（例如可用的类型、角色、布尔值或类型强制规则）。
- en: Summary
  id: totrans-185
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: SELinux has quite a few analysis tools that we can use to analyze policies.
    We've seen how to use `sesearch` to do in-depth assessments of the current policy,
    but noticed that it fails to validate the more dynamic analysis requirements.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux有许多可以用来分析策略的工具。我们已经看到如何使用`sesearch`对当前策略进行深入评估，但也注意到它未能验证更动态的分析需求。
- en: With `apol`, we have seen a graphical application that is able to do more dynamic
    analysis, including the domain transitions (examining which domains can be reached
    from a current point) and information flow analysis (investigating how information
    can flow from one domain to another). From this experience, we've learned that
    such analysis is intensive and requires lots of interpretation to be done correctly.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`apol`时，我们看到了一个能够进行更动态分析的图形化应用程序，包括域转换（检查从当前点可以到达哪些域）和信息流分析（研究信息如何从一个域流向另一个域）。通过这次经验，我们了解到这样的分析非常密集，需要大量的解释才能正确完成。
- en: 'Next to `apol`, we also learned that command-line utilities exist with similar
    capabilities: `sedta` for domain transition analysis, `seinfoflow` for information
    flow analysis, and `sepolicy`, which has a few out-of-the-box functionalities,
    but not as extensive or flexible as the other options we looked at.'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`apol`，我们还了解到存在具有类似功能的命令行工具：`sedta`用于域转换分析，`seinfoflow`用于信息流分析，以及`sepolicy`，它具有一些开箱即用的功能，但不如我们查看过的其他选项那样广泛或灵活。
- en: In the end, we learned how to compare policies using `sediff`. This is useful
    for when new policies are being developed, which is something we'll do in the
    remaining chapters. We first start with aligning and extending existing policies
    for new applications in the next chapter, and move on to full application policy
    development in the last two.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，我们学会了如何使用`sediff`来比较策略。这在新策略开发时非常有用，这是我们将在接下来的章节中做的事情。我们首先将在下一章中对现有策略进行对齐和扩展，以适应新应用程序，并在最后两章中继续进行完整的应用程序策略开发。
- en: Questions
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is the difference between `seinfo` and `sesearch`?
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`seinfo`和`sesearch`之间有什么区别？'
- en: How do you check whether you can reach a domain?
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何检查你是否可以到达一个域？
- en: Why does analyzing information flows take so long?
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为什么分析信息流需要这么长时间？
- en: Can we generate a delta between policies and load it?
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们能生成两个策略之间的差异并加载它吗？
