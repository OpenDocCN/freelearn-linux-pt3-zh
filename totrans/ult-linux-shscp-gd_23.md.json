["```\ngit clone https://github.com/PacktPublishing/The-Ultimate-Linux-Shell-Scripting-Guide.git \n```", "```\nsudo snap install powershell --classic \n```", "```\nPS /home/donnie> \n```", "```\ndonnie@fedora:~$ ps -eO rss | awk -F' ' '{ if($2 >= (1024*200)) {printf(\"%s\\t%s\\t%s\\n\",$1,$2,$6);}}'\nPID\t       RSS\t COMMAND\n3215\t338896\t /usr/lib64/chromium-browser/chromium-browser\n3339\t247596\t /usr/lib64/chromium-browser/chromium-browser\n. . .\n. . .\n21502\t614792\t /usr/lib64/firefox/firefox\n23451\t369392\t /usr/lib64/firefox/firefox\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ ps -e\n    PID      TTY          TIME         CMD\n      1        ?          00:00:04     systemd\n      2        ?          00:00:00     kthreadd\n      3        ?          00:00:00     pool_workqueue_release\n. . .\n. . .\n    28122  ?              00:00:00     Web Content\n    28229  ?              00:00:00     kworker/7:0\n    28267  pts/1          00:00:00     ps\ndonnie@fedora:~$ \n```", "```\nPID     RSS   S TTY      TIME      COMMAND\n 1      29628 S ?        00:00:04  /usr/lib/systemd/systemd --switched-root --sys\n 2      0     S ?        00:00:00  [kthreadd]\n 3      0     S ?        00:00:00  [pool_workqueue_release]\n. . .\n. . .\n 27199  0     I ?        00:00:00  [kworker/8:2]\n 27262  62216 S ?        00:00:00  /usr/lib64/firefox/firefox -contentproc -child\n 27300  5060  R pts/1    00:00:00  ps -eO rss\ndonnie@fedora:~$ \n```", "```\nPS /home/donnie> Get-Process | Where-Object WorkingSet -ge 200MB\n NPM(K)    PM(M)      WS(M)     CPU(s)    Id  SI ProcessName\n ------    -----      -----     ------      --  -- -----------\n      0     0.00     331.27      40.27    3215 …10 chromium-browser --enable-n…\n      0     0.00     227.35      11.00    3674 …10 chromium-browser --type=ren…\n      0     0.00     221.48      15.93    3369 …10 chromium-browser --type=ren…\n      0     0.00     228.37      19.19    3588 …10 chromium-browser --type=ren…\n. . .\n. . .\n      0     0.00     402.61     271.87    8737 …10 soffice.bin\n      0     0.00     971.86   1,004.20    5869 …12 VirtualBoxVM\nPS /home/donnie> \n```", "```\nPS /home/donnie> 5 / 2\n2.5\nPS /home/donnie> \n```", "```\nparam([Float]$number1 = \"\" , [Float]$number2 = \"\")\n$sum = $number1 + $number2\nWrite-Host \"The sum of these numbers is: \" $sum\nWrite-Host \"***********\"\n$divideresult= $number1 / $number2\nWrite-Host \"Division of these two numbers results in: \"$divideresult\nWrite-Host \"***********\"\n$multiplyresult = $number1 * $number2\nWrite-Host \"Multiplying these two numbers results in: \" $multiplyresult\nWrite-Host \"***********\"\n$modulo = $number1 % $number2\nWrite-Host \"The remainder from dividing these two numbers is: \" $modulo \n```", "```\nPS /home/donnie> ./math1.ps1 5 2\nThe sum of these numbers is:  7\n***********\nDivision of these two numbers results in:  2.5\n***********\nMultiplying these two numbers results in:  10\n***********\nThe remainder from dividing these two numbers is:  1\nPS /home/donnie> \n```", "```\nparam([Float]$number1 = \"\")\n$tangent = [math]::Tan($number1/180*[math]::PI)\nWrite-Host \"The tangent of $number1 degrees is:  $tangent.\"\nWrite-Host \"***********\"\n$cosine = [math]::Cos($number1/180*[math]::PI)\nWrite-Host \"The cosine of $number1 degrees is: \"$cosine\nWrite-Host \"***********\"\n$squareroot = [math]::Sqrt($number1)\nWrite-Host \"The square root of $number1 is: \" $squareroot\nWrite-Host \"***********\"\n$logarithm = [math]::Log10($number1)\nWrite-Host \"The base 10 logarithm of $number1 is: \" $logarithm \n```", "```\nPS /home/donnie> ./math2.ps1 45\nThe tangent of  45  degrees is:  1.\n***********\nThe cosine of 45 degrees is:  0.7071067811865476\n***********\nThe square root of 45 is:  6.708203932499369\n***********\nThe base 10 logarithm of 45 is:  1.6532125137753437\nPS /home/donnie> vim \n```", "```\nPS /home/donnie> Get-ChildItem\n    Directory: /home/donnie\nUnixMode         User Group    LastWriteTime       Size Name\n--------         ---- -----    -------------       ---- ----\ndrwxr-xr-x     donnie donnie   6/29/2024 21:10     4096 bashlib-0.4\ndrwx------     donnie donnie   7/4/2024 23:59      4096 demo_files\n. . .\n. . .\n-rw-rw-r--     donnie donnie   9/3/2024 22:26      67 zsh_fruits.txt\n-rwxrw-r--     donnie donnie   9/4/2024 18:17      141 zsh_time.sh\nPS /home/donnie> \n```", "```\nPS /home/donnie> ls\nacl_demo.sh\t\t   rootlock_1.sh\nbashlib-0.4\t\t   rootlock_2.sh\ndate_time.sh\t\t   rsync_password.sh\n. . .\n. . .\nhello.sh\t\t   zsh_fruits.txt\nMy_Files\t\t   zsh_time.sh\nrootlock_1a.sh\nPS /home/donnie> \n```", "```\nPS /home/donnie> Set-Alias -Name ls -Value Get-ChildItem\nPS /home/donnie> ls\n    Directory: /home/donnie\nUnixMode         User Group         LastWriteTime         Size Name\n--------         ---- -----         -------------         ---- ----\ndrwxr-xr-x     donnie donnie      6/29/2024 21:10         4096 bashlib-0.4\ndrwx------     donnie donnie       7/4/2024 23:59         4096 demo_files\n. . .\n. . .\n-rw-rw-r--     donnie donnie       9/3/2024 22:26           67 zsh_fruits.txt\n-rwxrw-r--     donnie donnie       9/4/2024 18:17          141 zsh_time.sh\nPS /home/donnie> \n```", "```\nPS /home/donnie> New-Alias ls Get-ChildItem\nPS /home/donnie> \n```", "```\nPS /home/donnie> echo $profile\n/home/donnie/.config/powershell/Microsoft.PowerShell_profile.ps1\nPS /home/donnie> \n```", "```\nPS /home/donnie> mkdir .config/powershell\nPS /home/donnie> \n```", "```\nNew-Alias ls Get-ChildItem \n```", "```\nPS /home/donnie> Get-Command     \nCommandType     Name               Version    S\n                                                                        \t\t\t\t\t                           o\n                                                                           \t\t\t\t\t                           u\n                                                                        \t\t\t\t\t                           r\n                                                                        \t\t\t\t\t                           c\n                                                                        \t\t\t\t\t                           e\n-----------     ----               -------    -\nAlias           Get-PSResource     1.0.4.1    M\nFunction        cd..                                                        \nFunction        cd\\                                                         \nFunction        cd~                                                         \nFunction        Clear-Host                                                  \nFunction        Compress-Archive   1.2.5      M\n. . .\n. . .\nCmdlet          Write-Verbose      7.0.0.0    M\nCmdlet          Write-Warning      7.0.0.0    M\nPS /home/donnie> \n```", "```\nPS /home/donnie> Get-Command | Measure-Object | Select-Object -Property Count\nCount\n-----\n  293\nPS /home/donnie> \n```", "```\nPS /home/donnie> Get-Command -Noun 'Date'\nCommandType     Name          Version    S\n                                         o\n                                         u\n                                         r\n                                         c\n                                         e\n-----------     ----          ----    -\nCmdlet          Get-Date      7.0.0.0    M\nCmdlet          Set-Date      7.0.0.0    M\nPS /home/donnie> \n```", "```\nPS /home/donnie> Get-Command -Verb 'Set'\nCommandType     Name                 Version    S\n                                                o\n                                                u\n                                                r\n                                                c\n                                                e\n-----------     ----                 -------    -\nFunction        Set-HostnameMapping  1.0.1      H\nFunction        Set-PSRepository     2.2.5      P\nCmdlet          Set-Alias            7.0.0.0    M\nCmdlet          Set-Clipboard        7.0.0.0    M\n. . .\n. . .\nCmdlet          Set-StrictMode       7.4.5.500  M\nCmdlet          Set-TraceSource      7.0.0.0    M\nCmdlet          Set-Variable         7.0.0.0    M\nPS /home/donnie> \n```", "```\nPS /home/donnie> Get-Help Get-Module \n```", "```\nPS /home/donnie> Get-Help Get-Module -Examples \n```", "```\ngit clone https://github.com/fleschutz/PowerShell.git \n```", "```\nPS /home/donnie/PowerShell/scripts> Get-Help ./write-marquee.ps1\nNAME\n    /home/donnie/PowerShell/scripts/write-marquee.ps1\nSYNOPSIS\n    Writes text as marquee\n. . .\n. . .\nREMARKS\n    To see the examples, type: \"Get-Help /home/donnie/PowerShell/scripts/write-marquee.ps1 -Examples\"\n    For more information, type: \"Get-Help /home/donnie/PowerShell/scripts/write-marquee.ps1 -Detailed\"\n    For technical information, type: \"Get-Help /home/donnie/PowerShell/scripts/write-marquee.ps1 -Full\"\n    For online help, type: \"Get-Help /home/donnie/PowerShell/scripts/write-marquee.ps1 -Online\"\nPS /home/donnie/PowerShell/scripts> \n```", "```\nparam([string]$Text = \"PowerShell is powerful - fully control your computer! PowerShell is cross-platform - available for Linux, Mac OS and Windows! PowerShell is open-source and free - see the GitHub repository at github.com/PowerShell/PowerShell! PowerShell is easy to learn - see the tutorial for beginners at guru99.com/powershell-tutorial.html! Powershell is fully documented - see the official PowerShell documentation at docs.microsoft.com/en-us/powershell\", [int]$Speed = 60) # 60 ms pause \n```", "```\nStartMarquee \"                                                                                    +++ $Text +++ $Text +++ $Text +++ $Text +++ $Text +++ $Text +++ $Text +++ $Text +++ $Text +++ $Text +++ $Text +++ $Text +++                                                                                         \n\"\nexit 0 # success \n```", "```\nPS /home/donnie/PowerShell/scripts> ./check-cpu.ps1\n✅ 64-bit CPU (16 cores, ) - 48°C OK                                                                                  \nPS /home/donnie/PowerShell/scripts> \n```", "```\nfunction GetCPUArchitecture {\n        if (\"$env:PROCESSOR_ARCHITECTURE\" -ne \"\") { return \"$env:PROCESSOR_ARCHITECTURE\" }\n        if ($IsLinux) {\n                $Name = $PSVersionTable.OS\n                if ($Name -like \"*-generic *\") {\n                        if ([System.Environment]::Is64BitOperatingSystem) { return \"x64\" } else { return \"x86\" }\n                } elseif ($Name -like \"*-raspi *\") {\n                        if ([System.Environment]::Is64BitOperatingSystem) { return \"ARM64\" } else { return \"ARM32\" }\n                } elseif ([System.Environment]::Is64BitOperatingSystem) { return \"64-bit\" } else { return \"32-bit\" }\n        }\n} \n```", "```\nif (\"$env:PROCESSOR_ARCHITECTURE\" -ne \"\") { return \"$env:PROCESSOR_ARCHITECTURE\" } \n```", "```\ntry {\n        Write-Progress \"Querying CPU status...\"\n        $status = \"✅\"\n        $arch = GetCPUArchitecture\n        if ($IsLinux) {\n                $cpuName = \"$arch CPU\"\n                $arch = \"\"\n                $deviceID = \"\"\n                $speed = \"\"\n                $socket = \"\"\n        } else {\n                $details = Get-WmiObject -Class Win32_Processor\n                $cpuName = $details.Name.trim()\n                $arch = \"$arch, \"\n                $deviceID = \"$($details.DeviceID), \"\n                $speed = \"$($details.MaxClockSpeed)MHz, \"\n                $socket = \"$($details.SocketDesignation) socket\"\n        } \n```", "```\n$arch = GetCPUArchitecture \n```", "```\n$arch = Get-Content /proc/cpuinfo | Select-String \"model name\" | Select-Object -Unique \n```", "```\nPS /home/donnie> ./check-cpu.ps1\n⚠️model name    : Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz CPU (16 cores, ) - 57°C HOT                                \nPS /home/donnie> \n```", "```\n$longarch = Get-Content /proc/cpuinfo | Select-String \"model name\" | Select-Object -Unique\n$arch = $longarch -replace \"model name\\t: \", \"\" \n```", "```\ntry {\n        Write-Progress \"Querying CPU status...\"\n        $status = \"✅\"\n        $arch = GetCPUArchitecture\n        if ($IsLinux) {\n                $longarch = Get-Content /proc/cpuinfo | Select-String \"model name\" | Select-Object -Unique\n                $arch = $longarch -replace \"model name\\t: \", \"\"\n                $cpuName = \"$arch CPU\"\n                $arch = \"\"\n                $deviceID = \"\"\n                $speed = \"\"\n                $socket = \"\"\n        } \n```", "```\nPS /home/donnie> ./check-cpu.ps1\n⚠ Intel(R) Xeon(R) CPU E5-2670 0 @ 2.60GHz CPU (16 cores, ) - 62°C HOT                                                \nPS /home/donnie> \n```"]