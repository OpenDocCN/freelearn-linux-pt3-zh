- en: '7'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '7'
- en: User and Group Management
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户和组管理
- en: If you administer Linux servers, the users of such servers can be both your
    greatest asset and your greatest headache. Throughout the course of your career,
    you will be responsible for the addition of a large number of new users, the management
    of their passwords, the deletion of their accounts when they leave the organization,
    and the provision and revocation of access to resources located across the network.
    Even on servers where you are the sole user, you will still be responsible for
    managing user accounts. This is because even system processes run under the guise
    of a user. If you want to be effective at managing Linux servers, you will also
    need to know how to manage rights, implement password policies, and limit the
    number of people who can execute administrative commands on the computer. In this
    chapter, we’ll go over these topics in detail so that you have a solid understanding
    of how to manage users and the resources they consume.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你管理 Linux 服务器，那么这些服务器的用户既可能是你最大的资产，也可能是你最大的头痛。你将在职业生涯中负责添加大量新用户、管理他们的密码、在他们离开组织时删除他们的账户，以及在网络上提供和撤销对资源的访问权限。即使是在你是唯一用户的服务器上，你仍然需要管理用户账户。因为即使是系统进程，也是在用户身份下运行的。如果你想高效管理
    Linux 服务器，你还需要了解如何管理权限、实施密码策略，并限制能够执行管理员命令的人员数量。在本章中，我们将详细讲解这些内容，以帮助你扎实掌握如何管理用户及其消耗的资源。
- en: 'In this chapter, we’re going to learn how to do the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何执行以下操作：
- en: Create users and groups
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建用户和组
- en: Modify users and groups
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改用户和组
- en: Delete users and groups
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 删除用户和组
- en: List all users
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出所有用户
- en: Add a user to a group
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将用户添加到一个组
- en: Remove a user from a group
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将用户从一个组中移除
- en: Overview of managing accounts/groups
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 账户/组管理概述
- en: As a multi-user operating system, Linux allows for multiple users to be logged
    in and work simultaneously on a single machine. Be aware that it is never a good
    idea to let users share login information for the same account. It is preferable
    to have as many accounts as users who require machine access.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个多用户操作系统，Linux 允许多个用户同时在一台机器上登录和工作。请注意，绝不应让用户共享同一账户的登录信息。最好为需要访问机器的每个用户创建独立账户。
- en: Access to specific system resources, such as directories and files, may need
    to be shared by two or more users. We can achieve both goals using Linux’s user
    and group administration features.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 访问特定的系统资源，如目录和文件，可能需要由两个或更多用户共享。我们可以通过 Linux 的用户和组管理功能来实现这两个目标。
- en: General/normal users and root/superusers are the two categories of users in
    Linux systems.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 普通用户和根用户（超级用户）是 Linux 系统中的两类用户。
- en: One of the fundamental components of the Linux operating system is the management
    of user and group accounts. The custom rights of user and group accounts are maintained
    by each user logging in to the operating system using a different set of credentials.
    Adding new users requires specific permissions (superuser); the same holds true
    for other user or group administration operations, including account deletion,
    account update, and group addition and deletion.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 操作系统的一个基本组件是用户和组账户的管理。用户和组账户的自定义权限是通过每个用户使用不同的凭证登录操作系统来维护的。添加新用户需要特定的权限（超级用户权限）；其他用户或组管理操作，如账户删除、账户更新以及组的添加和删除，也需要相同的权限。
- en: 'These operations are performed using the following commands:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这些操作通过以下命令来执行：
- en: '`adduser`: Add a user to the system'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`adduser`: 向系统添加一个用户'
- en: '`userdel`: Delete a user account and related files'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`userdel`: 删除一个用户账户及相关文件'
- en: '`addgroup`: Add a group to the system'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`addgroup`: 向系统添加一个组'
- en: '`delgroup`: Remove a group from the system'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`delgroup`: 从系统中删除一个组'
- en: '`usermod`: Modify a user account'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`usermod`: 修改用户账户'
- en: '`chage`: This command is used to change the password expiration time and see
    user password expiry information'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`chage`: 此命令用于更改密码过期时间并查看用户密码过期信息'
- en: '`passwd`: This command is used to create or change a user account’s password'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`passwd`: 此命令用于创建或更改用户账户的密码'
- en: '`sudo`: Run one or more commands as another user (typically with superuser
    permissions by running the `sudo su <``username>` command)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo`: 以其他用户身份运行一个或多个命令（通常通过运行 `sudo su <用户名>` 命令来获得超级用户权限）'
- en: Files relevant to these operations include `/etc/passwd` (user information),
    `/etc/shadow` (encrypted passwords), `/etc/group` (group information), and `/etc/sudoers`
    (configuration for `sudo`).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 与这些操作相关的文件包括`/etc/passwd`（用户信息）、`/etc/shadow`（加密密码）、`/etc/group`（组信息）和`/etc/sudoers`（`sudo`配置）。
- en: Superuser access is granted by using either the `su` command to become the root
    user or the `sudo su` command to get root privileges.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 超级用户访问可以通过使用`su`命令切换为root用户，或者使用`sudo su`命令获取root权限来实现。
- en: 'These are the default locations for user account information:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是用户账户信息的默认位置：
- en: 'User account properties: `/etc/passwd`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户账户属性：`/etc/passwd`
- en: 'User password properties: `/etc/shadow`'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户密码属性：`/etc/shadow`
- en: A group with the same username is also created when a user is created. Every
    user has a home directory; for the root user, it is placed in `/root`; for all
    other users, it is in `/home/`.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 创建用户时，会同时创建一个具有相同用户名的组。每个用户都有一个主目录；对于root用户，它位于`/root`；对于其他所有用户，它位于`/home/`。
- en: 'The `/etc/passwd` file contains all of the account details. This file has the
    following structure and includes a record for each system user account (fields
    are delimited by colons):'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`/etc/passwd`文件包含所有账户的详细信息。该文件具有以下结构，并为每个系统用户账户包含一个记录（字段由冒号分隔）：'
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let’s carefully examine the preceding code:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们仔细查看前面的代码：
- en: The `<username>` and `<Comment>` fields are self-explanatory
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<username>`和`<Comment>`字段是不言自明的'
- en: The shadowed password (in `/etc/shadow`), which is required to log on as `<username>`,
    is indicated by the `x` in the second field
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x`出现在第二个字段，表示在`/etc/shadow`中的加密密码，这是登录`<username>`所必需的'
- en: The `<UID>` and `<GID>` entries include integers that, respectively, reflect
    the `<usernameprimary>` Group ID and User ID
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<UID>`和`<GID>`条目包含整数，分别反映`<usernameprimary>`组ID和用户ID'
- en: '`<Home directory>` displays the full path to the home directory of the current
    user'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<Home directory>` 显示当前用户的主目录的完整路径'
- en: When a user logs in to the system, `<Default shell>` is the shell that is made
    available to them
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当用户登录系统时，`<Default shell>`是分配给他们的shell
- en: Now that we have an overview of the commands used to manage accounts/groups,
    let’s start to play with them.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经概述了用于管理账户/组的命令，让我们开始操作它们。
- en: How to add a new account
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何添加一个新账户
- en: There are two commands, `adduser` and `useradd`, that can be utilized in Linux
    for the purpose of generating new users. The fact that these two commands achieve
    the same thing (albeit in different ways) and have names that are extremely similar
    to one another can make this a bit difficult to understand at first. I’ll begin
    by walking you through the `useradd` command, and then I’ll describe how `adduser`
    works differently. It’s possible that you will prefer the latter option, but we’ll
    discuss that in a moment.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个命令，`adduser`和`useradd`，可以在Linux中用来创建新用户。这两个命令实现相同的功能（虽然方式不同），并且它们的名称非常相似，刚开始可能会让人感到困惑。我将首先介绍`useradd`命令，然后再说明`adduser`是如何不同的。你可能更喜欢后者，但我们稍后会讨论这个问题。
- en: Using useradd
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用useradd
- en: You need `sudo` capabilities in order to add an account if you don’t have root
    access. This must be defined in `/etc/sudoers`.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有root权限，则需要`sudo`权限才能添加账户。这必须在`/etc/sudoers`中定义。
- en: 'To begin, here is a working example of the `useradd` command that you can put
    to use:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，这是一个可以使用的`useradd`命令的示例：
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: I set up a new user with the name `packt` by using this command. I am confirming
    that I want a home directory to be established for this user by using the `-d`
    option, and after that, I specified `/home/packt` as the user’s home directory
    in the following command. If I hadn’t used the `-m` parameter, the system would
    not have known that I wanted my home directory to be created while the process
    was running; in that case, I would have had to manually create the directory.
    At the end, I announced the username that will be used for my new user (in this
    case, `packt`). As we progress through this book, we will come across commands
    that, in order to be executed, need root privileges. This was demonstrated in
    the preceding command. I’ll prefix commands that need certain permissions with
    `sudo`, as that is the standard way to accomplish it. When you see this, it simply
    indicates that the command can only be executed with the root user’s rights. You
    can also execute these commands by logging in as root (if root access is enabled)
    or switching to root mode. Both of these options are available to you. However,
    rather than logging in with the root account, it is strongly recommended that
    you use `sudo` instead. I explained this earlier.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我通过使用此命令设置了一个名为`packt`的新用户。我确认希望为该用户创建主目录，通过使用`-d`选项，并在接下来的命令中指定`/home/packt`作为用户的主目录。如果我没有使用`-m`参数，系统将不知道在过程中我希望创建主目录；那时，我就必须手动创建目录。最后，我宣布了我将用于新用户的用户名（在这种情况下是`packt`）。随着我们继续阅读本书，我们会遇到一些需要根权限才能执行的命令。前面的命令就是一个例子。我将为需要特定权限的命令加上`sudo`前缀，因为这是执行该命令的标准方式。当你看到这个前缀时，它意味着该命令只能通过根用户权限执行。你也可以通过以root身份登录（如果启用了root访问）或切换到root模式来执行这些命令。这两种方式都可以。然而，强烈建议你不要使用root账户登录，而是使用`sudo`。我之前已经解释过了。
- en: 'The following command can be used to set a password for the newly created `packt`
    account:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令可以用来为新创建的`packt`账户设置密码：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Another command is `adduser`, which will create everything automatically for
    you, including the home directory and group, and will ask you to set the password.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个命令是`adduser`，它会自动为你创建一切，包括主目录和组，并会要求你设置密码。
- en: Using adduser
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用adduser
- en: 'The `adduser` command is yet another option for establishing a user account,
    as mentioned earlier. When you first use this command, the difference it makes
    (as well as the convenience it provides) should become instantly evident. Execute
    the `adduser` command while providing the username of the new user you want to
    create. Go ahead and give it a shot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '`adduser`命令是建立用户账户的另一种选择，正如前面提到的那样。当你第一次使用此命令时，它带来的不同之处（以及提供的便利性）应该会立即显现。执行`adduser`命令，并提供你要创建的新用户的用户名。试试看吧：'
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It is clear from the results that the `adduser` command did a significant amount
    of work for us. The command copied files from `/etc/skel` into our new user’s
    home directory and set the user’s home directory to `/home/packt2` by default.
    The user account was also assigned the next available `1004`. In point of fact,
    the `adduser` and `useradd` commands both copy files from the `/etc/skel` directory;
    however, the `adduser` command is somewhat more detailed in the tasks that it
    executes.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 从结果来看，`adduser`命令为我们做了大量工作。该命令将文件从`/etc/skel`复制到新用户的主目录，并默认将用户的主目录设置为`/home/packt2`。用户账户也被分配了下一个可用的`1004`。事实上，`adduser`和`useradd`命令都从`/etc/skel`目录复制文件；然而，`adduser`命令在执行的任务上更加详细。
- en: How to delete an account
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何删除一个账户
- en: 'When a user no longer needs access to a system, it is highly necessary to remove
    or disable their account because unmanaged accounts frequently become a security
    concern. This can be done by logging in to the system’s administration panel and
    selecting the `userdel` command in order to delete a user account. However, before
    you go and delete an account, there is one crucial question that you should consult
    with yourself about. Do you (or someone else) anticipate needing access to the
    user’s files in some capacity? The vast majority of businesses have retention
    policies that outline what ought to take place with regard to a user’s data in
    the event that they depart the organization. These files are occasionally duplicated
    and saved in an archive for long-term preservation. It’s not uncommon for a manager,
    a coworker, or a new employee to require access to a previous user’s files, possibly
    so that they can pick up where the previous user left off on a project. Before
    beginning to manage users, it is critical to have a solid understanding of this
    policy. If you do not already have a policy that describes the retention requirements
    for files when users depart the company, it is highly recommended that you collaborate
    with the management team to develop such a policy. The user’s home directory’s
    contents are not deleted when the `userdel` command is used since this behavior
    is not the default. In this section, we will delete `packt2` from the system by
    executing the following command:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户不再需要访问系统时，删除或禁用他们的账户是非常必要的，因为未管理的账户往往会成为安全隐患。这可以通过登录到系统的管理面板并选择`userdel`命令来删除用户账户。然而，在删除账户之前，有一个关键问题你应该自己问自己。你（或其他人）是否预计在某种程度上需要访问该用户的文件？绝大多数公司都有数据保存政策，规定了用户离职时如何处理其数据。这些文件有时会被复制并保存到档案中以供长期保存。经理、同事或新员工常常需要访问前用户的文件，可能是为了继续前用户在某个项目中的工作。开始管理用户之前，了解这项政策非常重要。如果你还没有一个明确描述用户离职时文件保留要求的政策，强烈建议你与管理团队合作制定这样的政策。使用`userdel`命令时，用户的主目录内容不会被删除，因为这种行为不是默认的。在这一节中，我们将通过执行以下命令将`packt2`从系统中删除：
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this case, the home folder of the `packt2` user remains.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，`packt2`用户的主文件夹将保留。
- en: 'If we want to remove the home folder once with the account, we need to use
    the `–``r` parameter:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望一次性删除该账户的主文件夹，我们需要使用`–r`参数：
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Before deleting users’ accounts, remember to check whether the files in their
    home folders are needed. Once deleted, they cannot be recovered if there is no
    backup:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在删除用户账户之前，请记得检查其主文件夹中的文件是否需要。删除后，如果没有备份，这些文件将无法恢复：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: In conclusion, deleting a user account in Linux involves backing up data, terminating
    processes, removing the user from groups, deleting the home directory, updating
    system files, and performing a final cleanup. By following these steps, you can
    securely delete an account while managing the associated files and permissions
    effectively.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，在Linux中删除用户账户涉及备份数据、终止进程、将用户从组中移除、删除主目录、更新系统文件，并进行最终清理。通过遵循这些步骤，你可以在有效管理相关文件和权限的同时，安全地删除一个账户。
- en: Understanding the/etc/sudoers file
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解/etc/sudoers文件
- en: In this section, let’s see how to use the ordinary user account we created earlier
    to carry out user administration operations.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们将看看如何使用之前创建的普通用户账户来进行用户管理操作。
- en: 'We must make a special permissions entry for `packt` in `/etc/sudoers` in order
    to allow it special access:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须在`/etc/sudoers`中为`packt`做一个特殊的权限条目，以便赋予它特殊的访问权限：
- en: '[PRE7]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let’s break down this line’s syntax:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析这一行的语法：
- en: First, we state to which user this rule applies (`packt`).
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，我们声明该规则适用于哪个用户（`packt`）。
- en: All hosts that use the same `/etc/sudoers` file are covered by the rule if the
    first `ALL` is present. Since the same file is no longer shared among different
    machines, this term now refers to the current host.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果第一个`ALL`存在，那么所有使用相同`/etc/sudoers`文件的主机都将受到此规则的约束。由于不同机器之间不再共享同一文件，因此此术语现在指代当前主机。
- en: Next, `(ALL) ALL` informs us that any user may execute any command as the `packt`
    user. In terms of functionality, this is similar to `(``root) ALL`.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，`(ALL) ALL`告知我们，任何用户都可以作为`packt`用户执行任何命令。从功能上讲，这与`(root) ALL`类似。
- en: It is important to manage permissions using groups as it makes life much easier.
    Imagine how simple it would be to just remove a user from a `sudo` group rather
    than removing the user from 100 different places.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 使用组来管理权限非常重要，因为这样会使工作变得更加轻松。想象一下，如果你只需将一个用户从`sudo`组中移除，而不是从100个不同的位置逐一删除该用户，那该有多简单。
- en: Switching users
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 切换用户
- en: 'We are now prepared to begin using the `packt` account to carry out user administration
    duties. Use the `su` command to switch to that account to accomplish this. Notably,
    if you’re using CentOS or a comparable operating system, you don’t need to use
    the root account moving forward:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经准备好开始使用`packt`帐户执行用户管理任务。要执行此操作，请使用`su`命令切换到该帐户。值得注意的是，如果你使用的是CentOS或类似的操作系统，今后你无需再使用root帐户：
- en: '[PRE8]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: We are able to check the permissions for our newly formed `packt` account by
    using the `sudo` command. Let’s create another account called `packtdemo`, shall
    we?
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用`sudo`命令检查我们新创建的`packt`帐户的权限。我们来创建另一个名为`packtdemo`的帐户，好吗？
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Changes to the user’s home folder, default shell, and the ability to add a description
    to the user account can all be made with the `usermod` command.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 对用户的主文件夹、默认shell以及为用户帐户添加描述的更改都可以通过`usermod`命令来完成。
- en: 'Initially, the `/etc/passwd` file looks like this:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，`/etc/passwd`文件看起来是这样的：
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Let’s try to add a description and change the shell:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试添加描述并更改shell：
- en: '[PRE11]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Changing to an alternate user account is frequently quite beneficial when working
    with support (especially while troubleshooting permissions). Take, for instance,
    the scenario in which a user complains to you that they are unable to access the
    files contained in a particular directory or that they are unable to execute a
    certain command. In such a scenario, you can try to duplicate the issue by logging
    in to the server, switching to the user account of the person having the issue,
    and then attempting to access the given files. In this way, you will not only
    be able to view their issue for yourself; you will also be able to test whether
    your solution resolves their problem before you report back to them.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在与支持人员合作时，切换到另一个用户帐户通常非常有益（尤其是在排除权限问题时）。举个例子，假设有用户向你抱怨他们无法访问特定目录中的文件，或者无法执行某个命令。在这种情况下，你可以尝试通过登录到服务器，切换到遇到问题的用户帐户，然后尝试访问相关文件来复制这个问题。通过这种方式，你不仅可以亲自查看他们的问题，还能在向他们反馈之前测试你的解决方案是否解决了他们的问题。
- en: You can switch to root user by running the `sudo su` or `su –` command, or just
    simply `su`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行`sudo su`或`su –`命令切换到root用户，或者直接使用`su`命令。
- en: '`su` alone switches to another user while maintaining the current environment,
    while `su –` simulates a complete login environment for the target user, including
    setting up their home directory and environment variables and starting a new login
    shell. The choice between the two commands depends on the specific requirements
    or tasks you need to accomplish as the user switched to.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 仅使用`su`命令可以切换到另一个用户，同时保持当前环境，而`su –`则模拟目标用户的完整登录环境，包括设置他们的主目录、环境变量，并启动一个新的登录shell。选择这两个命令之一取决于你作为被切换用户需要完成的具体要求或任务。
- en: Managing account passwords
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理帐户密码
- en: If you remember correctly, the `passwd` command enables us to alter the password
    for the user who is now logged in to the system. In addition, we are able to change
    the password for any user account on our system by running the `passwd` command
    while logged in as root and providing the username. However, that is only one
    of the capabilities of this command.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你记得的话，`passwd`命令可以让我们更改当前登录系统的用户密码。此外，我们还可以通过在以root身份登录的情况下运行`passwd`命令并提供用户名来更改任何用户帐户的密码。不过，这只是该命令的功能之一。
- en: Locking/unlocking user accounts
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 锁定/解锁用户帐户
- en: The ability to lock and unlock a user account is one feature of the `passwd`
    command that we have not yet discussed. You can use this command to do either
    of these things. There are lots of different use cases where you need to accomplish
    something like this. For example, if a person is going to be gone for a lengthy
    period of time, you might want to lock their account so that it is inaccessible
    to other users during that time.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 锁定和解锁用户帐户是`passwd`命令的一项功能，我们尚未讨论过。你可以使用这个命令来执行这两项操作。有很多不同的使用场景需要实现类似的功能。例如，如果某人将长期外出，你可能想锁定他们的帐户，以便在这段时间内其他用户无法访问。
- en: 'Use the `-l` option when you want to lock an account. For example, to lock
    the account for the `packt` user, we use the following command:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要锁定帐户时，使用`-l`选项。例如，要锁定`packt`用户的帐户，我们使用以下命令：
- en: '[PRE12]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Unlock it as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式解锁：
- en: '[PRE13]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Setting password expiration
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置密码过期
- en: Next, we will discuss the process of actually carrying out the steps to set
    up password expiration.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论如何实际执行设置密码过期的步骤。
- en: 'To be more specific, the `chage` command is what enables us to do this. We
    may use `chage` to change the length of time for which a user’s password is valid,
    and it also provides a more user-friendly alternative to reading the `/etc/shadow`
    file in order to view the current password expiration information. By giving a
    username and using the `-l` option of the `chage` command, we are able to view
    the pertinent information:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地说，`chage`命令使我们能够做到这一点。我们可以使用`chage`来更改用户密码的有效期限，它还提供了一种比直接读取`/etc/shadow`文件查看当前密码过期信息更为用户友好的替代方法。通过给定用户名并使用`chage`命令的`-l`选项，我们可以查看相关信息：
- en: '[PRE14]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'It is not necessary to run `chage` as `root` or with the `sudo` command. There
    is no need to raise your permission level to be able to view the expiration information
    for your own login. To access information using `chage` for any user account other
    than your own, however, you will need to utilize `sudo`:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 并不需要以`root`身份或使用`sudo`命令运行`chage`。查看自己登录的密码过期信息不需要提升权限。但是，如果要访问除自己之外的任何用户帐户的信息，则需要使用`sudo`：
- en: '[PRE15]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Figure 7.1 – Display the password-related information and aging policies
    for a user account](img/Figure_7.1_B18575.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.1 – 显示用户帐户的密码相关信息和过期策略](img/Figure_7.1_B18575.jpg)'
- en: Figure 7.1 – Display the password-related information and aging policies for
    a user account
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.1 – 显示用户帐户的密码相关信息和过期策略
- en: 'In the output, we are able to view values such as the date that the password
    will expire, the maximum number of days that can pass before it needs to be changed,
    and so on. It’s basically the same information that’s saved in `/etc/shadow`,
    but it’s formatted in a way that makes it much simpler to understand. If you would
    like to make any modifications to this information, the `chage` tool is once again
    your best option. The first illustration that I’ll give you is a fairly typical
    one. You should absolutely require new users to reset their passwords the first
    time they log in after creating their user accounts for them. Unfortunately, not
    everyone will be interested in doing what has to be done. Using the `chage` command,
    you can require a user to change their password upon their first successful login
    to the system. This is done by changing their total number of days before password
    expiration to `0` in the following manner:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在输出中，我们能够查看诸如密码过期日期、在密码必须更改之前可以经过的最大天数等值。基本上，这与保存在`/etc/shadow`中的信息相同，但它以更易于理解的格式呈现。如果您想修改这些信息，`chage`工具仍然是您的最佳选择。我给出的第一个示例是一个相当典型的例子。您应该绝对要求新用户在创建用户帐户后第一次登录时重置密码。不幸的是，并非每个人都愿意做必要的操作。通过使用`chage`命令，您可以要求用户在第一次成功登录系统时更改密码。这是通过将他们的密码过期前天数更改为`0`来实现的，具体操作如下：
- en: '[PRE16]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'And the results compared with the previous output look like this:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前的输出结果相比，结果如下所示：
- en: '[PRE17]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Figure 7.2 – Display the password-related information and aging policies
    for a user account](img/Figure_7.2_B18575.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.2 – 显示用户帐户的密码相关信息和过期策略](img/Figure_7.2_B18575.jpg)'
- en: Figure 7.2 – Display the password-related information and aging policies for
    a user account
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.2 – 显示用户帐户的密码相关信息和过期策略
- en: 'The following instructions allow you to configure a user account so that it
    will demand a new password after a particular number of days have passed:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 以下指令允许您配置用户帐户，以便在经过特定天数后要求更换密码：
- en: '[PRE18]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In the preceding code, I am configuring the user account to become invalid
    after 90 days and to demand a new password at that time. When the user logs in,
    they will be presented with a warning notice seven days before the password has
    to be changed. This is the message that will appear seven days before the password
    expires:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，我正在将用户帐户配置为在90天后失效，并要求在此时更换密码。当用户登录时，他们将在密码必须更改前的七天内收到警告通知。这是密码过期前七天会出现的消息：
- en: '![Figure 7.3 – Display the password-related information and aging policies
    for a user account](img/Figure_7.3_B18575.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.3 – 显示用户账户的密码相关信息和过期策略](img/Figure_7.3_B18575.jpg)'
- en: Figure 7.3 – Display the password-related information and aging policies for
    a user account
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.3 – 显示用户账户的密码相关信息和过期策略
- en: It is a good practice to set a password expiration policy for security reasons.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 出于安全原因，设置密码过期策略是一个好习惯。
- en: Group management
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组管理
- en: 'Now that we know how to make new user accounts, manage existing user accounts,
    and switch between user accounts, we need to learn how to manage groups. Linux’s
    implementation of the concept of groups is not all that dissimilar to that of
    other operating systems, and it essentially performs the same function. Controlling
    a user’s access to the resources on your server can be done more effectively with
    the help of groups. You can grant access to users or deny access to users by simply
    adding them to or removing them from a group that has been assigned to a resource
    (such as a file or directory). This is made possible by assigning a group to the
    resource in question. The way that this is handled in Linux is such that each
    and every file and directory has both a user and a group that claims ownership
    of it. When using Linux, ownership is assigned on a one-to-one basis, meaning
    that each file or directory has just one user and just one group associated with
    it. You can verify this for yourself on a Linux system by listing the items included
    within a directory, as follows:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解如何创建新的用户账户，管理现有的用户账户，并在用户账户之间切换，接下来我们需要学习如何管理组。Linux对组的实现与其他操作系统并没有太大不同，本质上执行着相同的功能。借助组来控制用户对服务器资源的访问会更加高效。你可以通过简单地将用户添加到某个资源（如文件或目录）所分配的组中，或者将其从该组中移除，从而授予或拒绝用户访问权限。通过将组分配给特定资源，便能实现这一目标。在Linux中，文件和目录都拥有一个用户和一个组来声明其所有权。使用Linux时，所有权是以一对一的方式分配的，意味着每个文件或目录只与一个用户和一个组相关联。你可以在Linux系统上通过列出某个目录中的项目来验证这一点，如下所示：
- en: '[PRE19]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![Figure 7.4 – Listing the contents of a folder](img/Figure_7.4_B18575.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![图 7.4 – 列出文件夹的内容](img/Figure_7.4_B18575.jpg)'
- en: Figure 7.4 – Listing the contents of a folder
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.4 – 列出文件夹的内容
- en: 'You only need to use the `cat` command to read the contents of the `/etc/group`
    file if you are interested in discovering which groups are currently active on
    your server. The `/etc/group` file, much like the `/etc/passwd` file that we went
    over before, stores information regarding the groups that have been created on
    your system. Feel free to take a look at this file, which is located on your system:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解当前在服务器上活跃的组，你只需要使用`cat`命令来读取`/etc/group`文件的内容。`/etc/group`文件与我们之前讲解过的`/etc/passwd`文件类似，存储了有关系统中已创建组的信息。你可以随时查看这个文件，文件路径为：
- en: 'To create a group, use the `sudo addgroup <``groupname>` command:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个组，使用`sudo addgroup <``groupname>`命令：
- en: '[PRE20]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'To view the content of the file, run the following command:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看文件内容，可以运行以下命令：
- en: '[PRE21]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The structure of each line is as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 每一行的结构如下：
- en: '[PRE22]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Examining the previous syntax, we can see the following:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 查看上面的语法，我们可以看到以下内容：
- en: The name of the group is `<``Group name>`
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该组的名称是`<``Group name>`
- en: Group passwords are not used if there is an `x` next to `<``Group password>`
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`<``Group password>`旁边有一个`x`，则表示该组密码未使用
- en: '`<Group members>` is a list, separated by commas, of users who are members
    of `<``Group name>`'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<Group members>`是一个由逗号分隔的列表，列出了`<``Group name>`组的成员用户'
- en: Use the `sudo delgroup <groupname>` command to remove a group.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`sudo delgroup <groupname>`命令来删除一个组。
- en: 'Each line in the `/etc/group` file containing group information contains the
    group name and the user accounts connected to it:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 每一行`/etc/group`文件中包含组信息，包含组名和与其相关联的用户账户：
- en: '[PRE23]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Now, we’ll have a look at the `usermod` command, which is what actually allows
    you to associate users with groups and is the next topic on our agenda. The `usermod`
    command can be used for a variety of purposes and has a wide range of applications
    (adding a user to a group is just one of its abilities). In the event that we
    want to include a user (`packt`) in our `packtgroup` group, we would issue the
    following command:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将查看`usermod`命令，它实际上允许你将用户与组关联，并且是我们下一个议题。`usermod`命令有多种用途，适用范围广泛（将用户添加到组只是其中的一种功能）。如果我们想将一个用户（`packt`）添加到我们的`packtgroup`组中，我们可以执行以下命令：
- en: '[PRE24]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The `-aG` option is used to add a user to a specific group. The `-a` flag means
    *append*, which means that the user will be added to the group without removing
    them from any other groups they may already be a member of. The `G` flag specifies
    the group name.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`-aG` 选项用于将用户添加到特定的组中。`-a` 标志表示 *追加*，意味着用户将被添加到该组，而不会将其从其他已加入的组中移除。`G` 标志指定组名。'
- en: 'If you wanted to modify the primary group that a user belonged to, you would
    use the `-g` option instead (note that it is written with a lowercase `g` rather
    than an uppercase `G`, as we did earlier):'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想修改用户所属的主组，可以使用 `-g` 选项（注意这里使用小写字母 `g` 而不是大写字母 `G`，正如我们之前所做的）：
- en: '[PRE25]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Groups are the easiest way to manage security permissions. Imagine removing
    one user from a group assigned to 100 resources rather than removing the user
    100 times.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 组是管理安全权限的最简单方式。想象一下，将一个用户从一个分配给 100 个资源的组中移除，而不是删除该用户 100 次。
- en: Permissions
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 权限
- en: In Linux, each file, directory, and other system object has a designated owner
    and group. This is the most fundamental aspect of system security that safeguards
    users from one another. Different sorts of access to read from, write to, or execute
    files can be given to owners, group members, and everyone else. In Linux, these
    are commonly referred to as file permissions.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 中，每个文件、目录和其他系统对象都有一个指定的所有者和组。这是系统安全性中最基本的方面，旨在防止用户之间的相互干扰。可以向所有者、组成员和其他用户授予不同的读取、写入或执行文件的权限。在
    Linux 中，这通常被称为文件权限。
- en: 'The following commands are used to manage ownership and set permissions:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 以下命令用于管理所有权和设置权限：
- en: Change file permissions with `chmod`
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `chmod` 更改文件权限
- en: Change the file owner with `chown`
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `chown` 更改文件所有者
- en: Change group ownership with `chgrp`
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `chgrp` 更改组所有权
- en: Print the user and group IDs with `id`
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 `id` 打印用户和组 ID
- en: 'Typically, the user who created a file is its owner, and the group attached
    to that owner is its primary group (at least initially). Let’s create a `testfile`
    file in the `/tmp` directory as an example:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，创建文件的用户是其所有者，且与该所有者关联的组是其主组（至少在最初是这样）。让我们在 `/tmp` 目录下创建一个 `testfile` 文件作为示例：
- en: '[PRE26]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The first character of the output shows that `testfile` is a normal file (that
    is, not a directory or other type of system object). The next nine characters
    (split into three sets of three characters each) show the read (`r`), write (`w`),
    and execute (`x`) permissions for the system’s owner, group owner, and other users.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的第一个字符显示 `testfile` 是一个普通文件（即不是目录或其他类型的系统对象）。接下来的九个字符（分为三组，每组三个字符）显示系统所有者、组所有者和其他用户的读（`r`）、写（`w`）和执行（`x`）权限。
- en: The first three characters (`rw-`) show that the file’s owner (user `packt`)
    can read and write to it. The next three characters show the same thing concerning
    the group owner. The last set of characters (`r—`) mean that other users can only
    read that file; they can’t write to it or run it.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的前三个字符（`rw-`）表示文件所有者（用户 `packt`）可以读写该文件。接下来的三个字符表示组所有者的权限。最后一组字符（`r—`）意味着其他用户只能读取该文件；他们不能写入或执行该文件。
- en: 'We’ll use `chmod` to modify a file’s permissions. A symbolic representation
    indicating to whom the new permissions will applied must come after this command:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 `chmod` 来修改文件的权限。符号表示法指示新的权限将应用于谁，必须在此命令后给出：
- en: '`u` means user'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`u` 代表用户'
- en: '`g` means group'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`g` 代表组'
- en: '`o` means all other users'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`o` 代表所有其他用户'
- en: '`a` means all users'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`a` 代表所有用户'
- en: 'The types of permission are as follows:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 权限类型如下：
- en: '`+r` adds read permission'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`+r` 添加读权限'
- en: '`-r` removes read permission'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-r` 移除读权限'
- en: '`+w` adds write permission'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`+w` 添加写权限'
- en: '`-w` removes write permission'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-w` 移除写权限'
- en: '`+x` adds execute permission'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`+x` 添加执行权限'
- en: '`-x` removes execute permission'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-x` 移除执行权限'
- en: '`+rw` adds read and write permissions'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`+rw` 添加读写权限'
- en: '`+rwx` adds read, write, and execute permissions'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`+rwx` 添加读、写和执行权限'
- en: 'All of these permissions can be expressed numerically as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些权限可以通过数字表示，如下所示：
- en: 'Read – `4` : Write – `2` : Execute – `1`'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 读 – `4` ：写 – `2` ：执行 – `1`
- en: 'For example, `chmod 754 testfile` will be translated as `rwx` permissions on
    `testfile` for the owner, `rx` for the group, and only `r` for everyone else:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`chmod 754 testfile` 将会为 `testfile` 设置 `rwx` 权限给所有者，`rx` 给组，只有 `r` 给其他用户：
- en: '[PRE27]'
  id: totrans-165
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'To sum up, giving correct permissions is critical for security reasons and
    to avoid causing any unwanted damage. Following is an example of viewing the permissions:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，授予正确的权限对于安全至关重要，并且可以避免造成任何不必要的损害。以下是查看权限的示例：
- en: '![Figure 7.5 – Listing the contents of a folder and their permissions](img/Figure_7.5_B18575.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图7.5 – 列出文件夹的内容及其权限](img/Figure_7.5_B18575.jpg)'
- en: Figure 7.5 – Listing the contents of a folder and their permissions
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5 – 列出文件夹的内容及其权限
- en: To sum up, giving correct permissions is critical for security reasons to prevent
    any unwanted activity on your system.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，授予正确的权限对于安全至关重要，以防止系统上的任何不必要的活动。
- en: Changing groups
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更改组
- en: 'The `chgrp` command will be discussed now in the context of making `packtgroup`
    the new owner of `testfile`. After the command, we specify the name of the group
    and the name of the file whose ownership is to be changed (in this case, `testfile`):'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在讨论`chgrp`命令，将`packtgroup`设为`testfile`的新所有者。命令执行后，我们指定组名和需要更改所有权的文件名（在这种情况下是`testfile`）：
- en: '[PRE28]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Let’s check the ability of user `packtdemo` to write to this file now. A permission
    refused error should appear for the user. We can set the relevant permissions
    for the group to allow `packtdemo` to write to the file:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们检查用户`packtdemo`写入该文件的能力。应该会出现权限拒绝错误。我们可以为组设置相关权限，允许`packtdemo`写入该文件：
- en: '[PRE29]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Then use `usermod` once more to add the account to `packtgroup`, this time
    using the `-aG` combined option as follows:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 然后再次使用`usermod`命令将账户添加到`packtgroup`，这次使用`-aG`组合选项，如下所示：
- en: '[PRE30]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The abbreviation for *append to group* is `-aG`.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '*附加到组*的缩写是`-aG`。'
- en: Currently, `packtgroup` is referred to as a subsidiary or auxiliary group for
    user `packtdemo`. When `packtdemo` next logs in, the updated access permissions
    will be active.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，`packtgroup`被视为用户`packtdemo`的附属组或辅助组。当`packtdemo`下次登录时，更新后的访问权限将生效。
- en: 'We can use `chown` followed by the usernames and filenames, in that order,
    to make `packtdemo` the owner of `testfile` rather than just adding the user to
    the `packtgroup` group:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`chown`，后面跟着用户名和文件名，按此顺序操作，将`packtdemo`设为`testfile`的所有者，而不仅仅是将用户添加到`packtgroup`组：
- en: '[PRE31]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: Keep in mind that the aforementioned command will prevent the `packt` user from
    accessing `testfile` because such an account is no longer the file’s owner or
    a member of the `packtgroup` group.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，前面提到的命令将阻止`packt`用户访问`testfile`，因为该账户不再是文件的所有者，也不是`packtgroup`组的成员。
- en: Along with the typical `rwx` file permissions, `setuid`, `setgid`, and the sticky
    bit are three additional permissions that merit addressing. Let’s look at them
    one by one.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 除了典型的`rwx`文件权限外，`setuid`、`setgid`和粘性位是三个额外的权限，值得关注。让我们逐一查看它们。
- en: Any user may run an executable file if the `setuid` bit is set on the file,
    utilizing the owner’s permissions.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 任何用户如果在文件上设置了`setuid`位，就可以使用文件所有者的权限运行该可执行文件。
- en: Any user may run an executable file when the `setgid` bit is set on the file,
    using the group’s rights.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 任何用户如果在文件上设置了`setgid`位，就可以使用该组的权限运行该可执行文件。
- en: 'When misused, these specific rights present a security risk. For instance,
    if any user is permitted to run a command with superuser capabilities, that user
    will be able to access files that belong to root as well as to other users. It
    is simple to understand how this might quickly wreak havoc on a system: crucial
    files may be deleted, individual directories could be completely erased, and even
    hardware could end up acting erratically. All of this can be brought about by
    a single wicked or careless person. The `setuid` and `setgid` bits must therefore
    be used with extreme caution.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 当这些特定权限被误用时，会带来安全风险。例如，如果任何用户被允许以超级用户权限运行命令，那么该用户就能够访问属于root及其他用户的文件。很容易理解，这可能会迅速对系统造成破坏：关键文件可能被删除，某些目录可能被完全清除，甚至硬件可能会出现异常。所有这些都可能是由一个恶意或粗心的人引起的。因此，`setuid`和`setgid`位必须非常小心地使用。
- en: In `/usr/bin/passwd`, the `setuid` bit is required and is an acceptable use
    case. Although root owns this file, any user can change their own password by
    using it (but not that of other users).
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/usr/bin/passwd`中，`setuid`位是必需的，并且是一个可接受的用例。虽然root拥有这个文件，但任何用户都可以使用它来更改自己的密码（但不能更改其他用户的密码）。
- en: When the sticky bit is set on a directory, no one other than the owner, the
    directory’s owner, or root can delete files from that directory. This is commonly
    used to prevent a user from erasing the files of other users in a shared directory.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 当在目录上设置粘滞位时，除非是文件的所有者、目录的所有者或root用户，否则任何人都不能删除该目录中的文件。这通常用于防止用户删除共享目录中其他用户的文件。
- en: 'The `setuid` bit is set for `testfile` as follows:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`testfile`的`setuid`位设置如下：'
- en: '[PRE32]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'The `setgid` bit is set for `testfile` as follows:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '`testfile`的`setgid`位设置如下：'
- en: '[PRE33]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'To create a directory named `packtdir` and set the sticky bit on it, use the
    following command:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个名为`packtdir`的目录并设置粘滞位，可以使用以下命令：
- en: '[PRE34]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Going back to `/etc/sudoers`, we can also grant superuser access to every user
    in a group by using the `/etc/sudoers` file. For instance, the following command
    specifies that users who belong to `packtgroup` are permitted to run `updatedb`
    (or more specifically, `/usr/bin/updatedb`):'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 回到`/etc/sudoers`，我们还可以通过使用`/etc/sudoers`文件授予某个组中的每个用户超级用户权限。例如，以下命令指定属于`packtgroup`的用户被允许运行`updatedb`（更具体地说，是`/usr/bin/updatedb`）：
- en: '[PRE35]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The group name must be preceded by the `%` sign, which is the only distinction
    between group members and individual users. In this situation, command aliases
    are also applicable.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 组名必须以`%`符号为前缀，这是组成员和单个用户之间唯一的区别。在这种情况下，命令别名也是适用的。
- en: Simply type `sudo -l` in the command line and hit *Enter* to display the calling
    user’s permitted commands in `/etc/sudoers`.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令行中简单地输入`sudo -l`并按*Enter*键，可以显示调用用户在`/etc/sudoers`中被允许的命令。
- en: Using groups can save a lot of time. Imagine assigning one group permissions
    to run some commands, rather than 100 users one by one.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 使用组可以节省大量时间。想象一下，给一个组分配运行某些命令的权限，而不是一个一个地分配给100个用户。
- en: Summary
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Managing users and permissions is something that will be required of you very
    frequently in sectors related to Linux administration, such as system administration
    and network security. This is something that will become embedded in your mental
    toolkit as new users join your organization while others depart. However, even
    if you are the only person who uses your servers, you will still need to manage
    permissions. This is due to the fact that processes are unable to run properly
    if they are denied access to the resources that they require in order to do their
    tasks.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在与Linux管理相关的领域，如系统管理和网络安全中，管理用户和权限是你经常需要做的事情。随着新用户加入组织，旧用户离开，这将成为你思维工具箱中的一部分。然而，即使你是唯一使用服务器的人，你仍然需要管理权限。这是因为如果进程被拒绝访问它们执行任务所需的资源，它们将无法正常运行。
- en: In this chapter, we dove deep into the process of managing users, groups, and
    permissions and covered a lot of ground. We proceeded through the process of creating
    new users, removing existing users, assigning rights, and managing administrative
    access with the `sudo` command. Put these ideas into practice on your own server.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们深入探讨了管理用户、组和权限的过程，并覆盖了许多内容。我们详细讲解了创建新用户、删除现有用户、分配权限以及使用`sudo`命令管理管理员访问权限的过程。将这些概念应用到你自己的服务器上。
- en: In the next chapter, we will talk about software installation and package repositories.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论软件安装和软件包仓库。
