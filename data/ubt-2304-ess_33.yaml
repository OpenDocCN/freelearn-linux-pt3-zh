- en: 34\. Adding a New Disk to an Ubuntu 23.04 Volume Group and Logical Volume
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 34. 向 Ubuntu 23.04 卷组和逻辑卷添加新磁盘
- en: In the previous chapter, we looked at adding a new disk drive to an Ubuntu system,
    creating a partition and file system, and then mounting that file system to access
    the disk. An alternative to creating fixed partitions and file systems is to use
    Logical Volume Management (LVM) to create logical disks comprising space from
    one or more physical or virtual disks or partitions. The advantage of using LVM
    is that space can be added to or removed from logical volumes without spreading
    data over multiple file systems.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了如何向 Ubuntu 系统添加新的磁盘驱动器，创建分区和文件系统，并挂载该文件系统以访问磁盘。创建固定分区和文件系统的替代方法是使用逻辑卷管理（LVM）来创建逻辑磁盘，这些逻辑磁盘由一个或多个物理磁盘、虚拟磁盘或分区的空间组成。使用
    LVM 的优势在于，可以在不将数据分散到多个文件系统中的情况下，向逻辑卷中添加或删除空间。
- en: Let us take, for example, the root (/) file system of an Ubuntu-based server.
    Without LVM, this file system would be created with a specific size when the operating
    system is installed. If a new disk drive is installed, there is no way to allocate
    any of that space to the / file system. The only option would be to create new
    file systems on the new disk and mount them at particular mount points. In this
    scenario, you would have plenty of space on the new file system, but the / file
    system would still be nearly full. The only option would be to move files onto
    the new file system. With LVM, the new disk (or part thereof) can be assigned
    to the logical volume containing the home file system, thereby dynamically extending
    the space available.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们以基于 Ubuntu 的服务器的根（/）文件系统为例。没有 LVM 时，操作系统安装时该文件系统会被创建为特定大小。如果安装了新的磁盘驱动器，则无法将任何空间分配给
    / 文件系统。唯一的选择是为新磁盘创建新的文件系统，并将其挂载到特定的挂载点。在这种情况下，新的文件系统会有充足的空间，但 / 文件系统仍然几乎已满。唯一的选择是将文件移动到新的文件系统上。使用
    LVM 时，可以将新磁盘（或其一部分）分配给包含 home 文件系统的逻辑卷，从而动态扩展可用空间。
- en: In this chapter, we will look at the steps necessary to add new disk space to
    both a volume group and a logical volume to add additional space to the home file
    system of an Ubuntu system.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将了解为 Ubuntu 系统的 home 文件系统添加新磁盘空间的步骤，包括如何向卷组和逻辑卷中添加额外的空间。
- en: 34.1 An Overview of Logical Volume Management (LVM)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 34.1 逻辑卷管理（LVM）概述
- en: LVM provides a flexible and high-level approach to managing disk space. Instead
    of each disk drive being split into partitions of fixed sizes onto which fixed-size
    file systems are created, LVM provides a way to group disk space into logical
    volumes that can be easily resized and moved. In addition, LVM allows administrators
    to carefully control disk space assigned to different groups of users by allocating
    distinct volume groups or logical volumes to those users. When the space initially
    allocated to the volume is exhausted, the administrator can add more space without
    moving the user files to a different file system.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: LVM 提供了一种灵活的高级磁盘空间管理方法。与每个磁盘驱动器被划分为固定大小的分区并在其上创建固定大小的文件系统不同，LVM 提供了一种将磁盘空间分组为逻辑卷的方法，这些逻辑卷可以轻松调整大小和移动。此外，LVM
    允许管理员通过为不同的用户组分配独立的卷组或逻辑卷，来仔细控制分配给不同用户的磁盘空间。当最初分配给卷的空间耗尽时，管理员可以在不将用户文件移动到其他文件系统的情况下添加更多空间。
- en: 'LVM consists of the following components:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: LVM 由以下组件组成：
- en: 34.1.1 Volume Group (VG)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 34.1.1 卷组（VG）
- en: The Volume Group is the high-level container with one or more logical and physical
    volumes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 卷组是包含一个或多个逻辑卷和物理卷的高级容器。
- en: 34.1.2 Physical Volume (PV)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 34.1.2 物理卷（PV）
- en: A physical volume represents a storage device such as a disk drive or other
    storage media.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 物理卷代表存储设备，如磁盘驱动器或其他存储介质。
- en: 34.1.3 Logical Volume (LV)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 34.1.3 逻辑卷（LV）
- en: A logical volume is equivalent to a disk partition and, as with a disk partition,
    can contain a file system.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑卷相当于一个磁盘分区，并且与磁盘分区一样，可以包含一个文件系统。
- en: 34.1.4 Physical Extent (PE)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 34.1.4 物理扩展（PE）
- en: Each physical volume (PV) is divided into equal size blocks known as physical
    extents.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 每个物理卷（PV）被划分为相同大小的块，称为物理扩展。
- en: 34.1.5 Logical Extent (LE)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 34.1.5 逻辑扩展（LE）
- en: Each logical volume (LV) is divided into equal size blocks called logical extents.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每个逻辑卷（LV）被划分为相同大小的块，称为逻辑扩展。
- en: Suppose we are creating a new volume group called VolGroup001\. This volume
    group needs physical disk space to function, so we allocate three disk partitions
    /dev/sda1, /dev/sdb1, and /dev/sdb2\. These become physical volumes in VolGroup001\.
    We would then create a logical volume called LogVol001 within the volume group
    comprising the three physical volumes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们正在创建一个名为VolGroup001的新卷组。该卷组需要物理磁盘空间才能运行，因此我们分配了三个磁盘分区/dev/sda1、/dev/sdb1和/dev/sdb2。这些将成为VolGroup001中的物理卷。然后，我们将在包含这三个物理卷的卷组中创建一个名为LogVol001的逻辑卷。
- en: If we run out of space in LogVol001, we add more disk partitions as physical
    volumes and assign them to the volume group and logical volume.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在LogVol001中用尽空间，我们将添加更多磁盘分区作为物理卷，并将它们分配给卷组和逻辑卷。
- en: 34.2 Getting Information about Logical Volumes
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 34.2 获取逻辑卷信息
- en: As an example of using LVM with Ubuntu, we will work through an example of adding
    space to the / file system of a standard Ubuntu installation. Anticipating the
    need for flexibility in the sizing of the root partition, Ubuntu sets up the /
    file system as a logical volume (called ubuntu_lv) within a volume group called
    ubuntu-vg. Before making any changes to the LVM setup, however, it is essential
    first to gather information.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 作为Ubuntu中使用LVM的示例，我们将通过一个示例来向标准Ubuntu安装的/文件系统添加空间。为了应对根分区大小的灵活性需求，Ubuntu将/文件系统设置为逻辑卷（称为ubuntu_lv），并将其放入名为ubuntu-vg的卷组中。然而，在对LVM设置进行任何更改之前，首先必须收集信息。
- en: 'Running the mount command will output information about a range of mount points,
    including the following entry for the home filesystem:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 运行mount命令将输出有关多个挂载点的信息，包括以下关于home文件系统的条目：
- en: /dev/mapper/ubuntu--vg-ubuntu--lv on / type ext4 (rw,relatime)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/mapper/ubuntu--vg-ubuntu--lv 在 / 类型 ext4（读写，relatime）
- en: 'Information about the volume group can be obtained using the vgdisplay command:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用vgdisplay命令获取关于卷组的信息：
- en: vgdisplay
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: vgdisplay
- en: '--- Volume group ---'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '--- 卷组 ---'
- en: VG Name ubuntu-vg
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: VG名称 ubuntu-vg
- en: System ID
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 系统ID
- en: Format lvm2
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 格式 lvm2
- en: Metadata Areas 1
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 元数据区域 1
- en: Metadata Sequence No 2
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 元数据序列号 2
- en: VG Access read/write
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: VG访问 读写
- en: VG Status resizable
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: VG状态 可调整大小
- en: MAX LV 0
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最大LV 0
- en: Cur LV 1
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当前LV 1
- en: Open LV 1
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 打开LV 1
- en: Max PV 0
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最大PV 0
- en: Cur PV 1
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当前PV 1
- en: Act PV 1
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 活跃PV 1
- en: VG Size <295.04 GiB
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: VG大小 <295.04 GiB
- en: PE Size 4.00 MiB
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: PE大小 4.00 MiB
- en: Total PE 75529
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 总PE 75529
- en: Alloc PE / Size 75529 / <295.04 GiB
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 分配PE / 大小 75529 / <295.04 GiB
- en: Free PE / Size 0 / 0
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 空闲PE / 大小 0 / 0
- en: VG UUID IIGC9W-1UBx-fajE-SMoK-rUdn-qw8E-0omd5P
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: VG UUID IIGC9W-1UBx-fajE-SMoK-rUdn-qw8E-0omd5P
- en: 'As we can see in the above example, the ubuntu-vg volume group has a physical
    extent size of 4.00MiB and has a total of 295.04GB available for allocation to
    logical volumes. Currently, 75529 physical extents are allocated, equaling the
    total capacity. Therefore, we must add one or more physical volumes to increase
    the space allocated to any logical volumes in the ubuntu-vg volume group. The
    vgs tool is also helpful for displaying a quick overview of the space available
    in the volume groups on a system:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如上例所示，ubuntu-vg卷组的物理扩展大小为4.00 MiB，并且总共有295.04GB可供分配给逻辑卷。目前，已分配75529个物理扩展，等于总容量。因此，我们必须添加一个或多个物理卷，以增加分配给ubuntu-vg卷组中任何逻辑卷的空间。vgs工具也有助于快速显示系统中卷组的可用空间概况：
- en: vgs
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: vgs
- en: 'VG #PV #LV #SN Attr VSize VFree'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 'VG #PV #LV #SN 属性 大小 空闲空间'
- en: ubuntu-vg 1 1 0 wz--n- <295.04g 0
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: ubuntu-vg 1 1 0 wz--n- <295.04g 0
- en: 'Information about logical volumes in a volume group may similarly be obtained
    using the lvdisplay command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用lvdisplay命令获取关于卷组中逻辑卷的信息：
- en: lvdisplay
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: lvdisplay
- en: '--- Logical volume ---'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '--- 逻辑卷 ---'
- en: LV Path /dev/ubuntu-vg/ubuntu-lv
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: LV路径 /dev/ubuntu-vg/ubuntu-lv
- en: LV Name ubuntu-lv
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: LV名称 ubuntu-lv
- en: VG Name ubuntu-vg
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: VG名称 ubuntu-vg
- en: LV UUID DaPi0C-vwvy-UudI-aUJQ-mFqx-rIhZ-rT7uHH
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: LV UUID DaPi0C-vwvy-UudI-aUJQ-mFqx-rIhZ-rT7uHH
- en: LV Write Access read/write
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: LV写访问 读写
- en: LV Creation host, time ubuntu, 2023-07-26 15:42:23 -0400
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: LV创建主机，时间 ubuntu，2023-07-26 15:42:23 -0400
- en: LV Status available
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: LV状态 可用
- en: '# open 1'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '# 打开 1'
- en: LV Size <295.04 GiB
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: LV大小 <295.04 GiB
- en: Current LE 75529
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当前LE 75529
- en: Segments 1
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 段 1
- en: Allocation inherit
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 分配继承
- en: Read ahead sectors auto
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 预读扇区 自动
- en: '- currently set to 256'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '- 当前设置为256'
- en: Block device 253:0
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 块设备 253:0
- en: As shown in the above example, 295.04 GiB of the space in volume group ubuntu-vg
    is allocated to logical volume ubuntu-lv (for the / file system).
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所示，ubuntu-vg卷组中295.04 GiB的空间已分配给逻辑卷ubuntu-lv（用于/文件系统）。
- en: 'Now that we know what space is being used, it is often helpful to understand
    which devices are providing the space (in other words, which devices are being
    used as physical volumes). To obtain this information, we need to run the pvdisplay
    command:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了哪些空间被使用，通常了解哪些设备提供这些空间（换句话说，哪些设备作为物理卷被使用）是有帮助的。要获取此信息，我们需要运行pvdisplay命令：
- en: pvdisplay
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pvdisplay
- en: '--- Physical volume ---'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '--- 物理卷 ---'
- en: PV Name /dev/sda3
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: PV名称 /dev/sda3
- en: VG Name ubuntu-vg
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: VG名称 ubuntu-vg
- en: PV Size <295.04 GiB / not usable 4.00 MiB
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: PV大小 <295.04 GiB / 不可用 4.00 MiB
- en: Allocatable yes (but full)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 可分配是（但已满）
- en: PE Size 4.00 MiB
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: PE大小 4.00 MiB
- en: Total PE 75529
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 总PE 75529
- en: Free PE 0
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 空闲PE 0
- en: Allocated PE 75529
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 已分配PE 75529
- en: PV UUID mdde89-ZZS8-6ila-qoZy-ofLp-zxEq-dhifen
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: PV UUID mdde89-ZZS8-6ila-qoZy-ofLp-zxEq-dhifen
- en: Clearly, the space controlled by logical volume ubuntu-vg is provided via a
    physical volume located on /dev/sda2\.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，逻辑卷ubuntu-vg控制的空间是通过位于/dev/sda2上的物理卷提供的。
- en: Now that we know more about our LVM configuration, we can add space to the volume
    group and the logical volume contained within.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们更了解我们的LVM配置，可以向卷组和其中包含的逻辑卷添加空间。
- en: 34.3 Adding Additional Space to a Volume Group from the Command-Line
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 34.3 从命令行向卷组添加额外空间
- en: Just as with the previous steps to gather information about the current Logical
    Volume Management configuration of an Ubuntu system, changes to this configuration
    can be made from the command line.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在之前的步骤中获取有关Ubuntu系统当前逻辑卷管理配置的信息一样，也可以从命令行对该配置进行更改。
- en: 'In the remainder of this chapter, we will assume that a new disk has been added
    to the system and that the operating system sees it as /dev/sdb. We shall also
    assume this is a new disk with no existing partitions. If existing partitions
    are present, they should be backed up, and then the partitions should be deleted
    from the disk using the fdisk utility. For example, assuming a device represented
    by /dev/sdb containing two partitions as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的剩余部分，我们假设系统中已添加新磁盘，并且操作系统将其识别为/dev/sdb。我们还假设这是一个没有现有分区的新磁盘。如果存在现有分区，应该先备份它们，然后使用fdisk工具删除磁盘上的分区。例如，假设/dev/sdb设备包含如下两个分区：
- en: fdisk -l /dev/sdb
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fdisk -l /dev/sdb
- en: 'Disk /dev/sdb: 14.46 GiB, 15525216256 bytes, 30322688 sectors'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '磁盘 /dev/sdb: 14.46 GiB, 15525216256 字节, 30322688 扇区'
- en: 'Disk model: USB 2.0 FD'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘型号：USB 2.0 FD
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 单位：以512字节为单位的扇区
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 扇区大小（逻辑/物理）：512字节 / 512字节
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: I/O大小（最小/最佳）：512字节 / 512字节
- en: 'Disklabel type: dos'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘标签类型：dos
- en: 'Disk identifier: 0x4c33060b'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘标识符：0x4c33060b
- en: Device Boot Start End Sectors Size Id Type
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 设备 启动 起始 结束 扇区 大小 Id 类型
- en: /dev/sdb1 2048 30322687 30320640 14.5G 83 Linux
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sdb1 2048 30322687 30320640 14.5G 83 Linux
- en: 'Once any filesystems on these partitions have been unmounted, they can be deleted
    as follows:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦这些分区上的文件系统被卸载，它们可以如下删除：
- en: fdisk /dev/sdb
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fdisk /dev/sdb
- en: Welcome to fdisk (util-linux 2.37.4).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎使用fdisk (util-linux 2.37.4)。
- en: Changes will remain in memory only, until you decide to write them.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 变更仅保留在内存中，直到你决定将其写入磁盘。
- en: Be careful before using the write command.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 使用写入命令时请小心。
- en: 'Command (m for help): d'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入m获取帮助）：d
- en: Selected partition 1
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 已选择分区 1
- en: Partition 1 has been deleted.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 分区1已删除。
- en: 'Command (m for help): w'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（输入m获取帮助）：w
- en: The partition table has been altered.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 分区表已更改。
- en: Calling ioctl() to re-read partition table.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 调用ioctl()重新读取分区表。
- en: Syncing disks.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 正在同步磁盘。
- en: Before moving to the next step, remove any entries in the /etc/fstab file for
    these filesystems so that the system does not attempt to mount them on the next
    reboot.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入下一步之前，移除/etc/fstab文件中与这些文件系统相关的任何条目，以免系统在下次重启时尝试挂载它们。
- en: 'Once the disk is ready, the next step is to convert this disk into a physical
    volume using the pvcreate command (also wiping the dos signature if one exists):'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦磁盘准备就绪，下一步是使用pvcreate命令将其转换为物理卷（如果存在DOS签名，也会擦除它）：
- en: pvcreate /dev/sdb
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pvcreate /dev/sdb
- en: 'WARNING: dos signature detected on /dev/sdb at offset 510\. Wipe it? [y/n]:
    y'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '警告：在/dev/sdb的偏移量510处检测到DOS签名。是否擦除？[y/n]: y'
- en: Wiping dos signature on /dev/sdb.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 正在擦除/dev/sdb上的DOS签名。
- en: Physical volume "/dev/sdb" successfully created.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 物理卷“/dev/sdb”成功创建。
- en: 'If the creation fails with a message that reads “Device /dev/<device> excluded
    by a filter”, it may be necessary to wipe the disk using the wipefs command before
    creating the physical volume:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果创建失败，并出现“设备/dev/<设备>被过滤器排除”的消息，可能需要在创建物理卷之前使用wipefs命令擦除磁盘：
- en: wipefs -a /dev/sdb
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: wipefs -a /dev/sdb
- en: '/dev/sdb: 8 bytes were erased at offset 0x00000200 (gpt): 45 46 49 20 50 41
    52 54'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '/dev/sdb: 在偏移量 0x00000200 (gpt) 处擦除 8 字节：45 46 49 20 50 41 52 54'
- en: '/dev/sdb: 8 bytes were erased at offset 0x1fffffe00 (gpt): 45 46 49 20 50 41
    52 54'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '/dev/sdb: 在偏移量 0x1fffffe00 (gpt) 处擦除 8 字节：45 46 49 20 50 41 52 54'
- en: '/dev/sdb: 2 bytes were erased at offset 0x000001fe (PMBR): 55 aa'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '/dev/sdb: 在偏移量 0x000001fe (PMBR) 处擦除 2 字节：55 aa'
- en: '/dev/sdb: calling ioctl to re-read partition table: Success'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '/dev/sdb: 调用 ioctl 重新读取分区表：成功'
- en: 'With the physical volume created, we now need to add it to the volume group
    (in this case, ubuntu-vg) using the vgextend command:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建了物理卷之后，我们需要使用 vgextend 命令将其添加到卷组（在此案例中为 ubuntu-vg）中：
- en: vgextend ubuntu-vg /dev/sdb
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: vgextend ubuntu-vg /dev/sdb
- en: Volume group "ubuntu-vg" successfully extended
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 卷组 "ubuntu-vg" 成功扩展
- en: 'The new physical volume has now been added to the volume group and is ready
    to be allocated to a logical volume. To do this, we run the lvextend tool providing
    the size by which we wish to extend the volume. In this case, we want to extend
    the size of the root logical volume by 14 GB. Note that we need to provide the
    path to the logical volume, which can be obtained from the lvdisplay command (in
    this case, /dev/ubuntu-vg/ubuntu-lv):'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 新的物理卷现在已被添加到卷组中，并准备分配给逻辑卷。为此，我们运行 lvextend 工具，提供希望扩展的大小。在此案例中，我们希望将根逻辑卷的大小扩展
    14 GB。请注意，我们需要提供逻辑卷的路径，可以通过 lvdisplay 命令获得（在此案例中为 /dev/ubuntu-vg/ubuntu-lv）：
- en: lvextend -L+14G /dev/ubuntu-vg/ubuntu-lv
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: lvextend -L+14G /dev/ubuntu-vg/ubuntu-lv
- en: Size of logical volume ubuntu-vg/ubuntu-lv changed from <295.04 GiB (75529 extents)
    to <309.04 GiB (79113 extents).
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑卷 ubuntu-vg/ubuntu-lv 的大小从 <295.04 GiB (75529 extents) 更改为 <309.04 GiB (79113
    extents)。
- en: Logical volume ubuntu-vg/ubuntu-lv successfully resized.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑卷 ubuntu-vg/ubuntu-lv 成功调整大小。
- en: 'The last step is to resize the file system residing on the logical volume to
    use the additional space. The way this is performed will depend on the filesystem
    type, which can be identified using the following df command and checking the
    Type column:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是调整位于逻辑卷上的文件系统的大小，以使用额外的空间。执行此操作的方法将取决于文件系统类型，可以使用以下 df 命令并检查 Type 列来识别：
- en: df -T /
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: df -T /
- en: Filesystem Type 1K-blocks Used Available Use% Mounted
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 文件系统类型 1K-块 使用 已用 可用 使用% 挂载点
- en: /dev/mapper/ubuntu--vg-ubuntu--lv ext4 303396024 22139044 265772260 8% /
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/mapper/ubuntu--vg-ubuntu--lv ext4 303396024 22139044 265772260 8% /
- en: 'If / is formatted using the XFS filesystem, it can be resized using the xfs_growfs
    utility:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 / 使用 XFS 文件系统格式化，则可以使用 xfs_growfs 工具来调整大小：
- en: xfs_growfs /
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: xfs_growfs /
- en: 'If, on the other hand, the filesystem is of type ext2, ext3, or ext4, the resize2fs
    utility should be used instead when performing the filesystem resize:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，如果文件系统类型是 ext2、ext3 或 ext4，则应使用 resize2fs 工具来执行文件系统调整大小：
- en: resize2fs /dev/ubuntu-vg/ubuntu-lv
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: resize2fs /dev/ubuntu-vg/ubuntu-lv
- en: Once the resize completes, the file system will have been extended to use the
    additional space provided by the new disk drive. All this has been achieved without
    moving a single file or restarting the server. As far as users on the system are
    concerned, nothing has changed (except that there is now more disk space).
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 调整大小完成后，文件系统将扩展以使用新磁盘驱动器提供的额外空间。所有这些操作都在不移动任何文件或重新启动服务器的情况下完成。就系统上的用户而言，除了磁盘空间变多了，其他一切都没有变化。
- en: 34.4 Summary
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 34.4 总结
- en: Volume groups and logical volumes provide an abstract layer on top of the physical
    storage devices on an Ubuntu system to provide a flexible way to allocate the
    space provided by multiple disk drives. This allows disk space allocations to
    be made and changed dynamically without the need to repartition disk drives and
    move data between filesystems. This chapter has outlined the basic concepts of
    volume groups and logical and physical volumes while demonstrating how to manage
    these using command-line tools.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 卷组和逻辑卷为 Ubuntu 系统中的物理存储设备提供了一个抽象层，提供了一种灵活的方式来分配由多个磁盘驱动器提供的空间。这使得可以动态地进行磁盘空间分配和更改，而无需重新分区磁盘驱动器并在文件系统之间移动数据。本章概述了卷组、逻辑卷和物理卷的基本概念，并演示了如何使用命令行工具来管理这些内容。
