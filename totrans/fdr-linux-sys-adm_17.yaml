- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Performance Tuning Best Practices
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 性能调优最佳实践
- en: Performance tuning system resources is one of the main (or even the most important)
    tasks of any system administrator. Performance tuning is the process of tweaking
    a system’s configuration to improve the use of computing resources, data throughput,
    or user experience. It requires a thorough understanding of the hardware and software
    components of a system, as well as the many interactions between them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 性能调优系统资源是任何系统管理员的主要（甚至最重要的）任务之一。性能调优是调整系统配置以提高计算资源使用、数据吞吐量或用户体验的过程。它需要深入理解系统的硬件和软件组件，以及它们之间的许多交互。
- en: Performance tuning is often confused with troubleshooting, but there are significant
    differences between them. In a troubleshooting process, the main goal is finding
    and solving a problem to make the system work. In performance tuning, the goal
    is to get the system running with the best possible performance while taking advantage
    of the resources and environment it operates in.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 性能调优常常与故障排除混淆，但它们之间有显著区别。在故障排除过程中，主要目标是找出并解决问题，使系统正常运行。而在性能调优中，目标是让系统在其所处的资源和环境下以最佳性能运行。
- en: 'In this chapter, we are going to cover the following main topics on how to
    get the best performance regarding the key aspects of the system:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要主题，帮助您在系统的关键方面获得最佳性能：
- en: Understanding kernel tuning
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解内核调优
- en: Main tuning – CPU and memory
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主要调优 – CPU 和内存
- en: Don’t ignore storage tuning
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要忽视存储调优
- en: Boosting performance with network tuning
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过网络调优提升性能
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To complete the topics in this chapter, you will need to install the packages
    indicated in each section. There, you will find instructions for each package
    that needs to be installed.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成本章中的主题，您需要安装每个部分中指示的软件包。在那里，您会找到每个需要安装的软件包的说明。
- en: 'The examples that were created for this chapter can be downloaded from this
    book’s GitHub repository: [https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter11](https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter11).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中创建的示例可以从本书的GitHub仓库下载：[https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter11](https://github.com/PacktPublishing/Fedora-Linux-System-Administration/tree/main/chapter11)。
- en: Understanding kernel tuning
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解内核调优
- en: The Linux kernel exposes *user-space tunable information and configurations*
    through the `/proc` directory. The `/proc` filesystem acts as an interface to
    the **kernel** data structures and runtime information. It provides a way to access
    detailed information about processes, system configuration, hardware, and more,
    exposing this data through a hierarchy of virtual files.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Linux内核通过`/proc`目录暴露*用户空间可调配的信息和配置*。`/proc`文件系统充当了**内核**数据结构和运行时信息的接口。它提供了一种访问有关进程、系统配置、硬件等详细信息的方式，通过虚拟文件的层级结构公开这些数据。
- en: The files in the `/proc` directory contain system information such as memory
    (`meminfo`), CPU (`cpuinfo`), and available filesystems.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '`/proc`目录中的文件包含系统信息，如内存（`meminfo`）、CPU（`cpuinfo`）和可用的文件系统。'
- en: The `/proc/sys` subdirectory contains configurable parameters to adjust kernel
    behavior and activity. Most files in `/proc/sys` can be modified by the `root`
    user. Modifying files in `/proc/sys` causes immediate changes to the running system.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`/proc/sys`子目录包含可配置参数，用于调整内核行为和活动。`/proc/sys`中的大多数文件可以由`root`用户修改。修改`/proc/sys`中的文件会立即对运行中的系统产生影响。'
- en: Note
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Changing the files in **/proc/sys** could improve the performance of the running
    system, but it could also degrade it. Be careful when applying any changes to
    these files. Remember to back up before making any changes to them.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 更改**/proc/sys**中的文件可以提高运行系统的性能，但也可能导致性能下降。在对这些文件进行任何更改时，请小心。记得在更改前进行备份。
- en: 'Within `/proc/sys`, the files get organized into a subdirectory tree by tunable
    kernel type:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在`/proc/sys`内，文件按可调内核类型组织成子目录树：
- en: '**/proc/sys/dev**: Contains tunables for **system devices**'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/proc/sys/dev**：包含**系统设备**的可调参数'
- en: '**/proc/sys/fs**: Contains tunable variables related to the **filesystem**'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/proc/sys/fs**：包含与**文件系统**相关的可调变量'
- en: '**/proc/sys/kernel**: Includes tweaks that change the **internal** **kernel
    operation**'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/proc/sys/kernel**：包含改变**内部** **内核操作**的调整'
- en: '**/proc/sys/net**: Contains tunables that change the **network configuration**'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/proc/sys/net**：包含改变**网络配置**的可调参数'
- en: '**/proc/sys/vm**: This contains parameters that change the management of the
    **virtual memory of** **the kernel**'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**/proc/sys/vm**：包含更改**内核虚拟内存管理**的参数'
- en: Note
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Remember, not all files in **/proc/sys** are writable. Some of them only get
    altered by the operating system itself.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，并非所有**/proc/sys**中的文件都是可写的。有些文件仅能由操作系统本身修改。
- en: Let’s see how we can change these kernel tunables.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何更改这些内核可调项。
- en: Tuning kernel parameters
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 调整内核参数
- en: 'The following figure illustrates how the kernel parameters can be changed in
    different ways:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示说明了如何以不同方式更改内核参数：
- en: '![Figure 11.1 – Linux Performance Tuning Tools, by Brendan Gregg (CC BY-SA
    4.0)](img/B19121_11_1.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图11.1 – Linux性能调优工具，Brendan Gregg著（CC BY-SA 4.0）](img/B19121_11_1.jpg)'
- en: Figure 11.1 – Linux Performance Tuning Tools, by Brendan Gregg (CC BY-SA 4.0)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1 – Linux性能调优工具，Brendan Gregg著（CC BY-SA 4.0）
- en: 'As system administrators, the best practice is to make changes through the
    command line, as follows:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 作为系统管理员，最佳实践是通过命令行进行更改，如下所示：
- en: Using a text editor to change **/****proc/sys** files
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用文本编辑器更改**/proc/sys**文件
- en: Using the **echo** command to set simple values in the tunables
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**echo**命令设置可调项中的简单值
- en: Using the **sysctl** command to set a parameter by name
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**sysctl**命令按名称设置参数
- en: Create files with the desired parameters in the **/****etc/sysctl.d** directory
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**/etc/sysctl.d**目录中创建包含所需参数的文件
- en: Note
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Changing the configurable values in the kernel tunables directly does not make
    them *persistent* at reboot. To do this, you must use the **sysctl** command or
    create a file with the change in the **/****etc/sysctl.d** directory.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 直接更改内核可调值并不会使其在重启时保持*持久性*。要实现这一点，必须使用**sysctl**命令，或者在**/etc/sysctl.d**目录中创建一个包含更改的文件。
- en: 'Let’s see an example of each of the different ways we can do this. Follow these
    steps:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看每种不同方法的示例。按照以下步骤操作：
- en: 'Review the content of the tunable **icmp_echo_ignore_all** inside the **/****proc/sys/net/ipv4**
    directory:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看**/proc/sys/net/ipv4**目录中**icmp_echo_ignore_all**可调项的内容：
- en: '[PRE0]'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This value (`0`) indicates that `icmp` (`ping`) support exists:'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这个值（`0`）表示存在`icmp`（`ping`）支持：
- en: '![Figure 11.2 – The workstation supports ping](img/B19121_11_2.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图11.2 – 工作站支持ping](img/B19121_11_2.jpg)'
- en: Figure 11.2 – The workstation supports ping
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2 – 工作站支持ping
- en: Let’s change it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进行更改。
- en: 'Use the **echo** command to change the value of the tunable from *false* (**0**)
    to *true* (**1**):'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**echo**命令将可调项的值从*false*（**0**）更改为*true*（**1**）：
- en: '[PRE1]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Confirm the change of the tunable:'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 确认可调项的更改：
- en: '[PRE2]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As you will see, the operating system no longer allows *pinging*:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如你所见，操作系统不再允许*ping*：
- en: '![Figure 11.3 – Ping not allowed by the operating system](img/B19121_11_3.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图11.3 – 操作系统不允许ping](img/B19121_11_3.jpg)'
- en: Figure 11.3 – Ping not allowed by the operating system
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.3 – 操作系统不允许ping
- en: This change can also be made using the `sysctl` command.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这个更改也可以通过`sysctl`命令进行。
- en: Let’s do it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: 'The path of the tunable to change can be represented by replacing the slashes
    under **/proc/sys** with dots. In our example, the tunable is as follows:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可调项的路径可以通过将**/proc/sys**下的斜杠替换为点表示。在我们的示例中，可调项如下：
- en: '[PRE3]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: sysctl -w net.ipv4.icmp_echo_ignore_all="0"
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: sysctl -w net.ipv4.icmp_echo_ignore_all="0"
- en: net.ipv4.icmp_echo_ignore_all = 0
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: net.ipv4.icmp_echo_ignore_all = 0
- en: '[PRE4]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure 11.4 – Ping allowed](img/B19121_11_4.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图11.4 – 允许ping](img/B19121_11_4.jpg)'
- en: Figure 11.4 – Ping allowed
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.4 – 允许ping
- en: However, this change is not persistent on reboot.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个更改在重启时不会保持。
- en: Let’s see how to do this.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何做这个。
- en: 'On boot, the kernel loads the tunable settings from the configuration files
    found in these directories:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在启动时，内核会从这些目录中的配置文件加载可调设置：
- en: '`.conf` extension, with the tunable set to `true`:'
  id: totrans-64
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`.conf`扩展名，且可调设置为`true`：'
- en: '[PRE5]'
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: sysctl -p /etc/sysctl.d/ping.conf
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: sysctl -p /etc/sysctl.d/ping.conf
- en: net.ipv4.icmp_echo_ignore_all = 1
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: net.ipv4.icmp_echo_ignore_all = 1
- en: '[PRE6]'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![Figure 11.5 – Ping not allowed](img/B19121_11_5.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图11.5 – 不允许ping](img/B19121_11_5.jpg)'
- en: Figure 11.5 – Ping not allowed
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.5 – 不允许ping
- en: 'These are the different ways to change the kernel tunables. To get the list
    of kernel tunables, use the `-a` option of the `sysctl` command:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是更改内核可调项的不同方法。要获取内核可调项的列表，可以使用`sysctl`命令的`-a`选项：
- en: '[PRE7]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Figure 11.6 – Kernel tunables list](img/B19121_11_6.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图11.6 – 内核可调列表](img/B19121_11_6.jpg)'
- en: Figure 11.6 – Kernel tunables list
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.6 – 内核可调列表
- en: Changes that are made to the kernel tunables modify the behavior of the operating
    system. Now, let’s take a look at the changes in some specific aspects of the
    main components of the operating system.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 对内核可调参数所做的更改会修改操作系统的行为。现在，让我们看看操作系统主组件的某些特定方面的更改。
- en: Main tuning – CPU and memory
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主要调优 - CPU 和内存
- en: In the previous section, *Figure 11**.1* illustrated the different tools that
    help us collect performance information on the use of system resources.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一节中，*图 11.1* 展示了帮助我们收集系统资源使用性能信息的不同工具。
- en: The tools display system information such as free disk space, CPU temperature,
    and other essential components, as well as network information such as the system’s
    IP address and current upload and download rates.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 工具显示系统信息，如空闲磁盘空间、CPU 温度以及其他重要组件，还包括网络信息，如系统的 IP 地址和当前上传下载速率。
- en: Monitoring the resources of the running system represents one of the many main
    tasks of a system administrator. The goal of system monitoring is to determine
    whether the current performance meets the specified technical requirements.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 监控运行系统的资源是系统管理员的主要任务之一。系统监控的目标是确定当前的性能是否符合指定的技术要求。
- en: Monitoring the performance of resources helps us know about the areas that need
    improving.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 监控资源性能帮助我们了解需要改进的领域。
- en: Before changing the CPU and memory usage configuration, let’s take a brief look
    at the basic monitoring tools included in Fedora Linux.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在更改 CPU 和内存使用配置之前，让我们简要了解一下 Fedora Linux 中包含的基本监控工具。
- en: Overview of monitoring tools
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 监控工具概述
- en: Monitoring tools provide per-process statistics and are based on process structures
    or system-wide statistics from the kernel. Monitoring tools usually become available
    to *unprivileged users*, but for a more granular level of detail, system administrator
    privileges are required.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 监控工具提供每个进程的统计信息，并基于进程结构或来自内核的系统范围统计信息。监控工具通常对*普通用户*可用，但对于更精细的详细信息，则需要系统管理员权限。
- en: The `ps` and `top` commands are the most common commands that provide process
    statistics, including CPU and memory.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`ps` 和 `top` 命令是提供进程统计信息的最常用命令，包括 CPU 和内存使用情况。'
- en: 'As the `root` user, running the `ps` command with the `aux` option lists the
    processes with extended details by user:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 `root` 用户，使用 `aux` 选项运行 `ps` 命令将按用户列出具有扩展详细信息的进程：
- en: '[PRE8]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![Figure 11.7 – Output of the ps aux command](img/B19121_11_7.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.7 – `ps aux` 命令的输出](img/B19121_11_7.jpg)'
- en: Figure 11.7 – Output of the ps aux command
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.7 – `ps aux` 命令的输出
- en: 'The following table describes the output of the `ps aux` command column by
    column:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格按列描述了`ps aux`命令的输出：
- en: '| **Column** | **Description** |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| **列** | **描述** |'
- en: '| `USER` | The user running the process. |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `USER` | 运行此进程的用户。 |'
- en: '| `PID` | Process ID of this process. |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `PID` | 此进程的进程 ID。 |'
- en: '| `%``CPU` | CPU time used (in percent) by this process. |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `%``CPU` | 此进程使用的 CPU 时间（以百分比表示）。 |'
- en: '| `%``MEM` | Physical memory used (in percentage) by this process. |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `%``MEM` | 此进程使用的物理内存（以百分比表示）。 |'
- en: '| `VSZ` | Virtual memory used (in bytes) by this process. |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `VSZ` | 此进程使用的虚拟内存（以字节为单位）。 |'
- en: '| `RSS` | Resident Set Size, *non-swappable* physical memory used (in KiB*)
    by this process. |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `RSS` | 常驻内存集大小，*不可交换*的物理内存使用量（以 KiB 为单位）。 |'
- en: '| `TTY` | Terminal from which the process started.The *question mark* (`?`)
    indicates that the process wasn’t started from a terminal. |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `TTY` | 启动进程的终端。*问号*（`?`）表示该进程不是从终端启动的。 |'
- en: '| `STAT` | Process state. |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| `STAT` | 进程状态。 |'
- en: '| `START` | Starting time and date of the process. |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| `START` | 进程的启动时间和日期。 |'
- en: '| `TIME` | Total CPU time used by this process. |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| `TIME` | 此进程使用的总 CPU 时间。 |'
- en: '| `COMMAND` | The command, with all its arguments, that started the process.
    |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `COMMAND` | 启动进程的命令及其所有参数。 |'
- en: Table 11.1 – The ps aux command’s output description column by column
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.1 – `ps aux` 命令输出描述（按列）
- en: '*More details will be provided in the following section.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*更多详细信息将在以下部分提供。'
- en: Note
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For more information about the *process stat codes*, refer to the **ps** manual
    pages. Use the **man** **ps** command.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 有关*进程状态代码*的更多信息，请参阅**ps**的手册页。使用**man ps**命令。
- en: 'Unlike the `ps` command, where the output is static, the `top` command provides
    a real-time report of process activity. It also provides an interface for filtering
    and manipulating the monitoring data:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 与 `ps` 命令不同，`ps` 输出是静态的，而 `top` 命令提供了进程活动的实时报告。它还提供了一个界面，用于筛选和操作监控数据：
- en: '[PRE9]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![Figure 11.8 – Output of the top command](img/B19121_11_8.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.8 – top 命令的输出](img/B19121_11_8.jpg)'
- en: Figure 11.8 – Output of the top command
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.8 – top 命令的输出
- en: 'The command output header provides general information on the current behavior
    of the system:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 命令输出的标题提供有关当前系统行为的一般信息：
- en: The first line includes the current time, how long the system runs for, the
    number of users connected, and the average load in the last 1, 5, and 15 minutes
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一行包括当前时间、系统运行时间、连接的用户数量，以及过去 1、5、15 分钟的平均负载
- en: 'The second line shows the number of tasks and their statuses: running, sleeping,
    stopped, or zombies'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二行显示任务数量及其状态：运行、睡眠、停止或僵尸
- en: 'The third line shows different CPU usage values (at runtime):'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三行显示不同的 CPU 使用值（在运行时）：
- en: '**us**: Time that **CPU** spends running processes for users in *user space*'
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**us**: **CPU** 在 *用户空间* 中运行进程所花费的时间'
- en: '**sy**: Time spent running *system kernel* *space* processes'
  id: totrans-115
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sy**: 花费时间运行 *系统内核* *空间* 进程'
- en: '**ni**: Time spent running processes with a manually set **nice** value'
  id: totrans-116
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ni**: 花费时间运行具有手动设置 **nice** 值的进程'
- en: '**id**: **CPU** idle time'
  id: totrans-117
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**id**: **CPU** 空闲时间'
- en: '**wa**: Time that **CPU** spends waiting for **I/O** tasks to complete'
  id: totrans-118
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**wa**: **CPU** 花费时间等待 **I/O** 任务完成'
- en: '**hi**: Time spent servicing *hardware interrupts*'
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**hi**: 花费时间服务 *硬件中断*'
- en: '**si**: Time spent servicing *software interrupts*'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**si**: 花费时间服务 *软件中断*'
- en: '**st**: Time lost due to running virtual machines (*steal time*)'
  id: totrans-121
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**st**: 由于运行虚拟机而丧失的时间（*steal time*）'
- en: The fourth line shows the total amount (in KiB) of physical memory, and how
    much is free, used, and buffered or cached
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第四行显示物理内存的总量（以 KiB 为单位），以及空闲、已用、已缓存或缓冲的内存量
- en: The fifth line shows the total amount (in KiB) of swap memory, and how much
    is free, used, and available
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第五行显示交换内存的总量（以 KiB 为单位），以及空闲、已用和可用的交换内存
- en: 'The following table describes the output of the `top` command column by column:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格逐列描述 `top` 命令的输出：
- en: '| **Column** | **Description** |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| **列** | **描述** |'
- en: '| `PID` | Process ID |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| `PID` | 进程 ID |'
- en: '| `USER` | User owner of the process |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| `USER` | 进程的用户拥有者 |'
- en: '| `PR` | Process priority |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| `PR` | 进程优先级 |'
- en: '| `NI` | Nice value of the process |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| `NI` | 进程的 Nice 值 |'
- en: '| `VIRT` | Virtual memory used by the process |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| `VIRT` | 进程使用的虚拟内存 |'
- en: '| `RES` | Resident memory used by the process |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| `RES` | 进程使用的常驻内存 |'
- en: '| `SHR` | Shared memory used by the process |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| `SHR` | 进程使用的共享内存 |'
- en: '| `S` | Status of the process |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| `S` | 进程状态 |'
- en: '| `%``CPU` | Share of CPU time used (in percentage) by the process since the
    last update |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| `%``CPU` | 自上次更新以来，进程使用的 CPU 时间百分比 |'
- en: '| `%``MEM` | Share of physical `memory` used (in percentage) |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| `%``MEM` | 使用的物理 `内存` 的百分比 |'
- en: '| `TIME+` | Total CPU time used by the task in hundredths of a second |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| `TIME+` | 任务使用的总 CPU 时间，以百分之一秒为单位 |'
- en: '| `COMMAND` | The command, with all its arguments, that started the process
    |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| `COMMAND` | 启动进程的命令及其所有参数 |'
- en: Table 11.2 – The top command’s output description column by column
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.2 – top 命令输出的逐列说明
- en: Note
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For more information about the process status codes, refer to the **top** manual
    pages. Use the **man top** command to do so.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 有关进程状态代码的更多信息，请参阅 **top** 手册页面。使用 **man top** 命令进行查看。
- en: 'Regarding `memory`, the `free` command lists the free and used *physical* and
    *swap* `memory`. By using the `-b`, `-k`, `-m`, and `-g` options, the output will
    be displayed in bytes, KB, MB, and GB, respectively:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 `memory`，`free` 命令列出了空闲和已用的 *物理* 内存和 *交换* `内存`。通过使用 `-b`、`-k`、`-m` 和 `-g`
    选项，输出将分别以字节、KB、MB 和 GB 显示：
- en: '[PRE10]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![Figure 11.9 – Outputs after running the different options of the free command](img/B19121_11_9.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.9 – 运行 free 命令的不同选项后的输出](img/B19121_11_9.jpg)'
- en: Figure 11.9 – Outputs after running the different options of the free command
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.9 – 运行 free 命令的不同选项后的输出
- en: 'The GNOME desktop provides a graphical tool for resource monitoring. From the
    main menu, under `system monitor`:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: GNOME 桌面提供了一个图形工具用于资源监控。在主菜单中，选择 `系统监视器`：
- en: '![Figure 11.10 – GNOME System Monitor from Activities Overview](img/B19121_11_10.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.10 – 来自活动概览的 GNOME 系统监视器](img/B19121_11_10.jpg)'
- en: Figure 11.10 – GNOME System Monitor from Activities Overview
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.10 – 来自活动概览的 GNOME 系统监视器
- en: 'You can also open the utility from the Terminal by running the `gnome-system-monitor`
    command:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以通过运行 `gnome-system-monitor` 命令从终端打开该工具：
- en: '[PRE11]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Figure 11.11 – GNOME System Monitor](img/B19121_11_11.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.11 – GNOME 系统监视器](img/B19121_11_11.jpg)'
- en: Figure 11.11 – GNOME System Monitor
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.11 – GNOME 系统监视器
- en: Fedora Linux, through its official repositories, provides a package that integrates
    several monitoring tools. The `sysstat` package takes the *raw data* from the
    kernel counters and allows you to display and store the metrics in a historical
    *process* *running* database.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: Fedora Linux 通过其官方仓库提供一个集成多种监控工具的软件包。`sysstat` 软件包从内核计数器中获取 *原始数据*，并允许你显示和存储度量数据到历史
    *进程* *运行* 数据库中。
- en: 'The following utilities are included in this package:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 以下工具包含在该软件包中：
- en: '**mpstat**: Reports individual or combined **CPU**-related statistics'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**mpstat**：报告单个或合并的 **CPU** 相关统计信息'
- en: '**iostat**: Reports **CPU** and I/O statistics for devices, partitions, and
    the network filesystem'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**iostat**：报告设备、分区和网络文件系统的**CPU**和 I/O 统计信息'
- en: '**pidstat**: Reports statistics for processes, including disk **I/O**, **CPU**,
    and **memory** usage'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**pidstat**：报告进程的统计信息，包括磁盘 **I/O**、**CPU** 和 **内存** 使用情况'
- en: '**cifsiostat**: Reports statistics about shared filesystems, printers, or network
    serial ports'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**cifsiostat**：报告共享文件系统、打印机或网络串行端口的统计信息'
- en: '**sar**: Collects, reports, and stores system activity'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**sar**：收集、报告并存储系统活动信息'
- en: 'To install the package, from the Terminal, run the following command:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装该软件包，请从终端运行以下命令：
- en: '[PRE12]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: All these tools are useful for measuring and storing system resource usage information.
    And with this, we can determine which aspect of the resources has points for improvement.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些工具都用于测量和存储系统资源使用信息。通过这些工具，我们可以确定资源的哪些方面存在改进空间。
- en: Let’s start with `CPU` usage.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 `CPU` 使用开始。
- en: Improving CPU usage
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改善 CPU 使用情况
- en: 'To find points of improvement in CPU usage, first, observe the behavior of
    the CPU. Let’s learn how to check CPU usage with the different monitoring tools.
    Follow these steps:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 要找出 CPU 使用的改进点，首先要观察 CPU 的行为。让我们学习如何使用不同的监控工具检查 CPU 使用情况。请按照以下步骤操作：
- en: 'Use the **ps** command to list the processes with the highest CPU usage:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 **ps** 命令列出 CPU 使用率最高的进程：
- en: '[PRE13]'
  id: totrans-166
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![Figure 11.12 – Output of the ps command listing the processes with the highest
    CPU usage](img/B19121_11_12.jpg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.12 – ps 命令输出列出最高 CPU 使用率的进程](img/B19121_11_12.jpg)'
- en: Figure 11.12 – Output of the ps command listing the processes with the highest
    CPU usage
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.12 – ps 命令输出列出最高 CPU 使用率的进程
- en: This mode of the `ps ax` command formats the output by process identifier (`pid`),
    percentage of CPU usage, and the command that started the process, sorting by
    the percentage of CPU usage.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`ps ax` 命令的此模式通过进程标识符（`pid`）、CPU 使用百分比和启动该进程的命令格式化输出，按 CPU 使用百分比进行排序。'
- en: The output shows that the process with the highest CPU usage is SSH, which should
    be considered normal for administrative tasks.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 输出显示，CPU 使用率最高的进程是 SSH，这对于管理任务来说应该是正常的。
- en: In our system, a web server is running. Let’s analyze its CPU usage.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的系统中，正在运行一个 Web 服务器。让我们分析它的 CPU 使用情况。
- en: 'Use the **ps** command to identify the **httpd** process and its CPU usage:'
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 **ps** 命令识别 **httpd** 进程及其 CPU 使用情况：
- en: '[PRE14]'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Figure 11.13 – Identifying the httpd process and its CPU usage](img/B19121_11_13.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.13 – 识别 httpd 进程及其 CPU 使用情况](img/B19121_11_13.jpg)'
- en: Figure 11.13 – Identifying the httpd process and its CPU usage
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.13 – 识别 httpd 进程及其 CPU 使用情况
- en: Note
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Enclosing the first character of the process in square brackets limits the search,
    ignoring the **grep** command itself at the output.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 将进程的第一个字符括在方括号中，可以限制搜索范围，忽略输出中的 **grep** 命令本身。
- en: Note that the CPU usage displayed is not significant, so further research needs
    to focus on finding the real value of CPU usage.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，显示的 CPU 使用情况并不显著，因此需要进一步研究，找到 CPU 使用的真实值。
- en: 'Use the process identifier (**pid**) to find the resource usage with the **top**
    command:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用进程标识符（**pid**）通过 **top** 命令查找资源使用情况：
- en: '[PRE15]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![Figure 11.14 – Monitoring resource usage with the top command](img/B19121_11_14.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.14 – 使用 top 命令监控资源使用情况](img/B19121_11_14.jpg)'
- en: Figure 11.14 – Monitoring resource usage with the top command
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.14 – 使用 top 命令监控资源使用情况
- en: Now, let’s use the utility included in the `sysstat` package to get more information
    about the process’s performance.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 `sysstat` 软件包中包含的工具，获取更多有关进程性能的信息。
- en: 'Use the **pidstat** command with the process identifier (**pid**) to get the
    CPU usage of the process at the *1-second interval*:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用带有进程标识符（**pid**）的 **pidstat** 命令，在 *1秒间隔* 下获取进程的 CPU 使用情况：
- en: '[PRE16]'
  id: totrans-185
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '![Figure 11.15 – Process CPU usage percentage](img/B19121_11_15.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.15 – 进程 CPU 使用百分比](img/B19121_11_15.jpg)'
- en: Figure 11.15 – Process CPU usage percentage
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.15 – 进程 CPU 使用百分比
- en: A single CPU can only run *one process at a time*. To make the Linux system
    run multiple processes simultaneously, through multitasking, processes interleave
    their running on the CPU.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 单个 CPU 一次只能运行 *一个进程*。为了让 Linux 系统同时运行多个进程，通过多任务处理，进程在 CPU 上交替运行。
- en: The kernel uses the *process scheduler* to determine which process to run at
    any given time. The process scheduler must balance several options, based on certain
    criteria, such as determining which process gets the next turn of execution, getting
    a fair share of CPU time but allowing high-priority processes a larger share and
    preempting lower-priority processes, or being predictable and scalable under different
    workload conditions.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 内核使用 *进程调度器* 来决定在任何给定时刻应该运行哪个进程。进程调度器必须在多个选项之间进行平衡，基于某些标准，如决定哪个进程获得下一个执行机会，确保公平的
    CPU 时间分配，同时允许高优先级进程获得更多的时间片，并抢占低优先级进程，或者在不同工作负载条件下具有可预测性和可扩展性。
- en: 'The scheduler controls the order of running based on the scheduling priority
    policy assigned to each thread or process. These scheduling policies are divided
    into two groups: **non-real-time policies** and **real-time policies**.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 调度器根据分配给每个线程或进程的调度优先级策略控制执行顺序。这些调度策略分为两组：**非实时策略**和**实时策略**。
- en: Note
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Real-time computing** (**RTC**) guarantees the response of a system from
    the event to the response itself, within specified time constraints. A *real-time
    system* describes a system that controls an environment. It receives data, processes
    it, and returns the results fast enough to affect the environment at that time.'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '**实时计算** (**RTC**) 保证系统从事件到响应的时间满足规定的时间约束。*实时系统* 描述了一种控制环境的系统。它接收数据，处理数据，并迅速返回结果，足以在该时刻影响环境。'
- en: The priority of the process using real-time policies is a value between `1`
    (*lowest*) and `99` (*highest*) and is known as a `0`.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 使用实时策略的进程优先级值在 `1` (*最低*) 和 `99` (*最高*) 之间，并且被称为 `0`。
- en: The priority of the process could *increase* and *decrease* during the lifetime
    of the process; this is known as the `nice` or `renice` commands.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 进程的优先级在生命周期内可能会 *增加* 或 *减少*；这就是 `nice` 或 `renice` 命令的作用。
- en: Since the static priority of non-real-time processes is set to `0`, the nice
    value determines the *relative scheduling* of non-real-time processes. The nice
    value ranges from `-20` (*highest*) to `19` (*lowest*).
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 由于非实时进程的静态优先级被设置为 `0`，因此nice值决定了非实时进程的 *相对调度*。nice值的范围从 `-20` (*最高*) 到 `19`
    (*最低*)。
- en: 'Fedora Linux provides six scheduling policies divided into two groups: `real-time`
    and `non-real-time` scheduling classes. The following table lists the policies
    available in each scheduling class:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: Fedora Linux 提供了六种调度策略，分为两组：`实时` 和 `非实时` 调度类。以下表格列出了每个调度类中可用的策略：
- en: '| **Class** | **Policies** | **Definition** |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| **类别** | **策略** | **定义** |'
- en: '| Real-time scheduler | `SCHED_FIFO` | Uses the *first-in*, *first-out* scheduling
    algorithm without timeslices. |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| 实时调度器 | `SCHED_FIFO` | 使用 *先到先服务* 调度算法，无时间片。 |'
- en: '| `SCHED_RR` | Uses the *round-robin* scheduling algorithm with timeslices.
    |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| `SCHED_RR` | 使用 *轮转调度* 算法并带有时间片。 |'
- en: '| **Completely Fair** **Scheduler** (**CFS**) | `SCHED_NORMAL` (*also known*
    *as* `SCHED_OTHER`) | Defines the *round-robin* style time-sharing schedule. |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| **完全公平调度器** (**CFS**) | `SCHED_NORMAL` (*也称为* `SCHED_OTHER`) | 定义了 *轮转调度*
    样式的时间共享计划。 |'
- en: '| `SCHED_BATCH` | Benefits *batch-oriented* workloads. |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| `SCHED_BATCH` | 适用于 *批处理型* 工作负载。 |'
- en: '| `SCHED_IDLE` | Benefits running low-priority applications. |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| `SCHED_IDLE` | 适用于运行低优先级的应用程序。 |'
- en: '| Deadline scheduler | `SCHED_DEADLINE` | The scheduler guarantees real-time
    task scheduling, even under high load conditions. It does so by using three parameters
    – `period`, `deadline`, and `runtime` – to define a task in nanoseconds. |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| 截止时间调度器 | `SCHED_DEADLINE` | 调度器保证在高负载条件下也能进行实时任务调度。它通过使用三个参数——`period`、`deadline`
    和 `runtime`——以纳秒为单位定义任务。 |'
- en: Table 11.3 – Scheduling policies
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.3 – 调度策略
- en: 'Let’s continue using the previous example of the web server to analyze the
    priority of its process. Follow these steps:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 继续使用之前的 Web 服务器示例来分析其进程的优先级。按照以下步骤进行：
- en: 'Use the **ps** command to list the priority of processes:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 **ps** 命令列出进程的优先级：
- en: '[PRE17]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '![Figure 11.16 – Reviewing process priority](img/B19121_11_16.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.16 – 查看进程优先级](img/B19121_11_16.jpg)'
- en: Figure 11.16 – Reviewing process priority
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.16 – 查看进程优先级
- en: Here, the `pri` column shows `19`), the `rtprio` column shows real time priority
    (`-`), the `ni` column shows `0`), and the `cls` column shows the `TS` represents
    **time-sharing**.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，`pri`列显示`19`，`rtprio`列显示实时优先级（`-`），`ni`列显示`0`，`cls`列显示`TS`表示**时间共享**。
- en: The preceding output indicates that the process has low priority in its run.
    Let’s change this.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 以上输出表明该进程的运行优先级较低。让我们更改它。
- en: 'Use the **chrt** command to display the scheduling policy and priority of the
    web server processes:'
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**chrt**命令显示web服务器进程的调度策略和优先级：
- en: '[PRE18]'
  id: totrans-213
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![Figure 11.17 – Scheduling the policy and priority of web server processes](img/B19121_11_17.jpg)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![图11.17 – 调度web服务器进程的策略和优先级](img/B19121_11_17.jpg)'
- en: Figure 11.17 – Scheduling the policy and priority of web server processes
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.17 – 调度web服务器进程的策略和优先级
- en: The scheduled priority of all processes is `0` and their scheduling policy is
    `SCHED_NORMAL` (or `SCHED_OTHER`). Let’s improve the process run.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 所有进程的调度优先级为`0`，其调度策略为`SCHED_NORMAL`（或`SCHED_OTHER`）。让我们优化进程运行。
- en: 'Stop the web server service and restart it by changing the scheduled policy
    to **SCHED_FIFO** and the scheduled priority to **38**. Use the **chrt** command
    and the process binary:'
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止web服务器服务，并通过将调度策略更改为**SCHED_FIFO**，调度优先级设置为**38**来重新启动它。使用**chrt**命令和进程二进制文件：
- en: '[PRE19]'
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![Figure 11.18 – Changing the scheduling policy and priority](img/B19121_11_18.jpg)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![图11.18 – 更改调度策略和优先级](img/B19121_11_18.jpg)'
- en: Figure 11.18 – Changing the scheduling policy and priority
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.18 – 更改调度策略和优先级
- en: Review the scheduling policy and priority of the web server processes.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 审查web服务器进程的调度策略和优先级。
- en: Note
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For more information about the **chrt** command’s options, refer to the manual
    pages by running the **man** **chrt** command.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多有关**chrt**命令选项的信息，请通过运行**man** **chrt**命令参考手册页。
- en: This change is temporary. When the process restarts, the scheduled policy and
    scheduled priority should apply again.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 该更改是临时的。当进程重新启动时，调度策略和调度优先级应该再次生效。
- en: To set a scheduled policy and priority to improve the performance of the process
    each time it starts, it must be added to the service’s `unit` file.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 要为每次启动时改进进程的性能设置调度策略和优先级，必须将其添加到服务的`unit`文件中。
- en: Let’s do it.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: 'Create a scheduled configuration file for the **httpd** service with the following
    content:'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为**httpd**服务创建一个调度配置文件，内容如下：
- en: '[PRE20]'
  id: totrans-228
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![Figure 11.19 – Creating the service configuration file](img/B19121_11_19.jpg)'
  id: totrans-229
  prefs: []
  type: TYPE_IMG
  zh: '![图11.19 – 创建服务配置文件](img/B19121_11_19.jpg)'
- en: Figure 11.19 – Creating the service configuration file
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.19 – 创建服务配置文件
- en: 'Unit configuration policies are set to change the priority of a service during
    the boot process. The directives in the `[Service]` section change the scheduling
    policy and priority:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 单元配置策略设置为在启动过程中更改服务的优先级。[Service]部分的指令更改调度策略和优先级：
- en: '**CPUSchedulingPriority** (**Nice**): Sets the default **nice** level for the
    service. The *nice* level is set as a number between **-20** (*highest priority*)
    and **19** (*lowest priority*).'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CPUSchedulingPriority**（**Nice**）：设置服务的默认**nice**级别。*nice*级别设定为**-20**（*最高优先级*）和**19**（*最低优先级*）之间的数字。'
- en: '**CPUSchedulingPolicy**: Sets the **CPU** scheduling policy for the service.
    The policy is set with the **other**, **batch**, **idle**, **fifo**, and **rr**
    values.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CPUSchedulingPolicy**：为服务设置**CPU**调度策略。策略的值可以是**other**、**batch**、**idle**、**fifo**和**rr**。'
- en: Note
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: At the time of writing, the **CPUSchedulingPolicy** variable does not support
    the **SCHED_DEADLINE** policy setting.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，**CPUSchedulingPolicy**变量不支持**SCHED_DEADLINE**策略设置。
- en: 'Reload the configuration of the services that were loaded in by `systemd` before
    restarting the web server service. Use the `systemctl` command:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 在重新启动web服务器服务之前，重新加载由`systemd`加载的服务配置。使用`systemctl`命令：
- en: '[PRE21]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Restart the service to apply the policy and priority changes.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动服务以应用策略和优先级更改。
- en: 'Use the **systemctl** command to restart the web server service:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**systemctl**命令重新启动web服务器服务：
- en: '[PRE22]'
  id: totrans-240
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![Figure 11.20 – Restarting the web server service](img/B19121_11_20.jpg)'
  id: totrans-241
  prefs: []
  type: TYPE_IMG
  zh: '![图11.20 – 重新启动web服务器服务](img/B19121_11_20.jpg)'
- en: Figure 11.20 – Restarting the web server service
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.20 – 重新启动web服务器服务
- en: Review the scheduling policy and priority of the web server processes.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 审查web服务器进程的调度策略和优先级。
- en: The change of priority and scheduled policy should apply when the service starts.
    This change improves the performance of the service.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 优先级和调度策略的更改应在服务启动时生效。此更改可提高服务的性能。
- en: What we’ve covered here applies to the case of processing. Now, let’s learn
    how to improve memory usage.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里讲解的内容适用于处理的情况。接下来，让我们学习如何优化内存使用。
- en: Improving memory usage
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提升内存使用效率
- en: 'The `ps` and `top` utilities differentiate between two statistics: `VIRT` (or
    `VSZ`), the total amount of virtual memory a process has requested, and `RES`
    (or `RSS`), the total amount of virtual memory a process is currently mapping
    into physical memory. `RSS` is the most critical value.'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: '`ps` 和 `top` 工具区分了两个统计值：`VIRT`（或 `VSZ`），即进程请求的虚拟内存总量；以及 `RES`（或 `RSS`），即进程当前映射到物理内存中的虚拟内存总量。`RSS`
    是最关键的值。'
- en: 'Using the preceding example, observe the virtual memory value mapped to the
    web server process with the `ps` command:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面的示例，使用 `ps` 命令查看映射到 Web 服务器进程的虚拟内存值：
- en: '[PRE23]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![Figure 11.21 – Reviewing the virtual memory mapped to the web server](img/B19121_11_21.jpg)'
  id: totrans-250
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.21 – 审查映射到 Web 服务器的虚拟内存](img/B19121_11_21.jpg)'
- en: Figure 11.21 – Reviewing the virtual memory mapped to the web server
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.21 – 审查映射到 Web 服务器的虚拟内存
- en: When a process requests memory, virtual memory addresses get reserved, but the
    kernel doesn’t allocate them to physical page frames. The kernel only allocates
    physical page frames when the process starts using `memory`.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 当进程请求内存时，虚拟内存地址会被保留，但内核并不会将其分配给物理页面框架。内核只有在进程开始使用 `memory` 时，才会将物理页面框架分配给它。
- en: In the same way that the priority and scheduled policy are changed for processing,
    the memory that an application consumes could change.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 与处理的优先级和调度策略改变类似，应用程序所消耗的内存也可能发生变化。
- en: 'Follow this step to adjust the `MemoryLimit` parameter of the `sshd` process:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 按照此步骤调整 `sshd` 进程的 `MemoryLimit` 参数：
- en: 'Using the **sysctl** command, adjust the **MemoryLimit** parameter:'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 **sysctl** 命令，调整 **MemoryLimit** 参数：
- en: '[PRE24]'
  id: totrans-256
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Note
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: A memory size can be specified in kilobytes, megabytes, gigabytes, or terabytes
    using the **K**, **M**, **G**, or **T** suffix, respectively.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 内存大小可以使用 **K**、**M**、**G** 或 **T** 后缀分别表示千字节、兆字节、吉字节或太字节。
- en: This command changes the service startup configuration file.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令修改服务的启动配置文件。
- en: 'Use the `sysctl` command to display the service unit file. Filter the `Memory`
    parameter:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `sysctl` 命令显示服务单元文件。过滤 `Memory` 参数：
- en: '![Figure 11.22 – Reviewing the MemoryLimit parameter](img/B19121_11_22.jpg)'
  id: totrans-261
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.22 – 审查 MemoryLimit 参数](img/B19121_11_22.jpg)'
- en: Figure 11.22 – Reviewing the MemoryLimit parameter
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.22 – 审查 MemoryLimit 参数
- en: In *Figure 11**.22*, we find that the kernel assigned the service 10 MB of memory
    and, by setting the `MemoryLimit` parameter, ensures that it only uses up to 1
    GB.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *图 11.22* 中，我们发现内核为该服务分配了 10 MB 内存，并通过设置 `MemoryLimit` 参数，确保它只使用最多 1 GB 的内存。
- en: Keeping control of the resources assigned to the services allows them to improve
    their performance and that of the operating system as well.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 控制分配给服务的资源使它们能够提高自身性能，并间接提升操作系统的性能。
- en: Managing unallocated memory is the task that requires the most intense monitoring
    in Linux. The kernel uses most of the unallocated memory as a cache to store data
    that gets read from or written to disk. The next time a process needs that data,
    the system fetches it from RAM instead of disk. The caching mechanism improves
    performance in general since storage is usually much slower than physical memory.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 中，管理未分配的内存是最需要密切监控的任务。内核将大部分未分配的内存作为缓存，用来存储从磁盘读取或写入的数据。下次当进程需要这些数据时，系统会从
    RAM 中获取，而不是从磁盘中读取。缓存机制通常能提高性能，因为存储通常比物理内存慢得多。
- en: Besides cache pages, the system uses anonymous pages. Anonymous pages have no
    data associated with them on disk. These anonymous pages represent the pages that
    processes allocate and use to store their work data.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 除了缓存页面外，系统还使用匿名页面。匿名页面在磁盘上没有关联的数据。这些匿名页面代表了进程分配并用来存储工作数据的页面。
- en: We have different tools and utilities that help us monitor both.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有不同的工具和实用程序帮助我们监控两者。
- en: Let’s have a brief overview of these tools and utilities.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要概述一下这些工具和实用程序。
- en: 'Inspect the memory usage with the `free` and `vmstat` commands:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `free` 和 `vmstat` 命令检查内存使用情况：
- en: '[PRE25]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![Figure 11.23 – Output of the free command](img/B19121_11_23.jpg)'
  id: totrans-271
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.23 – free 命令输出](img/B19121_11_23.jpg)'
- en: Figure 11.23 – Output of the free command
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.23 – free 命令输出
- en: In this system, there’s 8 GiB of RAM. The cache pages (the `buff/cache` column)
    consume 1 GiB.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在该系统中，有 8 GiB 的 RAM。缓存页面（`buff/cache` 列）消耗了 1 GiB。
- en: 'Let’s compare this with the output of the `vmstat` command:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将其与 `vmstat` 命令的输出进行比较：
- en: '[PRE26]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![Figure 11.24 – Output of the vmstat command](img/B19121_11_24.jpg)'
  id: totrans-276
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.24 – vmstat 命令的输出](img/B19121_11_24.jpg)'
- en: Figure 11.24 – Output of the vmstat command
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.24 – vmstat 命令的输出
- en: From the output of the `vmstat` command, note that the size of the page cache
    is the sum of the `buff` and `cache` columns. Buffers are part of the page cache.
    Buffers store blocks of data read *directly* from a block device, not from the
    filesystem.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `vmstat` 命令的输出中注意到，页面缓存的大小是 `buff` 和 `cache` 列的总和。缓冲区是页面缓存的一部分。缓冲区存储的是直接从块设备读取的数据块，而不是从文件系统读取的数据。
- en: Anonymous pages get moved to the swap area when the system is under memory pressure.
    The kernel chooses between retrieving anonymous pages or pages from the page cache.
    The availability of swap increases the amount of effective memory.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 匿名页在系统内存紧张时会被移到交换区。内核在恢复匿名页或页面缓存中的页面之间做出选择。交换空间的可用性增加了有效内存的数量。
- en: 'From the output of the `vmstat` command (*Figure 11**.24*), in the `swap` section,
    we can see the values of the anonymous pages:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 从 `vmstat` 命令的输出（*图 11.24*）中，在 `swap` 部分，我们可以看到匿名页的值：
- en: '**si**: Pages *swapped in* per second'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**si**: 每秒交换 *进出* 页数'
- en: '**so**: Pages *swapped out* per second'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**so**: 每秒交换 *移出* 页数'
- en: The *swap area* was a subject of discussion for many years. At the beginning
    of the computer era, several myths about how to calculate the swap area were created
    among system administrators from those days. They were not only taken as good
    practices but as a must-have during the creation of the swap area. This was because,
    in those days, physical storage was expensive.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '*交换区* 是多年来讨论的话题。计算交换区的方式在计算机时代初期，曾是当时系统管理员之间的一个神话。这些方法不仅被视为良好的实践，还是创建交换区时的必备项。这是因为，在那个时期，物理存储非常昂贵。'
- en: Nowadays, with new technologies, storage has become cheaper and more affordable.
    So, the creation of the swap area is considered under the use case criteria.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，随着新技术的发展，存储变得更加便宜和可承受。因此，创建交换区被视为根据使用案例标准来考虑。
- en: 'Red Hat proposes the following table as a basis for use cases for sizing when
    creating the swap area:'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: Red Hat 提出了以下表格，作为在创建交换区时进行大小调整的使用案例基础：
- en: '| **RAM** | **Swap Space** |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: '| **RAM** | **交换空间** |'
- en: '| 2 GiB or less | *Two times* the RAM |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: '| 2 GiB 或更少 | *两倍* 的 RAM |'
- en: '| Between 2 GiB and 8 GiB | Equal to RAM |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: '| 介于 2 GiB 和 8 GiB 之间 | 等于 RAM |'
- en: '| Between 8 GiB and 64 GiB | At least 4 GiB |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| 介于 8 GiB 和 64 GiB 之间 | 至少 4 GiB |'
- en: '| More than 64 GiB | At least 4 GiB |'
  id: totrans-290
  prefs: []
  type: TYPE_TB
  zh: '| 超过 64 GiB | 至少 4 GiB |'
- en: Table 11.4 – Basic guidance on swap area sizing
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.4 – 交换区大小的基本指导
- en: Keep in mind that when a process requests memory, the kernel only reserves virtual
    memory and doesn’t consume any RAM. Since the kernel only allocates physical page
    frames when the process starts, this allows applications to allocate more memory
    than what’s available in the system. This feature function is called memory overcommitment.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，当进程请求内存时，内核仅保留虚拟内存，并不消耗任何 RAM。由于内核只有在进程启动时才分配物理页面帧，这允许应用程序分配比系统实际可用内存更多的内存。这一功能被称为内存超分配。
- en: 'The memory overcommit policy of the system can be tuned using the `sysctl`
    variable, `vm.overcommit_memory`. You can set it to one of the following values:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 系统的内存超分配策略可以通过 `sysctl` 变量 `vm.overcommit_memory` 调整。你可以将其设置为以下值之一：
- en: '**0**: The kernel uses a *heuristic overcommit algorithm*. This is the configured
    system default.'
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**0**: 内核使用 *启发式超分配算法*。这是系统的默认配置。'
- en: '**1**: The kernel *always* overcommits memory. It always grants memory allocations,
    regardless of whether there is enough free memory.'
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1**: 内核 *始终* 超分配内存。无论是否有足够的空闲内存，它总是会授予内存分配。'
- en: '**2**: The kernel strictly controls memory overcommitment. It only commits
    an amount of memory equal to the *amount of swap space plus a percentage* (the
    default is 50%) of physical memory. This percentage gets defined with the **vm.overcommit_ratio**
    variable.'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**2**: 内核严格控制内存超分配。它仅分配等于 *交换空间加上物理内存百分比* 的内存（默认是 50%）。这个百分比由 **vm.overcommit_ratio**
    变量定义。'
- en: 'Use the `sysctl` command to verify both variables:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 `sysctl` 命令验证这两个变量：
- en: '[PRE27]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![Figure 11.25 – Reviewing the memory overcommit variables](img/B19121_11_25.jpg)'
  id: totrans-299
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.25 – 查看内存超分配变量](img/B19121_11_25.jpg)'
- en: Figure 11.25 – Reviewing the memory overcommit variables
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.25 – 查看内存超分配变量
- en: Monitoring these basic aspects of memory helps improve the performance of the
    system and the services it provides.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 监控这些内存的基本方面有助于提高系统及其提供的服务的性能。
- en: Let’s see how to do the same with storage.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何对存储进行相同的操作。
- en: Don’t ignore storage tuning
  id: totrans-303
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要忽视存储调优。
- en: Unlike other system resources, storage may optimize its performance as soon
    it gets sized. It can also be tuned when its usage gets analyzed.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他系统资源不同，存储可以在确定其大小后优化性能。当分析其使用情况时，也可以进行调优。
- en: For this, it is necessary to consider that the correct sizing depends on differentiating
    the measures used in the storage allocation process.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，必须考虑正确的大小调整取决于区分存储分配过程中使用的度量单位。
- en: A very common mistake is to size with the wrong storage measurements, causing
    storage space to go unused or wasted.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常常见的错误是使用错误的存储度量进行大小调整，导致存储空间未被充分利用或浪费。
- en: The key point to consider is how disk manufacturers overcome the challenge of
    creating a device that lives in two worlds. A disk is a raw physical device with
    no virtual or data structures before creating a filesystem. A raw disk becomes
    a block disk structure when it gets formatted as a filesystem. Filesystems are
    binary structures.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 关键点在于，硬盘制造商如何克服创建一个存在于两个世界中的设备的挑战。磁盘在创建文件系统之前是一个原始的物理设备，没有虚拟或数据结构。一个原始磁盘在格式化为文件系统后变成一个块设备结构。文件系统是二进制结构。
- en: This means that we must create a physical device, created under the physical
    rules of the real world, and turn it into a data structure in the digital world.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们必须创建一个物理设备，按照现实世界的物理规则创建，并将其转换为数字世界中的数据结构。
- en: The `-` for *kilo-*) and adding the letters `-` *bi* `-` for *binary*.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '`-` 为 *kilo-*，并添加字母`-` *bi* `-` 代表 *binary*。'
- en: 'The point of error occurs when the values get confused. Note the difference
    in the following comparison table:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 错误点发生在值被混淆时。请注意以下对比表中的差异：
- en: '| **SI** **decimal prefixes** |'
  id: totrans-311
  prefs: []
  type: TYPE_TB
  zh: '| **SI** **十进制前缀** |'
- en: '| **Prefix** | **Nomenclature** | **base** | **Bytes** |'
  id: totrans-312
  prefs: []
  type: TYPE_TB
  zh: '| **前缀** | **命名法** | **基数** | **字节数** |'
- en: '| kilo- | k | 103 | 1,000 |'
  id: totrans-313
  prefs: []
  type: TYPE_TB
  zh: '| kilo- | k | 103 | 1,000 |'
- en: '| mega- | M | 106 | 1,000,000 |'
  id: totrans-314
  prefs: []
  type: TYPE_TB
  zh: '| mega- | M | 106 | 1,000,000 |'
- en: '| giga- | G | 109 | 1,000,000,000 |'
  id: totrans-315
  prefs: []
  type: TYPE_TB
  zh: '| giga- | G | 109 | 1,000,000,000 |'
- en: '| tera- | T | 1012 | 1,000,000,000,000 |'
  id: totrans-316
  prefs: []
  type: TYPE_TB
  zh: '| tera- | T | 1012 | 1,000,000,000,000 |'
- en: '| **IEC** **binary prefixes** |'
  id: totrans-317
  prefs: []
  type: TYPE_TB
  zh: '| **IEC** **二进制前缀** |'
- en: '| kibi- | Ki | 210 | 1,024 |'
  id: totrans-318
  prefs: []
  type: TYPE_TB
  zh: '| kibi- | Ki | 210 | 1,024 |'
- en: '| mebi- | Mi | 220 | 1,048,576 |'
  id: totrans-319
  prefs: []
  type: TYPE_TB
  zh: '| mebi- | Mi | 220 | 1,048,576 |'
- en: '| gibi- | Gi | 230 | 1,073,741,824 |'
  id: totrans-320
  prefs: []
  type: TYPE_TB
  zh: '| gibi- | Gi | 230 | 1,073,741,824 |'
- en: '| tebi- | Ti | 240 | 1,099,511,627,776 |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| tebi- | Ti | 240 | 1,099,511,627,776 |'
- en: Table 11.5 – Prefixes comparison
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 表 11.5 – 前缀比较
- en: So, how many bytes are on a 1 TB disk?
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，1 TB 磁盘上有多少字节？
- en: 1 TB is 1 x 1,012 bytes = 1,000,000,000,000.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 1 TB 等于 1 x 1,012 字节 = 1,000,000,000,000。
- en: As mentioned previously, to create a filesystem on disk, binary structures use
    a block size (by default) of 4,096 (4 KiB). Using this nomenclature, a terabyte
    means 1,012 bytes.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，要在磁盘上创建文件系统，二进制结构使用默认的块大小为 4,096（4 KiB）。使用这种命名法，1 TB 等于 1,012 字节。
- en: Thus, some operating system tools could report in TB, but actually, they measure
    in binary tebibytes (TiB).
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一些操作系统工具可能报告为 TB，但实际上它们是以二进制的 tebibytes (TiB) 为单位进行度量的。
- en: A tool that reports disk size in TB, but measures TB as tebibytes, would report
    that a 1 TB disk is only 0.91 TB in size (equal to 0.91 TiB), a difference of
    almost 10%.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 一个报告磁盘大小为 TB 的工具，但将 TB 作为 tebibytes 来度量，会报告一个 1 TB 的磁盘只有 0.91 TB 大（即 0.91 TiB），差异接近
    10%。
- en: Thus, it is very important to clearly state which units get used to analyze
    the sizing in a system report – otherwise, significant errors could occur in the
    analysis.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，明确说明在系统报告中使用哪些单位来分析大小非常重要，否则分析中可能会发生重大错误。
- en: Now, let’s learn how to analyze storage space usage.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们学习如何分析存储空间使用情况。
- en: Improving storage space usage
  id: totrans-330
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改善存储空间使用
- en: A big issue in analyzing storage space usage involves identifying it correctly.
    A stable identifier that maps to a filesystem is its **UUID**. This is a hexadecimal
    number that acts as a **Universal** **Unique Identifier**.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 分析存储空间使用时的一个大问题是如何正确识别它。映射到文件系统的稳定标识符是其 **UUID**。这是一个十六进制数字，作为 **通用唯一标识符**。
- en: The UUID is part of the filesystem and remains the same so long as the filesystem
    is not regenerated again.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: UUID 是文件系统的一部分，只要文件系统没有重新生成，它就会保持不变。
- en: The utility for listing block devices is the `lsblk` command.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 列出块设备的工具是 `lsblk` 命令。
- en: 'The `lsblk` command with the `-fp` option displays the full path to the device,
    as well as the UUIDs and mount points, plus the filesystem type of the physical
    disk partition:'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 带有`-fp`选项的`lsblk`命令显示设备的完整路径，以及UUID和挂载点，还显示物理磁盘分区的文件系统类型：
- en: '[PRE28]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![Figure 11.26 – Output of the lsblk command](img/B19121_11_26.jpg)'
  id: totrans-336
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.26 – lsblk命令的输出](img/B19121_11_26.jpg)'
- en: Figure 11.26 – Output of the lsblk command
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.26 – lsblk命令的输出
- en: Note
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If the filesystem is not mounted, the mount point appears blank.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 如果文件系统未挂载，则挂载点会显示为空白。
- en: 'The most used tool for obtaining information about total filesystem usage is
    the `df` command. With the `-h` option, the output is displayed in a human-readable
    format:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 获取文件系统总使用情况信息时最常用的工具是`df`命令。使用`-h`选项时，输出会以易于阅读的格式显示：
- en: '[PRE29]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![Figure 11.27 – Output of the df -h command](img/B19121_11_27.jpg)'
  id: totrans-342
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.27 – df -h命令的输出](img/B19121_11_27.jpg)'
- en: Figure 11.27 – Output of the df -h command
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.27 – df -h命令的输出
- en: By installing the `sysstat` package, as mentioned previously, we receive tools
    for monitoring system performance. In the case of storage, the `iostat` command
    displays I/O statistics per disk, as well as workload, usage, and saturation metrics.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 通过安装之前提到的`sysstat`包，我们可以获得用于监控系统性能的工具。在存储方面，`iostat`命令显示每个磁盘的I/O统计信息，以及工作负载、使用率和饱和度指标。
- en: 'Running the `iostat` command without arguments returns the CPU usage and disk
    I/O metrics:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 运行没有参数的`iostat`命令将返回CPU使用情况和磁盘I/O指标：
- en: '[PRE30]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![Figure 11.28 – Output of the iostat command](img/B19121_11_28.jpg)'
  id: totrans-347
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.28 – iostat命令的输出](img/B19121_11_28.jpg)'
- en: Figure 11.28 – Output of the iostat command
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.28 – iostat命令的输出
- en: 'By combining the different options of the `iostat` command, we can generate
    very useful statistics for usage analysis. Here’s an example:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 通过结合使用`iostat`命令的不同选项，我们可以生成非常有用的使用统计信息。以下是一个示例：
- en: '[PRE31]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![Figure 11.29 – Output of the iostat -dyz command](img/B19121_11_29.jpg)'
  id: totrans-351
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.29 – iostat -dyz命令的输出](img/B19121_11_29.jpg)'
- en: Figure 11.29 – Output of the iostat -dyz command
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.29 – iostat -dyz命令的输出
- en: 'Let’s look at the options that were used:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看使用了哪些选项：
- en: '**-d** displays the disk I/O usage report'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-d**显示磁盘I/O使用报告'
- en: '**-y** skips the first report with statistics since when the system started'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-y**跳过自系统启动以来的第一次统计报告'
- en: '**-z** skips inactive devices'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-z**跳过非活动设备'
- en: The interval is a second
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 间隔是1秒
- en: The count is an output of three reports every interval
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计数是每个间隔输出的三次报告
- en: Note
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For more information about the **iostat** command options, refer to the manual
    pages. You can find them by running the **man** **iostat** command.
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 关于**iostat**命令选项的更多信息，请参阅手册页。您可以通过运行**man** **iostat**命令来查找它们。
- en: As mentioned in the previous section, having swap space increases the effective
    amount of memory. Let’s learn how to create a swap space in the system with effective
    sizing.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一节所述，拥有交换空间可以增加有效内存量。让我们学习如何在系统中创建有效大小的交换空间。
- en: We’ll use the `/dev/sdc` disk we used in [*Chapter 4*](B19121_04.xhtml#_idTextAnchor121)
    to create the filesystem with Stratis. Please follow the instructions in the aforementioned
    chapter to remove the pool and wipe the filesystem from the disk.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用在[*第4章*](B19121_04.xhtml#_idTextAnchor121)中使用的`/dev/sdc`磁盘来使用Stratis创建文件系统。请按照上述章节中的说明，删除池并清除磁盘上的文件系统。
- en: 'Then, follow these steps:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，按照以下步骤操作：
- en: 'Use the **wipefs** command:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**wipefs**命令：
- en: '[PRE32]'
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: Note
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: This command destroys the filesystem information of the device. Please be very
    careful and verify that the device you wish to wipe is the correct one.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令会销毁设备的文件系统信息。请务必小心，并验证您希望擦除的设备是否正确。
- en: Now, let’s create the partition for the swap area.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们为交换区创建分区。
- en: 'Inspect the **/dev/sdc** disk to confirm that no partitions have been created.
    Use the **parted** command:'
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查**/dev/sdc**磁盘，以确认没有创建任何分区。使用**parted**命令：
- en: '[PRE33]'
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '![Figure 11.30 – Listing the /dev/sdc disk partitions](img/B19121_11_30.jpg)'
  id: totrans-371
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.30 – 列出/dev/sdc磁盘分区](img/B19121_11_30.jpg)'
- en: Figure 11.30 – Listing the /dev/sdc disk partitions
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.30 – 列出/dev/sdc磁盘分区
- en: Create a 512 MB partition.
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个512 MB的分区。
- en: 'Use the **parted** command:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**parted**命令：
- en: '[PRE34]'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '![Figure 11.31 – Creating a swap partition](img/B19121_11_31.jpg)'
  id: totrans-376
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.31 – 创建交换分区](img/B19121_11_31.jpg)'
- en: Figure 11.31 – Creating a swap partition
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.31 – 创建交换分区
- en: Using the `parted` command without a subcommand opens an interactive `parted`
    session.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 使用没有子命令的`parted`命令将打开一个交互式的`parted`会话。
- en: 'Inside the interactive session, do the following:'
  id: totrans-379
  prefs: []
  type: TYPE_NORMAL
  zh: 在交互式会话中，执行以下操作：
- en: Run the **mkpart** subcommand to create the partition.
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行**mkpart**子命令来创建分区。
- en: Set **swap1** as the partition’s name.
  id: totrans-381
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将分区名称设置为**swap1**。
- en: Set the filesystem type to **linux-swap**.
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件系统类型设置为**linux-swap**。
- en: The partition should start at 2,049 KB and end at 513 MB so that the size is
    512 MB.
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 分区应该从 2,049 KB 开始，结束于 513 MB，这样大小为 512 MB。
- en: Note
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: It is important to start a partition in the first block of the underlying storage.
    Starting at sector **2048** is the default value for modern Linux and is stored
    on all storage types. This is known as the initial offset or partition alignment.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是，分区要从底层存储的第一个块开始。以扇区**2048**开始是现代Linux的默认值，并且在所有存储类型上都存储此值。这被称为初始偏移或分区对齐。
- en: Verify that the partition was created by running the `print` subcommand.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行`print`子命令来验证分区是否已创建。
- en: Type `quit` to exit the interactive `parted` session.
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 输入`quit`以退出交互式`parted`会话。
- en: Note
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The **parted** command can display output on a *binary basis* as well.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: '**parted**命令也可以以*二进制方式*显示输出。'
- en: 'Run the `# parted /dev/sdc unit MiB` `print` command:'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: 运行`# parted /dev/sdc unit MiB` `print`命令：
- en: '![Figure 11.32 – Output of the parted command displayed on a binary basis](img/B19121_11_32.jpg)'
  id: totrans-391
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.32 – 在二进制基础上显示的`parted`命令输出](img/B19121_11_32.jpg)'
- en: Figure 11.32 – Output of the parted command displayed on a binary basis
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.32 – 在二进制基础上显示的`parted`命令输出
- en: Ask the system to detect the new partition and create the associated device
    file in the `/``dev` directory.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 请求系统检测新分区并在`/dev`目录中创建相关的设备文件。
- en: 'Run the **udevadm settle** command to observe the **udev** event queue and
    update it:'
  id: totrans-394
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行**udevadm settle**命令以观察**udev**事件队列并更新它：
- en: '[PRE35]'
  id: totrans-395
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Now, format the partition.
  id: totrans-396
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 现在，格式化分区。
- en: 'Use the **mkswap** command:'
  id: totrans-397
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**mkswap**命令：
- en: '[PRE36]'
  id: totrans-398
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '![Figure 11.33 – Formatting the partition](img/B19121_11_33.jpg)'
  id: totrans-399
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.33 – 格式化分区](img/B19121_11_33.jpg)'
- en: Figure 11.33 – Formatting the partition
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.33 – 格式化分区
- en: Review the swap area of the system.
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 查看系统的交换区域。
- en: 'Use the **free** command:'
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**free**命令：
- en: '[PRE37]'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '![Figure 11.34 – Reviewing swap memory](img/B19121_11_34.jpg)'
  id: totrans-404
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.34 – 查看交换内存](img/B19121_11_34.jpg)'
- en: Figure 11.34 – Reviewing swap memory
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.34 – 查看交换内存
- en: Activate the swap partition in the system.
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: 在系统中激活交换分区。
- en: 'Use the **swapon** command:'
  id: totrans-407
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**swapon**命令：
- en: '[PRE38]'
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '![Figure 11.35 – Activating the swap partition](img/B19121_11_35.jpg)'
  id: totrans-409
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.35 – 激活交换分区](img/B19121_11_35.jpg)'
- en: Figure 11.35 – Activating the swap partition
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.35 – 激活交换分区
- en: Now, verify the swap area of the system.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，验证系统的交换区域。
- en: The new swap area partition is active and available to the system. To make it
    persistently active, we need to create an entry in the `/``etc/fstab` file.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 新的交换区域分区已经激活并可供系统使用。为了使其持续激活，我们需要在`/etc/fstab`文件中创建一个条目。
- en: 'Identify the UUID of the swap partition and create an entry in the **/etc/fstab**
    file. Use the **lsblk** command to do so:'
  id: totrans-413
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 识别交换分区的UUID并在**/etc/fstab**文件中创建条目。使用**lsblk**命令执行此操作：
- en: '[PRE39]'
  id: totrans-414
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '![Figure 11.36 – Identifying the UUID of the swap partition](img/B19121_11_36.jpg)'
  id: totrans-415
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.36 – 识别交换分区的UUID](img/B19121_11_36.jpg)'
- en: Figure 11.36 – Identifying the UUID of the swap partition
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.36 – 识别交换分区的UUID
- en: 'Add the following line to the `/``etc/fstab` file:'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下行添加到`/etc/fstab`文件中：
- en: '[PRE40]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '![Figure 11.37 – Adding the swap partition to the /etc/fstab file](img/B19121_11_37.jpg)'
  id: totrans-419
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.37 – 将交换分区添加到`/etc/fstab`文件](img/B19121_11_37.jpg)'
- en: Figure 11.37 – Adding the swap partition to the /etc/fstab file
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.37 – 将交换分区添加到`/etc/fstab`文件
- en: In this way, the swap partition remains persistently available to the system.
    With this, the system’s performance improves since physical memory becomes available.
    At this stage, the storage space is optimized for the swap space.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，交换分区可以持续可用。这样，系统性能得以提高，因为物理内存变得可用。在此阶段，存储空间已优化为交换空间。
- en: Finally, let’s learn how to improve the performance of the network connection
    to the system.
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们来学习如何改善网络连接到系统的性能。
- en: Boosting performance with network tuning
  id: totrans-423
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过网络调优提升性能
- en: The network represents one of the most complex and key elements involved in
    tuning the system. Being an externally self-organizing element, some network elements
    could affect performance. To identify and adjust them, it is necessary to know
    the flow that a packet follows both when transmitted and received by a system,
    as well as the tuning options available for them.
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: 网络是调整系统时涉及的最复杂和关键的元素之一。作为外部自组织的元素，一些网络元素可能会影响性能。为了识别并调整它们，需要了解数据包在系统发送和接收时的流向，以及可用于它们的调优选项。
- en: 'The transmission and reception flow of the packet is roughly as follows:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包的传输和接收流程大致如下：
- en: '**Transmission**:'
  id: totrans-426
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传输**：'
- en: Data gets written to a socket (an object such as a file) and sent to the transmit
    buffer.
  id: totrans-427
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据会被写入套接字（如文件等对象）并发送到传输缓冲区。
- en: The kernel encapsulates the data in a **protocol data** **unit** (**PDU**).
  id: totrans-428
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 内核将数据封装为 **协议数据单元**（**PDU**）。
- en: The PDUs go to the device’s transmit queue.
  id: totrans-429
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: PDU 会进入设备的传输队列。
- en: The network device driver copies the PDU from the transmit queue header to the
    NIC.
  id: totrans-430
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络设备驱动程序将 PDU 从传输队列头部复制到 NIC。
- en: The NIC sends the data and triggers an interrupt when transmitted.
  id: totrans-431
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: NIC 在传输时发送数据并触发中断。
- en: '**Reception**:'
  id: totrans-432
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**接收**：'
- en: The NIC receives a frame and uses DMA to copy the frame to the receive buffer.
  id: totrans-433
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: NIC 接收一个帧，并使用 DMA 将该帧复制到接收缓冲区。
- en: The NIC triggers a hard interrupt.
  id: totrans-434
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: NIC 触发一个硬中断。
- en: The kernel handles the hard interrupt and schedules a soft interrupt to handle
    the packet.
  id: totrans-435
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 内核处理硬中断，并调度软中断来处理数据包。
- en: The soft interrupt handles and moves the packet to the IP layer.
  id: totrans-436
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 软中断处理并将数据包移至 IP 层。
- en: 'If the packet is intended for local delivery, the PDU is de-encapsulated and
    placed in a socket receive buffer:'
  id: totrans-437
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果数据包是为了本地传输，则 PDU 会被解封装并放入套接字接收缓冲区：
- en: If a process is waiting in this socket, it processes the data in the receive
    buffer
  id: totrans-438
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果进程在此套接字中等待，它会处理接收缓冲区中的数据。
- en: The tunables for the case of improving network flow consist of buffer limits.
    The kernel adjusts the size of these buffers based on the current network use
    but within the limits specified by the kernel tunables. The default values of
    these variables get calculated at boot time based on the amount of available memory.
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 针对提高网络流量的调优参数包括缓冲区限制。内核会根据当前的网络使用情况调整这些缓冲区的大小，但会在内核调优参数规定的范围内。变量的默认值会在启动时根据可用内存的数量进行计算。
- en: 'The kernel tunables, which could change when running the `sysctl` command,
    are as follows:'
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: '`sysctl` 命令执行时可能会改变的内核调优参数如下：'
- en: '**net.ipv4.tcp_mem**: This specifies the TCP system memory limits. It considers
    three fields: **min**, **max**, and **pressure** (when the amount of memory used
    in TCP/UDP exceeds this number, pages get moderated until they drop and return
    to the **min** value). These values represent the number of pages, not bytes.'
  id: totrans-441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**net.ipv4.tcp_mem**：此项指定 TCP 系统内存限制。它包含三个字段：**min**，**max** 和 **pressure**（当
    TCP/UDP 中使用的内存量超过此值时，页面会被调节，直到它们降回并恢复到 **min** 值）。这些值表示页面的数量，而非字节。'
- en: '**Net.ipv4.udp_mem**: This specifies the UDP system memory limits. It considers
    three fields: **min**, **max**, and **pressure**. These values represent the number
    of pages, not bytes.'
  id: totrans-442
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Net.ipv4.udp_mem**：此项指定 UDP 系统内存限制。它包含三个字段：**min**，**max** 和 **pressure**。这些值表示页面的数量，而非字节。'
- en: '**net.core.rmem_max**: The maximum network core socket receive/send (**read/write**)
    buffers. Values are in bytes.'
  id: totrans-443
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**net.core.rmem_max**：最大网络核心套接字接收/发送（**读/写**）缓冲区。值以字节为单位。'
- en: '**net.core.wmem_max**: The maximum network core socket receive/send (**read/write**)
    buffers. Values are in bytes.'
  id: totrans-444
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**net.core.wmem_max**：最大网络核心套接字接收/发送（**读/写**）缓冲区。值以字节为单位。'
- en: '**net.ipv4.tcp_rmem**: The maximum TCP socket receive/send (**read/write**)
    buffers. It considers three fields: **min**, **default**, and **max**. Values
    are in bytes.'
  id: totrans-445
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**net.ipv4.tcp_rmem**：最大 TCP 套接字接收/发送（**读/写**）缓冲区。它包含三个字段：**min**，**default**
    和 **max**。值以字节为单位。'
- en: '**net.ipv4.tcp_wmem**: The maximum TCP socket receive/send (**read/write**)
    buffers. It considers three fields: **min**, **default**, and **max**. Values
    are in bytes.'
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**net.ipv4.tcp_wmem**：最大 TCP 套接字接收/发送（**读/写**）缓冲区。它包含三个字段：**min**，**default**
    和 **max**。值以字节为单位。'
- en: Note
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The change of these values should take place after a behavioral analysis.
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 这些值的变化应在进行行为分析后进行。
- en: In general, tunable values should be changed after the system’s behavior has
    been analyzed.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在分析完系统行为后，才应更改调优值。
- en: For this purpose, several tools and utilities exist, which we have used throughout
    this chapter.
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: 为此目的，存在一些工具和实用程序，我们在本章中已使用它们。
- en: Now, let’s look at a tool that complements the use of `sysstat` and provides
    a graphical display of the collected metrics.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看一个与 `sysstat` 配合使用并提供收集指标的图形显示的工具。
- en: Analyzing metrics
  id: totrans-452
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析指标
- en: 'Besides installing the `sysstat` package to monitor tools, it can also be run
    as a service:'
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 除了安装 `sysstat` 包以监控工具外，它也可以作为服务运行：
- en: '[PRE41]'
  id: totrans-454
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '![Figure 11.38 – Reviewing the status of the sysstat service](img/B19121_11_38.jpg)'
  id: totrans-455
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.38 – 查看 sysstat 服务的状态](img/B19121_11_38.jpg)'
- en: Figure 11.38 – Reviewing the status of the sysstat service
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.38 – 查看 sysstat 服务的状态
- en: 'The `sysstat` service collects, reports, or saves information about system
    activity. It stores operating system counters in the `/var/log/sa/sadd` file.
    From the data that’s been collected, a lot of information about the system can
    be received:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: '`sysstat` 服务收集、报告或保存有关系统活动的信息。它将操作系统计数器存储在 `/var/log/sa/sadd` 文件中。从收集到的数据中，可以获得大量关于系统的信息：'
- en: CPU usage
  id: totrans-458
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU 使用情况
- en: Memory paging and usage
  id: totrans-459
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存分页和使用情况
- en: Network I/O and transfer statistics
  id: totrans-460
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络 I/O 和传输统计
- en: Process creation activity
  id: totrans-461
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进程创建活动
- en: The activity of all block devices
  id: totrans-462
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有块设备的活动
- en: Interrupts per second
  id: totrans-463
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每秒中断数
- en: 'We can get the collected data with the `sar` command:'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 `sar` 命令获取收集的数据：
- en: 'Use the **sar** command with the **-u** option to get the CPU usage report:'
  id: totrans-465
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **sar** 命令和 **-u** 选项来获取 CPU 使用报告：
- en: '[PRE42]'
  id: totrans-466
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '![Figure 11.39 – Output of the sar –u command](img/B19121_11_39.jpg)'
  id: totrans-467
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.39 – sar –u 命令的输出](img/B19121_11_39.jpg)'
- en: Figure 11.39 – Output of the sar –u command
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.39 – sar –u 命令的输出
- en: This command is also used to read the history files where the daily data is
    recorded.
  id: totrans-469
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令也用于读取记录日常数据的历史文件。
- en: 'Use the **sar** command to read one of the log files from **/var/log/sa**:'
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 **sar** 命令读取 **/var/log/sa** 中的日志文件之一：
- en: '[PRE43]'
  id: totrans-471
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '![Figure 11.40 – The log file’s content](img/B19121_11_40.jpg)'
  id: totrans-472
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.40 – 日志文件的内容](img/B19121_11_40.jpg)'
- en: Figure 11.40 – The log file’s content
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.40 – 日志文件的内容
- en: Note
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: For more information about **sar** command options, refer to the manual pages
    by running the **man** **sar** command.
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解 **sar** 命令选项的更多信息，请运行 **man** **sar** 命令查看手册页。
- en: From these files, it is possible to generate graphs and export them as images
    or even a PDF report. The most commonly used tool for this is `ksar`.
  id: totrans-476
  prefs: []
  type: TYPE_NORMAL
  zh: 从这些文件中，可以生成图表并将其导出为图片或甚至 PDF 报告。最常用的工具是 `ksar`。
- en: 'To get `ksar`, download it from their website at [https://sourceforge.net/projects/ksar/](https://sourceforge.net/projects/ksar/):'
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 要获得 `ksar`，请从他们的网站下载：[https://sourceforge.net/projects/ksar/](https://sourceforge.net/projects/ksar/)：
- en: '![Figure 11.41 – The ksar website](img/B19121_11_41.jpg)'
  id: totrans-478
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.41 – ksar 网站](img/B19121_11_41.jpg)'
- en: Figure 11.41 – The ksar website
  id: totrans-479
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.41 – ksar 网站
- en: Note
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'A more updated version of the **ksar** tool can be downloaded from its GitHub
    repository: [https://github.com/vlsi/ksar/releases](https://github.com/vlsi/ksar/releases).'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: 可以从其 GitHub 仓库下载 **ksar** 工具的更新版本：[https://github.com/vlsi/ksar/releases](https://github.com/vlsi/ksar/releases)。
- en: 'The `ksar` tool comes as a `jar` file, so it requires the `java-17-openjdk`
    package to be installed:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: '`ksar` 工具作为 `jar` 文件提供，因此需要安装 `java-17-openjdk` 包：'
- en: '[PRE44]'
  id: totrans-483
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: LC_ALL=C sar -A > /tmp/sar.data.txt
  id: totrans-484
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: LC_ALL=C sar -A > /tmp/sar.data.txt
- en: '[PRE45]'
  id: totrans-485
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: $ java -jar kSar.jar
  id: totrans-486
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ java -jar kSar.jar
- en: '[PRE46]'
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
