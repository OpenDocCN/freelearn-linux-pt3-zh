- en: '3'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '3'
- en: Using Toaster to Bake an Image
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Toaster 构建镜像
- en: Now that we know how to build an image using BitBake within Poky, we will learn
    how to do the same using Toaster. We are going to focus on the most straightforward
    usage of Toaster and also cover what else it can do so that you know about its
    capabilities.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经知道如何在 Poky 中使用 BitBake 构建镜像，接下来我们将学习如何使用 Toaster 做同样的事情。我们将重点介绍 Toaster
    的最简单使用方式，并且还会覆盖它的其他功能，以便你了解它的能力。
- en: What is Toaster?
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Toaster？
- en: '**Toaster** is a web interface to configure and run builds. It communicates
    with the BitBake and Poky build system to manage and gather information about
    the builds, packages, and images.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**Toaster** 是一个配置和运行构建的网页界面。它与 BitBake 和 Poky 构建系统进行通信，管理并收集关于构建、软件包和镜像的信息。'
- en: 'There are two ways to use Toaster:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Toaster 有两种方式：
- en: '**Locally**: We can run Toaster as a local instance, suitable for single-user
    development, providing a graphical interface to the BitBake command lines and
    some build information.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地模式**：我们可以将 Toaster 作为本地实例运行，适合单用户开发，提供 BitBake 命令行的图形界面和一些构建信息。'
- en: '**Hosted**: This is suitable for multiple users. The Toaster servers build
    and store the users’ artifacts. Its components can be spread across several machines
    when using a hosted instance.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**托管模式**：适用于多个用户。Toaster 服务器构建并存储用户的产物。在使用托管实例时，其组件可以分布在多台机器上。'
- en: In this chapter, we will use Toaster as a local instance. However, if you want
    to use it as a hosted instance, please visit the following website for instructions
    – *Toaster* *Manual* ([https://docs.yoctoproject.org/4.0.4/toaster-manual/index.html](https://docs.yoctoproject.org/4.0.4/toaster-manual/index.html)).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用 Toaster 作为本地实例。然而，如果你希望将其作为托管实例使用，请访问以下网站获取说明——*Toaster* *手册*（[https://docs.yoctoproject.org/4.0.4/toaster-manual/index.html](https://docs.yoctoproject.org/4.0.4/toaster-manual/index.html)）。
- en: Note
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Bear in mind that every hosted service requires attention to its security. Think
    about this before using a hosted instance.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，所有托管服务都需要注意其安全性。在使用托管实例之前，请考虑这一点。
- en: Installing Toaster
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Toaster
- en: 'Toaster uses the Python Django framework. The easiest way to install it is
    by using Python’s `pip` utility. We already installed this when configuring our
    host machine in [*Chapter 2*](B19361_02.xhtml#_idTextAnchor031), *Baking Our Poky-Based
    System*. We can now install the rest of Toaster’s requirements inside the Poky
    source directory by running the following command:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: Toaster 使用 Python Django 框架。安装它最简单的方式是使用 Python 的 `pip` 工具。在配置我们的主机机器时，我们已经安装了这个工具，具体见
    [*第 2 章*](B19361_02.xhtml#_idTextAnchor031) 中的 *构建我们的基于 Poky 的系统*。现在，我们可以通过运行以下命令在
    Poky 源目录中安装 Toaster 的其余需求：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Starting Toaster
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动 Toaster
- en: 'Once we have installed Toaster’s requirements, we are ready to start its server.
    To do this, we should go to Poky’s directory and run the following commands:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们安装了 Toaster 的需求，我们就可以启动它的服务器。为此，我们应该进入 Poky 的目录并运行以下命令：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The commands take some time to finish. When everything is set up, the web server
    is started. The result is shown in the following figure.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令需要一些时间来完成。当一切设置好后，Web 服务器会启动，结果如图所示。
- en: '![Figure 3.1 – The result of the source toaster startup](img/Figure_3.01_B19361.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.1 – 源 Toaster 启动结果](img/Figure_3.01_B19361.jpg)'
- en: Figure 3.1 – The result of the source toaster startup
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1 – 源 Toaster 启动结果
- en: 'To access the Toaster web interface, open your favorite browser and enter the
    following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问 Toaster 网页界面，打开你喜欢的浏览器并输入以下网址：
- en: '`http://127.0.0.1:8000`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`http://127.0.0.1:8000`'
- en: Note
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: By default, Toaster starts on port `8000`. The `webport` parameter lets you
    use a different port – for example, `$ source toaster` `start webport=8400`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Toaster 在端口 `8000` 启动。`webport` 参数允许你使用不同的端口——例如，`$ source toaster` `start
    webport=8400`。
- en: 'Next, we can see the starting page of Toaster:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以看到 Toaster 的启动页面：
- en: "![Figure 3.2 – The Toaster welcome p\uFEFF\uFEFFage](img/Figure_3.02_B19361.jpg)"
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.2 – Toaster 欢迎页面](img/Figure_3.02_B19361.jpg)'
- en: Figure 3.2 – The Toaster welcome page
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2 – Toaster 欢迎页面
- en: Building an image for QEMU
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 QEMU 构建镜像
- en: Following the same steps used in [*Chapter 2*](B19361_02.xhtml#_idTextAnchor031),
    *Baking Our Poky-Based System*, we will build an image of the QEMU x86-64 emulation.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 按照 [*第 2 章*](B19361_02.xhtml#_idTextAnchor031) 中使用的相同步骤，*构建我们的基于 Poky 的系统*，我们将构建
    QEMU x86-64 模拟的镜像。
- en: 'Since we currently don’t have a project, a collection of configurations and
    builds, we need to start one. Create a project name and choose the target release,
    as shown in the following screenshot:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们当前没有项目、配置集合和构建，我们需要启动一个新项目。创建项目名称并选择目标版本，如下图所示：
- en: '![Figure 3.3 – Creating a new project with Toaster](img/Figure_3.03_B19361.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.3 – 使用 Toaster 创建新项目](img/Figure_3.03_B19361.jpg)'
- en: Figure 3.3 – Creating a new project with Toaster
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3 – 使用 Toaster 创建新项目
- en: 'After creating **my-first-project**, we can see the main project screen, as
    shown in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 **my-first-project** 后，我们可以看到主项目界面，如下图所示：
- en: '![Figure 3.4 – The first page of the project](img/Figure_3.04_B19361.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.4 – 项目的首页](img/Figure_3.04_B19361.jpg)'
- en: Figure 3.4 – The first page of the project
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4 – 项目的首页
- en: 'While on the `qemux86-64`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `qemux86-64` 上：
- en: '![Figure 3.5 – How to choose the target machine](img/Figure_3.05_B19361.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.5 – 如何选择目标机器](img/Figure_3.05_B19361.jpg)'
- en: Figure 3.5 – How to choose the target machine
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 – 如何选择目标机器
- en: 'After that, click the `core-image-full-cmdline`:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，点击 `core-image-full-cmdline`：
- en: '![Figure 3.6 – How to find an image using Search](img/Figure_3.06_B19361.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.6 – 如何使用搜索找到镜像](img/Figure_3.06_B19361.jpg)'
- en: Figure 3.6 – How to find an image using Search
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6 – 如何使用搜索找到镜像
- en: 'The following screenshot shows the build process:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了构建过程：
- en: '![Figure 3.7 – Toaster during the image build](img/Figure_3.07_B19361.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.7 – Toaster 在镜像构建中的表现](img/Figure_3.07_B19361.jpg)'
- en: Figure 3.7 – Toaster during the image build
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7 – Toaster 在镜像构建中的表现
- en: 'The build process takes some time, but after that, we can see the built image
    along with some statistics, as shown in the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 构建过程需要一些时间，但之后我们可以看到构建的镜像以及一些统计信息，如下图所示：
- en: '![Figure 3.8 – The image build artifact report](img/Figure_3.08_B19361.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.8 – 镜像构建工件报告](img/Figure_3.08_B19361.jpg)'
- en: Figure 3.8 – The image build artifact report
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.8 – 镜像构建工件报告
- en: 'We can also verify the generated set of files, as shown in the following screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以验证生成的文件集，如下图所示：
- en: '![Figure 3.9 – The core-image-full-cmdline directory structure as shown in
    Toaster](img/Figure_3.09_B19361.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.9 – Toaster 中显示的 core-image-full-cmdline 目录结构](img/Figure_3.09_B19361.jpg)'
- en: Figure 3.9 – The core-image-full-cmdline directory structure as shown in Toaster
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.9 – Toaster 中显示的 core-image-full-cmdline 目录结构
- en: 'Toaster is a powerful tool. You can use it on a local development machine or
    a shared server to get a graphic representation of the build. You can return to
    the terminal where you started Toaster to run `runqemu qemux86-64 core-image-full-cmdline`.
    You will see what is shown in the following screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Toaster 是一款强大的工具。你可以在本地开发机器或共享服务器上使用它，以图形方式展示构建过程。你可以返回到启动 Toaster 的终端运行 `runqemu
    qemux86-64 core-image-full-cmdline`，你将看到如下图所示的内容：
- en: '![Figure 3.10 – The QEMU screen during the Linux kernel boot](img/Figure_3.10_B19361.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.10 – Linux 内核启动时的 QEMU 屏幕](img/Figure_3.10_B19361.jpg)'
- en: Figure 3.10 – The QEMU screen during the Linux kernel boot
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.10 – Linux 内核启动时的 QEMU 屏幕
- en: After finishing the Linux booting, you will see a login prompt, as shown in
    *Figure 3**.11*.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 完成 Linux 启动后，你将看到登录提示，如*图 3.11*所示。
- en: '![Figure 3.11 – The QEMU screen during user login](img/Figure_3.11_B19361.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.11 – 用户登录时的 QEMU 屏幕](img/Figure_3.11_B19361.jpg)'
- en: Figure 3.11 – The QEMU screen during user login
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.11 – 用户登录时的 QEMU 屏幕
- en: We can log in to the `root` account using an empty password.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用空密码登录到 `root` 账户。
- en: Summary
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we introduced Toaster and its essential features. Then, we
    went through installing and configuring Toaster and built and inspected an image.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了 Toaster 及其核心功能。接着，我们讲解了如何安装和配置 Toaster，并构建并检查了一个镜像。
- en: In the next chapter, we will go through some critical BitBake concepts. We believe
    these concepts are essential to understanding the Yocto Project. We will use BitBake
    and the command line for the rest of the book, as they provide a view of all the
    concepts.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍一些关键的 BitBake 概念。我们认为这些概念对于理解 Yocto 项目至关重要。接下来的章节，我们将使用 BitBake 和命令行，因为它们能全面展示所有概念。
