- en: 30\. Adding a New Disk to a CentOS 8 Volume Group and Logical Volume
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 30\. 向 CentOS 8 卷组和逻辑卷添加新磁盘
- en: In the previous chapter we looked at adding a new disk drive to a CentOS 8 system,
    creating a partition and file system and then mounting that file system so that
    the disk can be accessed. An alternative to creating fixed partitions and file
    systems is to use Logical Volume Management (LVM) to create logical disks made
    up of space from one or more physical or virtual disks or partitions. The advantage
    of using LVM is that space can be added to or removed from logical volumes as
    needed without the need to spread data over multiple file systems.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们探讨了如何向 CentOS 8 系统添加新硬盘，创建分区和文件系统，然后挂载文件系统以便访问磁盘。创建固定分区和文件系统的替代方案是使用逻辑卷管理（LVM）创建由一个或多个物理磁盘或虚拟磁盘/分区的空间组成的逻辑磁盘。使用
    LVM 的好处在于，可以根据需要向逻辑卷添加或移除空间，而无需将数据分散到多个文件系统中。
- en: Let us take, for example, the root (/home) file system of a CentOS 8-based server.
    Without LVM this file system would be created with a certain size when the operating
    system is installed. If a new disk drive is installed there is no way to allocate
    any of that space to the /home file system. The only option would be to create
    new file systems on the new disk and mount them at particular mount points. In
    this scenario you would have plenty of space on the new file system but the /home
    file system would still be nearly full. The only option would be to move files
    onto the new file system. With LVM, the new disk (or part thereof) can be assigned
    to the logical volume containing the root file system thereby dynamically extending
    the space available.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，假设我们有一台基于 CentOS 8 的服务器，其根目录（/home）文件系统。没有 LVM 时，操作系统安装时会创建一个特定大小的文件系统。如果安装了新硬盘，则无法将任何空间分配给
    /home 文件系统。唯一的选择是创建新的文件系统并将其挂载到特定的挂载点。在这种情况下，你在新文件系统上会有足够的空间，但 /home 文件系统仍然几乎满了。唯一的解决方案是将文件移动到新的文件系统上。而使用
    LVM时，新的磁盘（或其一部分）可以分配给包含根文件系统的逻辑卷，从而动态扩展可用空间。
- en: In this chapter we will look at the steps necessary to add new disk space to
    both a volume group and a logical volume for the purpose of adding additional
    space to the root file system of a CentOS 8 system.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍将新磁盘空间添加到卷组和逻辑卷的步骤，目的是为 CentOS 8 系统的根文件系统添加额外空间。
- en: 30.1 An Overview of Logical Volume Management (LVM)
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 30.1 逻辑卷管理（LVM）概述
- en: LVM provides a flexible and high level approach to managing disk space. Instead
    of each disk drive being split into partitions of fixed sizes onto which fixed
    size file systems are created, LVM provides a way to group together disk space
    into logical volumes which can be easily resized and moved. In addition, LVM allows
    administrators to carefully control disk space assigned to different groups of
    users by allocating distinct volume groups or logical volumes to those users.
    When the space initially allocated to the volume is exhausted the administrator
    can simply add more space without having to move the user files to a different
    file system.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: LVM 提供了一种灵活的高级磁盘空间管理方法。不同于将每个磁盘驱动器分割成固定大小的分区，并在这些分区上创建固定大小的文件系统，LVM 提供了一种将磁盘空间聚合成逻辑卷的方式，逻辑卷可以轻松调整大小和移动。此外，LVM
    允许管理员通过为不同用户组分配不同的卷组或逻辑卷来精确控制磁盘空间的分配。当最初分配给卷的空间用尽时，管理员可以简单地增加更多空间，而无需将用户文件移动到不同的文件系统中。
- en: 'LVM consists of the following components:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: LVM 由以下组件组成：
- en: 30.1.1 Volume Group (VG)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 30.1.1 卷组（VG）
- en: The Volume Group is the high level container which holds one or more logical
    volumes and physical volumes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 卷组是一个高级容器，包含一个或多个逻辑卷和物理卷。
- en: 30.1.2 Physical Volume (PV)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 30.1.2 物理卷（PV）
- en: A physical volume represents a storage device such as a disk drive or other
    storage media.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 物理卷代表一个存储设备，如磁盘驱动器或其他存储介质。
- en: 30.1.3 Logical Volume (LV)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 30.1.3 逻辑卷（LV）
- en: A logical volume is the equivalent to a disk partition and, as with a disk partition,
    can contain a file system.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑卷相当于一个磁盘分区，和磁盘分区一样，逻辑卷可以包含文件系统。
- en: 30.1.4 Physical Extent (PE)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 30.1.4 物理扩展（PE）
- en: Each physical volume (PV) is divided into equal size blocks known as physical
    extents.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 每个物理卷（PV）被划分为大小相等的块，称为物理扩展。
- en: 30.1.5 Logical Extent (LE)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 30.1.5 逻辑扩展（LE）
- en: Each logical volume (LV) is divided into equal size blocks called logical extents.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每个逻辑卷（LV）被划分为大小相等的块，这些块称为逻辑扩展。
- en: Suppose we are creating a new volume group called VolGroup001\. This volume
    group needs physical disk space in order to function so we allocate three disk
    partitions /dev/sda1, /dev/sdb1 and /dev/sdb2\. These become physical volumes
    in VolGroup001\. We would then create a logical volume called LogVol001 within
    the volume group made up of the three physical volumes.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们正在创建一个名为 VolGroup001 的新卷组。为了使该卷组能够正常工作，它需要物理磁盘空间，因此我们分配了三个磁盘分区 /dev/sda1、/dev/sdb1
    和 /dev/sdb2。这些将成为 VolGroup001 中的物理卷。接着，我们将在该卷组中创建一个名为 LogVol001 的逻辑卷，该逻辑卷由这三个物理卷组成。
- en: If we run out of space in LogVol001 we simply add more disk partitions as physical
    volumes and assign them to the volume group and logical volume.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 LogVol001 空间不足，我们只需添加更多磁盘分区作为物理卷，并将它们分配给卷组和逻辑卷。
- en: 30.2 Getting Information about Logical Volumes
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 30.2 获取逻辑卷的信息
- en: As an example of using LVM with CentOS 8 we will work through an example of
    adding space to the / file system of a standard CentOS 8 installation. Anticipating
    the need for flexibility in the sizing of the root partition, CentOS 8 sets up
    the / file system as a logical volume (called root) within a volume group called
    cl. Before making any changes to the LVM setup, however, it is important to first
    gather information.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 作为使用 LVM 与 CentOS 8 的示例，我们将通过一个例子来增加标准 CentOS 8 安装中 / 文件系统的空间。为了预见到根分区大小的灵活性，CentOS
    8 将 / 文件系统设置为名为 root 的逻辑卷，该逻辑卷位于名为 cl 的卷组中。然而，在对 LVM 配置进行任何更改之前，首先收集信息是非常重要的。
- en: 'Running the mount command will output information about a range of mount points,
    including the following entry for the root filesystem:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 `mount` 命令将输出关于一系列挂载点的信息，包括根文件系统的以下条目：
- en: /dev/mapper/cl-root on / type xfs (rw,relatime,seclabel,attr2,inode64,noquota)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/mapper/cl-root 挂载在 / 上，类型 xfs (rw, relatime, seclabel, attr2, inode64,
    noquota)
- en: 'Information about the volume group can be obtained using the vgdisplay command:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `vgdisplay` 命令获取有关卷组的信息：
- en: vgdisplay
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: vgdisplay
- en: '--- Volume group ---'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '--- 卷组 ---'
- en: VG Name cl
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: VG 名称 cl
- en: System ID
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 系统 ID
- en: Format lvm2
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 格式 lvm2
- en: Metadata Areas 1
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 元数据区域 1
- en: Metadata Sequence No 3
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 元数据序列号 3
- en: VG Access read/write
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: VG 访问 权限 读/写
- en: VG Status resizable
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: VG 状态 可调整大小
- en: MAX LV 0
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最大 LV 0
- en: Cur LV 2
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当前 LV 2
- en: Open LV 2
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 打开 LV 2
- en: Max PV 0
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 最大 PV 0
- en: Cur PV 1
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当前 PV 1
- en: Act PV 1
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当前 PV 1
- en: VG Size <44.70 GiB
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: VG 大小 <44.70 GiB
- en: PE Size 4.00 MiB
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: PE 大小 4.00 MiB
- en: Total PE 11442
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 总 PE 11442
- en: Alloc PE / Size 11442 / <44.70 GiB
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 已分配 PE / 大小 11442 / <44.70 GiB
- en: Free PE / Size 0 / 0
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 空闲 PE / 大小 0 / 0
- en: VG UUID fANXsd-8l0S-0zO1-BJVN-rnBa-gNf4-eIgjG8
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: VG UUID fANXsd-8l0S-0zO1-BJVN-rnBa-gNf4-eIgjG8
- en: 'As we can see in the above example, the cl volume group has a physical extent
    size of 4.00MB and has a total of 44.7GB available for allocation to logical volumes.
    Currently 11442 physical extents are allocated equaling the total 44.7GB capacity.
    If we want to increase the space allocated to any logical volumes in the cl volume
    group, therefore, we will need to add one or more physical volumes. The vgs tool
    is also useful for displaying a quick overview of the space available in the volume
    groups on a system:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如上例所示，cl 卷组的物理扩展大小为 4.00MB，具有总共 44.7GB 的可用空间可以分配给逻辑卷。目前，已经分配了 11442 个物理扩展，总容量为
    44.7GB。如果我们希望增加分配给 cl 卷组中任何逻辑卷的空间，必须添加一个或多个物理卷。`vgs` 工具也很有用，可以快速显示系统中卷组的空间概况：
- en: vgs
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: vgs
- en: 'VG #PV #LV #SN Attr VSize VFree'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 'VG #PV #LV #SN 属性 VSize VFree'
- en: cl 1 2 0 wz--n- <44.70g 0
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: cl 1 2 0 wz--n- <44.70g 0
- en: 'Information about logical volumes in a volume group may similarly be obtained
    using the lvdisplay command:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`lvdisplay`命令获取有关卷组中逻辑卷的信息：
- en: lvdisplay
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: lvdisplay
- en: '--- Logical volume ---'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '--- 逻辑卷 ---'
- en: LV Path /dev/cl/swap
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: LV 路径 /dev/cl/swap
- en: LV Name swap
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: LV 名称 swap
- en: VG Name cl
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: VG 名称 cl
- en: LV UUID FDSEXC-XawV-QhsZ-0CIq-IwV5-rxH6-Q6ATg2
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: LV UUID FDSEXC-XawV-QhsZ-0CIq-IwV5-rxH6-Q6ATg2
- en: LV Write Access read/write
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: LV 写入访问权限 读/写
- en: LV Creation host, time localhost, 2019-11-15 15:59:58 -0500
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: LV 创建主机，时间 localhost，2019-11-15 15:59:58 -0500
- en: LV Status available
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: LV 状态 可用
- en: '# open 2'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '# 打开 2'
- en: LV Size 4.57 GiB
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: LV 大小 4.57 GiB
- en: Current LE 1170
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当前 LE 1170
- en: Segments 1
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 段 1
- en: Allocation inherit
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 分配 继承
- en: Read ahead sectors auto
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 预读扇区 自动
- en: '- currently set to 8192'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '- 当前设置为 8192'
- en: Block device 253:1
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 块设备 253:1
- en: '--- Logical volume ---'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '--- 逻辑卷 ---'
- en: LV Path /dev/cl/root
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: LV 路径 /dev/cl/root
- en: LV Name root
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: LV 名称 root
- en: VG Name cl
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: VG 名称 cl
- en: LV UUID Nysd1Y-483C-IKLf-P4ez-c3Kq-s2hZ-eumSB5
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: LV UUID Nysd1Y-483C-IKLf-P4ez-c3Kq-s2hZ-eumSB5
- en: LV Write Access read/write
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: LV 写入访问权限 读/写
- en: LV Creation host, time localhost, 2019-11-15 15:59:58 -0500
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: LV 创建主机，时间 localhost，2019-11-15 15:59:58 -0500
- en: LV Status available
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: LV 状态 可用
- en: '# open 1'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '# 打开 1'
- en: LV Size 40.12 GiB
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: LV 大小 40.12 GiB
- en: Current LE 10272
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 当前 LE 10272
- en: Segments 1
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 段 1
- en: Allocation inherit
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 分配 继承
- en: Read ahead sectors auto
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 预读扇区自动
- en: '- currently set to 8192'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '- 当前设置为8192'
- en: Block device 253:0
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 块设备 253:0
- en: As shown in the above example 40.12 GiB of the space in volume group cl is allocated
    to logical volume root (for the / file system) and 4.57 GiB to swap (for swap
    space).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如上例所示，40.12 GiB的空间在卷组cl中分配给逻辑卷root（用于/文件系统），4.57 GiB分配给swap（用于交换空间）。
- en: 'Now that we know what space is being used it is often helpful to understand
    which devices are providing the space (in other words which devices are being
    used as physical volumes). To obtain this information we need to run the pvdisplay
    command:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了哪些空间正在被使用，通常有助于了解哪些设备提供了这些空间（换句话说，哪些设备被用作物理卷）。为了获取这些信息，我们需要运行pvdisplay命令：
- en: pvdisplay
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: pvdisplay
- en: '--- Physical volume ---'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '--- 物理卷 ---'
- en: PV Name /dev/sda2
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: PV名称 /dev/sda2
- en: VG Name cl
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 卷组名称 cl
- en: PV Size <44.70 GiB / not usable 3.00 MiB
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 物理卷大小 <44.70 GiB / 不可用 3.00 MiB
- en: Allocatable yes (but full)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 可分配是的（但已满）
- en: PE Size 4.00 MiB
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: PE大小 4.00 MiB
- en: Total PE 11442
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 总PE 11442
- en: Free PE 0
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 空闲PE 0
- en: Allocated PE 11442
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 已分配PE 11442
- en: PV UUID Gq547r-HUyj-hPeZ-7be0-CvFx-206v-Hy2xmj
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: PV UUID Gq547r-HUyj-hPeZ-7be0-CvFx-206v-Hy2xmj
- en: Clearly the space controlled by logical volume cl is provided via a physical
    volume located on /dev/sda2\.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，逻辑卷cl控制的空间是通过位于/dev/sda2的物理卷提供的。
- en: Now that we know a little more about our LVM configuration we can embark on
    the process of adding space to the volume group and the logical volume contained
    within.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对LVM配置有了更多了解，可以开始将空间添加到卷组和其中的逻辑卷的过程。
- en: 30.3 Adding Additional Space to a Volume Group from the Command-Line
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 30.3 从命令行向卷组添加额外空间
- en: Just as with the previous steps to gather information about the current Logical
    Volume Management configuration of a CentOS 8 system, changes to this configuration
    can be made from the command-line.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 就像之前收集有关CentOS 8系统当前逻辑卷管理配置的信息一样，可以通过命令行对该配置进行更改。
- en: 'In the remainder of this chapter we will assume that a new disk has been added
    to the system and that it is being seen by the operating system as /dev/sdb. We
    shall also assume that this is a new disk that does not contain any existing partitions.
    If existing partitions are present they should be backed up and then the partitions
    deleted from the disk using the fdisk utility. For example, assuming a device
    represented by /dev/sdb containing two partitions as follows:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的剩余部分，我们假设系统中已添加了一个新磁盘，并且操作系统将其识别为/dev/sdb。我们还假设这是一个没有包含任何现有分区的新磁盘。如果存在现有分区，应先备份，然后使用fdisk工具删除磁盘上的分区。例如，假设一个设备由/dev/sdb表示，包含两个分区，如下所示：
- en: fdisk -l /dev/sdb
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fdisk -l /dev/sdb
- en: 'Disk /dev/sdb: 8 GiB, 8589934592 bytes, 16777216 sectors'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘/dev/sdb：8 GiB，8589934592字节，16777216扇区
- en: 'Units: sectors of 1 * 512 = 512 bytes'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 单位：每个扇区1 * 512 = 512字节
- en: 'Sector size (logical/physical): 512 bytes / 512 bytes'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 扇区大小（逻辑/物理）：512字节 / 512字节
- en: 'I/O size (minimum/optimal): 512 bytes / 512 bytes'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: I/O大小（最小/最佳）：512字节 / 512字节
- en: 'Disklabel type: dos'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘标签类型：dos
- en: 'Disk identifier: 0xbd09c991'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 磁盘标识符：0xbd09c991
- en: Device Boot Start End Sectors Size Id Type
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 设备 启动 起始 结束 扇区 数量 大小 ID 类型
- en: /dev/sdb1 2048 5678545 5676498 2.7G 83 Linux
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sdb1 2048 5678545 5676498 2.7G 83 Linux
- en: /dev/sdb2 5679104 16777215 11098112 5.3G 83 Linux
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: /dev/sdb2 5679104 16777215 11098112 5.3G 83 Linux
- en: 'Once the filesystems on these partitions have been unmounted, they can be deleted
    as follows:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦这些分区上的文件系统已卸载，就可以按如下方式删除它们：
- en: fdisk /dev/sdb
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: fdisk /dev/sdb
- en: Welcome to fdisk (util-linux 2.32.1).
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎使用fdisk（util-linux 2.32.1）。
- en: Changes will remain in memory only, until you decide to write them.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 更改将仅保留在内存中，直到您决定写入它们。
- en: Be careful before using the write command.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 使用写入命令时请小心。
- en: 'Command (m for help): d'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（m获取帮助）：d
- en: 'Partition number (1,2, default 2): 1'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 分区号（1,2，默认为2）：1
- en: Partition 1 has been deleted.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 分区1已被删除。
- en: 'Command (m for help): d'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（m获取帮助）：d
- en: Selected partition 2
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 选择的分区2
- en: Partition 2 has been deleted.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 分区2已被删除。
- en: 'Command (m for help): w'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 命令（m获取帮助）：w
- en: The partition table has been altered.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 分区表已被更改。
- en: Calling ioctl() to re-read partition table.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 正在调用ioctl()以重新读取分区表。
- en: Syncing disks.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 正在同步磁盘。
- en: Before moving to the next step, be sure to remove any entries in the /etc/fstab
    file for these filesystems so that the system does not attempt to mount them on
    the next reboot.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入下一步之前，确保从/etc/fstab文件中删除这些文件系统的任何条目，以避免系统在下一次重启时尝试挂载它们。
- en: 'Once the disk is ready, the next step is to convert this disk into a physical
    volume using the pvcreate command (also wiping the dos signature if one exists):'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '一旦磁盘准备好，下一步是使用 pvcreate 命令将该磁盘转换为物理卷（如果存在，则擦除 DOS 签名）：  '
- en: pvcreate /dev/sdb
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'pvcreate /dev/sdb  '
- en: Physical volume "/dev/sdb" successfully created.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '物理卷 "/dev/sdb" 成功创建。  '
- en: 'If the creation fails with a message that reads “Device /dev/<device> excluded
    by a filter”, it may be necessary to wipe the disk using the wipefs command before
    creating the physical volume:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '如果创建失败并显示“设备 /dev/<device> 被过滤器排除”的信息，则可能需要在创建物理卷之前使用 wipefs 命令擦除磁盘：  '
- en: wipefs -a /dev/sdb
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'wipefs -a /dev/sdb  '
- en: '/dev/sdb: 8 bytes were erased at offset 0x00000200 (gpt): 45 46 49 20 50 41
    52 54'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '/dev/sdb: 在偏移量 0x00000200 (gpt) 擦除了 8 字节：45 46 49 20 50 41 52 54  '
- en: '/dev/sdb: 8 bytes were erased at offset 0x1fffffe00 (gpt): 45 46 49 20 50 41
    52 54'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '/dev/sdb: 在偏移量 0x1fffffe00 (gpt) 擦除了 8 字节：45 46 49 20 50 41 52 54  '
- en: '/dev/sdb: 2 bytes were erased at offset 0x000001fe (PMBR): 55 aa'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '/dev/sdb: 在偏移量 0x000001fe (PMBR) 擦除了 2 字节：55 aa  '
- en: '/dev/sdb: calling ioctl to re-read partition table: Success'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '/dev/sdb: 调用 ioctl 重新读取分区表：成功  '
- en: 'With the physical volume created we now need to add it to the volume group
    (in this case cl) using the vgextend command:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '创建了物理卷后，我们需要使用 vgextend 命令将其添加到卷组（此例中为 cl）：  '
- en: vgextend cl /dev/sdb
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'vgextend cl /dev/sdb  '
- en: Volume group "cl" successfully extended
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '卷组 "cl" 成功扩展  '
- en: 'The new physical volume has now been added to the volume group and is ready
    to be allocated to a logical volume. To do this we run the lvextend tool providing
    the size by which we wish to extend the volume. In this case we want to extend
    the size of logical volume root by 7 GB. Note that we need to provide the path
    to the logical volume which can be obtained from the lvdisplay command (in this
    case /dev/cl/root):'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '新的物理卷现在已被添加到卷组，并准备分配给逻辑卷。为此，我们运行 lvextend 工具，指定我们希望扩展的大小。在此例中，我们希望将逻辑卷 root
    扩展 7 GB。请注意，我们需要提供逻辑卷的路径，这可以通过 lvdisplay 命令获取（此例中为 /dev/cl/root）：  '
- en: lvextend -L+7G /dev/cl/root
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'lvextend -L+7G /dev/cl/root  '
- en: Size of logical volume cl/root changed from 40.12 GiB (10272 extents) to 47.12
    GiB (12064 extents).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '逻辑卷 cl/root 的大小从 40.12 GiB (10272 extents) 更改为 47.12 GiB (12064 extents)。  '
- en: Logical volume cl/root successfully resized.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '逻辑卷 cl/root 成功调整大小。  '
- en: 'The last step in the process is to resize the file system residing on the logical
    volume so that it uses the additional space. Since we are assuming a default CentOS
    8 installation using the XFS filesystem, this can be achieved using the xfs_growfs
    utility:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '过程的最后一步是调整存储在逻辑卷上的文件系统，以便它使用额外的空间。由于我们假设使用默认的 CentOS 8 安装并使用 XFS 文件系统，因此可以使用
    xfs_growfs 工具来实现：  '
- en: xfs_growfs /
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: xfs_growfs /
- en: meta-data=/dev/mapper/cl-root isize=512 agcount=4, agsize=2629632 blks
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 'meta-data=/dev/mapper/cl-root isize=512 agcount=4, agsize=2629632 blks  '
- en: = sectsz=512 attr=2, projid32bit=1
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '= sectsz=512 attr=2, projid32bit=1  '
- en: = crc=1 finobt=1, sparse=1, rmapbt=0
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '= crc=1 finobt=1, sparse=1, rmapbt=0  '
- en: = reflink=1
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '= reflink=1  '
- en: data = bsize=4096 blocks=10518528, imaxpct=25
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '数据 = bsize=4096 blocks=10518528, imaxpct=25  '
- en: = sunit=0 swidth=0 blks
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '= sunit=0 swidth=0 blks  '
- en: naming =version 2 bsize=4096 ascii-ci=0, ftype=1
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 'naming =version 2 bsize=4096 ascii-ci=0, ftype=1  '
- en: log =internal log bsize=4096 blocks=5136, version=2
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 'log =internal log bsize=4096 blocks=5136, version=2  '
- en: = sectsz=512 sunit=0 blks, lazy-count=1
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '= sectsz=512 sunit=0 blks, lazy-count=1  '
- en: realtime =none extsz=4096 blocks=0, rtextents=0
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 'realtime =none extsz=4096 blocks=0, rtextents=0  '
- en: data blocks changed from 10518528 to 12353536
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '数据块从 10518528 更改为 12353536  '
- en: 'If, on the other hand, the filesystem is of type ext2, ext3, or ext4, the resize2fs
    utility should be used instead when performing the filesystem resize:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '另一方面，如果文件系统类型为 ext2、ext3 或 ext4，则应使用 resize2fs 工具来执行文件系统的调整大小操作：  '
- en: resize2fs /dev/cl/root
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 'resize2fs /dev/cl/root  '
- en: Once the resize completes, the file system will have been extended to use the
    additional space provided by the new disk drive. All this has been achieved without
    moving a single file or even having to restart the server. As far as any users
    on the system are concerned nothing has changed (except, of course, that there
    is now more disk space).
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '一旦调整大小完成，文件系统将扩展以使用新磁盘驱动器提供的额外空间。所有这一切都在不移动任何文件或甚至不需要重启服务器的情况下完成。对于系统上的任何用户来说，什么都没有改变（当然，除了现在有更多的磁盘空间）。  '
- en: 30.4 Adding Additional Space to a Volume Group using Cockpit
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '30.4 使用 Cockpit 向卷组添加额外空间  '
- en: 'In addition to the command-line utilities outlined so far in this chapter,
    it is also possible to access information about logical volumes and make volume
    group and logical volume changes from within the Cockpit web interface using the
    Storage page as shown in [Figure 30-1](../Text/Volume_Groups.xhtml#_idTextAnchor385):'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 除了本章中概述的命令行工具外，还可以通过Cockpit网页界面的Storage页面来访问逻辑卷的信息，并进行卷组和逻辑卷的更改，如[图30-1](../Text/Volume_Groups.xhtml#_idTextAnchor385)所示：
- en: '![](img/centos_8_cockpit_volume_groups.png)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_cockpit_volume_groups.png)'
- en: Figure 30-1
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图30-1
- en: 'If the Storage option is not listed, the cockpit-storaged package will need
    to be installed and the cockpit service restarted as follows:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 如果Storage选项未列出，需要安装cockpit-storaged包，并按以下方式重新启动cockpit服务：
- en: dnf install cockpit-storaged
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: dnf install cockpit-storaged
- en: systemctl restart cockpit.socket
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: systemctl restart cockpit.socket
- en: Once the Cockpit service has restarted, log back into the Cockpit interface
    at which point the Storage option should now be visible.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Cockpit服务重新启动，重新登录Cockpit界面，此时应该可以看到Storage选项。
- en: To add a new disk drive to an existing volume group from within the Cockpit
    console, start at the above Storage page and click on a filesystem associated
    with the volume group to be extended from the list marked A above.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 要从Cockpit控制台向现有卷组添加新的磁盘驱动器，从上述Storage页面开始，点击与要扩展的卷组相关的文件系统，该文件系统在上面的列表中标记为A。
- en: 'On the resulting screen, click on the + button highlighted in [Figure 30-2](../Text/Volume_Groups.xhtml#_idTextAnchor386)
    below to add a physical volume:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在结果屏幕上，点击下方[图30-2](../Text/Volume_Groups.xhtml#_idTextAnchor386)中高亮显示的+按钮，以添加一个物理卷：
- en: '![](img/centos_8_cockpit_volume_group_selection.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_cockpit_volume_group_selection.png)'
- en: Figure 30-2
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图30-2
- en: 'Select the new drive to be added to the volume group and click on the Add button:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 选择要添加到卷组的新驱动器，并点击“Add”按钮：
- en: '![](img/rhel_8_cockpit_storage_add_device.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](img/rhel_8_cockpit_storage_add_device.png)'
- en: Figure 30-3
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图30-3
- en: 'On returning to the volume group screen, scroll down to the logical volume
    that is to be extended and click on it to unfold additional information. [Figure
    30-4](../Text/Volume_Groups.xhtml#_idTextAnchor387), for example, shows details
    of the root logical volume:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 返回卷组屏幕后，向下滚动到要扩展的逻辑卷，并点击它以展开更多信息。例如，[图30-4](../Text/Volume_Groups.xhtml#_idTextAnchor387)显示了根逻辑卷的详细信息：
- en: '![](img/centos_8_cockpit_volume_grow_button.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_cockpit_volume_grow_button.png)'
- en: Figure 30-4
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 图30-4
- en: 'To extend the logical volume using the new space, click on the Grow button
    and use the slider in the resulting dialog to select how much space should be
    added to the volume. Click the Grow button to commit the change (the available
    space can be shared among different volume groups if required):'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用新空间扩展逻辑卷，请点击“Grow”按钮，并在弹出的对话框中使用滑块选择要添加到卷的空间大小。点击“Grow”按钮以提交更改（如果需要，可将可用空间在不同的卷组之间共享）：
- en: '![](img/centos_8_cockpit_volume_grow_dialog.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/centos_8_cockpit_volume_grow_dialog.png)'
- en: Figure 30-5
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图30-5
- en: Once these steps are complete, the volume group will have been configured to
    use the newly added space.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些步骤后，卷组将已配置为使用新添加的空间。
- en: 30.5 Summary
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 30.5 总结
- en: Volume groups and logical volumes provide an abstract layer on top of the physical
    storage devices on a CentOS 8 system to provide a flexible way to allocate the
    space provided by multiple disk drives. This allows disk space allocations to
    be made and changed dynamically without the need to repartition disk drives and
    move data between filesystems. This chapter has outlined the basic concepts of
    volume groups, logical volumes and physical volumes while demonstrating how to
    manage these using both command-line tools and the Cockpit web interface.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 卷组和逻辑卷为CentOS 8系统中的物理存储设备提供了一个抽象层，提供了一种灵活的方式来分配由多个磁盘驱动器提供的空间。这使得可以动态地进行磁盘空间分配和更改，而无需重新分区磁盘驱动器并在文件系统之间移动数据。本章概述了卷组、逻辑卷和物理卷的基本概念，并演示了如何使用命令行工具和Cockpit网页界面来管理这些。
