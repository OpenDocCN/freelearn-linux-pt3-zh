- en: 31\. Setting Up an Ubuntu 23.04 Web Server
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
- en: The Apache web server is among the many packages that make up the Ubuntu operating
    system. The scalability and resilience of Ubuntu make it an ideal platform for
    hosting even the most heavily trafficked websites.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will explain how to configure an Ubuntu system using Apache to
    act as a web server, including secure (HTTPS) and insecure (HTTP) configurations.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 31.1 Requirements for Configuring an Ubuntu Web Server
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: To set up your own website, you need a computer (or cloud server instance),
    an operating system, a web server, a domain name, a name server, and an IP address.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: As previously mentioned, Ubuntu supports the Apache web server, which can easily
    be installed once the operating system is up and running. In addition, a domain
    name can be registered with any domain name registration service.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: If you are running Ubuntu on a cloud instance, the IP address assigned by the
    provider will be listed in the server overview information. However, if you are
    hosting your own server and your internet service provider (ISP) has assigned
    a static IP address, you must associate your domain with that address. This is
    achieved using a name server, and all domain registration services will provide
    this service.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: If you do not have a static IP address (i.e., your ISP provides you with a dynamic
    address that changes frequently), you can use one of several free Dynamic DNS
    (DDNS or DynDNS for short) services to map your dynamic IP address to your domain
    name.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Once you have configured your domain name and your name server, the next step
    is to install and configure your web server.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: 31.2 Installing the Apache Web Server Packages
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: 'The current release of Ubuntu typically does not install the Apache web server
    by default. To check whether the server is already installed, run the following
    command:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: apt -qq list apache2
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If apt generates output similar to the following, the apache server is already
    installed:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: apache2/lunar,now 2.4.55-1ubuntu2 amd64 [installed]
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: 'If the apt output does not list the package or include the [installed] status,
    run the following command at the command prompt to perform the Apache installation:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: apt install apache2
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 31.3 Configuring the Firewall
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: 'Before starting and testing the Apache webserver, the firewall will need to
    be modified to allow the web server to communicate with the outside world. By
    default, the HTTP and HTTPS protocols use ports 80 and 443 respectively so, depending
    on which protocols are being used, either one or both of these ports will need
    to be opened. If your Ubuntu system is being protected by the Uncomplicated Firewall,
    the following command can be used to enable only insecure web traffic (HTTP):'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: ufw allow Apache
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To enable only secure (HTTPS) traffic:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: ufw allow 'Apache Secure'
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Alternatively, enable both secure and insecure web traffic as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: ufw allow 'Apache Full'
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you are using firewalld, the following commands can be used to open the
    HTTP and HTTPS ports. When opening the ports, be sure to specify the firewall
    zone that applies to the internet-facing network connection:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: firewall-cmd --permanent --zone=<zone> --add-port=80/tcp
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: firewall-cmd --permanent --zone=<zone> --add-port=443/tcp
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After opening the necessary ports, be sure to reload the firewall settings:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: firewall-cmd --reload
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: On cloud-hosted servers, enabling the appropriate port for the server instance
    within the cloud console may also be necessary. Check the documentation for the
    cloud provider for steps to do this.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: 31.4 Port Forwarding
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Suppose the Ubuntu system hosting the web server sits on a network protected
    by a firewall (another computer running a firewall, router, or wireless base station
    containing built-in firewall protection). In that case, you must configure the
    firewall to forward ports 80 and 443 to your web server system. The mechanism
    for performing this differs between firewalls and devices, so check your documentation
    to find out how to configure port forwarding.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 31.5 Starting the Apache Web Server
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: Once the Apache server is installed and the firewall configured, the next step
    is to verify that the server is running and start it if necessary.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: 'To check the status of the Apache service from the command line, enter the
    following at the command prompt:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: systemctl status apache2
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If the above command indicates that the apache2 service is not running, it
    can be launched from the command line as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: systemctl start apache2
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you would like the Apache httpd service to start automatically when the
    system boots, run the following command:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: systemctl enable apache2
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 31.6 Testing the Web Server
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Once the installation is complete, the next step is verifying the web server
    is running.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have access (either locally or remotely) to the desktop environment
    of the server, start up a web browser and enter http://127.0.0.1 in the address
    bar (127.0.0.1 is the loop-back network address that tells the system to connect
    to the local machine). If everything is set up correctly, the browser should load
    the test page shown in [Figure 31-1](Web_Server.xhtml#_idTextAnchor470):'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_website.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
- en: Figure 31-1
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: If the desktop environment is unavailable, connect either from another system
    on the same local network as the server, or use the external IP address assigned
    to the system if it is hosted remotely.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: 31.7 Configuring the Apache Web Server for Your Domain
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: 'The next step in setting up your web server is configuring it for your domain
    name. To configure the web server, begin by changing directory to /etc/apache2,
    which, in turn, contains several files and sub-directories. The main configuration
    file is named apache2.conf and serves as the central point for organizing the
    modular configuration files located in the sub-directories. For example, the apache2.conf
    file includes a line to import the configuration settings declared in the files
    located in the sites-enabled folder:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: 'Include the virtual host configurations:'
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: IncludeOptional sites-enabled/*.conf
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Similarly, the apache2.conf file imports the ports.conf file, which defines
    the ports on which the Apache server listens for network traffic.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: To configure a website domain on Ubuntu, begin by changing directory to /etc/apache2\.
    In this directory, you will find two sub-directories, sites-available and sites-enabled.
    Change directory into sites-available. In this directory you will find a default
    file which may be used as a template for your own site.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: 'Copy the default file to a new file with a name that matches your domain name.
    For example:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: cp 000-default.conf myexample.conf
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Edit your myexample.com file using your favorite editor where it will appear
    as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: <VirtualHost *:80>
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: '# The ServerName directive sets the request scheme, hostname and port that'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '# the server uses to identify itself. This is used when creating'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '# redirection URLs. In the context of virtual hosts, the ServerName'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '# specifies what hostname must appear in the request’s Host: header to'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '# match this virtual host. For the default virtual host (this file) this'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '# value is not decisive as it is used as a last resort host regardless.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '# However, you must set it for any further virtual host explicitly.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '#ServerName www.example.com'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: ServerAdmin webmaster@localhost
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: DocumentRoot /var/www/html
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: '# error, crit, alert, emerg.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '# It is also possible to configure the loglevel for particular'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: '# modules, e.g.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '#LogLevel info ssl:warn'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: ErrorLog ${APACHE_LOG_DIR}/error.log
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: CustomLog ${APACHE_LOG_DIR}/access.log combined
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: '# For most configuration files from conf-available/, which are'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '# enabled or disabled at a global level, it is possible to'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: '# include a line for only one particular virtual host. For example the'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '# following line enables the CGI configuration for this host only'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '# after it has been globally disabled with “a2disconf”.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: '#Include conf-available/serve-cgi-bin.conf'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: </VirtualHost>
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: 'The ServerAdmin directive defines an administrative email address for people
    wishing to contact the webmaster for your site. Change this to an appropriate
    email address where you can be contacted:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: ServerAdmin webmaster@myexample.com
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, the ServerName directive needs to be uncommented (in other words remove
    the ‘#’ character prefix) and defined so that the web server knows which virtual
    host this configuration file refers to:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: ServerName myexample.com
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next stage, we need to define where the website files are going to be
    located using the DocumentRoot directive. The tradition is to use /var/www/domain-name:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: DocumentRoot /var/www/myexample.com
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: 'Having completed the changes, we now need to enable the site as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: a2ensite myexample.conf
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This command creates a symbolic link from the myexample.conf file in the sites-available
    directory to the sites-enabled folder.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
- en: 'With the site enabled, run the following command to disable the default test
    site:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: a2dissite 000-default.conf
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, create the /var/www/myexample.com directory and place an index.html file
    in it. For example:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: <html>
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: <title>Sample Web Page</title>
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: <body>
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: Welcome to MyExample.com
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: </body>
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: </html>
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: 'With these changes made, run the apache2ctl command to check the configuration
    files for errors:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: apache2ctl configtest
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Syntax OK
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: 'If no errors are reported, reload the Apache web server to make sure it picks
    up our new settings:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: systemctl reload apache2
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Finally, check that the server configuration works by opening a browser window
    and navigating to the site using the domain name instead of the IP address. The
    web page that loads should be the one defined in the index.html file created above.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: 31.8 The Basics of a Secure Website
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: The web server and website created in this chapter use the HTTP protocol on
    port 80 and, as such, are considered to be insecure. The problem is that the traffic
    between the web server and the client (typically a user’s web browser) is transmitted
    in clear text. In other words, the data is unencrypted and susceptible to interception.
    While not a problem for general web browsing, this is a severe weakness when performing
    tasks such as logging into websites or transferring sensitive information such
    as identity or credit card details.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
- en: These days, websites are expected to use HTTPS, which uses either Secure Socket
    Layer (SSL) or Transport Layer Security (TLS) to establish secure, encrypted communication
    between a web server and a client. This security is established through the use
    of public, private, and session encryption together with certificates.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: To support HTTPS, a website must have a certificate issued by a trusted authority
    known as a Certificate Authority (CA). When a browser connects to a secure website,
    the web server sends back a copy of the website’s SSL certificate, which also
    contains a copy of the site’s public key. The browser then validates the authenticity
    of the certificate with trusted certificate authorities.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
- en: If the certificate is valid, the browser uses the public key sent by the server
    to encrypt a session key and pass it to the server. The server decrypts the session
    key using the private key to send an encrypted acknowledgment to the browser.
    Once this process is complete, the browser and server use the session key to encrypt
    all subsequent data transmissions until the session ends.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
- en: 31.9 Configuring Apache for HTTPS
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, the Apache server does not include the necessary module to implement
    a secure HTTPS website. The first step, therefore, is to enable the Apache mod_ssl
    module on the server system as follows:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: a2enmod ssl
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Restart apache2 after the installation completes to load the new module into
    the Apache server:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: systemctl restart apache2
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Check that the module has loaded into the server using the following command:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: apache2ctl -M | grep ssl_module
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ssl_module (shared)
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Once the ssl module is installed, repeat the steps from the previous section
    of this chapter to create a configuration file for the website, this time using
    the sites-available/default-ssl.conf file as the template for the site configuration
    file.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: Assuming the module is installed, the next step is to generate an SSL certificate
    for the website.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: 31.10 Obtaining an SSL Certificate
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: 'The certificate for a website must be obtained from a Certificate Authority.
    Several options are available at a range of prices. By far the best option, however,
    is to obtain a free certificate from Let’s Encrypt at the following URL:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '[https://letsencrypt.org/](https://letsencrypt.org/)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: Obtaining a certificate from Let’s Encrypt involves installing and running the
    Certbot tool. This tool will scan the Apache configuration files on the server
    and provides the option to generate certificates for any virtual hosts configured
    on the system. It will then generate the certificate and add virtual host entries
    to the Apache configuration for the corresponding websites.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow the steps on the Let’s Encrypt website to download and install Certbot
    on your Ubuntu system, then run the certbot tool as follows to generate and install
    the certificate:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: certbot --apache
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After requesting an email address and seeking terms of service acceptance,
    Certbot will list the domains found in the httpd.conf file and allow the selection
    of one or more sites for which a certificate will be installed. Certbot will then
    perform some checks before obtaining and installing the certificate on the system:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Which names would you like to activate HTTPS for?
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - -'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: '1: www.myexample.com'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - -'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Select the appropriate numbers separated by commas and/or spaces, or leave input
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: 'blank to select all options shown (Enter ‘c’ to cancel): 1'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: Obtaining a new certificate
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: 'Performing the following challenges:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: http-01 challenge for www.myexample.com
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: Waiting for verification...
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: Cleaning up challenges
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Created an SSL vhost at /etc/httpd/conf/httpd-le-ssl.conf
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Deploying Certificate to VirtualHost /etc/httpd/conf/httpd-le-ssl.conf
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: Enabling site /etc/httpd/conf/httpd-le-ssl.conf by adding Include to root configuration
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: 'Certbot will also create a new file named myexample-le-ssl.conf in the /etc/apache2/sites-available
    directory containing a secure virtual host entry for each domain name for which
    a certificate has been generated and enabled the site so that a link to the file
    is made in the /etc/apache2/sites-enabled directory. These entries will be similar
    to the following:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: <IfModule mod_ssl.c>
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: <VirtualHost *:443>
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: ServerAdmin feedback@myexample.com
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: ServerName www.myexample.com
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: DocumentRoot /var/www/myexample
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: ErrorLog logs/myexample_error_log
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: CustomLog logs/myexample_access_log combined
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: SSLCertificateFile /etc/letsencrypt/live/www.myexample.com/fullchain.pem
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: SSLCertificateKeyFile /etc/letsencrypt/live/www.myexample.com/privkey.pem
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Include /etc/letsencrypt/options-ssl-apache.conf
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: </VirtualHost>
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: </IfModule>
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, Certbot will ask whether the server should redirect future HTTP web
    requests to HTTPS. In other words, if a user attempts to access http://www.myexample.com,
    the web server will redirect the user to https://www.myexample.com:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP
    access.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - -'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '1: No redirect - Make no further changes to the webserver configuration.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '2: Redirect - Make all requests redirect to secure HTTPS access. Choose this
    for'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: new sites, or if you’re confident your site works on HTTPS. You can undo this
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: change by editing your web server’s configuration.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: '- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    - -'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the appropriate number [1-2] then [enter] (press ‘c’ to cancel): 2'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: If you are currently testing the HTTPS configuration and would like to keep
    the HTTP version live until later, select the No redirect option. Otherwise, redirecting
    to HTTPS is generally recommended.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the certificate has been installed, test it in a browser at the following
    URL (replacing myexample.com with your own domain name):'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.ssllabs.com/ssltest/analyze.html?d=www.myexample.com](https://www.ssllabs.com/ssltest/analyze.html?d=www.myexample.com)'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: 'If the certificate configuration is successful, the SSL Labs report will provide
    a high rating, as shown in [Figure 31-2](Web_Server.xhtml#_idTextAnchor475):'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/rhel_8_ssl_labs_report.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
- en: Figure 31-2
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: 'As a final test, open a browser window and navigate to your domain using the
    https:// prefix. The page should load as before, and the browser should indicate
    that the connection between the browser and server is secure (usually indicated
    by a padlock icon in the address bar, which can be clicked for additional information):'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ubuntu_secure_site.jpg)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
- en: Figure 31-3
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: 31.11 Summary
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: An Ubuntu system can host websites by installing the Apache web server. Insecure
    (HTTP) and secure (HTTPS) websites can be deployed on Ubuntu. Secure websites
    use either Secure Socket Layer (SSL) or Transport Layer Security (TLS) to establish
    encrypted communication between the web server and client through public, private,
    and session encryption, together with a certificate issued by a trusted Certificate
    Authority.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 Ubuntu 系统可以通过安装 Apache 网络服务器来托管网站。可以在 Ubuntu 上部署不安全的（HTTP）和安全的（HTTPS）网站。安全的网站使用安全套接字层（SSL）或传输层安全性（TLS）来建立加密通信，通过公钥、私钥和会话加密以及由受信任的证书颁发机构签发的证书，在
    Web 服务器和客户端之间进行通信。
