["```\ngit clone https://github.com/PacktPublishing/The-Ultimate-Linux-Shell-Scripting-Guide.git \n```", "```\ndonnie@fedora:~$ ping -c1 192.168.0.18\nPING 192.168.0.18 (192.168.0.18) 56(84) bytes of data.\n64 bytes from 192.168.0.18: icmp_seq=1 ttl=128 time=5.09 ms\n--- 192.168.0.18 ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 5.086/5.086/5.086/0.000 ms\ndonnie@fedora:~$ \n```", "```\n#!/bin/bash\nttl=$(ping -c1 $1 | head -2 | tail -1 | cut -d= -f3 | cut -d\" \" -f1)\necho \"The TTL value is $ttl.\"\nif [[ $ttl == 64 ]]; then\n         echo \"A TTL of $ttl indicates either a Linux, BSD, or macOS operating system.\"\nelif [[ $ttl == 128 ]]; then\n        echo \"A TTL of $ttl indicates a Windows operating system.\"\nelif [[ $ttl == 255 ]] ; then\n        echo \"A TTL of $ttl indicates a Solaris/OpenIndiana operating system.\"\nelse\n        echo \"There was no recognized TTL value.\"\nfi \n```", "```\ndonnie@fedora:~$ ./os-detect.sh 192.168.0.18\nThe TTL value is 128.\nA TTL of 128 indicates a Windows operating system.\ndonnie@fedora:~$ ./os-detect.sh 192.168.0.20\nThe TTL value is 64.\nA TTL of 64 indicates either a Linux, BSD, or macOS operating system.\ndonnie@fedora:~$ ./os-detect.sh 192.168.0.19\nThe TTL value is 255.\nA TTL of 255 indicates a Solaris/OpenIndiana operating system.\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ sudo nmap -A 192.168.0.20\n. . .\n. . .\nDevice type: general purpose\nRunning: FreeBSD 12.X|13.X\nOS CPE: cpe:/o:freebsd:freebsd:12 cpe:/o:freebsd:freebsd:13\nOS details: FreeBSD 12.0-RELEASE - 13.0-CURRENT\nNetwork Distance: 1 hop\nService Info: OS: FreeBSD; CPE: cpe:/o:freebsd:freebsd\nOkay, that's cool. Let's now scan some ports.\n. . .\n. . .\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ sudo nmap -A 192.168.0.19\n. . .\n. . .\nNo exact OS matches for host (If you know what OS is running on it, see https://nmap.org/submit/ ).\n. . .\n. . .\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ strings /bin/bash | grep tcp\n/dev/tcp/*/*\ndonnie@fedora:~$ strings /bin/bash | grep udp\n/dev/udp/*/*\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ cat < /dev/tcp/time.nist.gov/13\n60372 24-03-03 21:04:44 58 0 0 544.5 UTC(NIST) *\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ cat < /dev/tcp/192.168.0.20/22\nSSH-2.0-OpenSSH_9.3 FreeBSD-20230719\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ cat < /dev/tcp/8.8.8.8/53\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora:~$ cat < /dev/tcp/8.8.8.8/54\nbash: connect: Connection timed out\nbash: /dev/tcp/8.8.8.8/54: Connection timed out\ndonnie@fedora:~$ \n```", "```\n#!/bin/bash\nhost=$1\nstartport=$2\nstopport=$3\nping=$(ping -c 1 $host | grep bytes | wc -l)\nif [ \"$ping\" -gt 1 ]; then\n  echo \"$host is up\";\nelse\n  echo \"$host is down. Quitting\";\n  exit\nfi\nfor ((counter=$startport; counter<=$stopport; counter++)); do\n          (echo >/dev/tcp/$host/$counter) > /dev/null 2>&1 && echo \"Port $counter open\"\ndone \n```", "```\n#!/bin/bash\nhost=$1\nstartport=$2\nstopport=$3 \n```", "```\nping=$(ping -c 1 $host | grep bytes | wc -l) \n```", "```\ndonnie@fedora:~$ ping -c1 192.168.0.20 | grep bytes\nPING 192.168.0.20 (192.168.0.20) 56(84) bytes of data.\n64 bytes from 192.168.0.20: icmp_seq=1 ttl=64 time=0.506 ms\ndonnie@fedora:~$ ping -c1 192.168.0.200 | grep bytes\nPING 192.168.0.200 (192.168.0.200) 56(84) bytes of data.\ndonnie@fedora:~$ \n```", "```\nif [ \"$ping\" -gt 1 ]; then\n  echo \"$host is up\";\nelse\n  echo \"$host is down. Quitting\";\n  exit\nfi \n```", "```\nfor ((counter=$startport; counter<=$stopport; counter++)); do\n          (echo >/dev/tcp/$host/$counter) > /dev/null 2>&1 && echo \"Port $counter open\"\ndone \n```", "```\ndonnie@fedora:~$ ./bash-portscan1.sh 192.168.0.20 20 22\n192.168.0.20 is up\nPort 22 open\ndonnie@fedora:~$ ./bash-portscan1.sh 8.8.8.8 53 53\n8.8.8.8 is up\nPort 53 open\ndonnie@fedora:~$ \n```", "```\nfor ((counter=$startport; counter<=$stopport; counter++)); do\n          (echo >/dev/udp/$host/$counter) > /dev/null 2>&1 && echo \"Port $counter open\"\ndone \n```", "```\ndonnie@fedora:~$ sudo nmap -sS 192.168.0.20\nStarting Nmap 7.93 ( https://nmap.org ) at 2024-03-03 17:12 EST\nNmap scan report for 192.168.0.20\nHost is up (0.00044s latency).\nNot shown: 999 closed tcp ports (reset)\nPORT   STATE SERVICE\n22/tcp open  ssh\nMAC Address: 08:00:27:45:A4:75 (Oracle VirtualBox virtual NIC)\nNmap done: 1 IP address (1 host up) scanned in 6.01 seconds\ndonnie@fedora:~$ \n```", "```\nMar  6 13:25:20 localhost sshd[1601]: error: kex_exchange_identification: client sent invalid protocol identifier \"\"\nMar  6 13:25:20 localhost sshd[1601]: error: send_error: write: Broken pipe\nMar  6 13:25:20 localhost sshd[1601]: banner exchange: Connection from 192.168.0.16 port 38680: invalid format \n```", "```\n192.168.0.16 - - [06/Mar/2024:13:38:49 -0500] \"\\n\" 400 226 \"-\" \"-\" \n```", "```\n#!/bin/bash\nos=$(uname)\nquantity=$(cut -f3 -d: /etc/passwd | grep -w 0 | wc -l) \n```", "```\nlinux_sunos() {\n        if [ $quantity -gt 1 ] ; then\n                echo \"CRITICAL.  There are $quantity accounts with UID 0.\"\n        else\n                echo \"OKAY.  There is only one account with UID 0.\"\n        fi \n        echo\n        echo\n        rootlock=$(awk 'BEGIN {FS=\":\"}; /root/ {print $2}' /etc/shadow | cut -c1)\n        if [ \"$rootlock\" == $ ] ; then\n                echo \"CRITICAL!!  The root account is not locked out.\"\n        else\n                echo \"The root account is locked out, as it should be.\"\n        fi \n} \n```", "```\ndonnie:$y$j9T$PfB847h88/LNURBaDxBbWdYI$bRXbrMUrTM7JwWifuDfjt6oFl0FFdYEzcwJHF5r/kG5::0:99999:7::: \n```", "```\nroot:!::0:99999:7:::\nroot:*::0:99999:7:::\nroot:*LK*::0:99999:7::: \n```", "```\nroot:$y$j9T$TZqIDctm8w7ESbopARa5f1$RKjMWhZ9zS4KZ5dPvSODo2nAIH4s8GwZTA4TJNnoh3B:19 844:0:99999:7::: \n```", "```\nrootlock=$(awk 'BEGIN {FS=\":\"}; /root/ {print $2}' /etc/shadow | cut -c1) \n```", "```\nif [ \"$rootlock\" == '$' ] ; then\n                echo \"CRITICAL!!  The root account is not locked out.\"\n        else\n                echo \"The root account is locked out, as it should be.\"\n        fi \n```", "```\nif [ $os == Linux ] || [ $os == SunOS ] ; then\n        linux_sunos\nelse\n        echo \"I don't know this operating system.\"\nfi \n```", "```\ndonnie@fedora:~$ sudo ./rootlock_1.sh\n[sudo] password for donnie:\nOKAY.  There is only one account with UID 0.\nThe root account is locked out, as it should be.\ndonnie@fedora:~$ \n```", "```\ndonnie@fedora-server:~$ sudo passwd root\nChanging password for user root.\nNew password:\nRetype new password:\npasswd: all authentication tokens updated successfully.\ndonnie@fedora-server:~$ \n```", "```\ndonnie@fedora-server:~$ sudo ./rootlock_1.sh\nOKAY.  There is only one account with UID 0.\nCRITICAL!!  The root account is not locked out.\ndonnie@fedora-server:~$ \n```", "```\nif [ $rootlock == $ ] ; then\n                echo \"CRITICAL!!  The root account is not locked out.\"\n                echo \"Do you want to disable the root account? (y/n)\"\n                read answer\n                if [ $answer == y ] ; then\n                        passwd -l root\n                else\n                        exit\n                fi\n        else\n                echo \"The root account is locked out, as it should be.\"\n        fi \n```", "```\ndonnie@fedora-server:~$ sudo ./rootlock_2.sh\nOKAY.  There is only one account with UID 0.\nCRITICAL!!  The root account is not locked out.\nDo you want to disable the root account? (y/n)\ny\nLocking password for user root.\npasswd: Success\ndonnie@fedora-server:~$ \n```", "```\nroot:!!$y$j9T$ckYOQzoMU0mr9gQkjqz/K0$QDNV0unG1XAfBwViY.7a6JR8VaMpIGObGzXIN0vxGQA:19847:0:99999:7::: \n```", "```\ndonnie@fedora-server:~$ sudo passwd -u root\n[sudo] password for donnie:\nUnlocking password for user root.\npasswd: Success\ndonnie@fedora-server:~$ \n```", "```\nif [ $rootlock == $ ] ; then\n                echo \"CRITICAL!!  The root account is not locked out.\"\n                echo \"Do you want to disable the root account? (y/n)\"\n                read answer\n                if [ $answer == y ] ; then\n                        passwd -d root\n                        passwd -l root\n                else\n                        exit\n                fi\n        else\n                echo \"The root account is locked out, as it should be.\"\n        fi \n```", "```\nfreebsd() {\n        if [ $quantity -gt 2 ]\n        then\n                echo \"CRITICAL.  There are $quantity accounts in the passwd file with UID 0.\"\n        else\n                echo \"OKAY.  There are only two accounts in the passwd file with UID 0.\"\n                echo\n                echo\n        fi \n```", "```\nrootlock=$(awk 'BEGIN {FS=\":\"}; $1 ~ /root/ {print $2}' /etc/master.passwd | cut -c1)\n        if [ \"$rootlock\" == '$' ] ; then\n                echo \"CRITICAL!!  The root account is not locked out.\"\n                echo \"Do you want to disable the root account? (y/n)\"\n                read answer\n                if [ $answer == y ] ; then\n                        pw mod user root -w no\n                fi\n        else\n                echo \"The root account is locked out, as it should be.\"\n        fi \n```", "```\nrootlock=$(awk 'BEGIN {FS=\":\"}; $1 ~ /root/ {print $2}' /etc/master.passwd | cut -c1) \n```", "```\nroot:*:0:0::0:0:Charlie &:/root:/bin/csh\ntoor:*:0:0::0:0:Bourne-again Superuser:/root:\ndaemon:*:1:1::0:0:Owner of many system processes:/root:/usr/sbin/nologin \n```", "```\npw mod user root -w no \n```", "```\ntoorlock=$(awk 'BEGIN {FS=\":\"}; /toor/ {print $2}' /etc/master.passwd | cut -c1)\n        if [ \"$toorlock\" == '$' ] ; then\n                echo \"CRITICAL!!  The toor account is not locked out.\"\n                echo \"Do you want to disable the toor account? (y/n)\"\n                read answer\n                if [ $answer == y ] ; then\n                        pw mod user toor -w no\n                fi\n        else\n                echo \"The toor account is locked out, as it should be.\"\n        fi\n} \n```", "```\nif [ $os == Linux ] || [ $os == SunOS ] ; then\n        linux_sunos\nelif [ $os == FreeBSD ] ; then\n        freebsd\nelse\n        echo \"I don't know this operating system.\"\nfi \n```", "```\n#!/bin/bash\nif [[ $1 == \"\" ]] ; then\n        echo \"You must specify a user name.\"\n        echo \"Usage: sudo ./user_activity_1.sh username \"\n        exit\nfi \n```", "```\nif [[ -f /var/log/secure ]] ; then\n        logfile=/var/log/secure\nelif [[ -f /var/log/auth.log ]] ; then\n        logfile=/var/log/auth.log\nelif [[ -n $(awk /suse/ /etc/os-release) ]] ; then\n        logfile=/var/log/messages\nelse\n        echo \"I don't know this operating system.\"\n        exit\nfi \n```", "```\nusername=$1\necho \"=== User Account Activity ===\" > user_activity_for_\"$username\"_$(date +\"%F_%H-%M\").txt\n# Check user activity in system logs\necho \"=== Recent Logins ===\" >> user_activity_for_\"$username\"_$(date +\"%F_%H-%M\").txt\nlast | grep $username >> user_activity_for_\"$username\"_$(date +\"%F_%I-%M\").txt\n# Check sudo command usage\necho \"=== Sudo Command Usage ===\" >> user_activity_for_\"$username\"_$(date +\"%F_%H-%M\").txt\ngrep sudo \"$logfile\" | grep $username >> user_activity_for_\"$username\"_$(date +\"%F_%H-%M\").txt \n```", "```\ndonnie@fedora-server:~$ sudo ./user_activity_1.sh donnie\n[sudo] password for donnie:\ndonnie@fedora-server:~$ ls -l user_activity_*\n-rwxr--r--. 1 donnie donnie    921 May 14 18:11 user_activity_1.sh\n-rw-r--r--. 1 root   root   276170 May 14 18:11 user_activity_for_donnie_2024-05-14_18-11.txt\ndonnie@fedora-server:~$ \n```", "```\n=== User Account Activity ===\n=== Recent Logins ===\ndonnie   pts/1        192.168.0.16     Tue May 14 15:30 - 16:41  (01:11)\ndonnie   pts/0        192.168.0.16     Tue May 14 15:22   still logged in\ndonnie   tty1                          Mon May 13 17:33 - 17:44  (00:11)\ndonnie   pts/0        192.168.0.16     Mon May 13 14:43 - 17:44  (03:01)\n=== Sudo Command Usage ===\nDec  8 14:17:32 localhost sudo[993]:  donnie : TTY=tty1 ; PWD=/home/donnie ; USER=root ; COMMAND=/usr/bin/dnf install openscap-scanner scap-security-guide\nDec  8 14:17:32 localhost sudo[993]: pam_unix(sudo:session): session opened for user root(uid=0) by donnie(uid=1000)\nJan 30 13:02:43 localhost sudo[955]:  donnie : TTY=tty1 ; PWD=/home/donnie ; USER=root ; COMMAND=/usr/bin/dnf -y upgrade \n```", "```\ndonnie@fedora-server:~$ cat ip-address_blacklist.txt\n192.168.0.14\n192.168.0.84\n192.168.0.7\n192.168.0.12\n192.168.0.39\ndonnie@fedora-server:~$ \n```", "```\n#!/bin/bash\ndeclare -a badips\nbadips=( $(cat ip-address_blacklist.txt) )\nfor ip in ${badips[*]}\ndo\n        firewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"$ip\" drop\"\ndone\nfirewall-cmd --reload \n```", "```\ndonnie@fedora-server:~$ sudo ./firewall-blacklist_array.sh\nsuccess\nsuccess\nsuccess\nsuccess\nsuccess\nsuccess\ndonnie@fedora-server:~$ \n```", "```\ndonnie@fedora-server:~$ sudo nft list ruleset\n. . .\n. . .\nchain filter_IN_FedoraServer_deny {\n\t\tip saddr 192.168.0.14 drop\n\t\tip saddr 192.168.0.84 drop\n\t\tip saddr 192.168.0.7 drop\n\t\tip saddr 192.168.0.12 drop\n\t\tip saddr 192.168.0.39 drop\n\t}\n. . .\n. . .\ndonnie@fedora-server:~$ \n```", "```\ndonnie@fedora-server:~$ sudo cat /etc/firewalld/zones/FedoraServer.xml\n. . .\n. . .\n<rule family=\"ipv4\">\n    <source address=\"192.168.0.14\"/>\n    <drop/>\n  </rule>\n  <rule family=\"ipv4\">\n    <source address=\"192.168.0.84\"/>\n    <drop/>\n  </rule>\n . . .\n. . .\ndonnie@fedora-server:~$ \n```", "```\n#!/bin/bash\nxargs -i firewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source \naddress={} drop\" < ip-address_blacklist.txt\nfirewall-cmd --reload \n```", "```\ndonnie@fedora-server:~$ sudo ./firewall-blacklist_xargs.sh\nWarning: ALREADY_ENABLED: rule family=ipv4 source address=192.168.0.14 drop\nsuccess\nWarning: ALREADY_ENABLED: rule family=ipv4 source address=192.168.0.84 drop\nsuccess\nWarning: ALREADY_ENABLED: rule family=ipv4 source address=192.168.0.7 drop\nsuccess\nWarning: ALREADY_ENABLED: rule family=ipv4 source address=192.168.0.12 drop\nsuccess\nWarning: ALREADY_ENABLED: rule family=ipv4 source address=192.168.0.39 drop\nsuccess\nsuccess\nsuccess\nsuccess\ndonnie@fedora-server:~$ \n```", "```\ndonnie@fedora-server:~$ sudo nft list ruleset\n. . .\n. . .\nchain filter_IN_FedoraServer_deny {\n\t\tip saddr 192.168.0.14 drop\n\t\tip saddr 192.168.0.84 drop\n\t\tip saddr 192.168.0.7 drop\n\t\tip saddr 192.168.0.12 drop\n\t\tip saddr 192.168.0.39 drop\n\t\tip saddr 212.12.3.12 drop\n\t\tip saddr 172.10.0.0/16 drop\n\t}\n. . .\n. . .\ndonnie@fedora-server:~$ \n```", "```\ndonnie@fedora-server:~$ sudo firewall-cmd --reload\nsuccess\ndonnie@fedora-server:~$ \n```"]